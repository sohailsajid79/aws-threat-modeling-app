// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import { LABEL_DATA_ATTRIBUTE } from './attributes';
import { findSelectorUp, findComponentUp } from './dom-utils';
export const processLabel = (node, labelIdentifier) => {
    if (labelIdentifier === null) {
        return '';
    }
    const formattedLabelIdentifier = formatLabelIdentifier(labelIdentifier);
    const selector = formattedLabelIdentifier.selector;
    if (Array.isArray(selector)) {
        for (const labelSelector of selector) {
            const label = processSingleLabel(node, labelSelector, formattedLabelIdentifier.root, formattedLabelIdentifier.rootSelector);
            if (label) {
                return label;
            }
        }
    }
    return processSingleLabel(node, selector, formattedLabelIdentifier.root, formattedLabelIdentifier.rootSelector);
};
const formatLabelIdentifier = (labelIdentifier) => {
    if (typeof labelIdentifier === 'string') {
        return { selector: labelIdentifier };
    }
    return labelIdentifier;
};
const processSingleLabel = (node, labelSelector, root = 'self', rootSelector) => {
    if (!node) {
        return '';
    }
    if (rootSelector) {
        return processSingleLabel(findSelectorUp(node, rootSelector), labelSelector);
    }
    if (root === 'component') {
        return processSingleLabel(findComponentUp(node), labelSelector);
    }
    if (root === 'body') {
        return processSingleLabel(document.body, labelSelector);
    }
    let labelElement = node;
    if (labelSelector) {
        labelElement = labelElement.querySelector(labelSelector);
    }
    if (labelElement && labelElement.dataset[LABEL_DATA_ATTRIBUTE]) {
        return processLabel(labelElement, labelElement.dataset[LABEL_DATA_ATTRIBUTE]);
    }
    return getLabelFromElement(labelElement);
};
export const getLabelFromElement = (element) => {
    if (!element) {
        return '';
    }
    const ariaLabel = element.getAttribute('aria-label');
    if (ariaLabel) {
        return ariaLabel.trim();
    }
    const ariaLabelledBy = element.getAttribute('aria-labelledby');
    if (ariaLabelledBy) {
        const elementWithLabel = document.querySelector(`[id="${ariaLabelledBy.split(' ')[0]}"]`);
        if (elementWithLabel !== element) {
            return getLabelFromElement(elementWithLabel);
        }
    }
    return element.textContent ? element.textContent.trim() : '';
};
