import { MetricsV2EventItem } from './log-clients';
import { ComponentConfiguration, MetricsLogItem } from './interfaces';
export declare class Metrics {
    readonly source: string;
    readonly packageVersion: string;
    private clog;
    private panorama;
    constructor(source: string, packageVersion: string);
    initMetrics(theme: string): void;
    /**
     * Calls Console Platform's client logging JS API with provided metric name, value, and detail.
     * Does nothing if Console Platform client logging JS is not present in page.
     */
    sendMetric(metricName: string, value: number, detail?: string): void;
    /**
     * Calls Console Platform's client v2 logging JS API with provided metric name and detail.
     * Does nothing if Console Platform client logging JS is not present in page.
     */
    sendPanoramaMetric(metric: MetricsV2EventItem): void;
    sendMetricObject(metric: MetricsLogItem, value: number): void;
    sendMetricObjectOnce(metric: MetricsLogItem, value: number): void;
    sendMetricOnce(metricName: string, value: number, detail?: string): void;
    logComponentsLoaded(): void;
    logComponentUsed(componentName: string, configuration: ComponentConfiguration): void;
}
export declare function clearOneTimeMetricsCache(): void;
export declare class MetricsTestHelper {
    resetOneTimeMetricsCache: typeof clearOneTimeMetricsCache;
}
