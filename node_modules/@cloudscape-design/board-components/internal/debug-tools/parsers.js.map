{"version":3,"file":"parsers.js","sourceRoot":"","sources":["../../../../src/internal/debug-tools/parsers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { GridLayout } from \"../interfaces\";\nimport { GridLayoutItem, ItemId } from \"../interfaces\";\nimport { Position } from \"../utils/position\";\nimport { GridMatrix } from \"./interfaces\";\n\nconst LETTER_INDICES = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\nexport function fromMatrix(matrix: GridMatrix): GridLayout {\n  const items: GridLayoutItem[] = [];\n  const added = new Set<ItemId>();\n\n  for (let y = 0; y < matrix.length; y++) {\n    for (let x = 0; x < matrix[y].length; x++) {\n      const ids = matrix[y][x].split(\"/\").map((id) => id.trim());\n\n      for (const id of ids) {\n        if (id.trim().length === 0) {\n          continue;\n        }\n\n        if (!added.has(id)) {\n          const item = { id, y, x, width: 1, height: 1 };\n\n          for (let itemX = x + 1; itemX < matrix[y].length; itemX++) {\n            if (matrix[y][itemX] === id) {\n              x++;\n              item.width++;\n            } else {\n              break;\n            }\n          }\n\n          for (let itemY = y + 1; itemY < matrix.length; itemY++) {\n            if (matrix[itemY][x] === id) {\n              item.height++;\n            } else {\n              break;\n            }\n          }\n\n          items.push(item);\n          added.add(id);\n        }\n      }\n    }\n  }\n\n  return { items, columns: matrix[0]?.length ?? 0, rows: matrix.length };\n}\n\n// Path is defined like \"A1 A2 B2 C2\" where A-C is a column index (A-based) and 1-2 is a row index (1-based).\nexport function fromTextPath(textPath: string, gridArg: GridLayout | GridMatrix) {\n  // Parse path.\n  const positions = textPath.split(\" \").filter(Boolean);\n  const [start, ...rest] = positions.map((pos) => {\n    const x = LETTER_INDICES.indexOf(pos[0]);\n    const y = parseInt(pos.slice(1)) - 1;\n    return { y, x };\n  });\n\n  // Find move target.\n  const grid = Array.isArray(gridArg) ? fromMatrix(gridArg) : gridArg;\n  const targets = grid.items.filter(\n    (item) => item.y <= start.y && start.y < item.y + item.height && item.x <= start.x && start.x < item.x + item.width,\n  );\n  if (targets.length === 0) {\n    throw new Error(\"No move target corresponding given path.\");\n  }\n  if (targets.length > 1) {\n    throw new Error(\"Multiple move targets corresponding given path.\");\n  }\n  const [moveTarget] = targets;\n\n  // Adjust path to target's top-left point.\n  const yOffset = start.y - moveTarget.y;\n  const xOffset = start.x - moveTarget.x;\n  return { itemId: moveTarget.id, path: rest.map(({ y, x }) => new Position({ y: y - yOffset, x: x - xOffset })) };\n}\n"]}