{"version":3,"file":"item.js","sourceRoot":"","sources":["../../../../src/internal/grid/item.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,IAAI,EAAa,MAAM,OAAO,CAAC;AAIxC,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAOrC,MAAM,QAAQ,GAAG,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAiB,EAAE,EAAE;IACrD,gHAAgH;IAChH,OAAO,CACL,cACE,SAAS,EAAE,MAAM,CAAC,UAAU,EAC5B,KAAK,EAAE;YACL,YAAY,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;YACxB,UAAU,EAAE,QAAQ,IAAI,CAAC,MAAM,EAAE;YACjC,eAAe,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;YAC3B,aAAa,EAAE,QAAQ,IAAI,CAAC,KAAK,EAAE;SACpC,YAEA,QAAQ,GACL,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,QAAQ,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { memo, ReactNode } from \"react\";\n\nimport { GridLayoutItem } from \"../interfaces\";\n\nimport styles from \"./styles.css.js\";\n\nexport interface GridItemProps {\n  item: GridLayoutItem;\n  children?: ReactNode;\n}\n\nconst GridItem = ({ children, item }: GridItemProps) => {\n  // Grid row start can not be set as part of a CSS class names, since we have a potentially infinite height grid.\n  return (\n    <div\n      className={styles.grid__item}\n      style={{\n        gridRowStart: item.y + 1,\n        gridRowEnd: `span ${item.height}`,\n        gridColumnStart: item.x + 1,\n        gridColumnEnd: `span ${item.width}`,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default memo(GridItem);\n"]}