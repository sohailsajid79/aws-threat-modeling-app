{"version":3,"file":"get-next-droppable.js","sourceRoot":"","sources":["../../../../src/internal/item-container/get-next-droppable.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAItC,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAC;AACpD,OAAO,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAE3D;;;GAGG;AACH,MAAM,UAAU,gBAAgB,CAAC,EAC/B,gBAAgB,EAChB,UAAU,EACV,SAAS,EACT,KAAK,GAMN;;IACC,MAAM,aAAa,GAAG,wBAAwB,CAAC,gBAAgB,CAAC,CAAC;IACjE,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChG,MAAM,OAAO,GAAG,kBAAkB,CAAC;QACjC,MAAM,EAAE,aAAa;QACrB,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QAC5B,SAAS;QACT,KAAK;KACN,CAAC,CAAC;IACH,OAAO,MAAA,OAAO,CAAC,GAAG,CAAC,OAAkB,CAAC,mCAAI,IAAI,CAAC;AACjD,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Droppable } from \"../dnd-controller/controller\";\nimport { Direction, ItemId } from \"../interfaces\";\nimport { getClosestNeighbor } from \"../utils/rects\";\nimport { getNormalizedElementRect } from \"../utils/screen\";\n\n/**\n * Finds closest droppable to provided draggable element and direction.\n * Returns null if there is no droppable in the given direction.\n */\nexport function getNextDroppable({\n  draggableElement,\n  droppables,\n  direction,\n  isRtl,\n}: {\n  draggableElement: HTMLElement;\n  droppables: readonly [ItemId, Droppable][];\n  direction: Direction;\n  isRtl: boolean;\n}): null | ItemId {\n  const draggableRect = getNormalizedElementRect(draggableElement);\n  const sources = new Map(droppables.map(([id, d]) => [getNormalizedElementRect(d.element), id]));\n  const closest = getClosestNeighbor({\n    target: draggableRect,\n    sources: [...sources.keys()],\n    direction,\n    isRtl,\n  });\n  return sources.get(closest as DOMRect) ?? null;\n}\n"]}