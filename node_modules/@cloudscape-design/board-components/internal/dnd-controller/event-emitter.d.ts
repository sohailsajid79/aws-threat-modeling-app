type Listeners<L> = {
    [E in keyof L]: (...args: any[]) => any;
};
export declare class EventEmitter<Events extends Listeners<Events>> {
    private listeners;
    on<Event extends keyof Events>(event: Event, handler: Events[Event]): () => void;
    protected emit<Event extends keyof Events>(event: Event, ...data: Parameters<Events[Event]>): void;
}
export {};
