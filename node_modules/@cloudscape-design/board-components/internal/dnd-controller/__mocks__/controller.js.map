{"version":3,"file":"controller.js","sourceRoot":"","sources":["../../../../../src/internal/dnd-controller/__mocks__/controller.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAG5B,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,MAAM,cAAe,SAAQ,YAA+B;IACnD,KAAK,CAAC,KAAsB;QACjC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IAEM,MAAM,CAAC,KAAsB;QAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC7B,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtB,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvB,CAAC;IAEM,OAAO,CAAC,KAAkB;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC9B,CAAC;CACF;AAED,MAAM,CAAC,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAEnD,MAAM,UAAU,mBAAmB,CAAoC,KAAQ,EAAE,OAA6B;IAC5G,SAAS,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE;IACd,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;IACzB,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;IACzB,iBAAiB,EAAE,EAAE,CAAC,EAAE,EAAE;IAC1B,aAAa,EAAE,EAAE,CAAC,EAAE,EAAE;CAChB,CAAC;AAET,MAAM,UAAU,YAAY;IAC1B,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,MAAM,UAAU,YAAY,KAAI,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect } from \"react\";\nimport { vi } from \"vitest\";\n\nimport { AcquireData, DragAndDropData, DragAndDropEvents } from \"../controller\";\nimport { EventEmitter } from \"../event-emitter\";\n\nclass MockController extends EventEmitter<DragAndDropEvents> {\n  public start(event: DragAndDropData) {\n    this.emit(\"start\", event);\n  }\n\n  public update(event: DragAndDropData) {\n    this.emit(\"update\", event);\n  }\n\n  public submit() {\n    this.emit(\"submit\");\n  }\n\n  public discard() {\n    this.emit(\"discard\");\n  }\n\n  public acquire(event: AcquireData) {\n    this.emit(\"acquire\", event);\n  }\n}\n\nexport const mockController = new MockController();\n\nexport function useDragSubscription<K extends keyof DragAndDropEvents>(event: K, handler: DragAndDropEvents[K]) {\n  useEffect(() => mockController.on(event, handler), [event, handler]);\n}\n\nexport const mockDraggable = {\n  start: vi.fn(),\n  updateTransition: vi.fn(),\n  submitTransition: vi.fn(),\n  discardTransition: vi.fn(),\n  getDroppables: vi.fn(),\n} as any;\n\nexport function useDraggable() {\n  return mockDraggable;\n}\n\nexport function useDroppable() {}\n"]}