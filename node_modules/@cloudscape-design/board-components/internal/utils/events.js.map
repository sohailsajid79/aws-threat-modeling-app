{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../../src/internal/utils/events.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAKtC,MAAM,eAAe;IAGnB,YAAmB,SAAmB,IAAI;QAAvB,WAAM,GAAN,MAAM,CAAiB;QAF1C,qBAAgB,GAAG,KAAK,CAAC;QACzB,iBAAY,GAAG,KAAK,CAAC;IACwB,CAAC;IAE9C,cAAc;QACZ,OAAO;IACT,CAAC;IAED,eAAe;QACb,OAAO;IACT,CAAC;CACF;AAED,MAAM,UAAU,iBAAiB,CAAS,MAAc;IACtD,OAAO,IAAI,eAAe,CAAC,MAAM,CAAwB,CAAC;AAC5D,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// our events are not cancelable even though `CustomEvent` may seem to allow this\nexport type NonCancelableEventHandler<Detail> = (event: CustomEvent<Detail>) => void;\n\nclass CustomEventStub<T> {\n  defaultPrevented = false;\n  cancelBubble = false;\n  constructor(public detail: T | null = null) {}\n\n  preventDefault() {\n    // noop\n  }\n\n  stopPropagation() {\n    // noop\n  }\n}\n\nexport function createCustomEvent<Detail>(detail: Detail): CustomEvent<Detail> {\n  return new CustomEventStub(detail) as CustomEvent<Detail>;\n}\n"]}