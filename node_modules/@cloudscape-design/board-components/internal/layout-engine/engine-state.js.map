{"version":3,"file":"engine-state.js","sourceRoot":"","sources":["../../../../src/internal/layout-engine/engine-state.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAMtC;;;GAGG;AACH,MAAM,OAAO,iBAAiB;IAK5B,YAAY,IAAsB,EAAE,QAAQ,IAAI,KAAK,EAAiB,EAAE,YAA8B,IAAI;QACxG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;CACF","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Direction, ItemId } from \"../interfaces\";\nimport { LayoutEngineGrid, ReadonlyLayoutEngineGrid } from \"./grid\";\nimport { CommittedMove } from \"./interfaces\";\n\n/**\n * The class describes the layout engine state at a particular path step.\n * The state of the last performed step is the command result.\n */\nexport class LayoutEngineState {\n  public grid: ReadonlyLayoutEngineGrid;\n  public moves: readonly CommittedMove[];\n  public conflicts: null | Conflicts;\n\n  constructor(grid: LayoutEngineGrid, moves = new Array<CommittedMove>(), conflicts: null | Conflicts = null) {\n    this.grid = grid;\n    this.moves = moves;\n    this.conflicts = conflicts;\n  }\n}\n\nexport interface Conflicts {\n  items: ReadonlySet<ItemId>;\n  direction: Direction;\n}\n"]}