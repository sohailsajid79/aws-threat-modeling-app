import { UseCollectionOptions, CollectionState, TrackBy } from '../interfaces';
import { ItemsTree } from './items-tree.js';
export declare function processItems<T>(items: ReadonlyArray<T>, { filteringText, sortingState, currentPageIndex, propertyFilteringQuery }: Partial<CollectionState<T>>, { filtering, sorting, pagination, propertyFiltering, expandableRows }: UseCollectionOptions<T>): {
    items: ReadonlyArray<T>;
    allPageItems: ReadonlyArray<T>;
    pagesCount: number | undefined;
    actualPageIndex: number | undefined;
    filteredItemsCount: number | undefined;
    itemsTree: ItemsTree<T>;
};
export declare const getTrackableValue: <T>(trackBy: TrackBy<T> | undefined, item: T) => string | T;
export declare const processSelectedItems: <T>(items: readonly T[], selectedItems: readonly T[], trackBy?: TrackBy<T> | undefined) => T[];
export declare const itemsAreEqual: <T>(items1: readonly T[], items2: readonly T[], trackBy?: TrackBy<T> | undefined) => boolean;
