{"version":3,"file":"split-panel-utils.js","sourceRoot":"","sources":["../../../../src/app-layout/split-panel/split-panel-utils.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,qBAAqB,EAAE,4BAA4B,EAAE,MAAM,aAAa,CAAC;AAElF;;;;;;GAMG;AACH,MAAM,UAAU,6BAA6B,CAAC,EAC5C,QAAQ,EACR,kBAAkB,GAInB;IACC,IAAI,QAAQ,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IACD,OAAO,kBAAkB,GAAG,qBAAqB,EAAE,CAAC;AACtD,CAAC;AAED,sEAAsE;AACtE,qFAAqF;AACrF,kFAAkF;AAClF,SAAS,qBAAqB;IAC5B,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;QACnC,OAAO,qBAAqB,CAAC;KAC9B;IACD,MAAM,MAAM,GAAG,4BAA4B,GAAG,CAAC,CAAC;IAChD,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC;IACjH,OAAO,YAAY,CAAC,CAAC,CAAC,qBAAqB,GAAG,MAAM,CAAC,CAAC,CAAC,qBAAqB,GAAG,MAAM,CAAC;AACxF,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SPLIT_PANEL_MIN_WIDTH, SPLIT_PANEL_SCROLLBAR_MARGIN } from './constants';\n\n/**\n * The Split Panel will be in forced (bottom) position if the defined minimum width is\n * greater than the maximum width. In other words, the maximum width is the currently\n * available horizontal space based on all other components that are rendered. If the\n * minimum width exceeds this value then there is not enough horizontal space and we must\n * force it to the bottom position.\n */\nexport function checkSplitPanelForcedPosition({\n  isMobile,\n  splitPanelMaxWidth,\n}: {\n  isMobile: boolean;\n  splitPanelMaxWidth: number;\n}) {\n  if (isMobile) {\n    return true;\n  }\n  return splitPanelMaxWidth < getSplitPanelMinWidth();\n}\n\n// Returns split panel min width with a margin for document scrollbar.\n// The margin prevents a possible infinite bouncing between bottom and side positions\n// caused by the presence of page's vertical scrollbar when on side position only.\nfunction getSplitPanelMinWidth() {\n  if (typeof document === 'undefined') {\n    return SPLIT_PANEL_MIN_WIDTH;\n  }\n  const margin = SPLIT_PANEL_SCROLLBAR_MARGIN / 2;\n  const hasScrollbar = window.document.documentElement.scrollHeight > window.document.documentElement.clientHeight;\n  return hasScrollbar ? SPLIT_PANEL_MIN_WIDTH - margin : SPLIT_PANEL_MIN_WIDTH + margin;\n}\n"]}