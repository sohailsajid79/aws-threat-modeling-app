{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/token-group/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,6BAA6B,EAAE,MAAM,kEAAkE,CAAC;AAEjH,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AAGxE,OAAO,kBAAkB,MAAM,YAAY,CAAC;AAI5C,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,EAAmE;QAAnE,EAAE,KAAK,GAAG,EAAE,EAAE,SAAS,GAAG,YAAY,OAA6B,EAAxB,KAAK,cAAhD,sBAAkD,CAAF;IACjF,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,YAAY,EAAE;QACxD,KAAK,EAAE,EAAE,SAAS,EAAE,mBAAmB,EAAE,KAAK,CAAC,mBAAmB,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE;KACnH,CAAC,CAAC;IAEH,MAAM,0BAA0B,GAAkD;QAChF,IAAI,EAAE,kBAAkB;QACxB,KAAK,EAAE,SAAS;QAChB,UAAU,EAAE;YACV,UAAU,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE;SAC9B;KACF,CAAC;IAEF,OAAO,CACL,oBAAC,kBAAkB,kBACjB,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,IAChB,KAAK,EACL,kBAAkB,EAClB,6BAA6B,CAAC,EAAE,SAAS,EAAE,0BAA0B,EAAE,CAAC,EAC5E,CACH,CAAC;AACJ,CAAC;AAED,gBAAgB,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataTokenGroupComponent } from './analytics-metadata/interfaces';\nimport { TokenGroupProps } from './interfaces';\nimport InternalTokenGroup from './internal';\n\nexport { TokenGroupProps };\n\nexport default function TokenGroup({ items = [], alignment = 'horizontal', ...props }: TokenGroupProps) {\n  const baseComponentProps = useBaseComponent('TokenGroup', {\n    props: { alignment, disableOuterPadding: props.disableOuterPadding, limit: props.limit, readOnly: props.readOnly },\n  });\n\n  const componentAnalyticsMetadata: GeneratedAnalyticsMetadataTokenGroupComponent = {\n    name: 'awsui.TokenGroup',\n    label: 'invalid',\n    properties: {\n      itemsCount: `${items.length}`,\n    },\n  };\n\n  return (\n    <InternalTokenGroup\n      items={items}\n      alignment={alignment}\n      {...props}\n      {...baseComponentProps}\n      {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n    />\n  );\n}\n\napplyDisplayName(TokenGroup, 'TokenGroup');\n"]}