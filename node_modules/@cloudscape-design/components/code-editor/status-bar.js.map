{"version":3,"file":"status-bar.js","sourceRoot":"","sources":["../../../src/code-editor/status-bar.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context.js';\nimport LiveRegion from '../internal/components/live-region/index';\nimport { CodeEditorProps } from './interfaces';\nimport { TabButton } from './tab-button';\nimport { getStatusButtonId, PaneStatus } from './util';\n\nimport styles from './styles.css.js';\n\ninterface StatusBarProps {\n  languageLabel: string;\n  cursorPosition?: string;\n  paneStatus: PaneStatus;\n  isTabFocused: boolean;\n  paneId?: string;\n  i18nStrings?: CodeEditorProps.I18nStrings;\n  errorCount: number;\n  warningCount: number;\n  isRefresh: boolean;\n\n  errorsTabRef?: React.RefObject<HTMLButtonElement>;\n  warningsTabRef?: React.RefObject<HTMLButtonElement>;\n\n  onErrorPaneToggle: () => void;\n  onWarningPaneToggle: () => void;\n  onTabFocus?: React.FocusEventHandler<HTMLButtonElement>;\n  onTabBlur?: React.FocusEventHandler<HTMLButtonElement>;\n  onPreferencesOpen: () => void;\n  onHeightChange?: (height: number | null) => void;\n}\n\nexport function StatusBar({\n  languageLabel,\n  cursorPosition,\n  paneStatus,\n  onErrorPaneToggle,\n  onWarningPaneToggle,\n  onTabFocus,\n  onTabBlur,\n  errorsTabRef,\n  warningsTabRef,\n  isTabFocused,\n  paneId,\n  onPreferencesOpen,\n  i18nStrings,\n  errorCount,\n  warningCount,\n  isRefresh,\n}: StatusBarProps) {\n  const i18n = useInternalI18n('code-editor');\n  const errorText = `${i18n('i18nStrings.errorsTab', i18nStrings?.errorsTab)}: ${errorCount}`;\n  const warningText = `${i18n('i18nStrings.warningsTab', i18nStrings?.warningsTab)}: ${warningCount}`;\n  const errorButtonId = getStatusButtonId({ paneId, paneStatus: 'error' });\n  const warningButtonId = getStatusButtonId({ paneId, paneStatus: 'warning' });\n\n  return (\n    <div\n      className={clsx(styles['status-bar'], {\n        [styles['status-bar-with-hidden-pane']]: paneStatus === 'hidden',\n      })}\n    >\n      <div className={clsx(styles['status-bar__left'])}>\n        <span className={styles['status-bar__language-mode']}>{languageLabel}</span>\n        <span className={styles['status-bar__cursor-position']}>{cursorPosition}</span>\n\n        <div className={styles['tab-list']} role=\"tablist\">\n          <TabButton\n            id={errorButtonId}\n            count={errorCount}\n            text={errorText}\n            className={styles['tab-button--errors']}\n            iconName=\"status-negative\"\n            disabled={errorCount === 0}\n            active={paneStatus === 'error'}\n            onClick={onErrorPaneToggle}\n            onFocus={onTabFocus}\n            onBlur={onTabBlur}\n            ref={errorsTabRef}\n            ariaLabel={errorText}\n            paneId={paneId}\n            isRefresh={isRefresh}\n          />\n\n          <span className={styles['tab-button--divider']}></span>\n\n          <TabButton\n            id={warningButtonId}\n            count={warningCount}\n            text={warningText}\n            className={styles['tab-button--warnings']}\n            iconName=\"status-warning\"\n            disabled={warningCount === 0}\n            active={paneStatus === 'warning'}\n            onClick={onWarningPaneToggle}\n            onFocus={onTabFocus}\n            onBlur={onTabBlur}\n            ref={warningsTabRef}\n            tabIndex={paneStatus === 'error' && isTabFocused ? -1 : undefined}\n            ariaHidden={paneStatus === 'error' && isTabFocused ? true : undefined}\n            ariaLabel={warningText}\n            paneId={paneId}\n            isRefresh={isRefresh}\n          />\n        </div>\n        <LiveRegion assertive={true}>\n          <span>{errorText} </span>\n          <span>{warningText}</span>\n        </LiveRegion>\n      </div>\n\n      <div className={styles['status-bar__right']}>\n        <div className={styles['status-bar__cog-button']}>\n          <InternalButton\n            formAction=\"none\"\n            variant=\"icon\"\n            iconName=\"settings\"\n            iconAlt=\"Settings\"\n            ariaLabel={i18n('i18nStrings.preferencesButtonAriaLabel', i18nStrings?.preferencesButtonAriaLabel)}\n            onClick={onPreferencesOpen}\n            __nativeAttributes={{\n              tabIndex: paneStatus !== 'hidden' && isTabFocused ? -1 : undefined,\n              'aria-hidden': paneStatus !== 'hidden' && isTabFocused ? true : undefined,\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}