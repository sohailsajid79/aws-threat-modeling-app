{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/toggle-button/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AAExE,OAAO,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAIlD,MAAM,YAAY,GAAG,KAAK,CAAC,UAAU,CACnC,CACE,EAoBoB,EACpB,GAAqC,EACrC,EAAE;QAtBF,EACE,QAAQ,EACR,QAAQ,EACR,eAAe,EACf,OAAO,EACP,cAAc,EACd,OAAO,EACP,cAAc,EACd,OAAO,GAAG,QAAQ,EAClB,OAAO,GAAG,KAAK,EACf,WAAW,EACX,QAAQ,GAAG,KAAK,EAChB,cAAc,EACd,QAAQ,GAAG,IAAI,EACf,SAAS,EACT,eAAe,EACf,YAAY,EACZ,OAAO,GAAG,KAAK,EACf,QAAQ,OAEU,EADf,KAAK,cAnBV,2PAoBC,CADS;IAIV,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,cAAc,EAAE;QAC1D,KAAK,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;KACjE,CAAC,CAAC;IACH,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IAEtC,OAAO,CACL,oBAAC,oBAAoB,oBACf,SAAS,EACT,kBAAkB,IACtB,GAAG,EAAE,GAAG,EACR,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,OAAO,EAChB,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,QAAQ,EAClB,cAAc,EAAE,cAAc,EAC9B,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,SAAS,EACpB,eAAe,EAAE,eAAe,EAChC,YAAY,EAAE,YAAY,EAC1B,eAAe,EAAE,eAAe,EAChC,cAAc,EAAE,cAAc,EAC9B,cAAc,EAAE,cAAc,EAC9B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,KAEjB,QAAQ,CACY,CACxB,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,gBAAgB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AAC/C,eAAe,YAAY,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ToggleButtonProps } from './interfaces';\nimport { InternalToggleButton } from './internal';\n\nexport { ToggleButtonProps };\n\nconst ToggleButton = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      pressedIconName,\n      iconUrl,\n      pressedIconUrl,\n      iconSvg,\n      pressedIconSvg,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      ariaLabel,\n      ariaDescribedby,\n      ariaControls,\n      pressed = false,\n      onChange,\n      ...props\n    }: ToggleButtonProps,\n    ref: React.Ref<ToggleButtonProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('ToggleButton', {\n      props: { iconName, pressedIconName, pressed, variant, wrapText },\n    });\n    const baseProps = getBaseProps(props);\n\n    return (\n      <InternalToggleButton\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        iconName={iconName}\n        iconUrl={iconUrl}\n        iconSvg={iconSvg}\n        variant={variant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        disabledReason={disabledReason}\n        wrapText={wrapText}\n        ariaLabel={ariaLabel}\n        ariaDescribedby={ariaDescribedby}\n        ariaControls={ariaControls}\n        pressedIconName={pressedIconName}\n        pressedIconUrl={pressedIconUrl}\n        pressedIconSvg={pressedIconSvg}\n        pressed={pressed}\n        onChange={onChange}\n      >\n        {children}\n      </InternalToggleButton>\n    );\n  }\n);\n\napplyDisplayName(ToggleButton, 'ToggleButton');\nexport default ToggleButton;\n"]}