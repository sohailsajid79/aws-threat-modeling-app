{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/flashbar/analytics-metadata/utils.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAMtC,OAAO,kBAAkB,MAAM,iBAAiB,CAAC;AAEjD,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAC5C,UAAkB,EAClB,UAAmB,EACnB,QAAkB,EAC0C,EAAE;IAC9D,MAAM,QAAQ,GAA+D;QAC3E,SAAS,EAAE;YACT,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;YACvE,UAAU,EAAE;gBACV,UAAU,EAAE,GAAG,UAAU,EAAE;gBAC3B,UAAU,EAAE,GAAG,UAAU,EAAE;aAC5B;SACF;KACF,CAAC;IAEF,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,GAAG,GAAG,QAAQ,EAAE,CAAC;KACxD;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,QAAgB,EAChB,IAAY,EACZ,EAAW,EACyB,EAAE;IACtC,MAAM,YAAY,GAAgE;QAChF,SAAS,EAAE,IAAI,kBAAkB,CAAC,cAAc,CAAC,EAAE;QACnD,YAAY,EAAE,GAAG,QAAQ,EAAE;QAC3B,QAAQ,EAAE,IAAI;KACf,CAAC;IACF,IAAI,EAAE,EAAE;QACN,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;KAC1B;IACD,OAAO;QACL,SAAS,EAAE,EAAE,YAAY,EAAE,YAAY,EAAE;KAC1C,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { GeneratedAnalyticsMetadataFragment } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { GeneratedAnalyticsMetadataFlashbarComponent } from './interfaces';\n\nimport analyticsSelectors from './styles.css.js';\n\nexport const getComponentsAnalyticsMetadata = (\n  itemsCount: number,\n  stackItems: boolean,\n  expanded?: boolean\n): { component: GeneratedAnalyticsMetadataFlashbarComponent } => {\n  const metadata: { component: GeneratedAnalyticsMetadataFlashbarComponent } = {\n    component: {\n      name: 'awsui.Flashbar',\n      label: stackItems ? { root: 'self', selector: 'ul' } : { root: 'self' },\n      properties: {\n        itemsCount: `${itemsCount}`,\n        stackItems: `${stackItems}`,\n      },\n    },\n  };\n\n  if (expanded !== undefined) {\n    metadata.component.properties.expanded = `${expanded}`;\n  }\n  return metadata;\n};\n\nexport const getItemAnalyticsMetadata = (\n  position: number,\n  type: string,\n  id?: string\n): GeneratedAnalyticsMetadataFragment => {\n  const baseMetadata: GeneratedAnalyticsMetadataFlashbarComponent['innerContext'] = {\n    itemLabel: `.${analyticsSelectors['flash-header']}`,\n    itemPosition: `${position}`,\n    itemType: type,\n  };\n  if (id) {\n    baseMetadata.itemId = id;\n  }\n  return {\n    component: { innerContext: baseMetadata },\n  };\n};\n"]}