{"version":3,"file":"compute-chart-props.js","sourceRoot":"","sources":["../../../../src/area-chart/model/compute-chart-props.ts"],"names":[],"mappings":"AASA,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,kDAAkD,CAAC;AACjG,OAAO,EACL,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,aAAa,GACd,MAAM,iDAAiD,CAAC;AAEzD,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAE5E,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAqC,EAC5E,KAAK,EACL,MAAM,EACN,OAAO,EAAE,eAAe,EACxB,OAAO,EAAE,eAAe,EACxB,UAAU,EACV,UAAU,EACV,MAAM,EACN,KAAK,GAUN;IACC,MAAM,OAAO,GAAG,eAAe,CAAC,CAAC,CAAE,CAAC,GAAG,eAAe,CAA+B,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC/G,MAAM,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IACrF,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAEhF,MAAM,OAAO,GAAG,eAAe,IAAI,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACtE,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;IACzC,MAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IAC5G,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IAEhD,MAAM,IAAI,GAAG,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAEvD,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AACpE,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport {\n  ChartDomain,\n  XDomain,\n  XScaleType,\n  YDomain,\n  YScaleType,\n} from '../../internal/components/cartesian-chart/interfaces';\nimport { ChartScale, NumericChartScale } from '../../internal/components/cartesian-chart/scales';\nimport {\n  createXTicks,\n  createYTicks,\n  getXTickCount,\n  getYTickCount,\n} from '../../internal/components/cartesian-chart/ticks';\nimport { AreaChartProps } from '../interfaces';\nimport { computeDomainX, computeDomainY, computePlotPoints } from './utils';\n\nexport default function computeChartProps<T extends AreaChartProps.DataTypes>({\n  isRtl,\n  series,\n  xDomain: externalXDomain,\n  yDomain: externalYDomain,\n  xScaleType,\n  yScaleType,\n  height,\n  width,\n}: {\n  isRtl?: boolean;\n  series: readonly AreaChartProps.Series<T>[];\n  xDomain?: XDomain<T>;\n  yDomain?: YDomain;\n  xScaleType: XScaleType;\n  yScaleType: YScaleType;\n  height: number;\n  width: number;\n}) {\n  const xDomain = externalXDomain ? ([...externalXDomain] as unknown as ChartDomain<T>) : computeDomainX(series);\n  const xTickCount = getXTickCount(width);\n  const xScale = new ChartScale(xScaleType, xDomain, !isRtl ? [0, width] : [width, 0]);\n  const xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];\n\n  const yDomain = externalYDomain || computeDomainY(series, yScaleType);\n  const yTickCount = getYTickCount(height);\n  const yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);\n  const yTicks = createYTicks(yScale, yTickCount);\n\n  const plot = computePlotPoints(series, xScale, yScale);\n\n  return { xDomain, yDomain, xScale, yScale, xTicks, yTicks, plot };\n}\n"]}