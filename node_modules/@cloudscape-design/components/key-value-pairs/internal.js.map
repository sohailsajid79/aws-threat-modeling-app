{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/key-value-pairs/internal.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport Box from '../box/internal';\nimport ColumnLayout from '../column-layout/internal';\nimport { InfoLinkLabelContext } from '../internal/context/info-link-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { KeyValuePairsProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nconst InternalKeyValuePair = ({ label, info, value, id }: KeyValuePairsProps.Pair) => {\n  const kvPairId = useUniqueId('kv-pair-');\n\n  return (\n    <>\n      <dt className={styles.term}>\n        <label className={styles['key-label']} id={id || kvPairId}>\n          {label}\n        </label>\n        <InfoLinkLabelContext.Provider value={id || kvPairId}>\n          {info && <span className={styles.info}>{info}</span>}\n        </InfoLinkLabelContext.Provider>\n      </dt>\n      <dd className={styles.detail}>{value}</dd>\n    </>\n  );\n};\n\nconst InternalKeyValuePairGroup = ({ label, value }: { label?: React.ReactNode; value: React.ReactNode }) => (\n  <>\n    {label && <dt className={styles['group-title']}>{label}</dt>}\n    <dd className={styles.detail}>{value}</dd>\n  </>\n);\n\nconst InternalKeyValuePairs = React.forwardRef(\n  (\n    {\n      columns,\n      items,\n      className,\n      ariaLabel,\n      ariaLabelledby,\n      ...rest\n    }: KeyValuePairsProps & Required<Pick<KeyValuePairsProps, 'columns'>>,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    return (\n      <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n        <div\n          {...rest}\n          className={clsx(styles['key-value-pairs'], className)}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledby}\n          ref={ref}\n        >\n          {/*\n          minColumnWidth={150} is set to use FlexibleColumnLayout which has only 1 nested div wrapper for column items,\n          otherwise GridColumnLayout will be used, which has 2 nested div, therefore it is not a11y compatible for dl -> dt/dd relationship\n        */}\n          <ColumnLayout __tagOverride=\"dl\" columns={Math.min(columns, 4)} variant=\"text-grid\" minColumnWidth={150}>\n            {items.map((pair, index) => {\n              if (pair.type === 'group') {\n                return (\n                  /* InternalKeyValuePairGroup tells react to treat the dt-dd pair as an individual layout item.\n                   * Otherwise, without this component, they will be rendered as a list, which ruins the html structure.\n                   * InternalKeyValuePairGroup is not wrapped by div tag, because it ruins a11y compatibility for dl -> dt/dd\n                   *  */\n                  <InternalKeyValuePairGroup\n                    key={index}\n                    label={\n                      pair.title && (\n                        <Box variant=\"h3\" padding=\"n\">\n                          {pair.title}\n                        </Box>\n                      )\n                    }\n                    value={\n                      <dl className={styles['group-list']}>\n                        {pair.items.map((item, itemIndex) => (\n                          <div key={itemIndex} className={styles['group-list-item']}>\n                            <InternalKeyValuePair {...item} />\n                          </div>\n                        ))}\n                      </dl>\n                    }\n                  />\n                );\n              }\n\n              return <InternalKeyValuePair key={index} {...pair} />;\n            })}\n          </ColumnLayout>\n        </div>\n      </LinkDefaultVariantContext.Provider>\n    );\n  }\n);\n\nexport default InternalKeyValuePairs;\n"]}