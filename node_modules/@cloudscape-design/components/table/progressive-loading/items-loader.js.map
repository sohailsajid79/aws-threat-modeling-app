{"version":3,"file":"items-loader.js","sourceRoot":"","sources":["../../../../src/table/progressive-loading/items-loader.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,QAAQ,EAAE,MAAM,+CAA+C,CAAC;AAEzE,OAAO,UAAU,MAAM,uCAAuC,CAAC;AAE/D,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAExC,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAWrC,MAAM,UAAU,WAAW,CAAI,EAC7B,IAAI,EACJ,aAAa,EACb,mBAAmB,EACnB,mBAAmB,EACnB,iBAAiB,EACjB,OAAO,GACa;IACpB,IAAI,OAAO,GAAoB,IAAI,CAAC;IACpC,IAAI,aAAa,KAAK,SAAS,IAAI,mBAAmB,EAAE;QACtD,OAAO,GAAG,mBAAmB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;KACzC;SAAM,IAAI,aAAa,KAAK,SAAS,IAAI,mBAAmB,EAAE;QAC7D,OAAO,GAAG,oBAAC,UAAU,IAAC,OAAO,EAAE,IAAI,IAAG,mBAAmB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAc,CAAC;KACnF;SAAM,IAAI,aAAa,KAAK,OAAO,IAAI,iBAAiB,EAAE;QACzD,OAAO,GAAG,oBAAC,UAAU,IAAC,OAAO,EAAE,IAAI,IAAG,iBAAiB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAc,CAAC;KACjF;SAAM;QACL,QAAQ,CACN,OAAO,EACP,2HAA2H,CAC5H,CAAC;KACH;IAED,IAAI,aAAa,GAAG,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9E,aAAa,GAAG,OAAO,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9E,OAAO,CACL,0CAAgB,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,oBAAkB,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,cAAc,CAAC,IACtG,OAAO,CACJ,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport LiveRegion from '../../internal/components/live-region';\nimport { TableProps } from '../interfaces';\nimport { applyTrackBy } from '../utils';\n\nimport styles from './styles.css.js';\n\ninterface ItemsLoaderProps<T> {\n  item: null | T;\n  loadingStatus: TableProps.LoadingStatus;\n  renderLoaderPending?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  renderLoaderLoading?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  renderLoaderError?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;\n  trackBy?: TableProps.TrackBy<T>;\n}\n\nexport function ItemsLoader<T>({\n  item,\n  loadingStatus,\n  renderLoaderPending,\n  renderLoaderLoading,\n  renderLoaderError,\n  trackBy,\n}: ItemsLoaderProps<T>) {\n  let content: React.ReactNode = null;\n  if (loadingStatus === 'pending' && renderLoaderPending) {\n    content = renderLoaderPending({ item });\n  } else if (loadingStatus === 'loading' && renderLoaderLoading) {\n    content = <LiveRegion visible={true}>{renderLoaderLoading({ item })}</LiveRegion>;\n  } else if (loadingStatus === 'error' && renderLoaderError) {\n    content = <LiveRegion visible={true}>{renderLoaderError({ item })}</LiveRegion>;\n  } else {\n    warnOnce(\n      'Table',\n      'Must define `renderLoaderPending`, `renderLoaderLoading`, or `renderLoaderError` when using corresponding loading status.'\n    );\n  }\n\n  let parentTrackId = item && trackBy ? applyTrackBy(trackBy, item) : undefined;\n  parentTrackId = typeof parentTrackId === 'string' ? parentTrackId : undefined;\n  return (\n    <div data-root={item ? 'false' : 'true'} data-parentrow={parentTrackId} className={styles['items-loader']}>\n      {content}\n    </div>\n  );\n}\n"]}