{"version":3,"file":"expandable-rows-utils.js","sourceRoot":"","sources":["../../../../src/table/expandable-rows/expandable-rows-utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useInternalI18n } from '../../i18n/context';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { TableProps } from '../interfaces';\nimport { ItemSet } from '../selection/utils';\n\ninterface ExpandableItemProps<T> extends ExpandableItemDetail<T> {\n  isExpandable: boolean;\n  isExpanded: boolean;\n  onExpandableItemToggle: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}\n\ninterface ExpandableItemDetail<T> {\n  level: number;\n  setSize: number;\n  posInSet: number;\n  parent: null | T;\n  children: readonly T[];\n}\n\nexport function useExpandableTableProps<T>({\n  items,\n  expandableRows,\n  trackBy,\n  ariaLabels,\n}: {\n  items: readonly T[];\n  expandableRows?: TableProps.ExpandableRows<T>;\n  trackBy?: TableProps.TrackBy<T>;\n  ariaLabels?: TableProps.AriaLabels<T>;\n}) {\n  const i18n = useInternalI18n('table');\n  const isExpandable = !!expandableRows;\n\n  const expandedSet = new ItemSet(trackBy, expandableRows?.expandedItems ?? []);\n\n  let allItems = items;\n  const itemToDetail = new Map<T, ExpandableItemDetail<T>>();\n  const getItemLevel = (item: T) => itemToDetail.get(item)?.level ?? 0;\n\n  if (isExpandable) {\n    const visibleItems = new Array<T>();\n\n    const traverse = (item: T, detail: Omit<ExpandableItemDetail<T>, 'children'>) => {\n      const children = expandableRows.getItemChildren(item);\n      itemToDetail.set(item, { ...detail, children });\n\n      visibleItems.push(item);\n      if (expandedSet.has(item)) {\n        children.forEach((child, index) =>\n          traverse(child, { level: detail.level + 1, setSize: children.length, posInSet: index + 1, parent: item })\n        );\n      }\n    };\n    items.forEach((item, index) =>\n      traverse(item, { level: 1, setSize: items.length, posInSet: index + 1, parent: null })\n    );\n\n    for (let index = 0; index < visibleItems.length; index++) {\n      const item = visibleItems[index];\n      if (expandedSet.has(item)) {\n        let insertionIndex = index + 1;\n        for (insertionIndex; insertionIndex < visibleItems.length; insertionIndex++) {\n          const insertionItem = visibleItems[insertionIndex];\n          if (getItemLevel(item) >= getItemLevel(insertionItem)) {\n            break;\n          }\n        }\n        insertionIndex--;\n      }\n    }\n\n    allItems = visibleItems;\n  }\n\n  const getExpandableItemProps = (item: T): ExpandableItemProps<T> => {\n    const { level = 1, setSize = 1, posInSet = 1, parent = null, children = [] } = itemToDetail.get(item) ?? {};\n    return {\n      level,\n      setSize,\n      posInSet,\n      isExpandable: expandableRows?.isItemExpandable(item) ?? true,\n      isExpanded: expandedSet.has(item),\n      onExpandableItemToggle: () =>\n        fireNonCancelableEvent(expandableRows?.onExpandableItemToggle, { item, expanded: !expandedSet.has(item) }),\n      expandButtonLabel: i18n('ariaLabels.expandButtonLabel', ariaLabels?.expandButtonLabel?.(item)),\n      collapseButtonLabel: i18n('ariaLabels.collapseButtonLabel', ariaLabels?.collapseButtonLabel?.(item)),\n      parent,\n      children,\n    };\n  };\n\n  return { isExpandable, allItems, getExpandableItemProps };\n}\n"]}