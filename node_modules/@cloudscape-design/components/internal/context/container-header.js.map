{"version":3,"file":"container-header.js","sourceRoot":"","sources":["../../../../src/internal/context/container-header.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAMzD,MAAM,sBAAsB,GAAG,aAAa,CAA8B,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CAAC;AACpG,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,EAAE,QAAQ,EAAkC,EAAE,EAAE;IAC7F,OAAO,oBAAC,sBAAsB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,IAAG,QAAQ,CAAmC,CAAC;AACvH,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,GAAG,UAAU,CAAC,sBAAsB,CAAC,CAAC;IAC7D,OAAO,aAAa,CAAC;AACvB,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, useContext } from 'react';\n\ninterface ContainerHeaderContextProps {\n  isInContainer: boolean;\n}\n\nconst ContainerHeaderContext = createContext<ContainerHeaderContextProps>({ isInContainer: false });\nexport const ContainerHeaderContextProvider = ({ children }: { children?: React.ReactNode }) => {\n  return <ContainerHeaderContext.Provider value={{ isInContainer: true }}>{children}</ContainerHeaderContext.Provider>;\n};\nexport const useContainerHeader = () => {\n  const { isInContainer } = useContext(ContainerHeaderContext);\n  return isInContainer;\n};\n"]}