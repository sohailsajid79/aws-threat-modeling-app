{"version":3,"file":"reset-contexts-for-modal.js","sourceRoot":"","sources":["../../../../src/internal/context/reset-contexts-for-modal.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,YAAY,IAAI,gBAAgB,EAAE,yBAAyB,EAAE,MAAM,gCAAgC,CAAC;AAC7G,OAAO,EACL,YAAY,IAAI,yBAAyB,EACzC,8BAA8B,GAC/B,MAAM,sCAAsC,CAAC;AAE9C;;;GAGG;AACH,MAAM,qBAAqB,GAAG,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE,CAAC,CAC7E,oBAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE;IAClD,oBAAC,sBAAsB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE;QAC5D,oBAAC,gBAAgB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE;YAClC,oBAAC,oBAAoB,CAAC,QAAQ,IAAC,KAAK,EAAC,EAAE;gBACrC,oBAAC,yBAAyB,CAAC,QAAQ,IAAC,KAAK,EAAE,gBAAgB;oBACzD,oBAAC,8BAA8B,CAAC,QAAQ,IAAC,KAAK,EAAE,yBAAyB,IACtE,QAAQ,CAC+B,CACP,CACP,CACN,CACI,CACX,CAC1B,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ButtonContext } from './button-context';\nimport { CollectionLabelContext } from './collection-label-context';\nimport { FormFieldContext } from './form-field-context';\nimport { InfoLinkLabelContext } from './info-link-label-context';\nimport { defaultValue as linkDefaultValue, LinkDefaultVariantContext } from './link-default-variant-context';\nimport {\n  defaultValue as singleTabStopDefaultValue,\n  SingleTabStopNavigationContext,\n} from './single-tab-stop-navigation-context';\n\n/*\n Use this context-resetter when creating a new modal-type context where typically the contents\n of the modal should not be affected by the surrounding components/DOM.\n */\nconst ResetContextsForModal = ({ children }: { children: React.ReactNode }) => (\n  <ButtonContext.Provider value={{ onClick: () => {} }}>\n    <CollectionLabelContext.Provider value={{ assignId: () => {} }}>\n      <FormFieldContext.Provider value={{}}>\n        <InfoLinkLabelContext.Provider value=\"\">\n          <LinkDefaultVariantContext.Provider value={linkDefaultValue}>\n            <SingleTabStopNavigationContext.Provider value={singleTabStopDefaultValue}>\n              {children}\n            </SingleTabStopNavigationContext.Provider>\n          </LinkDefaultVariantContext.Provider>\n        </InfoLinkLabelContext.Provider>\n      </FormFieldContext.Provider>\n    </CollectionLabelContext.Provider>\n  </ButtonContext.Provider>\n);\n\nexport default ResetContextsForModal;\n"]}