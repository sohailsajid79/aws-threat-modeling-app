{"version":3,"file":"node-belongs.js","sourceRoot":"","sources":["../../../../src/internal/utils/node-belongs.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,0CAA0C,CAAC;AAErF,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAE9C;;;;;;GAMG;AACH,MAAM,UAAU,WAAW,CAAC,SAAsB,EAAE,MAAiC;;IACnF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACnB,OAAO,KAAK,CAAC;KACd;IACD,MAAM,MAAM,GAAG,WAAW,CACxB,MAAqB,EACrB,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CACtF,CAAC;IACF,IAAI,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;QAClC,+DAA+D;QAC/D,OAAO,IAAI,CAAC;KACb;IACD,MAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAA,MAAM,CAAC,OAAO,CAAC,eAAe,mCAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9G,OAAO,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACxF,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { findUpUntil, nodeContains } from '@cloudscape-design/component-toolkit/dom';\n\nimport { isHTMLElement, isNode } from './dom';\n\n/**\n * Checks whether the given node (target) belongs to the container.\n * The function is similar to nodeContains but also accounts for dropdowns with expandToViewport=true.\n *\n * @param container Container node\n * @param target Node that is checked to be a descendant of the container\n */\nexport function nodeBelongs(container: Node | null, target: Node | EventTarget | null): boolean {\n  if (!isNode(target)) {\n    return false;\n  }\n  const portal = findUpUntil(\n    target as HTMLElement,\n    node => node === container || (isHTMLElement(node) && !!node.dataset.awsuiReferrerId)\n  );\n  if (portal && portal === container) {\n    // We found the container as a direct ancestor without a portal\n    return true;\n  }\n  const referrer = isHTMLElement(portal) ? document.getElementById(portal.dataset.awsuiReferrerId ?? '') : null;\n  return referrer ? nodeContains(container, referrer) : nodeContains(container, target);\n}\n"]}