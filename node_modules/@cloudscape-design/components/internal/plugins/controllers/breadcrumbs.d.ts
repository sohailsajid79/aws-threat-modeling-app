type ChangeCallback<T> = (props: T | null) => void;
export interface BreadcrumbsGlobalRegistration<T> {
    update(props: T): void;
    cleanup(): void;
}
export interface BreadcrumbsApiInternal<T> {
    registerAppLayout: (changeCallback: ChangeCallback<T>) => (() => void) | void;
    registerBreadcrumbs: (props: T, onRegistered: () => void) => BreadcrumbsGlobalRegistration<T>;
    getStateForTesting: () => {
        appLayoutUpdateCallback: ChangeCallback<T> | null;
        breadcrumbInstances: Array<{
            props: T;
        }>;
        breadcrumbRegistrations: Array<() => void>;
    };
}
export declare class BreadcrumbsController<T> {
    #private;
    registerAppLayout: (changeCallback: ChangeCallback<T>) => (() => void) | undefined;
    registerBreadcrumbs: (props: T, onRegistered: () => void) => BreadcrumbsGlobalRegistration<T>;
    getStateForTesting: () => {
        appLayoutUpdateCallback: ChangeCallback<T> | null;
        breadcrumbInstances: {
            props: T;
        }[];
        breadcrumbRegistrations: (() => void)[];
    };
    installInternal(internalApi?: Partial<BreadcrumbsApiInternal<T>>): BreadcrumbsApiInternal<T>;
}
export {};
//# sourceMappingURL=breadcrumbs.d.ts.map