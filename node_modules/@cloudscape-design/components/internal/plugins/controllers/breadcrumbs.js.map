{"version":3,"file":"breadcrumbs.js","sourceRoot":"","sources":["../../../../../src/internal/plugins/controllers/breadcrumbs.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\n\ntype ChangeCallback<T> = (props: T | null) => void;\n\nexport interface BreadcrumbsGlobalRegistration<T> {\n  update(props: T): void;\n  cleanup(): void;\n}\n\nexport interface BreadcrumbsApiInternal<T> {\n  registerAppLayout: (changeCallback: ChangeCallback<T>) => (() => void) | void;\n  registerBreadcrumbs: (props: T, onRegistered: () => void) => BreadcrumbsGlobalRegistration<T>;\n  getStateForTesting: () => {\n    appLayoutUpdateCallback: ChangeCallback<T> | null;\n    breadcrumbInstances: Array<{ props: T }>;\n    breadcrumbRegistrations: Array<() => void>;\n  };\n}\n\nexport class BreadcrumbsController<T> {\n  #appLayoutUpdateCallback: ChangeCallback<T> | null = null;\n  #breadcrumbInstances: Array<{ props: T }> = [];\n  #breadcrumbRegistrations: Array<() => void> = [];\n\n  #notifyAppLayout = debounce(() => {\n    if (!this.#appLayoutUpdateCallback) {\n      return;\n    }\n    const latestBreadcrumb = this.#breadcrumbInstances[this.#breadcrumbInstances.length - 1];\n    this.#appLayoutUpdateCallback(latestBreadcrumb?.props ?? null);\n  }, 0);\n\n  #notifyBreadcrumbs = debounce(() => {\n    if (!this.#appLayoutUpdateCallback) {\n      return;\n    }\n    this.#breadcrumbRegistrations.forEach(listener => listener());\n  }, 0);\n\n  registerAppLayout = (changeCallback: ChangeCallback<T>) => {\n    if (this.#appLayoutUpdateCallback) {\n      return;\n    }\n    this.#appLayoutUpdateCallback = changeCallback;\n    this.#notifyBreadcrumbs();\n    return () => {\n      this.#appLayoutUpdateCallback = null;\n    };\n  };\n\n  registerBreadcrumbs = (props: T, onRegistered: () => void): BreadcrumbsGlobalRegistration<T> => {\n    const instance = { props: props };\n    this.#breadcrumbInstances.push(instance);\n    this.#breadcrumbRegistrations.push(onRegistered);\n    this.#notifyBreadcrumbs();\n    this.#notifyAppLayout();\n    return {\n      update: props => {\n        instance.props = props;\n        this.#notifyAppLayout();\n      },\n      cleanup: () => {\n        this.#breadcrumbInstances.splice(this.#breadcrumbInstances.indexOf(instance), 1);\n        this.#breadcrumbRegistrations.splice(this.#breadcrumbRegistrations.indexOf(onRegistered), 1);\n        this.#notifyAppLayout();\n      },\n    };\n  };\n\n  getStateForTesting = () => {\n    return {\n      appLayoutUpdateCallback: this.#appLayoutUpdateCallback,\n      breadcrumbInstances: this.#breadcrumbInstances,\n      breadcrumbRegistrations: this.#breadcrumbRegistrations,\n    };\n  };\n\n  installInternal(internalApi: Partial<BreadcrumbsApiInternal<T>> = {}): BreadcrumbsApiInternal<T> {\n    internalApi.registerBreadcrumbs ??= this.registerBreadcrumbs;\n    internalApi.registerAppLayout ??= this.registerAppLayout;\n    internalApi.getStateForTesting ??= this.getStateForTesting;\n\n    return internalApi as BreadcrumbsApiInternal<T>;\n  }\n}\n"]}