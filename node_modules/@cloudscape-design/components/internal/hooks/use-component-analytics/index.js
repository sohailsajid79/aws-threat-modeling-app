// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import { useEffect, useRef } from 'react';
import { ComponentMetrics } from '../../analytics';
import { useRandomId } from '../use-unique-id';
function useTaskInteractionAttribute(elementRef, value) {
    const attributeName = 'data-analytics-task-interaction-id';
    const attributeValueRef = useRef();
    useEffect(() => {
        var _a;
        // With this effect, we apply the attribute only on the client, to avoid hydration errors.
        attributeValueRef.current = value;
        (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.setAttribute(attributeName, value);
    }, [value, elementRef]);
    return {
        [attributeName]: attributeValueRef.current,
    };
}
export function useComponentAnalytics(componentName, elementRef, getDetails) {
    const taskInteractionId = useRandomId();
    const attributes = useTaskInteractionAttribute(elementRef, taskInteractionId);
    useEffect(() => {
        ComponentMetrics.componentMounted({ taskInteractionId, componentName, details: getDetails() });
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [taskInteractionId]);
    return { taskInteractionId, attributes };
}
//# sourceMappingURL=index.js.map