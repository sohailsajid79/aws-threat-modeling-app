{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../../src/internal/components/selectable-item/analytics-metadata/utils.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;;AAKtC,OAAO,wBAAwB,MAAM,iDAAiD,CAAC;AACvF,OAAO,kBAAkB,MAAM,iBAAiB,CAAC;AAEjD,MAAM,CAAC,MAAM,gCAAgC,GAAG,CAAC,EAIlB,EAAkD,EAAE;QAJlC,EAC/C,OAAO,EACP,KAAK,OAEwB,EAD1B,SAAS,cAHmC,oBAIhD,CADa;IAEZ,MAAM,cAAc,GAAG,SAA+B,CAAC;IAEvD,MAAM,iBAAiB,GAAmD;QACxE,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE;YACN,KAAK,EAAE;gBACL,QAAQ,EAAE,CAAC,IAAI,wBAAwB,CAAC,KAAK,EAAE,EAAE,IAAI,kBAAkB,CAAC,gBAAgB,CAAC,EAAE,CAAC;aAC7F;SACF;KACF,CAAC;IAEF,IAAI,QAAQ,GAAG,SAAS,CAAC;IACzB,IACE,CAAC,OAAO,IAAI,cAAc,CAAC,kBAAkB,CAAC,IAAI,cAAc,CAAC,qBAAqB,CAAC,CAAC;QACxF,cAAc,CAAC,kBAAkB,CAAC,EAClC;QACA,QAAQ,GAAG,GAAG,cAAc,CAAC,kBAAkB,CAAC,IAAI,cAAc,CAAC,qBAAqB,CAAC,IAAI,cAAc,CAAC,kBAAkB,CAAC,EAAE,CAAC;KACnI;SAAM,IAAI,cAAc,CAAC,iBAAiB,CAAC,EAAE;QAC5C,QAAQ,GAAG,GAAG,cAAc,CAAC,iBAAiB,CAAC,EAAE,CAAC;KACnD;IACD,IAAI,QAAQ,EAAE;QACZ,iBAAiB,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC9C;IACD,IAAI,KAAK,EAAE;QACT,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;KACxC;IACD,IAAI,OAAO,EAAE;QACX,iBAAiB,CAAC,MAAM,CAAC,UAAU,GAAG;YACpC,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,IAAI,kBAAkB,CAAC,MAAM,sBAAsB,cAAc,CAAC,kBAAkB,CAAC,OAAO,kBAAkB,CAAC,gBAAgB,CAAC,EAAE;SAC7I,CAAC;KACH;IACD,OAAO,iBAAiB,CAAC;AAC3B,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ItemDataAttributes, SelectableItemProps } from '../interfaces';\nimport { GeneratedAnalyticsMetadataSelectableItemSelect } from './interfaces';\n\nimport optionAnalyticsSelectors from './../../option/analytics-metadata/styles.css.js';\nimport analyticsSelectors from './styles.css.js';\n\nexport const getAnalyticsSelectActionMetadata = ({\n  isChild,\n  value,\n  ...restProps\n}: Partial<SelectableItemProps>): GeneratedAnalyticsMetadataSelectableItemSelect => {\n  const dataAttributes = restProps as ItemDataAttributes;\n\n  const analyticsMetadata: GeneratedAnalyticsMetadataSelectableItemSelect = {\n    action: 'select',\n    detail: {\n      label: {\n        selector: [`.${optionAnalyticsSelectors.label}`, `.${analyticsSelectors['option-content']}`],\n      },\n    },\n  };\n\n  let position = undefined;\n  if (\n    (isChild && dataAttributes['data-group-index'] && dataAttributes['data-in-group-index']) ||\n    dataAttributes['data-child-index']\n  ) {\n    position = `${dataAttributes['data-group-index']},${dataAttributes['data-in-group-index'] || dataAttributes['data-child-index']}`;\n  } else if (dataAttributes['data-test-index']) {\n    position = `${dataAttributes['data-test-index']}`;\n  }\n  if (position) {\n    analyticsMetadata.detail.position = position;\n  }\n  if (value) {\n    analyticsMetadata.detail.value = value;\n  }\n  if (isChild) {\n    analyticsMetadata.detail.groupLabel = {\n      root: 'body',\n      selector: `.${analyticsSelectors.parent}[data-group-index=\"${dataAttributes['data-group-index']}\"] .${analyticsSelectors['option-content']}`,\n    };\n  }\n  return analyticsMetadata;\n};\n"]}