{"version":3,"file":"property-editor.js","sourceRoot":"","sources":["../../../src/property-filter/property-editor.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,cAAc,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,wCAAwC,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAI9D,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,cAAc,MAAM,8BAA8B,CAAC;AAE1D,MAAM,UAAU,qBAAqB,CAAmB,EACtD,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,KAAK,EACL,QAAQ,EACR,YAAY,GAQb;IACC,MAAM,OAAO,GAAG,WAAW,EAAE,CAAC;IAC9B,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,iBAAiB,CAAC;QACvC,6BAAK,SAAS,EAAE,MAAM,CAAC,wBAAwB,CAAC,EAAE,EAAE,EAAE,OAAO,IAC1D,QAAQ,CAAC,gBAAgB,CACtB;QACN,6BAAK,SAAS,EAAE,MAAM,CAAC,sBAAsB,CAAC;YAC5C,oBAAC,gBAAgB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,IAC1D,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAC1B,CACxB,CACF,CACP,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAmB,EACrD,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,WAAW,GAQZ;IACC,MAAM,WAAW,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAClE,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,yBAAyB,CAAC;QAC/C,oBAAC,cAAc,IACb,OAAO,EAAC,MAAM,EACd,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,EAAE,cAAc,CAAC,wBAAwB,CAAC,CAAC,EAC3F,OAAO,EAAE,QAAQ,IAEhB,WAAW,CAAC,gBAAgB,CACd;QACjB,oBAAC,cAAc,IAAC,SAAS,EAAE,cAAc,CAAC,wBAAwB,CAAC,EAAE,OAAO,EAAE,WAAW,IACtF,WAAW,CAAC,eAAe,CACb,CACb,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport InternalButton from '../button/internal';\nimport { FormFieldContext } from '../internal/context/form-field-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { I18nStringsInternal } from './i18n-utils';\nimport { ComparisonOperator, ExtendedOperatorForm, InternalFilteringProperty, InternalToken } from './interfaces';\n\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\n\nexport function PropertyEditorContent<TokenValue = any>({\n  property,\n  operator,\n  filter,\n  value,\n  onChange,\n  operatorForm,\n}: {\n  property: InternalFilteringProperty;\n  operator: ComparisonOperator;\n  filter: string;\n  value: null | TokenValue;\n  onChange: (value: null | TokenValue) => void;\n  operatorForm: ExtendedOperatorForm<TokenValue>;\n}) {\n  const labelId = useUniqueId();\n  return (\n    <div className={styles['property-editor']}>\n      <div className={styles['property-editor-header']} id={labelId}>\n        {property.groupValuesLabel}\n      </div>\n      <div className={styles['property-editor-form']}>\n        <FormFieldContext.Provider value={{ ariaLabelledby: labelId }}>\n          {operatorForm({ value, onChange, operator, filter })}\n        </FormFieldContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport function PropertyEditorFooter<TokenValue = any>({\n  property,\n  operator,\n  value,\n  onCancel,\n  onSubmit,\n  i18nStrings,\n}: {\n  property: InternalFilteringProperty;\n  operator: ComparisonOperator;\n  value: null | TokenValue;\n  onCancel: () => void;\n  onSubmit: (value: InternalToken) => void;\n  i18nStrings: I18nStringsInternal;\n}) {\n  const submitToken = () => onSubmit({ property, operator, value });\n  return (\n    <div className={styles['property-editor-actions']}>\n      <InternalButton\n        variant=\"link\"\n        className={clsx(styles['property-editor-cancel'], testUtilStyles['property-editor-cancel'])}\n        onClick={onCancel}\n      >\n        {i18nStrings.cancelActionText}\n      </InternalButton>\n      <InternalButton className={testUtilStyles['property-editor-submit']} onClick={submitToken}>\n        {i18nStrings.applyActionText}\n      </InternalButton>\n    </div>\n  );\n}\n"]}