// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React from 'react';
import clsx from 'clsx';
import InternalButton from '../button/internal';
import { FormFieldContext } from '../internal/context/form-field-context';
import { useUniqueId } from '../internal/hooks/use-unique-id';
import styles from './styles.css.js';
import testUtilStyles from './test-classes/styles.css.js';
export function PropertyEditorContent({ property, operator, filter, value, onChange, operatorForm, }) {
    const labelId = useUniqueId();
    return (React.createElement("div", { className: styles['property-editor'] },
        React.createElement("div", { className: styles['property-editor-header'], id: labelId }, property.groupValuesLabel),
        React.createElement("div", { className: styles['property-editor-form'] },
            React.createElement(FormFieldContext.Provider, { value: { ariaLabelledby: labelId } }, operatorForm({ value, onChange, operator, filter })))));
}
export function PropertyEditorFooter({ property, operator, value, onCancel, onSubmit, i18nStrings, }) {
    const submitToken = () => onSubmit({ property, operator, value });
    return (React.createElement("div", { className: styles['property-editor-actions'] },
        React.createElement(InternalButton, { variant: "link", className: clsx(styles['property-editor-cancel'], testUtilStyles['property-editor-cancel']), onClick: onCancel }, i18nStrings.cancelActionText),
        React.createElement(InternalButton, { className: testUtilStyles['property-editor-submit'], onClick: submitToken }, i18nStrings.applyActionText)));
}
//# sourceMappingURL=property-editor.js.map