{"version":3,"file":"i18n-utils.js","sourceRoot":"","sources":["../../../src/property-filter/i18n-utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useInternalI18n } from '../i18n/context';\nimport { ComparisonOperator, FormattedToken, I18nStrings, InternalToken, InternalTokenGroup } from './interfaces';\nimport { tokenGroupToTokens } from './utils';\n\nexport type I18nStringsOperators = Pick<\n  I18nStrings,\n  | 'operatorLessText'\n  | 'operatorLessOrEqualText'\n  | 'operatorGreaterText'\n  | 'operatorGreaterOrEqualText'\n  | 'operatorContainsText'\n  | 'operatorDoesNotContainText'\n  | 'operatorEqualsText'\n  | 'operatorDoesNotEqualText'\n  | 'operatorStartsWithText'\n  | 'operatorDoesNotStartWithText'\n>;\n\n// Replacing i18n function with ones taking internal tokens as argument.\nexport type I18nStringsInternal = Omit<\n  I18nStrings,\n  | 'formatToken'\n  | 'removeTokenButtonAriaLabel'\n  | 'groupEditAriaLabel'\n  | 'tokenEditorTokenActionsAriaLabel'\n  | 'tokenEditorTokenRemoveAriaLabel'\n  | 'tokenEditorAddExistingTokenAriaLabel'\n  | 'tokenEditorAddExistingTokenLabel'\n> & {\n  formatToken: (token: InternalToken) => {\n    propertyLabel: string;\n    operator: string;\n    value: string;\n    formattedText: string;\n  };\n  groupAriaLabel: (group: InternalTokenGroup) => string;\n  groupEditAriaLabel: (group: InternalTokenGroup) => string;\n  removeTokenButtonAriaLabel: (token: InternalToken) => string;\n  tokenEditorTokenActionsAriaLabel: (token: InternalToken) => string;\n  tokenEditorTokenRemoveAriaLabel: (token: InternalToken) => string;\n  tokenEditorAddExistingTokenAriaLabel: (token: InternalToken) => string;\n  tokenEditorAddExistingTokenLabel: (token: InternalToken) => string;\n};\n\nexport function usePropertyFilterI18n(def: I18nStrings = {}): I18nStringsInternal {\n  const i18n = useInternalI18n('property-filter');\n\n  const allPropertiesLabel = i18n('i18nStrings.allPropertiesLabel', def?.allPropertiesLabel);\n  const operationAndText = i18n('i18nStrings.operationAndText', def?.operationAndText);\n  const operationOrText = i18n('i18nStrings.operationOrText', def?.operationOrText);\n  const formatToken =\n    i18n(\n      'i18nStrings.formatToken',\n      def.formatToken,\n      format => token =>\n        format({\n          token__propertyLabel: token.propertyLabel,\n          token__operator: getOperatorI18nString(token.operator),\n          token__value: token.value,\n        })\n    ) ?? (token => `${token.propertyLabel} ${token.operator} ${token.value}`);\n\n  function toFormatted(token: InternalToken): FormattedToken {\n    const valueFormatter = token.property?.getValueFormatter(token.operator);\n    const propertyLabel = token.property ? token.property.propertyLabel : allPropertiesLabel ?? '';\n    const tokenValue = valueFormatter ? valueFormatter(token.value) : token.value;\n    return { propertyKey: token.property?.propertyKey, propertyLabel, operator: token.operator, value: tokenValue };\n  }\n\n  return {\n    ...def,\n    allPropertiesLabel,\n    operationAndText,\n    operationOrText,\n    applyActionText: i18n('i18nStrings.applyActionText', def?.applyActionText),\n    cancelActionText: i18n('i18nStrings.cancelActionText', def?.cancelActionText),\n    clearFiltersText: i18n('i18nStrings.clearFiltersText', def?.clearFiltersText),\n    editTokenHeader: i18n('i18nStrings.editTokenHeader', def?.editTokenHeader),\n    groupPropertiesText: i18n('i18nStrings.groupPropertiesText', def?.groupPropertiesText),\n    groupValuesText: i18n('i18nStrings.groupValuesText', def?.groupValuesText),\n    operatorContainsText: i18n('i18nStrings.operatorContainsText', def?.operatorContainsText),\n    operatorDoesNotContainText: i18n('i18nStrings.operatorDoesNotContainText', def?.operatorDoesNotContainText),\n    operatorDoesNotEqualText: i18n('i18nStrings.operatorDoesNotEqualText', def?.operatorDoesNotEqualText),\n    operatorEqualsText: i18n('i18nStrings.operatorEqualsText', def?.operatorEqualsText),\n    operatorGreaterOrEqualText: i18n('i18nStrings.operatorGreaterOrEqualText', def?.operatorGreaterOrEqualText),\n    operatorGreaterText: i18n('i18nStrings.operatorGreaterText', def?.operatorGreaterText),\n    operatorLessOrEqualText: i18n('i18nStrings.operatorLessOrEqualText', def?.operatorLessOrEqualText),\n    operatorLessText: i18n('i18nStrings.operatorLessText', def?.operatorLessText),\n    operatorStartsWithText: i18n('i18nStrings.operatorStartsWithText', def?.operatorStartsWithText),\n    operatorDoesNotStartWithText: i18n('i18nStrings.operatorDoesNotStartWithText', def?.operatorDoesNotStartWithText),\n    operatorText: i18n('i18nStrings.operatorText', def?.operatorText),\n    operatorsText: i18n('i18nStrings.operatorsText', def?.operatorsText),\n    propertyText: i18n('i18nStrings.propertyText', def?.propertyText),\n    tokenLimitShowFewer: i18n('i18nStrings.tokenLimitShowFewer', def?.tokenLimitShowFewer),\n    tokenLimitShowMore: i18n('i18nStrings.tokenLimitShowMore', def?.tokenLimitShowMore),\n    valueText: i18n('i18nStrings.valueText', def?.valueText),\n    tokenEditorTokenRemoveLabel: i18n('i18nStrings.tokenEditorTokenRemoveLabel', def?.tokenEditorTokenRemoveLabel),\n    tokenEditorTokenRemoveFromGroupLabel: i18n(\n      'i18nStrings.tokenEditorTokenRemoveFromGroupLabel',\n      def?.tokenEditorTokenRemoveFromGroupLabel\n    ),\n    tokenEditorAddNewTokenLabel: i18n('i18nStrings.tokenEditorAddNewTokenLabel', def?.tokenEditorAddNewTokenLabel),\n    tokenEditorAddTokenActionsAriaLabel: i18n(\n      'i18nStrings.tokenEditorAddTokenActionsAriaLabel',\n      def?.tokenEditorAddTokenActionsAriaLabel\n    ),\n    formatToken: token => {\n      const formattedToken = toFormatted(token);\n      return { ...formattedToken, formattedText: formatToken(toFormatted(token)) };\n    },\n    groupAriaLabel: group => {\n      const tokens = tokenGroupToTokens<InternalToken>(group.tokens).map(toFormatted);\n      const groupOperationLabel = (group.operation === 'and' ? operationAndText : operationOrText) ?? '';\n      return tokens.map(token => formatToken(token)).join(` ${groupOperationLabel} `);\n    },\n    groupEditAriaLabel: group => {\n      const tokens = tokenGroupToTokens<InternalToken>(group.tokens).map(token => toFormatted(token));\n      const operation = group.operation;\n      const operationLabel = (operation === 'and' ? operationAndText : operationOrText) ?? '';\n      const formatter = i18n(\n        'i18nStrings.groupEditAriaLabel',\n        def.groupEditAriaLabel,\n        format => () =>\n          format({\n            group__operationLabel: operationLabel,\n            group__formattedTokens__length: tokens.length.toString(),\n            group__formattedTokens0__formattedText: tokens[0] ? formatToken(tokens[0]) : '',\n            group__formattedTokens1__formattedText: tokens[1] ? formatToken(tokens[1]) : '',\n            group__formattedTokens2__formattedText: tokens[2] ? formatToken(tokens[2]) : '',\n            group__formattedTokens3__formattedText: tokens[3] ? formatToken(tokens[3]) : '',\n          })\n      );\n      return formatter?.({ operation, operationLabel, tokens }) ?? '';\n    },\n    removeTokenButtonAriaLabel: token => {\n      const formatter = i18n(\n        'i18nStrings.removeTokenButtonAriaLabel',\n        def.removeTokenButtonAriaLabel,\n        format => () => format({ token__formattedText: formatToken(toFormatted(token)) })\n      );\n      return formatter?.(toFormatted(token)) ?? '';\n    },\n    tokenEditorTokenActionsAriaLabel: (token: InternalToken) => {\n      const formatter = i18n(\n        'i18nStrings.tokenEditorTokenActionsAriaLabel',\n        def.tokenEditorTokenActionsAriaLabel,\n        format => () => format({ token__formattedText: formatToken(toFormatted(token)) })\n      );\n      return formatter?.(toFormatted(token)) ?? '';\n    },\n    tokenEditorTokenRemoveAriaLabel: token => {\n      const formatter = i18n(\n        'i18nStrings.tokenEditorTokenRemoveAriaLabel',\n        def.tokenEditorTokenRemoveAriaLabel,\n        format => () => format({ token__formattedText: formatToken(toFormatted(token)) })\n      );\n      return formatter?.(toFormatted(token)) ?? '';\n    },\n    tokenEditorAddExistingTokenAriaLabel: token => {\n      const formatter = i18n(\n        'i18nStrings.tokenEditorAddExistingTokenAriaLabel',\n        def.tokenEditorAddExistingTokenAriaLabel,\n        format => () => format({ token__formattedText: formatToken(toFormatted(token)) })\n      );\n      return formatter?.(toFormatted(token)) ?? '';\n    },\n    tokenEditorAddExistingTokenLabel: token => {\n      const formattedToken = toFormatted(token);\n      const formatter = i18n(\n        'i18nStrings.tokenEditorAddExistingTokenLabel',\n        def.tokenEditorAddExistingTokenLabel,\n        format => () =>\n          format({\n            token__propertyLabel: formattedToken.propertyLabel,\n            token__operator: formattedToken.operator,\n            token__value: formattedToken.value,\n          })\n      );\n      return formatter?.(toFormatted(token)) ?? '';\n    },\n  };\n}\n\nexport function operatorToDescription(operator: ComparisonOperator, i18nStrings: I18nStringsOperators) {\n  switch (operator) {\n    case '<':\n      return i18nStrings.operatorLessText;\n    case '<=':\n      return i18nStrings.operatorLessOrEqualText;\n    case '>':\n      return i18nStrings.operatorGreaterText;\n    case '>=':\n      return i18nStrings.operatorGreaterOrEqualText;\n    case ':':\n      return i18nStrings.operatorContainsText;\n    case '!:':\n      return i18nStrings.operatorDoesNotContainText;\n    case '=':\n      return i18nStrings.operatorEqualsText;\n    case '!=':\n      return i18nStrings.operatorDoesNotEqualText;\n    case '^':\n      return i18nStrings.operatorStartsWithText;\n    case '!^':\n      return i18nStrings.operatorDoesNotStartWithText;\n    // The line is ignored from coverage because it is not reachable.\n    // The purpose of it is to prevent TS errors if ComparisonOperator type gets extended.\n    /* istanbul ignore next */\n    default:\n      return '';\n  }\n}\n\nfunction getOperatorI18nString(operator: ComparisonOperator): string {\n  switch (operator) {\n    case '=':\n      return 'equals';\n    case '!=':\n      return 'not_equals';\n    case '>':\n      return 'greater_than';\n    case '>=':\n      return 'greater_than_equal';\n    case '<':\n      return 'less_than';\n    case '<=':\n      return 'less_than_equal';\n    case ':':\n      return 'contains';\n    case '!:':\n      return 'not_contains';\n    case '^':\n      return 'starts_with';\n    case '!^':\n      return 'not_starts_with';\n    // The line is ignored from coverage because it is not reachable.\n    // The purpose of it is to prevent TS errors if ComparisonOperator type gets extended.\n    /* istanbul ignore next */\n    default:\n      return operator;\n  }\n}\n"]}