{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/property-filter/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,QAAQ,EAAE,MAAM,+CAA+C,CAAC;AACzE,OAAO,EAAE,6BAA6B,EAAE,MAAM,kEAAkE,CAAC;AAEjH,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AAGxE,OAAO,sBAAsB,MAAM,YAAY,CAAC;AAEhD,OAAO,kBAAkB,MAAM,oCAAoC,CAAC;AAIpE,MAAM,cAAc,GAAG,KAAK,CAAC,UAAU,CACrC,CACE,EAWsB,EACtB,GAAmB,EACnB,EAAE;QAbF,EACE,gBAAgB,GAAG,EAAE,EACrB,gBAAgB,GAAG,EAAE,EACrB,iBAAiB,GAAG,KAAK,EACzB,wBAAwB,GAAG,KAAK,EAChC,eAAe,EACf,gBAAgB,EAChB,cAAc,GAAG,KAAK,EACtB,UAAU,EACV,aAAa,OAEO,EADjB,IAAI,cAVT,iLAWC,CADQ;IAIT,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,gBAAgB,EAAE;QAC5D,KAAK,EAAE;YACL,eAAe;YACf,wBAAwB;YACxB,iBAAiB;YACjB,gBAAgB;YAChB,cAAc;YACd,UAAU;YACV,aAAa;SACd;KACF,CAAC,CAAC;IAEH,MAAM,0BAA0B,GAAsD;QACpF,IAAI,EAAE,sBAAsB;QAC5B,KAAK,EAAE,IAAI,kBAAkB,CAAC,cAAc,CAAC,QAAQ;QACrD,UAAU,EAAE;YACV,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC9B,gBAAgB,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACtF;KACF,CAAC;IAEF,IAAI,cAAc,IAAI,iBAAiB,EAAE;QACvC,QAAQ,CAAC,gBAAgB,EAAE,4DAA4D,CAAC,CAAC;QACzF,cAAc,GAAG,KAAK,CAAC;KACxB;IAED,OAAO,CACL,oBAAC,sBAAsB,kBACrB,GAAG,EAAE,GAAG,IACJ,kBAAkB,IACtB,gBAAgB,EAAE,gBAAgB,EAClC,gBAAgB,EAAE,gBAAgB,EAClC,iBAAiB,EAAE,iBAAiB,EACpC,wBAAwB,EAAE,wBAAwB,EAClD,eAAe,EAAE,eAAe,EAChC,gBAAgB,EAAE,gBAAgB,EAClC,cAAc,EAAE,cAAc,EAC9B,UAAU,EAAE,UAAU,EACtB,aAAa,EAAE,aAAa,IACxB,6BAA6B,CAAC,EAAE,SAAS,EAAE,0BAA0B,EAAE,CAAC,EACxE,IAAI,EACR,CACH,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,gBAAgB,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;AACnD,eAAe,cAAc,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataPropertyFilterComponent } from './analytics-metadata/interfaces';\nimport { PropertyFilterProps, Ref } from './interfaces';\nimport PropertyFilterInternal from './internal';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\n\nexport { PropertyFilterProps };\n\nconst PropertyFilter = React.forwardRef(\n  (\n    {\n      filteringOptions = [],\n      customGroupsText = [],\n      enableTokenGroups = false,\n      disableFreeTextFiltering = false,\n      asyncProperties,\n      expandToViewport,\n      hideOperations = false,\n      tokenLimit,\n      virtualScroll,\n      ...rest\n    }: PropertyFilterProps,\n    ref: React.Ref<Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('PropertyFilter', {\n      props: {\n        asyncProperties,\n        disableFreeTextFiltering,\n        enableTokenGroups,\n        expandToViewport,\n        hideOperations,\n        tokenLimit,\n        virtualScroll,\n      },\n    });\n\n    const componentAnalyticsMetadata: GeneratedAnalyticsMetadataPropertyFilterComponent = {\n      name: 'awsui.PropertyFilter',\n      label: `.${analyticsSelectors['search-field']} input`,\n      properties: {\n        disabled: `${!!rest.disabled}`,\n        queryTokensCount: `${rest.query && rest.query.tokens ? rest.query.tokens.length : 0}`,\n      },\n    };\n\n    if (hideOperations && enableTokenGroups) {\n      warnOnce('PropertyFilter', 'Operations cannot be hidden when token groups are enabled.');\n      hideOperations = false;\n    }\n\n    return (\n      <PropertyFilterInternal\n        ref={ref}\n        {...baseComponentProps}\n        filteringOptions={filteringOptions}\n        customGroupsText={customGroupsText}\n        enableTokenGroups={enableTokenGroups}\n        disableFreeTextFiltering={disableFreeTextFiltering}\n        asyncProperties={asyncProperties}\n        expandToViewport={expandToViewport}\n        hideOperations={hideOperations}\n        tokenLimit={tokenLimit}\n        virtualScroll={virtualScroll}\n        {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n        {...rest}\n      />\n    );\n  }\n);\n\napplyDisplayName(PropertyFilter, 'PropertyFilter');\nexport default PropertyFilter;\n"]}