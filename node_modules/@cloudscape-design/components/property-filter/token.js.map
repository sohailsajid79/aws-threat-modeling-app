{"version":3,"file":"token.js","sourceRoot":"","sources":["../../../src/property-filter/token.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport FilteringToken, { FilteringTokenRef } from './filtering-token';\nimport { I18nStringsInternal } from './i18n-utils';\nimport {\n  FormattedToken,\n  GroupText,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalFreeTextFiltering,\n  InternalQuery,\n  InternalToken,\n  InternalTokenGroup,\n  JoinOperation,\n  LoadItemsDetail,\n} from './interfaces';\nimport { TokenEditor } from './token-editor';\nimport { tokenGroupToTokens } from './utils';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface TokenProps {\n  query: InternalQuery;\n  tokenIndex: number;\n  onUpdateToken: (updatedToken: InternalToken | InternalTokenGroup, releasedTokens: InternalToken[]) => void;\n  onUpdateOperation: (updatedOperation: JoinOperation) => void;\n  onRemoveToken: () => void;\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  freeTextFiltering: InternalFreeTextFiltering;\n  expandToViewport?: boolean;\n  filteringProperties: readonly InternalFilteringProperty[];\n  filteringOptions: readonly InternalFilteringOption[];\n  hideOperations?: boolean;\n  i18nStrings: I18nStringsInternal;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  enableTokenGroups: boolean;\n}\n\nexport const TokenButton = ({\n  query,\n  onUpdateToken,\n  onUpdateOperation,\n  onRemoveToken,\n  tokenIndex,\n  filteringProperties,\n  filteringOptions,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  freeTextFiltering,\n  expandToViewport,\n  enableTokenGroups,\n}: TokenProps) => {\n  const tokenRef = useRef<FilteringTokenRef>(null);\n\n  const hasGroups = query.tokens.some(tokenOrGroup => 'operation' in tokenOrGroup);\n  const first = tokenIndex === 0;\n\n  const tokenOrGroup = query.tokens[tokenIndex];\n  const tokens = tokenGroupToTokens<InternalToken>([tokenOrGroup]).map(t => ({ ...t, standaloneIndex: undefined }));\n  const operation = query.operation;\n  const groupOperation = 'operation' in tokenOrGroup ? tokenOrGroup.operation : operation === 'and' ? 'or' : 'and';\n\n  const [tempTokens, setTempTokens] = useState<InternalToken[]>(tokens);\n  const capturedTokenIndices = tempTokens.map(token => token.standaloneIndex).filter(index => index !== undefined);\n  const tokensToCapture: InternalToken[] = [];\n  for (let index = 0; index < query.tokens.length; index++) {\n    const token = query.tokens[index];\n    if ('operator' in token && token !== tokenOrGroup && !capturedTokenIndices.includes(index)) {\n      tokensToCapture.push(token);\n    }\n  }\n  const [tempReleasedTokens, setTempReleasedTokens] = useState<InternalToken[]>([]);\n  tokensToCapture.push(...tempReleasedTokens);\n\n  return (\n    <FilteringToken\n      ref={tokenRef}\n      tokens={tokens.map(token => {\n        const formattedToken = i18nStrings.formatToken(token);\n        return {\n          content: (\n            <span className={clsx(styles['token-trigger'], analyticsSelectors['token-trigger'])}>\n              <TokenTrigger token={formattedToken} allProperties={token.property === null} />\n            </span>\n          ),\n          ariaLabel: formattedToken.formattedText,\n          dismissAriaLabel: i18nStrings.removeTokenButtonAriaLabel(token),\n        };\n      })}\n      showOperation={!first && !hideOperations}\n      operation={operation}\n      andText={i18nStrings.operationAndText ?? ''}\n      orText={i18nStrings.operationOrText ?? ''}\n      operationAriaLabel={i18nStrings.tokenOperatorAriaLabel ?? ''}\n      onChangeOperation={onUpdateOperation}\n      onDismissToken={(removeIndex: number) => {\n        if (tokens.length === 1) {\n          onRemoveToken();\n        } else {\n          const newTokens = tokens.filter((_, index) => index !== removeIndex);\n          const updatedToken = newTokens.length === 1 ? newTokens[0] : { operation: groupOperation, tokens: newTokens };\n          onUpdateToken(updatedToken, []);\n        }\n      }}\n      disabled={disabled}\n      editorContent={\n        <TokenEditor\n          supportsGroups={enableTokenGroups}\n          filteringProperties={filteringProperties}\n          filteringOptions={filteringOptions}\n          tempGroup={tempTokens}\n          onChangeTempGroup={setTempTokens}\n          tokensToCapture={tokensToCapture}\n          onTokenCapture={capturedToken => setTempReleasedTokens(prev => prev.filter(token => token !== capturedToken))}\n          onTokenRelease={releasedToken => {\n            if (releasedToken.standaloneIndex === undefined) {\n              setTempReleasedTokens(prev => [...prev, releasedToken]);\n            }\n          }}\n          asyncProps={asyncProps}\n          onLoadItems={onLoadItems}\n          i18nStrings={i18nStrings}\n          asyncProperties={asyncProperties}\n          customGroupsText={customGroupsText}\n          freeTextFiltering={freeTextFiltering}\n          onDismiss={() => {\n            tokenRef.current?.closeEditor();\n          }}\n          onSubmit={() => {\n            const updatedToken =\n              tempTokens.length === 1 ? tempTokens[0] : { operation: groupOperation, tokens: tempTokens };\n            onUpdateToken(updatedToken, tempReleasedTokens);\n            tokenRef.current?.closeEditor();\n          }}\n        />\n      }\n      editorHeader={i18nStrings.editTokenHeader ?? ''}\n      editorDismissAriaLabel={i18nStrings.dismissAriaLabel}\n      editorExpandToViewport={!!expandToViewport}\n      onEditorOpen={() => {\n        setTempTokens(tokens);\n        setTempReleasedTokens([]);\n      }}\n      groupOperation={groupOperation}\n      onChangeGroupOperation={operation => onUpdateToken({ operation, tokens }, [])}\n      groupAriaLabel={i18nStrings.groupAriaLabel({ operation: groupOperation, tokens })}\n      groupEditAriaLabel={i18nStrings.groupEditAriaLabel({ operation: groupOperation, tokens })}\n      hasGroups={hasGroups}\n      popoverSize={enableTokenGroups ? 'content' : 'large'}\n      {...getAnalyticsMetadataAttribute({\n        detail: {\n          tokenPosition: `${tokenIndex + 1}`,\n          tokenLabel: `.${analyticsSelectors['token-trigger']}`,\n        },\n      })}\n    />\n  );\n};\n\nconst TokenTrigger = ({\n  token: { propertyLabel, operator, value },\n  allProperties,\n}: {\n  token: FormattedToken;\n  allProperties: boolean;\n}) => {\n  if (propertyLabel) {\n    propertyLabel += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && allProperties;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return (\n    <>\n      {allProperties ? '' : propertyLabel}\n      <span className={styles['token-operator']}>{operatorText}</span>\n      {value}\n    </>\n  );\n};\n"]}