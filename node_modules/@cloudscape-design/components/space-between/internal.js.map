{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/space-between/internal.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,eAAe,MAAM,8BAA8B,CAAC;AAC3D,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAE1D,OAAO,EAAE,YAAY,EAAE,MAAM,kCAAkC,CAAC;AAGhE,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAIrC,MAAM,oBAAoB,GAAG,UAAU,CACrC,CACE,EAA8G,EAC9G,GAA8B,EAC9B,EAAE;QAFF,EAAE,SAAS,GAAG,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,iBAAiB,OAAuC,EAAlC,KAAK,cAAjF,oEAAmF,CAAF;IAGjF,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;IACvD,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IAEtC;;KAEC;IACD,MAAM,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;IAEpD,OAAO,CACL,6CACM,SAAS,IACb,SAAS,EAAE,IAAI,CACb,SAAS,CAAC,SAAS,EACnB,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,SAAS,CAAC,EACjB,MAAM,CAAC,GAAG,SAAS,IAAI,IAAI,EAAE,CAAC,EAC9B,UAAU,IAAI,MAAM,CAAC,SAAS,UAAU,EAAE,CAAC,CAC5C,EACD,GAAG,EAAE,SAAS,KAEb,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,GAAG,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9D,OAAO,CACL,6BAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,IACnC,KAAK,CACF,CACP,CAAC;IACJ,CAAC,CAAC,CACE,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,oBAAoB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport flattenChildren from 'react-keyed-flatten-children';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { SpaceBetweenProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ntype InternalSpaceBetweenProps = SpaceBetweenProps & InternalBaseComponentProps;\n\nconst InternalSpaceBetween = forwardRef(\n  (\n    { direction = 'vertical', size, children, alignItems, __internalRootRef, ...props }: InternalSpaceBetweenProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    const mergedRef = useMergeRefs(ref, __internalRootRef);\n    const baseProps = getBaseProps(props);\n\n    /*\n   Flattening the children allows us to \"see through\" React Fragments and nested arrays.\n   */\n    const flattenedChildren = flattenChildren(children);\n\n    return (\n      <div\n        {...baseProps}\n        className={clsx(\n          baseProps.className,\n          styles.root,\n          styles[direction],\n          styles[`${direction}-${size}`],\n          alignItems && styles[`align-${alignItems}`]\n        )}\n        ref={mergedRef}\n      >\n        {flattenedChildren.map(child => {\n          const key = typeof child === 'object' ? child.key : undefined;\n\n          return (\n            <div key={key} className={styles.child}>\n              {child}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nexport default InternalSpaceBetween;\n"]}