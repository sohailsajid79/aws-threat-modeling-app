{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/slider/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseComponentProps } from '../internal/base-component';\nimport { FormFieldValidationControlProps } from '../internal/context/form-field-context';\nimport { NonCancelableEventHandler } from '../internal/events';\n\nexport interface SliderProps extends BaseComponentProps, FormFieldValidationControlProps {\n  /**\n   * Indicates the current value.\n   */\n  value?: number;\n\n  /**\n   * Indicates the minimum value.\n   */\n  min: number;\n\n  /**\n   * Indicates the maximum value.\n   */\n  max: number;\n\n  /**\n   * Formats the values. This will format both the labels and the tooltip.\n   */\n  valueFormatter?: (value: number) => string;\n\n  /**\n   * Called when the user selects a value.\n   * The event `detail` contains the current `value`.\n   */\n  onChange?: NonCancelableEventHandler<SliderProps.ChangeDetail>;\n\n  /**\n   * How big the step size is.\n   */\n  step?: number;\n\n  /**\n   * Hides the colored fill line, so only the handle is visible.\n   */\n  hideFillLine?: boolean;\n\n  /**\n   * Show the tick marks along the slider line. Use with stepped sliders, except in extreme cases.\n   */\n  tickMarks?: boolean;\n\n  /**\n   * Whether or not the slider is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Labels shown between the minimum and maximum values.\n   */\n  referenceValues?: ReadonlyArray<number>;\n\n  /**\n   * Adds an `aria-label` to the native control.\n   *\n   * Use this if you don't have a visible label for this control.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Adds an aria-description for slider labels.\n   *\n   * Use when sliders have formatted reference values.\n   */\n  ariaDescription?: string;\n\n  /**\n   * An object containing all the necessary localized strings required by the component.\n   * @i18n\n   */\n  i18nStrings?: SliderProps.I18nStrings;\n\n  /**\n   * Specifies if the control is read-only, which prevents the\n   * user from modifying the value, but does not prevent the value from\n   * being included in a form submission. A read-only control is still focusable.\n   */\n  readOnly?: boolean;\n}\n\nexport namespace SliderProps {\n  export interface ChangeDetail {\n    value: number;\n  }\n  export interface I18nStrings {\n    /**\n      The aria value text displayed when the slider value is between two labeled values.\n     */\n    valueTextRange: (previousValue: string, value: number, nextValue: string) => string;\n  }\n}\n"]}