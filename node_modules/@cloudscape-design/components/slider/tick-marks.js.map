{"version":3,"file":"tick-marks.js","sourceRoot":"","sources":["../../../src/slider/tick-marks.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,cAAc,MAAM,sDAAsD,CAAC;AAClF,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAE1C,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAmBrC,SAAS,QAAQ,CAAC,KAA0B;IAC1C,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAE5G,MAAM,WAAW,GAAG,OAAO,IAAI,CAAC,OAAO,CAAC;IAExC,MAAM,OAAO,GAAG,GAAG,EAAE;QACnB,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,OAAO,GAAG,CAAC;SACZ;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;IAEF,OAAO,CACL,6BACE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YAC3B,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,IAAI,KAAK,GAAG,OAAO,EAAE;YACnD,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,IAAI,QAAQ,IAAI,KAAK,GAAG,OAAO,EAAE;YAC/D,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,YAAY,IAAI,KAAK,GAAG,OAAO,EAAE;YAC7D,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,WAAW,IAAI,CAAC,YAAY,IAAI,KAAK,GAAG,OAAO,EAAE;YACnE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,OAAO,IAAI,QAAQ,IAAI,CAAC,YAAY,IAAI,KAAK,GAAG,OAAO,EAAE;YACnF,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,WAAW,IAAI,QAAQ,IAAI,CAAC,YAAY,IAAI,KAAK,GAAG,OAAO,EAAE;YACzF,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ;YAC3B,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ;YAC3B,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,MAAM;SACjC,CAAC,GACF,CACH,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,eAAe,CAAC,KAAuB;IAC7D,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAEjC,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,eAAe,CAAC;QACrC,oBAAC,QAAQ,oBAAK,KAAK,IAAE,IAAI,EAAC,KAAK,IAAG;QAClC,6BACE,SAAS,EAAE,MAAM,CAAC,KAAK,EACvB,KAAK,EAAE;gBACL,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;aACjE,IAEA,YAAY,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CACnD,oBAAC,QAAQ,oBAAK,KAAK,IAAE,IAAI,EAAC,MAAM,EAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,KAAK,EAAE,IAAI,CACtE,CAAC,CACE;QACN,oBAAC,QAAQ,oBAAK,KAAK,IAAE,IAAI,EAAC,KAAK,IAAG,CAC9B,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { getStepArray } from './utils.js';\n\nimport styles from './styles.css.js';\n\nexport interface SliderTicksProps {\n  hideFillLine?: boolean;\n  value: number;\n  isActive: boolean;\n  invalid?: boolean;\n  warning?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  min: number;\n  max: number;\n  step: number;\n}\n\nexport interface SliderTickMarkProps extends SliderTicksProps {\n  type: 'min' | 'max' | 'step';\n}\n\nfunction TickMark(props: SliderTickMarkProps) {\n  const { hideFillLine, value, isActive, invalid, warning, disabled, type, min, max, step, readOnly } = props;\n\n  const showWarning = warning && !invalid;\n\n  const getType = () => {\n    if (type === 'min') {\n      return min;\n    }\n    if (type === 'max') {\n      return max;\n    }\n    return step;\n  };\n\n  return (\n    <div\n      className={clsx(styles.tick, {\n        [styles.filled]: !hideFillLine && value > getType(),\n        [styles.active]: !hideFillLine && isActive && value > getType(),\n        [styles.error]: invalid && !hideFillLine && value > getType(),\n        [styles.warning]: showWarning && !hideFillLine && value > getType(),\n        [styles['error-active']]: invalid && isActive && !hideFillLine && value > getType(),\n        [styles['warning-active']]: showWarning && isActive && !hideFillLine && value > getType(),\n        [styles.disabled]: disabled,\n        [styles.readonly]: readOnly,\n        [styles.middle]: type === 'step',\n      })}\n    />\n  );\n}\n\nexport default function SliderTickMarks(props: SliderTicksProps) {\n  const { min, max, step } = props;\n\n  return (\n    <div className={styles['ticks-wrapper']}>\n      <TickMark {...props} type=\"min\" />\n      <div\n        className={styles.ticks}\n        style={{\n          [customCssProps.sliderTickCount]: Math.round((max - min) / step),\n        }}\n      >\n        {getStepArray(step, [min, max]).map((step, index) => (\n          <TickMark {...props} type=\"step\" step={step} key={`step-${index}`} />\n        ))}\n      </div>\n      <TickMark {...props} type=\"max\" />\n    </div>\n  );\n}\n"]}