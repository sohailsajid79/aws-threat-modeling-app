{"version":3,"file":"item.js","sourceRoot":"","sources":["../../../../src/select/parts/item.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport InternalIcon from '../../icon/internal.js';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\nimport Option from '../../internal/components/option';\nimport { DropdownOption, OptionDefinition } from '../../internal/components/option/interfaces';\nimport { HighlightType } from '../../internal/components/options-list/utils/use-highlight-option.js';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport Tooltip from '../../internal/components/tooltip';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\n\nimport styles from './styles.css.js';\n\nexport interface ItemProps {\n  option: DropdownOption;\n  highlighted?: boolean;\n  selected?: boolean;\n  filteringValue?: string;\n  hasCheckbox?: boolean;\n  virtualPosition?: number;\n  padBottom?: boolean;\n  isNextSelected?: boolean;\n  screenReaderContent?: string;\n  ariaPosinset?: number;\n  ariaSetsize?: number;\n  highlightType?: HighlightType['type'];\n}\n\nconst Item = (\n  {\n    option,\n    highlighted,\n    selected,\n    filteringValue,\n    hasCheckbox,\n    virtualPosition,\n    padBottom,\n    isNextSelected,\n    screenReaderContent,\n    ariaPosinset,\n    ariaSetsize,\n    highlightType,\n    ...restProps\n  }: ItemProps,\n  ref: React.Ref<HTMLDivElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n\n  const isParent = option.type === 'parent';\n  const isChild = option.type === 'child';\n  const wrappedOption: OptionDefinition = option.option;\n  const disabled = option.disabled || wrappedOption.disabled;\n  const disabledReason = disabled && wrappedOption.disabledReason ? wrappedOption.disabledReason : '';\n  const isDisabledWithReason = !!disabledReason;\n  const internalRef = useRef<HTMLDivElement>(null);\n\n  const { descriptionEl, descriptionId } = useHiddenDescription(disabledReason);\n\n  return (\n    <SelectableItem\n      ariaSelected={Boolean(selected)}\n      selected={selected}\n      isNextSelected={isNextSelected}\n      highlighted={highlighted}\n      disabled={option.disabled}\n      isParent={isParent}\n      isChild={isChild}\n      ref={useMergeRefs(ref, internalRef)}\n      virtualPosition={virtualPosition}\n      padBottom={padBottom}\n      screenReaderContent={screenReaderContent}\n      ariaPosinset={ariaPosinset}\n      ariaSetsize={ariaSetsize}\n      highlightType={highlightType}\n      ariaDescribedby={isDisabledWithReason ? descriptionId : ''}\n      value={option.option.value}\n      {...baseProps}\n    >\n      <div className={clsx(styles.item, !isParent && wrappedOption.labelTag && styles['show-label-tag'])}>\n        {hasCheckbox && !isParent && (\n          <div className={styles.checkbox}>\n            <CheckboxIcon checked={selected || false} disabled={option.disabled} />\n          </div>\n        )}\n        <Option\n          option={{ ...wrappedOption, disabled }}\n          highlightedOption={highlighted}\n          selectedOption={selected}\n          highlightText={filteringValue}\n          isGroupOption={isParent}\n        />\n        {!hasCheckbox && !isParent && selected && (\n          <div className={styles['selected-icon']}>\n            <InternalIcon name=\"check\" />\n          </div>\n        )}\n        {isDisabledWithReason && (\n          <>\n            {descriptionEl}\n            {highlighted && (\n              <Tooltip\n                className={styles['disabled-reason-tooltip']}\n                trackRef={internalRef}\n                value={disabledReason!}\n                position=\"right\"\n                hideOnOverscroll={true}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </SelectableItem>\n  );\n};\n\nexport default React.memo(React.forwardRef(Item));\n"]}