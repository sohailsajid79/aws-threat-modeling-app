{"version":3,"file":"embedded.js","sourceRoot":"","sources":["../../../src/multiselect/embedded.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,cAAc,MAAM,wCAAwC,CAAC;AACpE,OAAO,gBAAgB,MAAM,0CAA0C,CAAC;AACxE,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAE9D,OAAO,SAAS,MAAM,4BAA4B,CAAC;AACnD,OAAO,WAAW,MAAM,8BAA8B,CAAC;AAEvD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAyBrC,MAAM,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAC1C,CACE,EAS2B,EAC3B,WAA4C,EAC5C,EAAE;;QAXF,EACE,OAAO,EACP,aAAa,EACb,SAAS,EACT,eAAe,EACf,iBAAiB,EACjB,aAAa,EACb,aAAa,GAAG,EAAE,OAEO,EADtB,SAAS,cARd,mHASC,CADa;IAId,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;IACxD,MAAM,WAAW,GAAG,WAAW,CAAC,wBAAwB,CAAC,CAAC;IAC1D,MAAM,QAAQ,GAAG,WAAW,CAAC,qBAAqB,CAAC,CAAC;IACpD,MAAM,aAAa,GAAG,WAAW,CAAC,sBAAsB,CAAC,CAAC;IAC1D,MAAM,SAAS,GAAG,MAAA,gBAAgB,CAAC,SAAS,mCAAI,aAAa,CAAC;IAE9D,MAAM,gBAAgB,GAAG,cAAc,iBACrC,OAAO;QACP,eAAe;QACf,aAAa,EACb,QAAQ,EAAE,KAAK,EACf,iBAAiB;QACjB,SAAS;QACT,WAAW;QACX,QAAQ,EACR,cAAc,EAAE,aAAa,EAC7B,WAAW,EACX,QAAQ,EAAE,IAAI,EACd,QAAQ,EAAE,IAAI,IACX,SAAS,EACZ,CAAC;IAEH,MAAM,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;IAC9D,MAAM,MAAM,GAAG,gBAAgB,CAAC,cAAc,CAAC;IAE/C,OAAO,CACL,6BACE,IAAI,EAAC,OAAO,EACZ,SAAS,EAAE,MAAM,CAAC,QAAQ,qBACT,WAAW,sBACV,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;QAEvD,oBAAC,aAAa,IACZ,SAAS,EAAE,gBAAgB,CAAC,YAAY,EAAE,EAC1C,cAAc,EAAE,gBAAgB,CAAC,cAAc,EAC/C,eAAe,EAAE,gBAAgB,CAAC,eAAe,EACjD,cAAc,EAAE,aAAa,EAC7B,GAAG,EAAE,gBAAgB,CAAC,aAAa,EACnC,iBAAiB,EAAE,MAAM,CAAC,OAAO,KAAK,IAAI,EAC1C,UAAU,EAAE,IAAI,EAChB,oBAAoB,EAAE,IAAI,EAC1B,mBAAmB,EAAE,gBAAgB,CAAC,YAAY,EAClD,aAAa,EAAE,gBAAgB,CAAC,aAAa,GAC7C;QAED,MAAM,CAAC,OAAO,IAAI,oBAAC,cAAc,IAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,EAAE,EAAE,QAAQ,GAAI;QAE5E,oBAAC,gBAAgB,IAAC,EAAE,EAAE,WAAW,IAAG,SAAS,CAAoB,CAC7D,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,mBAAmB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useFormFieldContext } from '../contexts/form-field';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { SomeRequired } from '../internal/types';\nimport PlainList from '../select/parts/plain-list';\nimport VirtualList from '../select/parts/virtual-list';\nimport { MultiselectProps } from './interfaces';\nimport { useMultiselect } from './use-multiselect';\n\nimport styles from './styles.css.js';\n\nexport type EmbeddedMultiselectProps = SomeRequired<\n  Pick<\n    MultiselectProps,\n    | 'options'\n    | 'selectedOptions'\n    | 'ariaLabel'\n    | 'filteringType'\n    | 'deselectAriaLabel'\n    | 'virtualScroll'\n    | 'statusType'\n    | 'controlId'\n    | 'onChange'\n    | 'onLoadItems'\n    | 'loadingText'\n    | 'finishedText'\n    | 'errorText'\n    | 'recoveryText'\n    | 'empty'\n    | 'noMatch'\n  >,\n  'options' | 'selectedOptions' | 'filteringType' | 'statusType'\n> & { filteringText?: string };\n\nconst EmbeddedMultiselect = React.forwardRef(\n  (\n    {\n      options,\n      filteringType,\n      ariaLabel,\n      selectedOptions,\n      deselectAriaLabel,\n      virtualScroll,\n      filteringText = '',\n      ...restProps\n    }: EmbeddedMultiselectProps,\n    externalRef: React.Ref<MultiselectProps.Ref>\n  ) => {\n    const formFieldContext = useFormFieldContext(restProps);\n    const ariaLabelId = useUniqueId('multiselect-ariaLabel-');\n    const footerId = useUniqueId('multiselect-footer-');\n    const selfControlId = useUniqueId('multiselect-trigger-');\n    const controlId = formFieldContext.controlId ?? selfControlId;\n\n    const multiselectProps = useMultiselect({\n      options,\n      selectedOptions,\n      filteringType,\n      disabled: false,\n      deselectAriaLabel,\n      controlId,\n      ariaLabelId,\n      footerId,\n      filteringValue: filteringText,\n      externalRef,\n      keepOpen: true,\n      embedded: true,\n      ...restProps,\n    });\n\n    const ListComponent = virtualScroll ? VirtualList : PlainList;\n    const status = multiselectProps.dropdownStatus;\n\n    return (\n      <div\n        role=\"group\"\n        className={styles.embedded}\n        aria-labelledby={ariaLabelId}\n        aria-describedby={status.content ? footerId : undefined}\n      >\n        <ListComponent\n          menuProps={multiselectProps.getMenuProps()}\n          getOptionProps={multiselectProps.getOptionProps}\n          filteredOptions={multiselectProps.filteredOptions}\n          filteringValue={filteringText}\n          ref={multiselectProps.scrollToIndex}\n          hasDropdownStatus={status.content !== null}\n          checkboxes={true}\n          useInteractiveGroups={true}\n          screenReaderContent={multiselectProps.announcement}\n          highlightType={multiselectProps.highlightType}\n        />\n\n        {status.content && <DropdownFooter content={status.content} id={footerId} />}\n\n        <ScreenreaderOnly id={ariaLabelId}>{ariaLabel}</ScreenreaderOnly>\n      </div>\n    );\n  }\n);\n\nexport default EmbeddedMultiselect;\n"]}