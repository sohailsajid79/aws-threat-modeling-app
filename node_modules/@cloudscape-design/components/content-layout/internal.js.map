{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/content-layout/internal.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useCurrentMode } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalGrid from '../grid/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport customCssProps from '../internal/generated/custom-css-properties';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { highContrastHeaderClassName } from '../internal/utils/content-header-utils';\nimport { ContentLayoutProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\n\ntype InternalContentLayoutProps = ContentLayoutProps & InternalBaseComponentProps;\n\nconst halfGeckoMaxCssLength = ((1 << 30) - 1) / 120;\n// CSS lengths in Gecko are limited to at most (1<<30)-1 app units (Gecko uses 60 as app unit).\n// Limit the maxContentWidth to the half of the upper boundary (â‰ˆ4230^2) to be on the safe side.\n\nexport default function InternalContentLayout({\n  children,\n  disableOverlap,\n  header,\n  headerVariant = 'default',\n  headerBackgroundStyle,\n  __internalRootRef,\n  maxContentWidth = Number.MAX_VALUE,\n  breadcrumbs,\n  notifications,\n  defaultPadding,\n  secondaryHeader,\n  ...rest\n}: InternalContentLayoutProps) {\n  const mainRef = useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(mainRef, __internalRootRef);\n\n  const baseProps = getBaseProps(rest);\n\n  const isVisualRefresh = useVisualRefresh();\n  const mode = useCurrentMode(mainRef);\n\n  const overlapElement = useDynamicOverlap();\n\n  const isOverlapDisabled = !children || disableOverlap;\n\n  const contentHeaderClassName =\n    headerVariant === 'high-contrast' && isVisualRefresh ? highContrastHeaderClassName : '';\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.layout, {\n        [styles['is-overlap-disabled']]: isOverlapDisabled,\n        [styles['is-visual-refresh']]: isVisualRefresh,\n        [styles['has-header']]: !!header,\n        [styles['default-padding']]: !!defaultPadding,\n        [styles['has-notifications']]: !!notifications,\n      })}\n      style={{\n        [customCssProps.contentLayoutMaxContentWidth]:\n          maxContentWidth < Number.MAX_VALUE ? `${maxContentWidth}px` : `${halfGeckoMaxCssLength}px`,\n      }}\n      ref={mergedRef}\n    >\n      <div\n        className={clsx(\n          styles.background,\n          { [styles['has-default-background']]: !headerBackgroundStyle },\n          contentHeaderClassName\n        )}\n        ref={overlapElement}\n      >\n        {headerBackgroundStyle && (\n          <div\n            className={styles['header-background']}\n            style={{\n              background:\n                typeof headerBackgroundStyle === 'function' ? headerBackgroundStyle(mode) : headerBackgroundStyle,\n            }}\n          />\n        )}\n      </div>\n      {notifications && (\n        <div className={clsx(styles.notifications, testutilStyles.notifications, contentHeaderClassName)}>\n          {notifications}\n        </div>\n      )}\n      {breadcrumbs && (\n        <div className={clsx(styles.breadcrumbs, testutilStyles.breadcrumbs, contentHeaderClassName)}>\n          {breadcrumbs}\n        </div>\n      )}\n      {header && !secondaryHeader && (\n        <div\n          className={clsx(styles['header-wrapper'], testutilStyles.header, contentHeaderClassName, {\n            [styles['with-divider']]: headerVariant === 'divider',\n          })}\n        >\n          {header}\n        </div>\n      )}\n      {header && secondaryHeader && (\n        <div\n          className={clsx(styles['header-wrapper'], {\n            [styles['with-divider']]: headerVariant === 'divider',\n          })}\n        >\n          <InternalGrid gridDefinition={[{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }]}>\n            <div className={clsx(testutilStyles.header, contentHeaderClassName)}>{header}</div>\n            <div className={testutilStyles['secondary-header']}>{secondaryHeader}</div>\n          </InternalGrid>\n        </div>\n      )}\n\n      <div\n        className={clsx(styles.content, {\n          [styles['with-divider']]: headerVariant === 'divider',\n        })}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n"]}