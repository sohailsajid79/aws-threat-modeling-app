import { jsx as _jsx } from "react/jsx-runtime";
import { useCallback } from 'react';
import NewPasswordView from '../NewPasswordView';
const NewPassword = ({ onMFARequired, onMFASelection, onMFASetup, resetView, cognitoUser, userAttributes, requiredAttributes, }) => {
    const handleChangePassword = useCallback(async (data) => {
        return new Promise((resolve, reject) => {
            return cognitoUser.completeNewPasswordChallenge(data.password, data.attributes, {
                onSuccess(result) {
                    resolve(result);
                    resetView();
                },
                onFailure(err) {
                    reject(err);
                },
                mfaSetup(challengeName, challengeParams) {
                    onMFASetup(cognitoUser, challengeName, challengeParams);
                    resolve({});
                },
                selectMFAType(challengeName, challengeParams) {
                    onMFASelection(cognitoUser, challengeName, challengeParams);
                    resolve({});
                },
                mfaRequired(challengeName, challengeParams) {
                    onMFARequired(cognitoUser, challengeName, challengeParams);
                    resolve({});
                },
                totpRequired(challengeName, challengeParams) {
                    onMFARequired(cognitoUser, challengeName, challengeParams);
                    resolve({});
                },
            });
        });
    }, [onMFARequired, resetView, cognitoUser, onMFASetup, onMFASelection]);
    return (_jsx(NewPasswordView, { userAttributes: userAttributes, requiredAttributes: requiredAttributes, onChangePassword: handleChangePassword, onBackToSignIn: resetView }));
};
export default NewPassword;
