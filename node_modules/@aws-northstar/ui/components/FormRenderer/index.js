import { jsx as _jsx } from "react/jsx-runtime";
import { FormRenderer as ReactFormRenderer, } from '@data-driven-forms/react-form-renderer';
import validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';
import { componentTypes } from './types';
import { FormRendererContext } from './formRendererContext';
import basicComponentMapper from './componentMapper';
import FormTemplate from './components/FormTemplate';
/**
 * FormRenderer converts JSON form definitions into fully functional React forms.
 * <br/>
 * It leverages [Data Driven Form](https://data-driven-forms.org/) with customer component mappings to use Cloudscape form controls.
 */
const FormRenderer = ({ schema, validatorMapper, onSubmit, onCancel, isSubmitting, errorText, initialValues, subscription, customComponentWrapper, ...rest }) => {
    return (_jsx(FormRendererContext.Provider, { value: { isSubmitting, errorText }, children: _jsx(ReactFormRenderer, { ...rest, componentMapper: { ...basicComponentMapper, ...customComponentWrapper }, FormTemplate: FormTemplate, validatorMapper: validatorMapper, schema: schema, onSubmit: onSubmit, onCancel: onCancel, subscription: subscription, initialValues: initialValues }) }));
};
export default FormRenderer;
export { componentTypes, validatorTypes };
