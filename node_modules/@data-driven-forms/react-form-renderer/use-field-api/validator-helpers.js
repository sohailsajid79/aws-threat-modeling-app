"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prepareValidator = exports.prepareArrayValidator = exports.getValidate = exports.convertToWarning = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _helpers = require("../common/helpers");

var _validatorFunctions = require("../validators/validator-functions");

var _composeValidators = _interopRequireDefault(require("../compose-validators"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var convertToWarning = function convertToWarning(validator) {
  return function () {
    return {
      type: 'warning',
      error: validator.apply(void 0, arguments)
    };
  };
};

exports.convertToWarning = convertToWarning;

var prepareValidator = function prepareValidator(validator, mapper) {
  if (typeof validator === 'function') {
    return (0, _helpers.memoize)(validator);
  }

  if (validator.warning) {
    return convertToWarning(mapper[validator.type](_objectSpread({}, validator)));
  }

  return mapper[validator.type](_objectSpread({}, validator));
};

exports.prepareValidator = prepareValidator;

var getValidate = function getValidate(validate, dataType) {
  var mapper = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  return [].concat((0, _toConsumableArray2["default"])(validate ? validate.map(function (validator) {
    return prepareValidator(validator, mapper);
  }) : []), (0, _toConsumableArray2["default"])(dataType ? [(0, _validatorFunctions.dataTypeValidator)(dataType)()] : []));
};

exports.getValidate = getValidate;

var prepareArrayValidator = function prepareArrayValidator(validation) {
  return function () {
    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    if (!Array.isArray(value)) {
      return;
    }

    var arrayValidator = (0, _composeValidators["default"])(validation);
    var result = arrayValidator(value && value.length > 0 ? value : undefined);

    if (typeof result === 'function') {
      result = result(value);
    }

    return result;
  };
};

exports.prepareArrayValidator = prepareArrayValidator;