{"version":3,"file":"DefaultLinkModel.js","sourceRoot":"","sources":["../../src/link/DefaultLinkModel.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tDiagramEngine,\n\tLabelModel,\n\tLinkModel,\n\tLinkModelGenerics,\n\tLinkModelListener,\n\tPortModel,\n\tPortModelAlignment\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLabelModel } from '../label/DefaultLabelModel';\nimport { BezierCurve } from '@projectstorm/geometry';\nimport { BaseEntityEvent, BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\n\twidth?: number;\n\tcolor?: string;\n\tselectedColor?: string;\n\tcurvyness?: number;\n\ttype?: string;\n\ttestName?: string;\n}\n\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\n\tLISTENER: DefaultLinkModelListener;\n\tOPTIONS: DefaultLinkModelOptions;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelGenerics> {\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\twidth: options.width || 3,\n\t\t\tcolor: options.color || 'gray',\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\n\t\t\tcurvyness: 50,\n\t\t\t...options\n\t\t});\n\t}\n\n\tcalculateControlOffset(port: PortModel): [number, number] {\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\n\t\t\treturn [this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\n\t\t\treturn [-this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\n\t\t\treturn [0, -this.options.curvyness];\n\t\t}\n\t\treturn [0, this.options.curvyness];\n\t}\n\n\tgetSVGPath(): string {\n\t\tif (this.points.length == 2) {\n\t\t\tconst curve = new BezierCurve();\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\n\n\t\t\tif (this.sourcePort) {\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\n\t\t\t}\n\n\t\t\tif (this.targetPort) {\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\n\t\t\t}\n\t\t\treturn curve.getSVGCurve();\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\twidth: this.options.width,\n\t\t\tcolor: this.options.color,\n\t\t\tcurvyness: this.options.curvyness,\n\t\t\tselectedColor: this.options.selectedColor\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.color = event.data.color;\n\t\tthis.options.width = event.data.width;\n\t\tthis.options.curvyness = event.data.curvyness;\n\t\tthis.options.selectedColor = event.data.selectedColor;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n"]}