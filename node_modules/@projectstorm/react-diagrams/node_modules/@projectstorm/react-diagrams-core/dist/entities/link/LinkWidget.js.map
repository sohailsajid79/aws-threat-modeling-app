{"version":3,"file":"LinkWidget.js","sourceRoot":"","sources":["../../../src/entities/link/LinkWidget.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DiagramEngine } from '../../DiagramEngine';\nimport { LinkModel } from './LinkModel';\nimport { PointModel } from './PointModel';\nimport _map from 'lodash/map';\nimport { LabelWidget } from '../label/LabelWidget';\nimport { BaseEntityEvent, BasePositionModel, ListenerHandle, PeformanceWidget } from '@projectstorm/react-canvas-core';\nimport { PortModel } from '../port/PortModel';\n\nexport interface LinkProps {\n\tlink: LinkModel;\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface LinkState {\n\tsourcePort: PortModel;\n\ttargetPort: PortModel;\n}\n\nexport class LinkWidget extends React.Component<LinkProps, LinkState> {\n\tsourceListener: ListenerHandle;\n\ttargetListener: ListenerHandle;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsourcePort: null,\n\t\t\ttargetPort: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tif (this.sourceListener) {\n\t\t\tthis.sourceListener.deregister();\n\t\t}\n\t\tif (this.targetListener) {\n\t\t\tthis.targetListener.deregister();\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps: LinkProps, prevState: LinkState): LinkState {\n\t\treturn {\n\t\t\tsourcePort: nextProps.link.getSourcePort(),\n\t\t\ttargetPort: nextProps.link.getTargetPort()\n\t\t};\n\t}\n\n\tinstallTarget() {\n\t\tthis.targetListener && this.targetListener.deregister();\n\n\t\tif (!this.props.link.getTargetPort()) return;\n\t\tthis.targetListener = this.props.link.getTargetPort().registerListener({\n\t\t\treportInitialPosition: (event: BaseEntityEvent<BasePositionModel>) => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\t}\n\n\tinstallSource() {\n\t\tthis.sourceListener && this.sourceListener.deregister();\n\n\t\tif (!this.props.link.getSourcePort()) return;\n\t\tthis.sourceListener = this.props.link.getSourcePort().registerListener({\n\t\t\treportInitialPosition: (event: BaseEntityEvent<BasePositionModel>) => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<LinkProps>, prevState: Readonly<LinkState>, snapshot) {\n\t\tif (prevState.sourcePort !== this.state.sourcePort) {\n\t\t\tthis.installSource();\n\t\t}\n\t\tif (prevState.targetPort !== this.state.targetPort) {\n\t\t\tthis.installTarget();\n\t\t}\n\t}\n\n\tpublic static generateLinePath(firstPoint: PointModel, lastPoint: PointModel): string {\n\t\treturn `M${firstPoint.getX()},${firstPoint.getY()} L ${lastPoint.getX()},${lastPoint.getY()}`;\n\t}\n\n\tcomponentDidMount(): void {\n\t\tif (this.props.link.getSourcePort()) {\n\t\t\tthis.installSource();\n\t\t}\n\t\tif (this.props.link.getTargetPort()) {\n\t\t\tthis.installTarget();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { link } = this.props;\n\n\t\t// only draw the link when we have reported positions\n\t\tif (link.getSourcePort() && !link.getSourcePort().reportedPosition) {\n\t\t\treturn null;\n\t\t}\n\t\tif (link.getTargetPort() && !link.getTargetPort().reportedPosition) {\n\t\t\treturn null;\n\t\t}\n\n\t\t//generate links\n\t\treturn (\n\t\t\t<PeformanceWidget model={this.props.link} serialized={this.props.link.serialize()}>\n\t\t\t\t{() => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<g data-linkid={this.props.link.getID()}>\n\t\t\t\t\t\t\t{this.props.diagramEngine.generateWidgetForLink(link)}\n\t\t\t\t\t\t\t{_map(this.props.link.getLabels(), (labelModel, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<LabelWidget\n\t\t\t\t\t\t\t\t\t\tkey={labelModel.getID()}\n\t\t\t\t\t\t\t\t\t\tengine={this.props.diagramEngine}\n\t\t\t\t\t\t\t\t\t\tlabel={labelModel}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</g>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</PeformanceWidget>\n\t\t);\n\t}\n}\n"]}