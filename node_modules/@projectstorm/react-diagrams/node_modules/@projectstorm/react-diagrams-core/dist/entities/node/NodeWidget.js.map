{"version":3,"file":"NodeWidget.js","sourceRoot":"","sources":["../../../src/entities/node/NodeWidget.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AAGtC,OAAO,EAA8C,gBAAgB,EAAE,MAAM,iCAAiC,CAAC;AAC/G,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,cAAc,MAAM,0BAA0B,CAAC;AAQtD,IAAU,CAAC,CASV;AATD,WAAU,CAAC;IACG,MAAI,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;EAO7B,CAAC;AACH,CAAC,EATS,CAAC,KAAD,CAAC,QASV;AAED,MAAM,OAAO,UAAW,SAAQ,KAAK,CAAC,SAAoB;IAKzD,YAAY,KAAgB;QAC3B,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;IAED,oBAAoB;;QACnB,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QAEf,MAAA,IAAI,CAAC,QAAQ,0CAAE,UAAU,EAAE,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,kBAAkB,CAAC,SAA8B,EAAE,SAAwB,EAAE,QAAc;QAC1F,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAE;YACxD,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC3B,IAAI,CAAC,wBAAwB,EAAE,CAAC;SAChC;IACF,CAAC;IAED,wBAAwB;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAChD,gBAAgB,EAAE,CAAC,KAA2D,EAAE,EAAE;gBACjF,IAAI,CAAC,WAAW,EAAE,CAAC;YACpB,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,KAAa,EAAE,MAAc;QACvC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAEpD,6BAA6B;QAC7B,IAAI;YACH,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE;gBAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;SACH;QAAC,OAAO,EAAE,EAAE,GAAE;IAChB,CAAC;IAED,iBAAiB;QAChB,aAAa;QACb,IAAI,CAAC,EAAE,GAAG,IAAI,cAAc,CAAC,CAAC,QAAQ,EAAE,EAAE;YACzC,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC;QACnD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACjC,CAAC;IAED,MAAM;QACL,OAAO,CACN,oBAAC,gBAAgB,IAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAC/E,GAAG,EAAE;YACL,OAAO,CACN,oBAAC,CAAC,CAAC,IAAI,IACN,SAAS,EAAC,MAAM,EAChB,GAAG,EAAE,IAAI,CAAC,GAAG,iBACA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,EACpC,KAAK,EAAE;oBACN,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;oBAC3B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;iBAC5B,IAEA,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CACxD,CACT,CAAC;QACH,CAAC,CACiB,CACnB,CAAC;IACH,CAAC;CACD","sourcesContent":["import * as React from 'react';\nimport _forEach from 'lodash/forEach';\nimport { DiagramEngine } from '../../DiagramEngine';\nimport { NodeModel } from './NodeModel';\nimport { BaseEntityEvent, BaseModel, ListenerHandle, PeformanceWidget } from '@projectstorm/react-canvas-core';\nimport styled from '@emotion/styled';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface NodeProps {\n\tnode: NodeModel;\n\tchildren?: any;\n\tdiagramEngine: DiagramEngine;\n}\n\nnamespace S {\n\texport const Node = styled.div`\n\t\tposition: absolute;\n\t\t-webkit-touch-callout: none; /* iOS Safari */\n\t\t-webkit-user-select: none; /* Chrome/Safari/Opera */\n\t\tuser-select: none;\n\t\tcursor: move;\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class NodeWidget extends React.Component<NodeProps> {\n\tob: any;\n\tref: React.RefObject<HTMLDivElement>;\n\tlistener: ListenerHandle;\n\n\tconstructor(props: NodeProps) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.ob.disconnect();\n\t\tthis.ob = null;\n\n\t\tthis.listener?.deregister();\n\t\tthis.listener = null;\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<NodeProps>, prevState: Readonly<any>, snapshot?: any): void {\n\t\tif (this.listener && this.props.node !== prevProps.node) {\n\t\t\tthis.listener.deregister();\n\t\t\tthis.installSelectionListener();\n\t\t}\n\t}\n\n\tinstallSelectionListener() {\n\t\tthis.listener = this.props.node.registerListener({\n\t\t\tselectionChanged: (event: BaseEntityEvent<BaseModel> & { isSelected: boolean }) => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateSize(width: number, height: number) {\n\t\tthis.props.node.updateDimensions({ width, height });\n\n\t\t//now mark the links as dirty\n\t\ttry {\n\t\t\t_forEach(this.props.node.getPorts(), (port) => {\n\t\t\t\tport.updateCoords(this.props.diagramEngine.getPortCoords(port));\n\t\t\t});\n\t\t} catch (ex) {}\n\t}\n\n\tcomponentDidMount(): void {\n\t\t// @ts-ignore\n\t\tthis.ob = new ResizeObserver((entities) => {\n\t\t\tconst bounds = entities[0].contentRect;\n\t\t\tthis.updateSize(bounds.width, bounds.height);\n\t\t});\n\n\t\tconst b = this.ref.current.getBoundingClientRect();\n\t\tthis.updateSize(b.width, b.height);\n\t\tthis.ob.observe(this.ref.current);\n\t\tthis.installSelectionListener();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<PeformanceWidget model={this.props.node} serialized={this.props.node.serialize()}>\n\t\t\t\t{() => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<S.Node\n\t\t\t\t\t\t\tclassName=\"node\"\n\t\t\t\t\t\t\tref={this.ref}\n\t\t\t\t\t\t\tdata-nodeid={this.props.node.getID()}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: this.props.node.getY(),\n\t\t\t\t\t\t\t\tleft: this.props.node.getX()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.diagramEngine.generateWidgetForNode(this.props.node)}\n\t\t\t\t\t\t</S.Node>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</PeformanceWidget>\n\t\t);\n\t}\n}\n"]}