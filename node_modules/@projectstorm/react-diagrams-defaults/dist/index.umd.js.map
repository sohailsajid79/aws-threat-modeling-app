{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://projectstorm/react-diagrams-defaults/webpack/universalModuleDefinition","webpack://projectstorm/react-diagrams-defaults/./src/index.ts","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelModel.tsx","webpack://projectstorm/react-diagrams-defaults/./src/label/DefaultLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkPointWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkSegmentWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/link/DefaultLinkWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeModel.ts","webpack://projectstorm/react-diagrams-defaults/./src/node/DefaultNodeWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortFactory.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortLabelWidget.tsx","webpack://projectstorm/react-diagrams-defaults/./src/port/DefaultPortModel.ts","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@emotion/react\"","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@emotion/styled\"","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@projectstorm/geometry\"","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@projectstorm/react-canvas-core\"","webpack://projectstorm/react-diagrams-defaults/external commonjs \"@projectstorm/react-diagrams-core\"","webpack://projectstorm/react-diagrams-defaults/external commonjs \"lodash\"","webpack://projectstorm/react-diagrams-defaults/external commonjs \"react\"","webpack://projectstorm/react-diagrams-defaults/webpack/bootstrap","webpack://projectstorm/react-diagrams-defaults/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-diagrams-defaults\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-diagrams-defaults\"] = factory();\n})(self, () => {\nreturn ","export * from './label/DefaultLabelFactory';\nexport * from './label/DefaultLabelModel';\nexport * from './label/DefaultLabelWidget';\n\nexport * from './link/DefaultLinkFactory';\nexport * from './link/DefaultLinkModel';\nexport * from './link/DefaultLinkWidget';\nexport * from './link/DefaultLinkSegmentWidget';\nexport * from './link/DefaultLinkPointWidget';\n\nexport * from './node/DefaultNodeFactory';\nexport * from './node/DefaultNodeModel';\nexport * from './node/DefaultNodeWidget';\n\nexport * from './port/DefaultPortFactory';\nexport * from './port/DefaultPortLabelWidget';\nexport * from './port/DefaultPortModel';\n","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport { DefaultLabelWidget } from './DefaultLabelWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLabelFactory extends AbstractReactFactory<DefaultLabelModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLabelWidget model={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultLabelModel {\n\t\treturn new DefaultLabelModel();\n\t}\n}\n","import { DiagramEngine, LabelModel, LabelModelGenerics, LabelModelOptions } from '@projectstorm/react-diagrams-core';\nimport { DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLabelModelOptions extends LabelModelOptions {\n\tlabel?: string;\n}\n\nexport interface DefaultLabelModelGenerics extends LabelModelGenerics {\n\tOPTIONS: DefaultLabelModelOptions;\n}\n\nexport class DefaultLabelModel extends LabelModel<DefaultLabelModelGenerics> {\n\tconstructor(options: DefaultLabelModelOptions = {}) {\n\t\tsuper({\n\t\t\toffsetY: options.offsetY == null ? -23 : options.offsetY,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.options.label = label;\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLabelModel } from './DefaultLabelModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLabelWidgetProps {\n\tmodel: DefaultLabelModel;\n}\n\nnamespace S {\n\texport const Label = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.8);\n\t\tborder-radius: 5px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tpadding: 4px 8px;\n\t\tfont-family: sans-serif;\n\t\tuser-select: none;\n\t`;\n}\n\nexport class DefaultLabelWidget extends React.Component<DefaultLabelWidgetProps> {\n\trender() {\n\t\treturn <S.Label>{this.props.model.getOptions().label}</S.Label>;\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkWidget } from './DefaultLinkWidget';\nimport styled from '@emotion/styled';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { css, keyframes } from '@emotion/react';\n\nnamespace S {\n\texport const Keyframes = keyframes`\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n\n\tconst selected = css`\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${Keyframes} 1s linear infinite;\n\t`;\n\n\texport const Path = styled.path<{ selected: boolean }>`\n\t\t${(p) => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: auto;\n\t`;\n}\n\nexport class DefaultLinkFactory<Link extends DefaultLinkModel = DefaultLinkModel> extends AbstractReactFactory<\n\tLink,\n\tDiagramEngine\n> {\n\tconstructor(type = 'default') {\n\t\tsuper(type);\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultLinkWidget link={event.model} diagramEngine={this.engine} />;\n\t}\n\n\tgenerateModel(event): Link {\n\t\treturn new DefaultLinkModel() as Link;\n\t}\n\n\tgenerateLinkSegment(model: Link, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<S.Path\n\t\t\t\tselected={selected}\n\t\t\t\tstroke={selected ? model.getOptions().selectedColor : model.getOptions().color}\n\t\t\t\tstrokeWidth={model.getOptions().width}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import {\n\tDiagramEngine,\n\tLabelModel,\n\tLinkModel,\n\tLinkModelGenerics,\n\tLinkModelListener,\n\tPortModel,\n\tPortModelAlignment\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLabelModel } from '../label/DefaultLabelModel';\nimport { BezierCurve } from '@projectstorm/geometry';\nimport { BaseEntityEvent, BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\n\twidth?: number;\n\tcolor?: string;\n\tselectedColor?: string;\n\tcurvyness?: number;\n\ttype?: string;\n\ttestName?: string;\n}\n\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\n\tLISTENER: DefaultLinkModelListener;\n\tOPTIONS: DefaultLinkModelOptions;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelGenerics> {\n\tconstructor(options: DefaultLinkModelOptions = {}) {\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\twidth: options.width || 3,\n\t\t\tcolor: options.color || 'gray',\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\n\t\t\tcurvyness: 50,\n\t\t\t...options\n\t\t});\n\t}\n\n\tcalculateControlOffset(port: PortModel): [number, number] {\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\n\t\t\treturn [this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\n\t\t\treturn [-this.options.curvyness, 0];\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\n\t\t\treturn [0, -this.options.curvyness];\n\t\t}\n\t\treturn [0, this.options.curvyness];\n\t}\n\n\tgetSVGPath(): string {\n\t\tif (this.points.length == 2) {\n\t\t\tconst curve = new BezierCurve();\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\n\n\t\t\tif (this.sourcePort) {\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\n\t\t\t}\n\n\t\t\tif (this.targetPort) {\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\n\t\t\t}\n\t\t\treturn curve.getSVGCurve();\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\twidth: this.options.width,\n\t\t\tcolor: this.options.color,\n\t\t\tcurvyness: this.options.curvyness,\n\t\t\tselectedColor: this.options.selectedColor\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.color = event.data.color;\n\t\tthis.options.width = event.data.width;\n\t\tthis.options.curvyness = event.data.curvyness;\n\t\tthis.options.selectedColor = event.data.selectedColor;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.options.width = width;\n\t\tthis.fireEvent({ width }, 'widthChanged');\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.options.color = color;\n\t\tthis.fireEvent({ color }, 'colorChanged');\n\t}\n}\n","import * as React from 'react';\nimport { PointModel } from '@projectstorm/react-diagrams-core';\nimport styled from '@emotion/styled';\n\nexport interface DefaultLinkPointWidgetProps {\n\tpoint: PointModel;\n\tcolor?: string;\n\tcolorSelected: string;\n}\n\nexport interface DefaultLinkPointWidgetState {\n\tselected: boolean;\n}\n\nnamespace S {\n\texport const PointTop = styled.circle`\n\t\tpointer-events: all;\n\t`;\n}\n\nexport class DefaultLinkPointWidget extends React.Component<DefaultLinkPointWidgetProps, DefaultLinkPointWidgetState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { point } = this.props;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<circle\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tfill={this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color}\n\t\t\t\t/>\n\t\t\t\t<S.PointTop\n\t\t\t\t\tclassName=\"point\"\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={point.getID()}\n\t\t\t\t\tdata-linkid={point.getLink().getID()}\n\t\t\t\t\tcx={point.getPosition().x}\n\t\t\t\t\tcy={point.getPosition().y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0.0}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DefaultLinkFactory } from './DefaultLinkFactory';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\n\nexport interface DefaultLinkSegmentWidgetProps {\n\tpath: string;\n\tlink: DefaultLinkModel;\n\tselected: boolean;\n\tforwardRef: React.RefObject<SVGPathElement>;\n\tfactory: DefaultLinkFactory;\n\tdiagramEngine: DiagramEngine;\n\tonSelection: (selected: boolean) => any;\n\textras: object;\n}\n\nexport class DefaultLinkSegmentWidget extends React.Component<DefaultLinkSegmentWidgetProps> {\n\trender() {\n\t\tconst Bottom = React.cloneElement(\n\t\t\tthis.props.factory.generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis.props.selected || this.props.link.isSelected(),\n\t\t\t\tthis.props.path\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: this.props.forwardRef\n\t\t\t}\n\t\t);\n\n\t\tconst Top = React.cloneElement(Bottom, {\n\t\t\tstrokeLinecap: 'round',\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.props.onSelection(false);\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.props.onSelection(true);\n\t\t\t},\n\t\t\t...this.props.extras,\n\t\t\tref: null,\n\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\tstrokeOpacity: this.props.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tfill: 'none',\n\t\t\tonContextMenu: () => {\n\t\t\t\tif (!this.props.link.isLocked()) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, LinkWidget, PointModel } from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from './DefaultLinkModel';\nimport { DefaultLinkPointWidget } from './DefaultLinkPointWidget';\nimport { DefaultLinkSegmentWidget } from './DefaultLinkSegmentWidget';\nimport { MouseEvent } from 'react';\n\nexport interface DefaultLinkProps {\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n\trenderPoints?: boolean;\n\tselected?: (event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends React.Component<DefaultLinkProps, DefaultLinkState> {\n\trefPaths: React.RefObject<SVGPathElement>[];\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(props);\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\trenderPoints() {\n\t\treturn this.props.renderPoints ?? true;\n\t}\n\n\tcomponentDidUpdate(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.link.setRenderedPaths(\n\t\t\tthis.refPaths.map((ref) => {\n\t\t\t\treturn ref.current;\n\t\t\t})\n\t\t);\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tthis.props.link.setRenderedPaths([]);\n\t}\n\n\taddPointToLink(event: MouseEvent, index: number) {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.link.isLocked() &&\n\t\t\tthis.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel({\n\t\t\t\tlink: this.props.link,\n\t\t\t\tposition: this.props.diagramEngine.getRelativeMousePoint(event)\n\t\t\t});\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tevent.persist();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tthis.props.diagramEngine.getActionEventBus().fireAction({\n\t\t\t\t\tevent,\n\t\t\t\t\tmodel: point\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tgeneratePoint(point: PointModel): JSX.Element {\n\t\treturn (\n\t\t\t<DefaultLinkPointWidget\n\t\t\t\tkey={point.getID()}\n\t\t\t\tpoint={point as any}\n\t\t\t\tcolorSelected={this.props.link.getOptions().selectedColor}\n\t\t\t\tcolor={this.props.link.getOptions().color}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tconst ref = React.createRef<SVGPathElement>();\n\t\tthis.refPaths.push(ref);\n\t\treturn (\n\t\t\t<DefaultLinkSegmentWidget\n\t\t\t\tkey={`link-${id}`}\n\t\t\t\tpath={path}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\n\t\t\t\tlink={this.props.link}\n\t\t\t\tforwardRef={ref}\n\t\t\t\tonSelection={(selected) => {\n\t\t\t\t\tthis.setState({ selected: selected });\n\t\t\t\t}}\n\t\t\t\textras={extraProps}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.getPoints();\n\t\tvar paths = [];\n\t\tthis.refPaths = [];\n\n\t\tif (points.length === 2) {\n\t\t\tpaths.push(\n\t\t\t\tthis.generateLink(\n\t\t\t\t\tthis.props.link.getSVGPath(),\n\t\t\t\t\t{\n\t\t\t\t\t\tonMouseDown: (event) => {\n\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'0'\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// draw the link as dangeling\n\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\tpaths.push(this.generatePoint(points[1]));\n\t\t\t}\n\t\t} else {\n\t\t\t//draw the multiple anchors and complex line instead\n\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tLinkWidget.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'data-linkid': this.props.link.getID(),\n\t\t\t\t\t\t\t'data-point': j,\n\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\tthis.props.selected?.(event);\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tj\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.renderPoints()) {\n\t\t\t\t//render the circles\n\t\t\t\tfor (let i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[i]));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.getTargetPort() == null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points[points.length - 1]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn <g data-default-link-test={this.props.link.getOptions().testName}>{paths}</g>;\n\t}\n}\n","import * as React from 'react';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultNodeWidget } from './DefaultNodeWidget';\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultNodeFactory extends AbstractReactFactory<DefaultNodeModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateReactWidget(event): JSX.Element {\n\t\treturn <DefaultNodeWidget engine={this.engine} node={event.model} />;\n\t}\n\n\tgenerateModel(event): DefaultNodeModel {\n\t\treturn new DefaultNodeModel();\n\t}\n}\n","import * as _ from 'lodash';\nimport { NodeModel, NodeModelGenerics, PortModelAlignment } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from '../port/DefaultPortModel';\nimport { BasePositionModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultNodeModelOptions extends BasePositionModelOptions {\n\tname?: string;\n\tcolor?: string;\n}\n\nexport interface DefaultNodeModelGenerics extends NodeModelGenerics {\n\tOPTIONS: DefaultNodeModelOptions;\n}\n\nexport class DefaultNodeModel extends NodeModel<DefaultNodeModelGenerics> {\n\tprotected portsIn: DefaultPortModel[];\n\tprotected portsOut: DefaultPortModel[];\n\n\tconstructor(name: string, color: string);\n\tconstructor(options?: DefaultNodeModelOptions);\n\tconstructor(options: any = {}, color?: string) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\tname: options,\n\t\t\t\tcolor: color\n\t\t\t};\n\t\t}\n\t\tsuper({\n\t\t\ttype: 'default',\n\t\t\tname: 'Untitled',\n\t\t\tcolor: 'rgb(0,192,255)',\n\t\t\t...options\n\t\t});\n\t\tthis.portsOut = [];\n\t\tthis.portsIn = [];\n\t}\n\n\tdoClone(lookupTable: {}, clone: any): void {\n\t\tclone.portsIn = [];\n\t\tclone.portsOut = [];\n\t\tsuper.doClone(lookupTable, clone);\n\t}\n\n\tremovePort(port: DefaultPortModel): void {\n\t\tsuper.removePort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tthis.portsIn.splice(this.portsIn.indexOf(port), 1);\n\t\t} else {\n\t\t\tthis.portsOut.splice(this.portsOut.indexOf(port), 1);\n\t\t}\n\t}\n\n\taddPort<T extends DefaultPortModel>(port: T): T {\n\t\tsuper.addPort(port);\n\t\tif (port.getOptions().in) {\n\t\t\tif (this.portsIn.indexOf(port) === -1) {\n\t\t\t\tthis.portsIn.push(port);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.portsOut.indexOf(port) === -1) {\n\t\t\t\tthis.portsOut.push(port);\n\t\t\t}\n\t\t}\n\t\treturn port;\n\t}\n\n\taddInPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: true,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.LEFT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsIn.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\taddOutPort(label: string, after = true): DefaultPortModel {\n\t\tconst p = new DefaultPortModel({\n\t\t\tin: false,\n\t\t\tname: label,\n\t\t\tlabel: label,\n\t\t\talignment: PortModelAlignment.RIGHT\n\t\t});\n\t\tif (!after) {\n\t\t\tthis.portsOut.splice(0, 0, p);\n\t\t}\n\t\treturn this.addPort(p);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.name = event.data.name;\n\t\tthis.options.color = event.data.color;\n\t\tthis.portsIn = _.map(event.data.portsInOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t\tthis.portsOut = _.map(event.data.portsOutOrder, (id) => {\n\t\t\treturn this.getPortFromID(id);\n\t\t}) as DefaultPortModel[];\n\t}\n\n\tserialize(): any {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tname: this.options.name,\n\t\t\tcolor: this.options.color,\n\t\t\tportsInOrder: _.map(this.portsIn, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t}),\n\t\t\tportsOutOrder: _.map(this.portsOut, (port) => {\n\t\t\t\treturn port.getID();\n\t\t\t})\n\t\t};\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn this.portsIn;\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn this.portsOut;\n\t}\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\nimport { DefaultNodeModel } from './DefaultNodeModel';\nimport { DefaultPortLabel } from '../port/DefaultPortLabelWidget';\nimport styled from '@emotion/styled';\n\nnamespace S {\n\texport const Node = styled.div<{ background: string; selected: boolean }>`\n\t\tbackground-color: ${(p) => p.background};\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: white;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 11px;\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t`;\n\n\texport const Title = styled.div`\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t`;\n\n\texport const TitleName = styled.div`\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n\n\texport const Ports = styled.div`\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n\t`;\n\n\texport const PortsContainer = styled.div`\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n}\n\nexport interface DefaultNodeProps {\n\tnode: DefaultNodeModel;\n\tengine: DiagramEngine;\n}\n\n/**\n * Default node that models the DefaultNodeModel. It creates two columns\n * for both all the input ports on the left, and the output ports on the right.\n */\nexport class DefaultNodeWidget extends React.Component<DefaultNodeProps> {\n\tgeneratePort = (port) => {\n\t\treturn <DefaultPortLabel engine={this.props.engine} port={port} key={port.getID()} />;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<S.Node\n\t\t\t\tdata-default-node-name={this.props.node.getOptions().name}\n\t\t\t\tselected={this.props.node.isSelected()}\n\t\t\t\tbackground={this.props.node.getOptions().color}\n\t\t\t>\n\t\t\t\t<S.Title>\n\t\t\t\t\t<S.TitleName>{this.props.node.getOptions().name}</S.TitleName>\n\t\t\t\t</S.Title>\n\t\t\t\t<S.Ports>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getInPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t\t<S.PortsContainer>{_.map(this.props.node.getOutPorts(), this.generatePort)}</S.PortsContainer>\n\t\t\t\t</S.Ports>\n\t\t\t</S.Node>\n\t\t);\n\t}\n}\n","import { DefaultPortModel } from './DefaultPortModel';\nimport { AbstractModelFactory } from '@projectstorm/react-canvas-core';\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\n\nexport class DefaultPortFactory extends AbstractModelFactory<DefaultPortModel, DiagramEngine> {\n\tconstructor() {\n\t\tsuper('default');\n\t}\n\n\tgenerateModel(): DefaultPortModel {\n\t\treturn new DefaultPortModel({\n\t\t\tname: 'unknown'\n\t\t});\n\t}\n}\n","import * as React from 'react';\nimport { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\nimport { DefaultPortModel } from './DefaultPortModel';\nimport styled from '@emotion/styled';\n\nexport interface DefaultPortLabelProps {\n\tport: DefaultPortModel;\n\tengine: DiagramEngine;\n}\n\nnamespace S {\n\texport const PortLabel = styled.div`\n\t\tdisplay: flex;\n\t\tmargin-top: 1px;\n\t\talign-items: center;\n\t`;\n\n\texport const Label = styled.div`\n\t\tpadding: 0 5px;\n\t\tflex-grow: 1;\n\t`;\n\n\texport const Port = styled.div`\n\t\twidth: 15px;\n\t\theight: 15px;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\n\t\t&:hover {\n\t\t\tbackground: rgb(192, 255, 0);\n\t\t}\n\t`;\n}\n\nexport class DefaultPortLabel extends React.Component<DefaultPortLabelProps> {\n\trender() {\n\t\tconst port = (\n\t\t\t<PortWidget engine={this.props.engine} port={this.props.port}>\n\t\t\t\t<S.Port />\n\t\t\t</PortWidget>\n\t\t);\n\t\tconst label = <S.Label>{this.props.port.getOptions().label}</S.Label>;\n\n\t\treturn (\n\t\t\t<S.PortLabel>\n\t\t\t\t{this.props.port.getOptions().in ? port : label}\n\t\t\t\t{this.props.port.getOptions().in ? label : port}\n\t\t\t</S.PortLabel>\n\t\t);\n\t}\n}\n","import {\n\tLinkModel,\n\tPortModel,\n\tPortModelAlignment,\n\tPortModelGenerics,\n\tPortModelOptions\n} from '@projectstorm/react-diagrams-core';\nimport { DefaultLinkModel } from '../link/DefaultLinkModel';\nimport { AbstractModelFactory, DeserializeEvent } from '@projectstorm/react-canvas-core';\n\nexport interface DefaultPortModelOptions extends PortModelOptions {\n\tlabel?: string;\n\tin?: boolean;\n\ttype?: string;\n}\n\nexport interface DefaultPortModelGenerics extends PortModelGenerics {\n\tOPTIONS: DefaultPortModelOptions;\n}\n\nexport class DefaultPortModel extends PortModel<DefaultPortModelGenerics> {\n\tconstructor(isIn: boolean, name?: string, label?: string);\n\tconstructor(options: DefaultPortModelOptions);\n\tconstructor(options: DefaultPortModelOptions | boolean, name?: string, label?: string) {\n\t\tif (!!name) {\n\t\t\toptions = {\n\t\t\t\tin: !!options,\n\t\t\t\tname: name,\n\t\t\t\tlabel: label\n\t\t\t};\n\t\t}\n\t\toptions = options as DefaultPortModelOptions;\n\t\tsuper({\n\t\t\tlabel: options.label || options.name,\n\t\t\talignment: options.in ? PortModelAlignment.LEFT : PortModelAlignment.RIGHT,\n\t\t\ttype: 'default',\n\t\t\t...options\n\t\t});\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.in = event.data.in;\n\t\tthis.options.label = event.data.label;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tin: this.options.in,\n\t\t\tlabel: this.options.label\n\t\t};\n\t}\n\n\tlink<T extends LinkModel>(port: PortModel, factory?: AbstractModelFactory<T>): T {\n\t\tlet link = this.createLinkModel(factory);\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link as T;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.options.in !== port.getOptions().in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(factory?: AbstractModelFactory<LinkModel>): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\tif (!link && factory) {\n\t\t\treturn factory.generateModel({});\n\t\t}\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n","module.exports = require(\"@emotion/react\");","module.exports = require(\"@emotion/styled\");","module.exports = require(\"@projectstorm/geometry\");","module.exports = require(\"@projectstorm/react-canvas-core\");","module.exports = require(\"@projectstorm/react-diagrams-core\");","module.exports = require(\"lodash\");","module.exports = require(\"react\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"names":["root","factory","exports","module","define","amd","self","DefaultLabelFactory","AbstractReactFactory","constructor","super","generateReactWidget","event","DefaultLabelWidget","model","generateModel","DefaultLabelModel","LabelModel","options","offsetY","type","setLabel","label","this","deserialize","data","serialize","S","Label","div","React","Component","render","props","getOptions","Keyframes","keyframes","selected","css","Path","path","p","DefaultLinkFactory","DefaultLinkWidget","link","diagramEngine","engine","DefaultLinkModel","generateLinkSegment","stroke","selectedColor","color","strokeWidth","width","d","LinkModel","curvyness","calculateControlOffset","port","alignment","PortModelAlignment","RIGHT","LEFT","TOP","getSVGPath","points","length","curve","BezierCurve","setSource","getFirstPoint","getPosition","setTarget","getLastPoint","setSourceControl","clone","setTargetControl","sourcePort","getSourceControl","translate","getSourcePort","targetPort","getTargetControl","getTargetPort","getSVGCurve","addLabel","labelOb","setWidth","fireEvent","setColor","PointTop","circle","DefaultLinkPointWidget","state","point","cx","x","cy","y","r","fill","isSelected","colorSelected","className","onMouseLeave","setState","onMouseEnter","getID","getLink","opacity","DefaultLinkSegmentWidget","Bottom","cloneElement","ref","forwardRef","Top","strokeLinecap","onSelection","extras","strokeOpacity","onContextMenu","isLocked","preventDefault","remove","refPaths","renderPoints","componentDidUpdate","setRenderedPaths","map","current","componentDidMount","componentWillUnmount","addPointToLink","index","shiftKey","getPoints","getMaxNumberPointsPerLink","PointModel","position","getRelativeMousePoint","addPoint","persist","stopPropagation","forceUpdate","getActionEventBus","fireAction","generatePoint","key","generateLink","extraProps","id","createRef","push","getFactoryForLink","paths","onMouseDown","j","LinkWidget","generateLinePath","i","testName","DefaultNodeFactory","DefaultNodeWidget","node","DefaultNodeModel","NodeModel","name","portsOut","portsIn","doClone","lookupTable","removePort","in","splice","indexOf","addPort","addInPort","after","DefaultPortModel","addOutPort","_","portsInOrder","getPortFromID","portsOutOrder","getInPorts","getOutPorts","Node","background","Title","TitleName","Ports","PortsContainer","generatePort","DefaultPortLabel","DefaultPortFactory","AbstractModelFactory","PortLabel","Port","PortWidget","PortModel","createLinkModel","setSourcePort","setTargetPort","canLinkToPort","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}