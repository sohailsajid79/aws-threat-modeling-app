{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://projectstorm/react-canvas-core/webpack/universalModuleDefinition","webpack://projectstorm/react-canvas-core/./src/CanvasEngine.ts","webpack://projectstorm/react-canvas-core/./src/Toolkit.ts","webpack://projectstorm/react-canvas-core/./src/actions/DeleteItemsAction.ts","webpack://projectstorm/react-canvas-core/./src/actions/PanAndZoomCanvasAction.ts","webpack://projectstorm/react-canvas-core/./src/actions/ZoomCanvasAction.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/Action.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/ActionEventBus.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseEntity.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseModel.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BasePositionModel.ts","webpack://projectstorm/react-canvas-core/./src/core-state/AbstractDisplacementState.ts","webpack://projectstorm/react-canvas-core/./src/core-state/State.ts","webpack://projectstorm/react-canvas-core/./src/core-state/StateMachine.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractModelFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractReactFactory.tsx","webpack://projectstorm/react-canvas-core/./src/core/BaseObserver.ts","webpack://projectstorm/react-canvas-core/./src/core/FactoryBank.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/LayerModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/layer/SmartLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/TransformLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxLayerFactory.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionLayerModel.ts","webpack://projectstorm/react-canvas-core/./src/index.ts","webpack://projectstorm/react-canvas-core/./src/states/DefaultState.ts","webpack://projectstorm/react-canvas-core/./src/states/DragCanvasState.ts","webpack://projectstorm/react-canvas-core/./src/states/MoveItemsState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectingState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectionBoxState.ts","webpack://projectstorm/react-canvas-core/./src/widgets/PeformanceWidget.tsx","webpack://projectstorm/react-canvas-core/external commonjs \"@emotion/react\"","webpack://projectstorm/react-canvas-core/external commonjs \"@emotion/styled\"","webpack://projectstorm/react-canvas-core/external commonjs \"@projectstorm/geometry\"","webpack://projectstorm/react-canvas-core/external commonjs \"lodash\"","webpack://projectstorm/react-canvas-core/external commonjs \"react\"","webpack://projectstorm/react-canvas-core/webpack/bootstrap","webpack://projectstorm/react-canvas-core/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-canvas-core\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-canvas-core\"] = factory();\n})(self, () => {\nreturn ","import { debounce } from 'lodash';\nimport { CanvasModel } from './entities/canvas/CanvasModel';\nimport { FactoryBank } from './core/FactoryBank';\nimport { AbstractReactFactory } from './core/AbstractReactFactory';\nimport { LayerModel } from './entities/layer/LayerModel';\nimport { BaseListener, BaseObserver } from './core/BaseObserver';\nimport { MouseEvent } from 'react';\nimport { BaseModel } from './core-models/BaseModel';\nimport { Point } from '@projectstorm/geometry';\nimport { ActionEventBus } from './core-actions/ActionEventBus';\nimport { PanAndZoomCanvasAction } from './actions/PanAndZoomCanvasAction';\nimport { ZoomCanvasAction } from './actions/ZoomCanvasAction';\nimport { DeleteItemsAction } from './actions/DeleteItemsAction';\nimport { StateMachine } from './core-state/StateMachine';\n\nexport interface CanvasEngineListener extends BaseListener {\n\tcanvasReady?(): void;\n\n\trepaintCanvas?(): void;\n\n\trendered?(): void;\n}\n\n/**\n * Defines the CanvasEngine options\n */\nexport interface CanvasEngineOptions {\n\tregisterDefaultDeleteItemsAction?: boolean;\n\tregisterDefaultPanAndZoomCanvasAction?: boolean;\n\tregisterDefaultZoomCanvasAction?: boolean;\n\t/**\n\t * Defines the debounce wait time in milliseconds if > 0\n\t */\n\trepaintDebounceMs?: number;\n}\n\nexport class CanvasEngine<\n\tL extends CanvasEngineListener = CanvasEngineListener,\n\tM extends CanvasModel = CanvasModel\n> extends BaseObserver<L> {\n\tprotected model: M;\n\tprotected layerFactories: FactoryBank<AbstractReactFactory<LayerModel>>;\n\tprotected canvas: HTMLDivElement;\n\tprotected eventBus: ActionEventBus;\n\tprotected stateMachine: StateMachine;\n\tprotected options: CanvasEngineOptions;\n\n\tconstructor(options: CanvasEngineOptions = {}) {\n\t\tsuper();\n\t\tthis.model = null;\n\t\tthis.eventBus = new ActionEventBus(this);\n\t\tthis.stateMachine = new StateMachine(this);\n\t\tthis.layerFactories = new FactoryBank();\n\t\tthis.registerFactoryBank(this.layerFactories);\n\n\t\t/**\n\t\t * Overrides the standard options with the possible given options\n\t\t */\n\t\tthis.options = {\n\t\t\tregisterDefaultDeleteItemsAction: true,\n\t\t\tregisterDefaultZoomCanvasAction: true,\n\t\t\trepaintDebounceMs: 0,\n\t\t\t...options\n\t\t};\n\t\tif (this.options.registerDefaultZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new ZoomCanvasAction());\n\t\t} else if (this.options.registerDefaultPanAndZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new PanAndZoomCanvasAction());\n\t\t}\n\t\tif (this.options.registerDefaultDeleteItemsAction === true) {\n\t\t\tthis.eventBus.registerAction(new DeleteItemsAction());\n\t\t}\n\t}\n\n\tgetStateMachine() {\n\t\treturn this.stateMachine;\n\t}\n\n\tgetRelativeMousePoint(event: { clientX: number; clientY: number }): Point {\n\t\tconst point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn new Point(\n\t\t\t(point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0),\n\t\t\t(point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0)\n\t\t);\n\t}\n\n\tgetRelativePoint(x, y): Point {\n\t\tconst canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn new Point(x - canvasRect.left, y - canvasRect.top);\n\t}\n\n\tregisterFactoryBank(factory: FactoryBank) {\n\t\tfactory.registerListener({\n\t\t\tfactoryAdded: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(this);\n\t\t\t},\n\t\t\tfactoryRemoved: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(null);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetActionEventBus() {\n\t\treturn this.eventBus;\n\t}\n\n\tgetLayerFactories() {\n\t\treturn this.layerFactories;\n\t}\n\n\tgetFactoryForLayer<F extends AbstractReactFactory<LayerModel>>(layer: LayerModel | string) {\n\t\tif (typeof layer === 'string') {\n\t\t\treturn this.layerFactories.getFactory(layer);\n\t\t}\n\t\treturn this.layerFactories.getFactory(layer.getType());\n\t}\n\n\tsetModel(model: M) {\n\t\tthis.model = model;\n\t\tif (this.canvas) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.repaintCanvas();\n\t\t\t});\n\t\t}\n\t}\n\n\tgetModel(): M {\n\t\treturn this.model;\n\t}\n\n\trepaintCanvas(promise: true): Promise<any>;\n\trepaintCanvas(): void;\n\trepaintCanvas(promise?): Promise<any> | void {\n\t\tconst { repaintDebounceMs } = this.options;\n\n\t\t/**\n\t\t * The actual repaint function\n\t\t */\n\t\tconst repaint = () => {\n\t\t\tthis.iterateListeners((listener) => {\n\t\t\t\tif (listener.repaintCanvas) {\n\t\t\t\t\tlistener.repaintCanvas();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// if the `repaintDebounceMs` option is > 0, then apply the debounce\n\t\tlet repaintFn = repaint;\n\n\t\tif (repaintDebounceMs > 0) {\n\t\t\trepaintFn = debounce(repaint, repaintDebounceMs);\n\t\t}\n\n\t\tif (promise) {\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst l = this.registerListener({\n\t\t\t\t\trendered: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tl.deregister();\n\t\t\t\t\t}\n\t\t\t\t} as L);\n\t\t\t\trepaintFn();\n\t\t\t});\n\t\t}\n\n\t\trepaintFn();\n\t}\n\n\tsetCanvas(canvas?: HTMLDivElement) {\n\t\tif (this.canvas !== canvas) {\n\t\t\tthis.canvas = canvas;\n\t\t\tif (canvas) {\n\t\t\t\tthis.fireEvent({}, 'canvasReady');\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCanvas() {\n\t\treturn this.canvas;\n\t}\n\n\tgetMouseElement(event: MouseEvent): BaseModel {\n\t\treturn null;\n\t}\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n\t\tthis.model.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n","export class Toolkit {\n\tstatic TESTING: boolean = false;\n\tstatic TESTING_UID = 0;\n\n\t/**\n\t * Generats a unique ID (thanks Stack overflow :3)\n\t * @returns {String}\n\t */\n\tpublic static UID(): string {\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID++;\n\t\t\treturn `${Toolkit.TESTING_UID}`;\n\t\t}\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\tpublic static closest(element: Element, selector: string) {\n\t\tif (!Element.prototype.closest) {\n\t\t\tElement.prototype.closest = function (s) {\n\t\t\t\tvar el = this;\n\n\t\t\t\tdo {\n\t\t\t\t\tif (Element.prototype.matches.call(el, s)) return el;\n\t\t\t\t\tel = el.parentElement || el.parentNode;\n\t\t\t\t} while (el !== null && el.nodeType === 1);\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\t\treturn element.closest(selector);\n\t}\n}\n","import { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { KeyboardEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface DeleteItemsActionOptions {\n\tkeyCodes?: number[];\n\tmodifiers?: {\n\t\tctrlKey?: boolean;\n\t\tshiftKey?: boolean;\n\t\taltKey?: boolean;\n\t\tmetaKey?: boolean;\n\t};\n}\n\n/**\n * Deletes all selected items\n */\nexport class DeleteItemsAction extends Action {\n\tconstructor(options: DeleteItemsActionOptions = {}) {\n\t\tconst keyCodes = options.keyCodes || [46, 8];\n\t\tconst modifiers = {\n\t\t\tctrlKey: false,\n\t\t\tshiftKey: false,\n\t\t\taltKey: false,\n\t\t\tmetaKey: false,\n\t\t\t...options.modifiers\n\t\t};\n\n\t\tsuper({\n\t\t\ttype: InputType.KEY_DOWN,\n\t\t\tfire: (event: ActionEvent<KeyboardEvent>) => {\n\t\t\t\tconst { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n\n\t\t\t\tif (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n\t\t\t\t\t_.forEach(this.engine.getModel().getSelectedEntities(), (model) => {\n\t\t\t\t\t\t// only delete items which are not locked\n\t\t\t\t\t\tif (!model.isLocked()) {\n\t\t\t\t\t\t\tmodel.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { WheelEvent } from 'react';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\n\nexport interface PanAndZoomCanvasActionOptions {\n\tinverseZoom?: boolean;\n}\n\nexport class PanAndZoomCanvasAction extends Action {\n\tconstructor(options: PanAndZoomCanvasActionOptions = {}) {\n\t\tsuper({\n\t\t\ttype: InputType.MOUSE_WHEEL,\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\n\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(false);\n\t\t\t\t}\n\n\t\t\t\tconst model = this.engine.getModel();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\t// Pinch and zoom gesture\n\t\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n\n\t\t\t\t\tlet scrollDelta = options.inverseZoom ? event.deltaY : -event.deltaY;\n\t\t\t\t\tscrollDelta /= 3;\n\n\t\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\n\n\t\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t\t// compute width and height increment factor\n\t\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n\t\t\t\t} else {\n\t\t\t\t\t// Pan gesture\n\t\t\t\t\tlet yDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t\tlet xDelta = options.inverseZoom ? -event.deltaX : event.deltaX;\n\t\t\t\t\tmodel.setOffset(model.getOffsetX() - xDelta, model.getOffsetY() - yDelta);\n\t\t\t\t}\n\t\t\t\tthis.engine.repaintCanvas();\n\n\t\t\t\t// re-enable rendering\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { WheelEvent } from 'react';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\n\nexport interface ZoomCanvasActionOptions {\n\tinverseZoom?: boolean;\n}\n\nexport class ZoomCanvasAction extends Action {\n\tconstructor(options: ZoomCanvasActionOptions = {}) {\n\t\tsuper({\n\t\t\ttype: InputType.MOUSE_WHEEL,\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\n\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(false);\n\t\t\t\t}\n\n\t\t\t\tconst model = this.engine.getModel();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n\t\t\t\tlet scrollDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t//check if it is pinch gesture\n\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\n\t\t\t\t\t/*\n\t\t\t\t\t\tChrome and Firefox sends wheel event with deltaY that\n\t\t\t\t\t\thave fractional part, also `ctrlKey` prop of the event is true\n\t\t\t\t\t\tthough ctrl isn't pressed\n\t\t\t\t\t*/\n\t\t\t\t\tscrollDelta /= 3;\n\t\t\t\t} else {\n\t\t\t\t\tscrollDelta /= 60;\n\t\t\t\t}\n\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\n\t\t\t\t}\n\n\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\n\n\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t// compute width and height increment factor\n\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n\t\t\t\tthis.engine.repaintCanvas();\n\n\t\t\t\t// re-enable rendering\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { MouseEvent, KeyboardEvent, WheelEvent, TouchEvent, SyntheticEvent } from 'react';\nimport { Toolkit } from '../Toolkit';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport enum InputType {\n\tMOUSE_DOWN = 'mouse-down',\n\tMOUSE_UP = 'mouse-up',\n\tMOUSE_MOVE = 'mouse-move',\n\tMOUSE_WHEEL = 'mouse-wheel',\n\tKEY_DOWN = 'key-down',\n\tKEY_UP = 'key-up',\n\tTOUCH_START = 'touch-start',\n\tTOUCH_END = 'touch-end',\n\tTOUCH_MOVE = 'touch-move'\n}\n\nexport interface Mapping {\n\t[InputType.MOUSE_DOWN]: MouseEvent;\n\t[InputType.MOUSE_UP]: MouseEvent;\n\t[InputType.MOUSE_MOVE]: MouseEvent;\n\t[InputType.MOUSE_WHEEL]: WheelEvent;\n\t[InputType.KEY_DOWN]: KeyboardEvent;\n\t[InputType.KEY_UP]: KeyboardEvent;\n\t[InputType.TOUCH_START]: TouchEvent;\n\t[InputType.TOUCH_END]: TouchEvent;\n\t[InputType.TOUCH_MOVE]: TouchEvent;\n}\n\nexport interface ActionEvent<Event extends SyntheticEvent = SyntheticEvent, Model extends BaseModel = BaseModel> {\n\tevent: Event;\n\tmodel?: Model;\n}\n\nexport interface ActionOptions {\n\ttype: InputType;\n\tfire: (event: ActionEvent<Mapping[this['type']]>) => void;\n}\n\nexport class Action<T extends CanvasEngine = CanvasEngine> {\n\toptions: ActionOptions;\n\tid: string;\n\tengine: T;\n\n\tconstructor(options: ActionOptions) {\n\t\tthis.options = options;\n\t\tthis.id = Toolkit.UID();\n\t}\n\n\tsetEngine(engine: T) {\n\t\tthis.engine = engine;\n\t}\n}\n","import { Action, ActionEvent, InputType } from './Action';\nimport { KeyboardEvent, MouseEvent } from 'react';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport class ActionEventBus {\n\tprotected actions: { [id: string]: Action };\n\tprotected engine: CanvasEngine;\n\tprotected keys: { [key: string]: boolean };\n\n\tconstructor(engine: CanvasEngine) {\n\t\tthis.actions = {};\n\t\tthis.engine = engine;\n\t\tthis.keys = {};\n\t}\n\n\tgetKeys(): string[] {\n\t\treturn _.keys(this.keys);\n\t}\n\n\tregisterAction(action: Action): () => void {\n\t\taction.setEngine(this.engine);\n\t\tthis.actions[action.id] = action;\n\t\treturn () => {\n\t\t\tthis.deregisterAction(action);\n\t\t};\n\t}\n\n\tderegisterAction(action: Action) {\n\t\taction.setEngine(null);\n\t\tdelete this.actions[action.id];\n\t}\n\n\tgetActionsForType(type: InputType): Action[] {\n\t\treturn _.filter(this.actions, (action) => {\n\t\t\treturn action.options.type === type;\n\t\t});\n\t}\n\n\tgetModelForEvent(actionEvent: ActionEvent<MouseEvent>): BaseModel {\n\t\tif (actionEvent.model) {\n\t\t\treturn actionEvent.model;\n\t\t}\n\t\treturn this.engine.getMouseElement(actionEvent.event);\n\t}\n\n\tgetActionsForEvent(actionEvent: ActionEvent): Action[] {\n\t\tconst { event } = actionEvent;\n\t\tif (event.type === 'mousedown') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_DOWN);\n\t\t} else if (event.type === 'mouseup') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_UP);\n\t\t} else if (event.type === 'keydown') {\n\t\t\t// store the recorded key\n\t\t\tthis.keys[(event as KeyboardEvent).key.toLowerCase()] = true;\n\t\t\treturn this.getActionsForType(InputType.KEY_DOWN);\n\t\t} else if (event.type === 'keyup') {\n\t\t\t// delete the recorded key\n\t\t\tdelete this.keys[(event as KeyboardEvent).key.toLowerCase()];\n\t\t\treturn this.getActionsForType(InputType.KEY_UP);\n\t\t} else if (event.type === 'mousemove') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_MOVE);\n\t\t} else if (event.type === 'wheel') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_WHEEL);\n\t\t} else if (event.type === 'touchstart') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_START);\n\t\t} else if (event.type === 'touchend') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_END);\n\t\t} else if (event.type === 'touchmove') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_MOVE);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tfireAction(actionEvent: ActionEvent) {\n\t\tconst actions = this.getActionsForEvent(actionEvent);\n\t\tfor (let action of actions) {\n\t\t\taction.options.fire(actionEvent as any);\n\t\t}\n\t}\n}\n","import { Toolkit } from '../Toolkit';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\nimport { AbstractModelFactory } from '../core/AbstractModelFactory';\nimport { BaseModel } from './BaseModel';\n\nexport interface BaseEntityEvent<T extends BaseEntity = BaseEntity> extends BaseEvent {\n\tentity: T;\n}\n\nexport interface BaseEntityListener<T extends BaseEntity = BaseEntity> extends BaseListener {\n\tlockChanged?(event: BaseEntityEvent<T> & { locked: boolean }): void;\n}\n\nexport type BaseEntityType = 'node' | 'link' | 'port' | 'point';\n\nexport interface BaseEntityOptions {\n\tid?: string;\n\tlocked?: boolean;\n}\n\nexport type BaseEntityGenerics = {\n\tLISTENER: BaseEntityListener;\n\tOPTIONS: BaseEntityOptions;\n};\n\nexport interface DeserializeEvent<T extends BaseEntity = BaseEntity> {\n\tengine: CanvasEngine;\n\tdata: ReturnType<T['serialize']>;\n\tregisterModel(model: BaseModel);\n\tgetModel<T extends BaseModel>(id: string): Promise<T>;\n}\n\nexport class BaseEntity<T extends BaseEntityGenerics = BaseEntityGenerics> extends BaseObserver<T['LISTENER']> {\n\tprotected options: T['OPTIONS'];\n\n\tconstructor(options: T['OPTIONS'] = {}) {\n\t\tsuper();\n\t\tthis.options = {\n\t\t\tid: Toolkit.UID(),\n\t\t\t...options\n\t\t};\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\tgetID() {\n\t\treturn this.options.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.options.id]) {\n\t\t\treturn lookupTable[this.options.id];\n\t\t}\n\t\tlet clone = _.cloneDeep(this);\n\t\tclone.options = {\n\t\t\t...this.options,\n\t\t\tid: Toolkit.UID()\n\t\t};\n\t\tclone.clearListeners();\n\t\tlookupTable[this.options.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tthis.options.id = event.data.id;\n\t\tthis.options.locked = event.data.locked;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\tid: this.options.id,\n\t\t\tlocked: this.options.locked\n\t\t};\n\t}\n\n\tfireEvent<L extends Partial<BaseEntityEvent> & object>(event: L, k: keyof T['LISTENER']) {\n\t\tsuper.fireEvent(\n\t\t\t{\n\t\t\t\tentity: this,\n\t\t\t\t...event\n\t\t\t},\n\t\t\tk\n\t\t);\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.options.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.options.locked = locked;\n\t\tthis.fireEvent(\n\t\t\t{\n\t\t\t\tlocked: locked\n\t\t\t},\n\t\t\t'lockChanged'\n\t\t);\n\t}\n}\n","import {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from './BaseEntity';\nimport { CanvasModel } from '../entities/canvas/CanvasModel';\n\nexport interface BaseModelListener extends BaseEntityListener {\n\tselectionChanged?(event: BaseEntityEvent<BaseModel> & { isSelected: boolean }): void;\n\n\tentityRemoved?(event: BaseEntityEvent<BaseModel>): void;\n}\n\nexport interface BaseModelOptions extends BaseEntityOptions {\n\ttype?: string;\n\tselected?: boolean;\n\textras?: any;\n}\n\nexport interface BaseModelGenerics extends BaseEntityGenerics {\n\tLISTENER: BaseModelListener;\n\tPARENT: BaseEntity;\n\tOPTIONS: BaseModelOptions;\n}\n\nexport class BaseModel<G extends BaseModelGenerics = BaseModelGenerics> extends BaseEntity<G> {\n\tprotected parent: G['PARENT'];\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t}\n\n\tperformanceTune() {\n\t\treturn true;\n\t}\n\n\tgetParentCanvasModel(): CanvasModel {\n\t\tif (!this.parent) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.parent instanceof CanvasModel) {\n\t\t\treturn this.parent;\n\t\t} else if (this.parent instanceof BaseModel) {\n\t\t\treturn this.parent.getParentCanvasModel();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetParent(): G['PARENT'] {\n\t\treturn this.parent;\n\t}\n\n\tsetParent(parent: G['PARENT']) {\n\t\tthis.parent = parent;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn [this];\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\ttype: this.options.type,\n\t\t\tselected: this.options.selected,\n\t\t\textras: this.options.extras\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.extras = event.data.extras;\n\t\tthis.options.selected = event.data.selected;\n\t}\n\n\tgetType(): string {\n\t\treturn this.options.type;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn this.options.selected;\n\t}\n\n\tisLocked(): boolean {\n\t\tconst locked = super.isLocked();\n\t\tif (locked) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// delegate this call up to the parent\n\t\tif (this.parent) {\n\t\t\treturn this.parent.isLocked();\n\t\t}\n\t\treturn false;\n\t}\n\n\tsetSelected(selected: boolean = true) {\n\t\tif (this.options.selected !== selected) {\n\t\t\tthis.options.selected = selected;\n\n\t\t\tthis.fireEvent(\n\t\t\t\t{\n\t\t\t\t\tisSelected: selected\n\t\t\t\t},\n\t\t\t\t'selectionChanged'\n\t\t\t);\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.fireEvent({}, 'entityRemoved');\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelListener, BaseModelOptions } from './BaseModel';\nimport { BaseEntityEvent, DeserializeEvent } from './BaseEntity';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport interface BasePositionModelListener extends BaseModelListener {\n\tpositionChanged?(event: BaseEntityEvent<BasePositionModel>): void;\n}\n\nexport interface BasePositionModelOptions extends BaseModelOptions {\n\tposition?: Point;\n}\n\nexport interface BasePositionModelGenerics extends BaseModelGenerics {\n\tLISTENER: BasePositionModelListener;\n\tOPTIONS: BasePositionModelOptions;\n}\n\nexport class BasePositionModel<G extends BasePositionModelGenerics = BasePositionModelGenerics>\n\textends BaseModel<G>\n\timplements ModelGeometryInterface\n{\n\tprotected position: Point;\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t\tthis.position = options.position || new Point(0, 0);\n\t}\n\n\tsetPosition(point: Point): void;\n\tsetPosition(x: number, y: number): void;\n\tsetPosition(x: number | Point, y?: number): void {\n\t\tif (x instanceof Point) {\n\t\t\tthis.position = x;\n\t\t} else {\n\t\t\tthis.position = new Point(x, y);\n\t\t}\n\t\tthis.fireEvent({}, 'positionChanged');\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\treturn new Rectangle(this.position, 0, 0);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.position = new Point(event.data.x, event.data.y);\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tx: this.position.x,\n\t\t\ty: this.position.y\n\t\t};\n\t}\n\n\tgetPosition(): Point {\n\t\treturn this.position;\n\t}\n\n\tgetX() {\n\t\treturn this.position.x;\n\t}\n\n\tgetY() {\n\t\treturn this.position.y;\n\t}\n}\n","import { State, StateOptions } from './State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface AbstractDisplacementStateEvent {\n\tdisplacementX: number;\n\tdisplacementY: number;\n\tvirtualDisplacementX: number;\n\tvirtualDisplacementY: number;\n\tevent: React.MouseEvent | React.TouchEvent;\n}\n\nexport abstract class AbstractDisplacementState<E extends CanvasEngine = CanvasEngine> extends State<E> {\n\tinitialX: number;\n\tinitialY: number;\n\tinitialXRelative: number;\n\tinitialYRelative: number;\n\n\tconstructor(options: StateOptions) {\n\t\tsuper(options);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event;\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\n\t\t\t\t\tif (event.buttons === 0) {\n\t\t\t\t\t\t// If buttons is 0, it means the mouse is not down, the user may have released it\n\t\t\t\t\t\t// outside of the canvas, then we eject the state\n\t\t\t\t\t\tthis.eject();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { clientX, clientY } = event;\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event.touches[0];\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t\tconst { clientX, clientY } = event.touches[0];\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_END,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\t}\n\n\tprotected handleMoveStart(x: number, y: number): void {\n\t\tthis.initialX = x;\n\t\tthis.initialY = y;\n\t\tconst rel = this.engine.getRelativePoint(x, y);\n\t\tthis.initialXRelative = rel.x;\n\t\tthis.initialYRelative = rel.y;\n\t}\n\n\tprotected handleMove(x: number, y: number, event: React.MouseEvent | React.TouchEvent): void {\n\t\tthis.fireMouseMoved({\n\t\t\tdisplacementX: x - this.initialX,\n\t\t\tdisplacementY: y - this.initialY,\n\t\t\tvirtualDisplacementX: (x - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tvirtualDisplacementY: (y - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tevent\n\t\t});\n\t}\n\n\tprotected handleMoveEnd(): void {\n\t\tthis.eject();\n\t}\n\n\tabstract fireMouseMoved(event: AbstractDisplacementStateEvent);\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SyntheticEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface StateOptions {\n\tname: string;\n}\n\nexport abstract class State<E extends CanvasEngine = CanvasEngine> {\n\tprotected engine: E;\n\tprotected actions: Action[];\n\tprotected keys: string[];\n\tprotected options: StateOptions;\n\tprotected childStates: State[];\n\n\tprivate handler1;\n\tprivate handler2;\n\n\tconstructor(options: StateOptions) {\n\t\tthis.actions = [];\n\t\tthis.keys = [];\n\t\tthis.childStates = [];\n\t\tthis.options = options;\n\t}\n\n\tsetEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\teject() {\n\t\tthis.engine.getStateMachine().popState();\n\t}\n\n\ttransitionWithEvent(state: State, event: ActionEvent<SyntheticEvent>) {\n\t\tthis.engine.getStateMachine().pushState(state);\n\t\tthis.engine.getActionEventBus().fireAction(event);\n\t}\n\n\tregisterAction(action: Action) {\n\t\tthis.actions.push(action);\n\t}\n\n\ttryActivateParentState(keys: string[]) {\n\t\tif (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n\t\t\tthis.eject();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\ttryActivateChildState(keys: string[]) {\n\t\tconst state = this.findStateToActivate(keys);\n\t\tif (state) {\n\t\t\tthis.engine.getStateMachine().pushState(state);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindStateToActivate(keys: string[]) {\n\t\tfor (let child of this.childStates) {\n\t\t\tif (child.isKeysFullfilled(keys)) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisKeysFullfilled(keys: string[]) {\n\t\treturn _.intersection(this.keys, keys).length === this.keys.length;\n\t}\n\n\tactivated(previous: State) {\n\t\tconst keys = this.engine.getActionEventBus().getKeys();\n\n\t\tif (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// perhaps we need to pop again?\n\t\tthis.handler1 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_DOWN,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.handler2 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().registerAction(action);\n\t\t}\n\t}\n\n\tdeactivated(next: State) {\n\t\tif (this.handler1) {\n\t\t\tthis.handler1();\n\t\t}\n\t\tif (this.handler2) {\n\t\t\tthis.handler2();\n\t\t}\n\t\t// if this happens, we are going into heirachial state machine mode\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().deregisterAction(action);\n\t\t}\n\t}\n}\n","import { State } from './State';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\n\nexport interface StateMachineListener extends BaseListener {\n\tstateChanged?: (event: BaseEvent & { newState: State }) => any;\n}\n\nexport class StateMachine extends BaseObserver<StateMachineListener> {\n\tprotected currentState: State;\n\tprotected stateStack: State[];\n\tprotected engine: CanvasEngine;\n\n\tconstructor(engine: CanvasEngine) {\n\t\tsuper();\n\t\tthis.engine = engine;\n\t\tthis.stateStack = [];\n\t}\n\n\tgetCurrentState() {\n\t\treturn this.currentState;\n\t}\n\n\tpushState(state: State) {\n\t\tthis.stateStack.push(state);\n\t\tthis.setState(state);\n\t}\n\n\tpopState() {\n\t\tthis.stateStack.pop();\n\t\tthis.setState(_.last(this.stateStack));\n\t}\n\n\tsetState(state: State) {\n\t\tstate.setEngine(this.engine);\n\n\t\t// if no state object, get the initial state\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.deactivated(state);\n\t\t}\n\t\tconst old = this.currentState;\n\t\tthis.currentState = state;\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.activated(old);\n\t\t\tthis.fireEvent<'stateChanged'>(\n\t\t\t\t{\n\t\t\t\t\tnewState: state\n\t\t\t\t},\n\t\t\t\t'stateChanged'\n\t\t\t);\n\t\t}\n\t}\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { FactoryBank } from './FactoryBank';\n\n/**\n * Base factory for all the different types of entities.\n * Gets registered with the engine, and is used to generate models\n */\nexport abstract class AbstractFactory<E extends CanvasEngine = CanvasEngine> {\n\t/**\n\t * Couples the factory with the models it generates\n\t */\n\tprotected type: string;\n\t/**\n\t * The engine gets injected when the factory is registered\n\t */\n\tprotected engine: E;\n\tprotected bank: FactoryBank;\n\n\tconstructor(type: string) {\n\t\tthis.type = type;\n\t}\n\n\tsetDiagramEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tsetFactoryBank(bank: FactoryBank) {\n\t\tthis.bank = bank;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n}\n","import { AbstractFactory } from './AbstractFactory';\nimport { BaseModel } from '../core-models/BaseModel';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateModelEvent {\n\tinitialConfig?: any;\n}\n\nexport abstract class AbstractModelFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractFactory<E> {\n\t/**\n\t * Generates new models (the core factory pattern)\n\t */\n\tabstract generateModel(event: GenerateModelEvent): T;\n}\n","import { BaseModel } from '../core-models/BaseModel';\nimport { AbstractModelFactory } from './AbstractModelFactory';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateWidgetEvent<T extends BaseModel> {\n\tmodel: T;\n}\n\n/**\n * Further extends the AbstractFactory to add widget generation capability.\n */\nexport abstract class AbstractReactFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractModelFactory<T, E> {\n\t/**\n\t * Generates React widgets from the model contained in the event object\n\t */\n\tabstract generateReactWidget(event: GenerateWidgetEvent<T>): JSX.Element;\n}\n","import { Toolkit } from '../Toolkit';\n\nexport interface BaseEvent {\n\tfiring: boolean;\n\tstopPropagation: () => any;\n}\n\nexport interface BaseEventProxy extends BaseEvent {\n\tfunction: string;\n}\n\n/**\n * Listeners are always in the form of an object that contains methods that take events\n */\nexport type BaseListener = {\n\t/**\n\t * Generic event that fires before a specific event was fired\n\t */\n\teventWillFire?: (event: BaseEvent & { function: string }) => void;\n\n\t/**\n\t * Generic event that fires after a specific event was fired (even if it was consumed)\n\t */\n\teventDidFire?: (event: BaseEvent & { function: string }) => void;\n} & {\n\t/**\n\t * Type for other events that will fire\n\t */\n\t[key: string]: (event: BaseEvent) => any;\n};\n\nexport interface ListenerHandle {\n\t/**\n\t * Used to degister the listener\n\t */\n\tderegister: () => any;\n\t/**\n\t * Original ID of the listener\n\t */\n\tid: string;\n\n\t/**\n\t * Original Listener\n\t */\n\tlistener: BaseListener;\n}\n\n/**\n * Base observer pattern class for working with listeners\n */\nexport class BaseObserver<L extends BaseListener = BaseListener> {\n\tprotected listeners: { [id: string]: L };\n\n\tconstructor() {\n\t\tthis.listeners = {};\n\t}\n\n\tprivate fireEventInternal(fire: boolean, k: keyof L, event: BaseEvent) {\n\t\tthis.iterateListeners((listener) => {\n\t\t\t// returning false here will instruct itteration to stop\n\t\t\tif (!fire && !event.firing) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// fire selected listener\n\t\t\tif (listener[k]) {\n\t\t\t\tlistener[k](event as BaseEvent);\n\t\t\t}\n\t\t});\n\t}\n\n\tfireEvent<K extends keyof L>(event: Partial<Parameters<L[K]>[0]>, k: keyof L) {\n\t\tevent = {\n\t\t\tfiring: true,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t},\n\t\t\t...event\n\t\t};\n\n\t\t// fire pre\n\t\tthis.fireEventInternal(true, 'eventWillFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\n\t\t// fire main event\n\t\tthis.fireEventInternal(false, k, event as BaseEvent);\n\n\t\t// fire post\n\t\tthis.fireEventInternal(true, 'eventDidFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\t}\n\n\titerateListeners(cb: (listener: L) => any) {\n\t\tfor (let id in this.listeners) {\n\t\t\tconst res = cb(this.listeners[id]);\n\t\t\t// cancel itteration on false\n\t\t\tif (res === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetListenerHandle(listener: L): ListenerHandle {\n\t\tfor (let id in this.listeners) {\n\t\t\tif (this.listeners[id] === listener) {\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tlistener: listener,\n\t\t\t\t\tderegister: () => {\n\t\t\t\t\t\tdelete this.listeners[id];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tregisterListener(listener: L): ListenerHandle {\n\t\tconst id = Toolkit.UID();\n\t\tthis.listeners[id] = listener;\n\t\treturn {\n\t\t\tid: id,\n\t\t\tlistener: listener,\n\t\t\tderegister: () => {\n\t\t\t\tdelete this.listeners[id];\n\t\t\t}\n\t\t};\n\t}\n\n\tderegisterListener(listener: L | ListenerHandle) {\n\t\tif (typeof listener === 'object') {\n\t\t\t(listener as ListenerHandle).deregister();\n\t\t\treturn true;\n\t\t}\n\t\tconst handle = this.getListenerHandle(listener);\n\t\tif (handle) {\n\t\t\thandle.deregister();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { BaseEvent, BaseListener, BaseObserver } from './BaseObserver';\nimport { AbstractFactory } from './AbstractFactory';\nimport * as _ from 'lodash';\n\nexport interface FactoryBankListener<F extends AbstractFactory = AbstractFactory> extends BaseListener {\n\t/**\n\t * Factory as added to rhe bank\n\t */\n\tfactoryAdded?: (event: BaseEvent & { factory: F }) => any;\n\n\t/**\n\t * Factory was removed from the bank\n\t */\n\tfactoryRemoved?: (event: BaseEvent & { factory: F }) => any;\n}\n\n/**\n * Store and managed Factories that extend from Abstractfactory\n */\nexport class FactoryBank<\n\tF extends AbstractFactory = AbstractFactory,\n\tL extends FactoryBankListener<F> = FactoryBankListener<F>\n> extends BaseObserver<L> {\n\tprotected factories: { [type: string]: F };\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.factories = {};\n\t}\n\n\tgetFactories(): F[] {\n\t\treturn _.values(this.factories);\n\t}\n\n\tclearFactories() {\n\t\tfor (let factory in this.factories) {\n\t\t\tthis.deregisterFactory(factory);\n\t\t}\n\t}\n\n\tgetFactory<T extends F = F>(type: string): T {\n\t\tif (!this.factories[type]) {\n\t\t\tthrow new Error(`Cannot find factory with type [${type}]`);\n\t\t}\n\t\treturn this.factories[type] as T;\n\t}\n\n\tregisterFactory(factory: F) {\n\t\tfactory.setFactoryBank(this);\n\t\tthis.factories[factory.getType()] = factory;\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryAdded'>({ factory } as any, 'factoryAdded');\n\t}\n\n\tderegisterFactory(type: string) {\n\t\tconst factory = this.factories[type];\n\t\tfactory.setFactoryBank(null);\n\t\tdelete this.factories[type];\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryRemoved'>({ factory } as any, 'factoryRemoved');\n\t}\n}\n","import * as _ from 'lodash';\nimport {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from '../../core-models/BaseEntity';\nimport { LayerModel } from '../layer/LayerModel';\nimport { BaseModel } from '../../core-models/BaseModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface DiagramListener extends BaseEntityListener {\n\toffsetUpdated?(event: BaseEntityEvent<CanvasModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEntityEvent<CanvasModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEntityEvent<CanvasModel> & { size: number }): void;\n}\n\nexport interface DiagramModelOptions extends BaseEntityOptions {\n\toffsetX?: number;\n\toffsetY?: number;\n\tzoom?: number;\n\tgridSize?: number;\n}\n\nexport interface CanvasModelGenerics extends BaseEntityGenerics {\n\tLISTENER: DiagramListener;\n\tOPTIONS: DiagramModelOptions;\n\tLAYER: LayerModel;\n}\n\nexport class CanvasModel<G extends CanvasModelGenerics = CanvasModelGenerics> extends BaseEntity<G> {\n\tprotected layers: G['LAYER'][];\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper({\n\t\t\tzoom: 100,\n\t\t\tgridSize: 0,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\t...options\n\t\t});\n\t\tthis.layers = [];\n\t}\n\n\tgetSelectionEntities(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn layer.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetSelectedEntities(): BaseModel[] {\n\t\treturn _.filter(this.getSelectionEntities(), (ob) => {\n\t\t\treturn ob.isSelected();\n\t\t});\n\t}\n\n\tclearSelection() {\n\t\t_.forEach(this.getSelectedEntities(), (element) => {\n\t\t\telement.setSelected(false);\n\t\t});\n\t}\n\n\tgetModels(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn _.values(layer.getModels());\n\t\t});\n\t}\n\n\taddLayer(layer: LayerModel) {\n\t\tlayer.setParent(this);\n\t\tlayer.registerListener({\n\t\t\tentityRemoved: (event: BaseEntityEvent<BaseModel>): void => {}\n\t\t});\n\t\tthis.layers.push(layer);\n\t}\n\n\tremoveLayer(layer: LayerModel) {\n\t\tconst index = this.layers.indexOf(layer);\n\t\tif (index !== -1) {\n\t\t\tthis.layers.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetLayers() {\n\t\treturn this.layers;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.options.gridSize = size;\n\t\tthis.fireEvent({ size: size }, 'gridUpdated');\n\t}\n\n\tgetGridPosition(pos: number) {\n\t\tif (this.options.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.options.gridSize * Math.floor((pos + this.options.gridSize / 2) / this.options.gridSize);\n\t}\n\n\tdeserializeModel(data: ReturnType<this['serialize']>, engine: CanvasEngine) {\n\t\tconst models: {\n\t\t\t[id: string]: BaseModel;\n\t\t} = {};\n\t\tconst promises: {\n\t\t\t[id: string]: Promise<BaseModel>;\n\t\t} = {};\n\t\tconst resolvers: {\n\t\t\t[id: string]: (model: BaseModel) => any;\n\t\t} = {};\n\n\t\tconst event: DeserializeEvent = {\n\t\t\tdata: data,\n\t\t\tengine: engine,\n\t\t\tregisterModel: (model: BaseModel) => {\n\t\t\t\tmodels[model.getID()] = model;\n\t\t\t\tif (resolvers[model.getID()]) {\n\t\t\t\t\tresolvers[model.getID()](model);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetModel<T extends BaseModel>(id: string): Promise<T> {\n\t\t\t\tif (models[id]) {\n\t\t\t\t\treturn Promise.resolve(models[id]) as Promise<T>;\n\t\t\t\t}\n\t\t\t\tif (!promises[id]) {\n\t\t\t\t\tpromises[id] = new Promise((resolve) => {\n\t\t\t\t\t\tresolvers[id] = resolve;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn promises[id] as Promise<T>;\n\t\t\t}\n\t\t};\n\t\tthis.deserialize(event);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.offsetX = event.data.offsetX;\n\t\tthis.options.offsetY = event.data.offsetY;\n\t\tthis.options.zoom = event.data.zoom;\n\t\tthis.options.gridSize = event.data.gridSize;\n\t\t_.forEach(event.data.layers, (layer) => {\n\t\t\tconst layerOb = event.engine.getFactoryForLayer(layer.type).generateModel({\n\t\t\t\tinitialConfig: layer\n\t\t\t});\n\t\t\tlayerOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: layer\n\t\t\t});\n\t\t\tthis.addLayer(layerOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\toffsetX: this.options.offsetX,\n\t\t\toffsetY: this.options.offsetY,\n\t\t\tzoom: this.options.zoom,\n\t\t\tgridSize: this.options.gridSize,\n\t\t\tlayers: _.map(this.layers, (layer) => {\n\t\t\t\treturn layer.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.options.zoom = zoom;\n\t\tthis.fireEvent({ zoom }, 'zoomUpdated');\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.options.offsetX = offsetX;\n\t\tthis.options.offsetY = offsetY;\n\t\tthis.fireEvent({ offsetX, offsetY }, 'offsetUpdated');\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.setOffset(offsetX, this.options.offsetY);\n\t}\n\n\tsetOffsetY(offsetY: number) {\n\t\tthis.setOffset(this.options.offsetX, offsetY);\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.options.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.options.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.options.zoom;\n\t}\n}\n","import * as React from 'react';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { TransformLayerWidget } from '../layer/TransformLayerWidget';\nimport styled from '@emotion/styled';\nimport { SmartLayerWidget } from '../layer/SmartLayerWidget';\n\nexport interface DiagramProps {\n\tengine: CanvasEngine;\n\tclassName?: string;\n}\n\nnamespace S {\n\texport const Canvas = styled.div`\n\t\tposition: relative;\n\t\tcursor: move;\n\t\toverflow: hidden;\n\t`;\n}\n\nexport class CanvasWidget extends React.Component<DiagramProps> {\n\tref: React.RefObject<HTMLDivElement>;\n\tkeyUp: any;\n\tkeyDown: any;\n\tcanvasListener: any;\n\n\tconstructor(props: DiagramProps) {\n\t\tsuper(props);\n\n\t\tthis.ref = React.createRef();\n\t\tthis.state = {\n\t\t\taction: null,\n\t\t\tdiagramEngineListener: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.engine.deregisterListener(this.canvasListener);\n\t\tthis.props.engine.setCanvas(null);\n\n\t\tdocument.removeEventListener('keyup', this.keyUp);\n\t\tdocument.removeEventListener('keydown', this.keyDown);\n\t}\n\n\tregisterCanvas() {\n\t\tthis.props.engine.setCanvas(this.ref.current);\n\t\tthis.props.engine.iterateListeners((list) => {\n\t\t\tlist.rendered && list.rendered();\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.registerCanvas();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.canvasListener = this.props.engine.registerListener({\n\t\t\trepaintCanvas: () => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\n\t\tthis.keyDown = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\t\tthis.keyUp = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\n\t\tdocument.addEventListener('keyup', this.keyUp);\n\t\tdocument.addEventListener('keydown', this.keyDown);\n\t\tthis.registerCanvas();\n\t}\n\n\trender() {\n\t\tconst engine = this.props.engine;\n\t\tconst model = engine.getModel();\n\n\t\treturn (\n\t\t\t<S.Canvas\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tref={this.ref}\n\t\t\t\tonWheel={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseDown={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseUp={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseMove={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchStart={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchEnd={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchMove={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{model.getLayers().map((layer) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TransformLayerWidget layer={layer} key={layer.getID()}>\n\t\t\t\t\t\t\t<SmartLayerWidget layer={layer} engine={this.props.engine} key={layer.getID()} />\n\t\t\t\t\t\t</TransformLayerWidget>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</S.Canvas>\n\t\t);\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelOptions } from '../../core-models/BaseModel';\nimport { CanvasModel } from '../canvas/CanvasModel';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { DeserializeEvent } from '../../core-models/BaseEntity';\n\nexport interface LayerModelOptions extends BaseModelOptions {\n\tisSvg?: boolean;\n\ttransformed?: boolean;\n}\n\nexport interface LayerModelGenerics extends BaseModelGenerics {\n\tOPTIONS: LayerModelOptions;\n\tPARENT: CanvasModel;\n\tCHILDREN: BaseModel;\n\tENGINE: CanvasEngine;\n}\n\nexport abstract class LayerModel<G extends LayerModelGenerics = LayerModelGenerics> extends BaseModel<G> {\n\tprotected models: { [id: string]: G['CHILDREN'] };\n\tprotected repaintEnabled: boolean;\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper(options);\n\t\tthis.models = {};\n\t\tthis.repaintEnabled = true;\n\t}\n\n\t/**\n\t * This is used for deserialization\n\t */\n\tabstract getChildModelFactoryBank(engine: G['ENGINE']): FactoryBank<AbstractModelFactory<BaseModel>>;\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.isSvg = !!event.data.isSvg;\n\t\tthis.options.transformed = !!event.data.transformed;\n\t\t_.forEach(event.data.models, (model) => {\n\t\t\tconst modelOb = this.getChildModelFactoryBank(event.engine).getFactory(model.type).generateModel({\n\t\t\t\tinitialConfig: model\n\t\t\t});\n\t\t\tmodelOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: model\n\t\t\t});\n\t\t\tthis.addModel(modelOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tisSvg: this.options.isSvg,\n\t\t\ttransformed: this.options.transformed,\n\t\t\tmodels: _.mapValues(this.models, (model) => {\n\t\t\t\treturn model.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tisRepaintEnabled() {\n\t\treturn this.repaintEnabled;\n\t}\n\n\tallowRepaint(allow: boolean = true) {\n\t\tthis.repaintEnabled = allow;\n\t}\n\n\tremove() {\n\t\tif (this.parent) {\n\t\t\tthis.parent.removeLayer(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\taddModel(model: G['CHILDREN']) {\n\t\tmodel.setParent(this);\n\t\tthis.models[model.getID()] = model;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn _.flatMap(this.models, (model) => {\n\t\t\treturn model.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetModels() {\n\t\treturn this.models;\n\t}\n\n\tgetModel(id: string) {\n\t\treturn this.models[id];\n\t}\n\n\tremoveModel(id: string | G['CHILDREN']): boolean {\n\t\tconst _id = typeof id === 'string' ? id : id.getID();\n\t\tif (this.models[_id]) {\n\t\t\tdelete this.models[_id];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import * as React from 'react';\nimport { LayerModel } from './LayerModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface SmartLayerWidgetProps {\n\tlayer: LayerModel;\n\tengine: CanvasEngine;\n}\n\nexport class SmartLayerWidget extends React.Component<SmartLayerWidgetProps> {\n\tshouldComponentUpdate(): boolean {\n\t\treturn this.props.layer.isRepaintEnabled();\n\t}\n\n\trender() {\n\t\treturn this.props.engine.getFactoryForLayer(this.props.layer).generateReactWidget({ model: this.props.layer });\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { CSSProperties } from 'react';\nimport { LayerModel } from './LayerModel';\nimport { css } from '@emotion/react';\n\nexport interface TransformLayerWidgetProps {\n\tlayer: LayerModel;\n}\n\nnamespace S {\n\tconst shared = css`\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tposition: absolute;\n\t\tpointer-events: none;\n\t\ttransform-origin: 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t`;\n\n\texport const DivLayer = styled.div`\n\t\t${shared}\n\t`;\n\n\texport const SvgLayer = styled.svg`\n\t\t${shared}\n\t`;\n}\n\nexport class TransformLayerWidget extends React.Component<React.PropsWithChildren<TransformLayerWidgetProps>> {\n\tconstructor(props: TransformLayerWidgetProps) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tgetTransform() {\n\t\tconst model = this.props.layer.getParent();\n\t\treturn `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n\t}\n\n\tgetTransformStyle(): CSSProperties {\n\t\tif (this.props.layer.getOptions().transformed) {\n\t\t\treturn {\n\t\t\t\ttransform: this.getTransform()\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\tif (this.props.layer.getOptions().isSvg) {\n\t\t\treturn <S.SvgLayer style={this.getTransformStyle()}>{this.props.children}</S.SvgLayer>;\n\t\t}\n\t\treturn <S.DivLayer style={this.getTransformStyle()}>{this.props.children}</S.DivLayer>;\n\t}\n}\n","import * as React from 'react';\nimport { AbstractReactFactory, GenerateWidgetEvent } from '../../core/AbstractReactFactory';\nimport { SelectionLayerModel } from './SelectionLayerModel';\nimport { GenerateModelEvent } from '../../core/AbstractModelFactory';\nimport { SelectionBoxWidget } from './SelectionBoxWidget';\n\nexport class SelectionBoxLayerFactory extends AbstractReactFactory<SelectionLayerModel> {\n\tconstructor() {\n\t\tsuper('selection');\n\t}\n\n\tgenerateModel(event: GenerateModelEvent): SelectionLayerModel {\n\t\treturn new SelectionLayerModel();\n\t}\n\n\tgenerateReactWidget(event: GenerateWidgetEvent<SelectionLayerModel>): JSX.Element {\n\t\treturn <SelectionBoxWidget rect={event.model.box} />;\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { SimpleClientRect } from '../../states/SelectionBoxState';\n\nexport interface SelectionBoxWidgetProps {\n\trect: SimpleClientRect;\n}\n\nnamespace S {\n\texport const Container = styled.div`\n\t\tposition: absolute;\n\t\tbackground-color: rgba(0, 192, 255, 0.2);\n\t\tborder: solid 2px rgb(0, 192, 255);\n\t`;\n}\n\nexport class SelectionBoxWidget extends React.Component<SelectionBoxWidgetProps> {\n\trender() {\n\t\tconst { rect } = this.props;\n\n\t\tif (!rect) return null;\n\n\t\treturn (\n\t\t\t<S.Container\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: rect.top,\n\t\t\t\t\tleft: rect.left,\n\t\t\t\t\twidth: rect.width,\n\t\t\t\t\theight: rect.height\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { LayerModel } from '../layer/LayerModel';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { BaseModel } from '../../core-models/BaseModel';\nimport { SimpleClientRect } from '../../states/SelectionBoxState';\n\nexport class SelectionLayerModel extends LayerModel {\n\tbox: SimpleClientRect;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\ttransformed: false,\n\t\t\tisSvg: false,\n\t\t\ttype: 'selection'\n\t\t});\n\t}\n\n\tsetBox(rect: SimpleClientRect) {\n\t\tthis.box = rect;\n\t}\n\n\tgetChildModelFactoryBank(): FactoryBank<AbstractModelFactory<BaseModel>> {\n\t\t// is not used as it doesnt serialize\n\t\treturn null;\n\t}\n}\n","export * from './CanvasEngine';\nexport * from './Toolkit';\nexport * from './entities/canvas/CanvasModel';\n\nexport * from './core/AbstractFactory';\nexport * from './core/AbstractModelFactory';\nexport * from './core/AbstractReactFactory';\nexport * from './core/BaseObserver';\nexport * from './core/FactoryBank';\nexport * from './core/ModelGeometryInterface';\n\nexport * from './core-actions/Action';\nexport * from './core-actions/ActionEventBus';\n\nexport * from './core-models/BaseEntity';\nexport * from './core-models/BaseModel';\nexport * from './core-models/BasePositionModel';\n\nexport * from './entities/canvas/CanvasModel';\nexport * from './entities/canvas/CanvasWidget';\n\nexport * from './entities/layer/LayerModel';\nexport * from './entities/layer/TransformLayerWidget';\nexport * from './entities/layer/SmartLayerWidget';\n\nexport * from './entities/selection/SelectionBoxLayerFactory';\nexport * from './entities/selection/SelectionBoxWidget';\nexport * from './entities/selection/SelectionLayerModel';\n\nexport * from './widgets/PeformanceWidget';\n\nexport * from './core-state/AbstractDisplacementState';\nexport * from './core-state/State';\nexport * from './core-state/StateMachine';\n\nexport * from './states/DefaultState';\nexport * from './states/DragCanvasState';\nexport * from './states/SelectingState';\nexport * from './states/SelectionBoxState';\nexport * from './states/MoveItemsState';\n\nexport * from './actions/DeleteItemsAction';\nexport * from './actions/ZoomCanvasAction';\nexport * from './actions/PanAndZoomCanvasAction';\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { MouseEvent, TouchEvent } from 'react';\nimport { DragCanvasState } from './DragCanvasState';\nimport { SelectingState } from './SelectingState';\nimport { MoveItemsState } from './MoveItemsState';\n\nexport class DefaultState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'default'\n\t\t});\n\t\tthis.childStates = [new SelectingState()];\n\n\t\t// determine what was clicked on\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// the canvas was clicked on, transition to the dragging canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.transitionWithEvent(new MoveItemsState(), event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// touch drags the canvas\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (event: ActionEvent<TouchEvent>) => {\n\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\n\nexport interface DragCanvasStateOptions {\n\t/**\n\t * If enabled, the canvas is available to drag\n\t */\n\tallowDrag?: boolean;\n}\n\nexport class DragCanvasState extends AbstractDisplacementState {\n\t// store this as we drag the canvas\n\tinitialCanvasX: number;\n\tinitialCanvasY: number;\n\tconfig: DragCanvasStateOptions;\n\n\tconstructor(options: DragCanvasStateOptions = {}) {\n\t\tsuper({\n\t\t\tname: 'drag-canvas'\n\t\t});\n\t\tthis.config = {\n\t\t\tallowDrag: true,\n\t\t\t...options\n\t\t};\n\t}\n\n\tasync activated(prev) {\n\t\tsuper.activated(prev);\n\t\tthis.engine.getModel().clearSelection();\n\t\tawait this.engine.repaintCanvas(true);\n\n\t\t// we can block layer rendering because we are only targeting the transforms\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(false);\n\t\t}\n\n\t\tthis.initialCanvasX = this.engine.getModel().getOffsetX();\n\t\tthis.initialCanvasY = this.engine.getModel().getOffsetY();\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(true);\n\t\t}\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tif (this.config.allowDrag) {\n\t\t\tthis.engine\n\t\t\t\t.getModel()\n\t\t\t\t.setOffset(this.initialCanvasX + event.displacementX, this.initialCanvasY + event.displacementY);\n\t\t\tthis.engine.repaintCanvas();\n\t\t}\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { BasePositionModel } from '../core-models/BasePositionModel';\nimport { Point } from '@projectstorm/geometry';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport class MoveItemsState<E extends CanvasEngine = CanvasEngine> extends AbstractDisplacementState<E> {\n\tinitialPositions: {\n\t\t[id: string]: {\n\t\t\tpoint: Point;\n\t\t\titem: BasePositionModel;\n\t\t};\n\t};\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'move-items'\n\t\t});\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!element.isSelected()) {\n\t\t\t\t\t\tthis.engine.getModel().clearSelection();\n\t\t\t\t\t}\n\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.initialPositions = {};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tconst items = this.engine.getModel().getSelectedEntities();\n\t\tconst model = this.engine.getModel();\n\t\tfor (let item of items) {\n\t\t\tif (item instanceof BasePositionModel) {\n\t\t\t\tif (item.isLocked()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!this.initialPositions[item.getID()]) {\n\t\t\t\t\tthis.initialPositions[item.getID()] = {\n\t\t\t\t\t\tpoint: item.getPosition(),\n\t\t\t\t\t\titem: item\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst pos = this.initialPositions[item.getID()].point;\n\t\t\t\titem.setPosition(\n\t\t\t\t\tmodel.getGridPosition(pos.x + event.virtualDisplacementX),\n\t\t\t\t\tmodel.getGridPosition(pos.y + event.virtualDisplacementY)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SelectionBoxState } from './SelectionBoxState';\nimport { MouseEvent } from 'react';\n\nexport class SelectingState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selecting'\n\t\t});\n\t\tthis.keys = ['shift'];\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// go into a selection box on the canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new SelectionBoxState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { SelectionLayerModel } from '../entities/selection/SelectionLayerModel';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport interface SimpleClientRect {\n\tleft: number;\n\tright: number;\n\twidth: number;\n\theight: number;\n\ttop: number;\n\tbottom: number;\n}\n\nexport class SelectionBoxState extends AbstractDisplacementState {\n\tlayer: SelectionLayerModel;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selection-box'\n\t\t});\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.layer = new SelectionLayerModel();\n\t\tthis.engine.getModel().addLayer(this.layer);\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tthis.layer.remove();\n\t\tthis.engine.repaintCanvas();\n\t}\n\n\tgetBoxDimensions(event: AbstractDisplacementStateEvent): SimpleClientRect {\n\t\tlet rel: Point;\n\n\t\tif ('touches' in event.event) {\n\t\t\tconst touch = event.event.touches[0];\n\t\t\trel = this.engine.getRelativePoint(touch.clientX, touch.clientY);\n\t\t} else {\n\t\t\trel = this.engine.getRelativePoint(event.event.clientX, event.event.clientY);\n\t\t}\n\n\t\treturn {\n\t\t\tleft: rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\ttop: rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n\t\t\twidth: Math.abs(rel.x - this.initialXRelative),\n\t\t\theight: Math.abs(rel.y - this.initialYRelative),\n\t\t\tright: rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\tbottom: rel.y < this.initialYRelative ? this.initialYRelative : rel.y\n\t\t};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tthis.layer.setBox(this.getBoxDimensions(event));\n\n\t\tconst relative = this.engine.getRelativeMousePoint({\n\t\t\tclientX: this.initialX,\n\t\t\tclientY: this.initialY\n\t\t});\n\t\tif (event.virtualDisplacementX < 0) {\n\t\t\trelative.x -= Math.abs(event.virtualDisplacementX);\n\t\t}\n\t\tif (event.virtualDisplacementY < 0) {\n\t\t\trelative.y -= Math.abs(event.virtualDisplacementY);\n\t\t}\n\t\tconst rect = new Rectangle(relative, Math.abs(event.virtualDisplacementX), Math.abs(event.virtualDisplacementY));\n\n\t\tfor (let model of this.engine.getModel().getSelectionEntities()) {\n\t\t\tif ((model as unknown as ModelGeometryInterface).getBoundingBox) {\n\t\t\t\tconst bounds = (model as unknown as ModelGeometryInterface).getBoundingBox();\n\t\t\t\tif (rect.containsPoint(bounds.getTopLeft()) && rect.containsPoint(bounds.getBottomRight())) {\n\t\t\t\t\tmodel.setSelected(true);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.setSelected(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport interface PeformanceWidgetProps {\n\tchildren: () => JSX.Element;\n\tserialized: object;\n\tmodel: BaseModel;\n}\n\nexport interface PeformanceWidgetState {}\n\nexport class PeformanceWidget extends React.Component<PeformanceWidgetProps, PeformanceWidgetState> {\n\tshouldComponentUpdate(\n\t\tnextProps: Readonly<PeformanceWidgetProps>,\n\t\tnextState: Readonly<PeformanceWidgetState>,\n\t\tnextContext: any\n\t): boolean {\n\t\tif (!this.props.model.performanceTune()) {\n\t\t\treturn true;\n\t\t}\n\t\t// deserialization event\n\t\tif (this.props.model !== nextProps.model) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// change event\n\t\treturn !_.isEqual(this.props.serialized, nextProps.serialized);\n\t}\n\n\trender() {\n\t\treturn this.props.children();\n\t}\n}\n","module.exports = require(\"@emotion/react\");","module.exports = require(\"@emotion/styled\");","module.exports = require(\"@projectstorm/geometry\");","module.exports = require(\"lodash\");","module.exports = require(\"react\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"names":["root","factory","exports","module","define","amd","self","CanvasEngine","BaseObserver","constructor","options","super","this","model","eventBus","ActionEventBus","stateMachine","StateMachine","layerFactories","FactoryBank","registerFactoryBank","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","repaintDebounceMs","registerAction","ZoomCanvasAction","registerDefaultPanAndZoomCanvasAction","PanAndZoomCanvasAction","DeleteItemsAction","getStateMachine","getRelativeMousePoint","event","point","getRelativePoint","clientX","clientY","Point","x","getOffsetX","getZoomLevel","y","getOffsetY","canvasRect","canvas","getBoundingClientRect","left","top","registerListener","factoryAdded","setDiagramEngine","factoryRemoved","getActionEventBus","getLayerFactories","getFactoryForLayer","layer","getFactory","getType","setModel","requestAnimationFrame","repaintCanvas","getModel","promise","repaint","iterateListeners","listener","repaintFn","debounce","Promise","resolve","l","rendered","deregister","setCanvas","fireEvent","getCanvas","getMouseElement","zoomToFit","xFactor","clientWidth","scrollWidth","yFactor","clientHeight","scrollHeight","zoomFactor","setZoomLevel","setOffset","Toolkit","static","TESTING","TESTING_UID","replace","c","r","Math","random","toString","element","selector","Element","prototype","closest","s","el","matches","call","parentElement","parentNode","nodeType","Action","keyCodes","modifiers","ctrlKey","shiftKey","altKey","metaKey","type","InputType","KEY_DOWN","fire","keyCode","indexOf","_","isEqual","forEach","engine","getSelectedEntities","isLocked","remove","MOUSE_WHEEL","actionEvent","getLayers","allowRepaint","stopPropagation","oldZoomFactor","scrollDelta","inverseZoom","deltaY","boundingRect","currentTarget","width","height","widthDiff","heightDiff","yDelta","xDelta","deltaX","id","UID","setEngine","actions","keys","getKeys","action","deregisterAction","getActionsForType","filter","getModelForEvent","getActionsForEvent","MOUSE_DOWN","MOUSE_UP","key","toLowerCase","KEY_UP","MOUSE_MOVE","TOUCH_START","TOUCH_END","TOUCH_MOVE","fireAction","BaseEntity","getOptions","getID","doClone","lookupTable","clone","cloneDeep","clearListeners","listeners","deserialize","data","locked","serialize","k","entity","setLocked","BaseModel","performanceTune","getParentCanvasModel","parent","CanvasModel","getParent","setParent","getSelectionEntities","selected","extras","isSelected","setSelected","BasePositionModel","position","setPosition","getBoundingBox","Rectangle","getPosition","getX","getY","AbstractDisplacementState","State","handleMoveStart","buttons","eject","handleMove","handleMoveEnd","touches","initialX","initialY","rel","initialXRelative","initialYRelative","fireMouseMoved","displacementX","displacementY","virtualDisplacementX","virtualDisplacementY","childStates","popState","transitionWithEvent","state","pushState","push","tryActivateParentState","length","isKeysFullfilled","tryActivateChildState","findStateToActivate","child","intersection","activated","previous","handler1","handler2","deactivated","next","stateStack","getCurrentState","currentState","setState","pop","last","old","newState","setFactoryBank","bank","AbstractModelFactory","AbstractFactory","AbstractReactFactory","fireEventInternal","firing","function","cb","getListenerHandle","deregisterListener","handle","factories","getFactories","values","clearFactories","deregisterFactory","Error","registerFactory","zoom","gridSize","offsetX","offsetY","layers","flatMap","ob","clearSelection","getModels","addLayer","entityRemoved","removeLayer","index","splice","setGridSize","size","getGridPosition","pos","floor","deserializeModel","models","promises","resolvers","registerModel","layerOb","generateModel","initialConfig","map","setOffsetX","setOffsetY","S","Canvas","div","CanvasWidget","React","Component","props","ref","createRef","diagramEngineListener","componentWillUnmount","canvasListener","document","removeEventListener","keyUp","keyDown","registerCanvas","current","list","componentDidUpdate","componentDidMount","forceUpdate","addEventListener","render","className","onWheel","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","TransformLayerWidget","SmartLayerWidget","LayerModel","repaintEnabled","isSvg","transformed","modelOb","getChildModelFactoryBank","addModel","mapValues","isRepaintEnabled","allow","removeModel","_id","shouldComponentUpdate","generateReactWidget","shared","css","DivLayer","SvgLayer","svg","getTransform","getTransformStyle","transform","style","children","SelectionBoxLayerFactory","SelectionLayerModel","SelectionBoxWidget","rect","box","Container","setBox","DefaultState","name","SelectingState","MoveItemsState","DragCanvasState","config","allowDrag","prev","initialCanvasX","initialCanvasY","initialPositions","items","item","SelectionBoxState","getBoxDimensions","touch","abs","right","bottom","relative","bounds","containsPoint","getTopLeft","getBottomRight","PeformanceWidget","nextProps","nextState","nextContext","serialized","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}