{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://@projectstorm/react-diagrams-geometry/webpack/universalModuleDefinition","webpack://@projectstorm/react-diagrams-geometry/./src/BezierCurve.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Matrix.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Point.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Polygon.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Rectangle.ts","webpack://@projectstorm/react-diagrams-geometry/./src/index.ts","webpack://@projectstorm/react-diagrams-geometry/external commonjs \"lodash\"","webpack://@projectstorm/react-diagrams-geometry/webpack/bootstrap","webpack://@projectstorm/react-diagrams-geometry/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@projectstorm/react-diagrams-geometry\"] = factory();\n\telse\n\t\troot[\"@projectstorm/react-diagrams-geometry\"] = factory();\n})(self, () => {\nreturn ","import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport enum BezierCurvepPoints {\n\tSOURCE = 0,\n\tSOURCE_CONTROL = 1,\n\tTARGET_CONTROL = 2,\n\tTARGET = 3\n}\n\nexport class BezierCurve extends Polygon {\n\tconstructor() {\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\n\t}\n\n\tgetSVGCurve(): string {\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tgetSource(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\n\t}\n\n\tgetSourceControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\n\t}\n\n\tgetTargetControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\n\t}\n\n\tgetTarget(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET];\n\t}\n\n\tsetSource(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\n\t}\n\n\tsetSourceControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n\t}\n\n\tsetTargetControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n\t}\n\n\tsetTarget(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\n\t}\n}\n","export class Matrix {\n\tmatrix: number[][];\n\n\tconstructor(matrix: number[][]) {\n\t\tthis.matrix = matrix;\n\t}\n\n\tmmul(matrix: Matrix): Matrix {\n\t\tthis.matrix = this.matrix.map((row, i) =>\n\t\t\tmatrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0))\n\t\t);\n\t\treturn this;\n\t}\n\n\tasArray(): number[][] {\n\t\treturn this.matrix;\n\t}\n\n\tget(rowIndex: number, columnIndex: number): number {\n\t\treturn this.asArray()[rowIndex][columnIndex];\n\t}\n}\n","import { Matrix } from './Matrix';\n\nexport class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.x += x;\n\t\tthis.y += y;\n\t}\n\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\ttoSVG() {\n\t\treturn this.x + ' ' + this.y;\n\t}\n\n\tasMatrix() {\n\t\treturn new Matrix([[this.x], [this.y], [1]]);\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\tlet final: Matrix = matrix.mmul(this.asMatrix());\n\t\tthis.x = final.get(0, 0);\n\t\tthis.y = final.get(1, 0);\n\t}\n\n\tpublic static middlePoint(pointA: Point, pointB: Point): Point {\n\t\treturn new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.scaleMatrix(x, y),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.rotateMatrix(deg),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n","import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Matrix } from './Matrix';\n\nexport class Polygon {\n\tprotected points: Point[];\n\n\tconstructor(points: Point[] = []) {\n\t\tthis.points = points;\n\t}\n\n\tserialize() {\n\t\treturn _.map(this.points, (point) => {\n\t\t\treturn [point.x, point.y];\n\t\t});\n\t}\n\n\tdeserialize(data: any) {\n\t\tthis.points = _.map(data, (point) => {\n\t\t\treturn new Point(point[0], point[1]);\n\t\t});\n\t}\n\n\tscale(x, y, origin: Point) {\n\t\tlet matrix = Point.createScaleMatrix(x, y, origin);\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tthis.points = points;\n\t}\n\n\tgetPoints(): Point[] {\n\t\treturn this.points;\n\t}\n\n\trotate(degrees: number) {\n\t\tthis.transform(Point.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n\t}\n\n\ttranslate(offsetX: number, offsetY: number) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.translate(offsetX, offsetY);\n\t\t});\n\t}\n\n\tdoClone(ob: this) {\n\t\tthis.points = _.map(ob.points, (point) => {\n\t\t\treturn point.clone();\n\t\t});\n\t}\n\n\tclone(): this {\n\t\tlet ob = Object.create(this);\n\t\tob.doClone(this);\n\t\treturn ob;\n\t}\n\n\tgetOrigin(): Point {\n\t\tif (this.points.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tlet dimensions = this.getBoundingBox();\n\t\treturn Point.middlePoint(dimensions.getTopLeft(), dimensions.getBottomRight());\n\t}\n\n\tstatic boundingBoxFromPolygons(polygons: Polygon[]): Rectangle {\n\t\treturn Polygon.boundingBoxFromPoints(\n\t\t\t_.flatMap(polygons, (polygon) => {\n\t\t\t\treturn polygon.getPoints();\n\t\t\t})\n\t\t);\n\t}\n\n\tstatic boundingBoxFromPoints(points: Point[]): Rectangle {\n\t\tif (points.length === 0) {\n\t\t\treturn new Rectangle(0, 0, 0, 0);\n\t\t}\n\n\t\tlet minX = points[0].x;\n\t\tlet maxX = points[0].x;\n\t\tlet minY = points[0].y;\n\t\tlet maxY = points[0].y;\n\n\t\tfor (let i = 1; i < points.length; i++) {\n\t\t\tif (points[i].x < minX) {\n\t\t\t\tminX = points[i].x;\n\t\t\t}\n\t\t\tif (points[i].x > maxX) {\n\t\t\t\tmaxX = points[i].x;\n\t\t\t}\n\t\t\tif (points[i].y < minY) {\n\t\t\t\tminY = points[i].y;\n\t\t\t}\n\t\t\tif (points[i].y > maxY) {\n\t\t\t\tmaxY = points[i].y;\n\t\t\t}\n\t\t}\n\n\t\treturn new Rectangle(new Point(minX, minY), new Point(maxX, minY), new Point(maxX, maxY), new Point(minX, maxY));\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\tlet minX = this.points[0].x;\n\t\tlet maxX = this.points[0].x;\n\t\tlet minY = this.points[0].y;\n\t\tlet maxY = this.points[0].y;\n\n\t\tfor (let i = 1; i < this.points.length; i++) {\n\t\t\tif (this.points[i].x < minX) {\n\t\t\t\tminX = this.points[i].x;\n\t\t\t}\n\t\t\tif (this.points[i].x > maxX) {\n\t\t\t\tmaxX = this.points[i].x;\n\t\t\t}\n\t\t\tif (this.points[i].y < minY) {\n\t\t\t\tminY = this.points[i].y;\n\t\t\t}\n\t\t\tif (this.points[i].y > maxY) {\n\t\t\t\tmaxY = this.points[i].y;\n\t\t\t}\n\t\t}\n\n\t\treturn new Rectangle(new Point(minX, minY), new Point(maxX, minY), new Point(maxX, maxY), new Point(minX, maxY));\n\t}\n}\n\nimport { Rectangle } from './Rectangle';\n","import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport class Rectangle extends Polygon {\n\tconstructor(tl: Point, tr: Point, br: Point, bl: Point);\n\tconstructor(position: Point, width: number, height: number);\n\tconstructor(x?: number, y?: number, width?: number, height?: number);\n\n\tconstructor(a: any = 0, b: any = 0, c: any = 0, d: any = 0) {\n\t\tif (a instanceof Point && b instanceof Point && c instanceof Point && d instanceof Point) {\n\t\t\tsuper([a, b, c, d]);\n\t\t} else if (a instanceof Point) {\n\t\t\tsuper([a, new Point(a.x + b, a.y), new Point(a.x + b, a.y + c), new Point(a.x, a.y + c)]);\n\t\t} else {\n\t\t\tsuper(Rectangle.pointsFromBounds(a, b, c, d));\n\t\t}\n\t}\n\n\tstatic pointsFromBounds(x: number, y: number, width: number, height: number): Point[] {\n\t\treturn [new Point(x, y), new Point(x + width, y), new Point(x + width, y + height), new Point(x, y + height)];\n\t}\n\n\tupdateDimensions(x: number, y: number, width: number, height: number) {\n\t\tthis.points = Rectangle.pointsFromBounds(x, y, width, height);\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow 'Rectangles must always have 4 points';\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tcontainsPoint(point: Point) {\n\t\tconst tl = this.getTopLeft();\n\t\tconst br = this.getBottomRight();\n\n\t\treturn point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n\t}\n\n\tgetWidth(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2)\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n\t\t\t\tMath.pow(this.getBottomLeft().y - this.getTopLeft().y, 2)\n\t\t);\n\t}\n\n\tgetTopMiddle(): Point {\n\t\treturn Point.middlePoint(this.getTopLeft(), this.getTopRight());\n\t}\n\n\tgetBottomMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n\t}\n\n\tgetLeftMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n\t}\n\n\tgetRightMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomRight(), this.getTopRight());\n\t}\n\n\tgetTopLeft(): Point {\n\t\treturn this.points[0];\n\t}\n\n\tgetTopRight(): Point {\n\t\treturn this.points[1];\n\t}\n\n\tgetBottomRight(): Point {\n\t\treturn this.points[2];\n\t}\n\n\tgetBottomLeft(): Point {\n\t\treturn this.points[3];\n\t}\n}\n","export * from './Point';\nexport * from './Matrix';\nexport * from './Polygon';\nexport * from './Rectangle';\nexport * from './BezierCurve';\n","module.exports = require(\"lodash\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"names":["root","factory","exports","module","define","amd","self","BezierCurvepPoints","BezierCurve","Polygon","constructor","super","Point","getSVGCurve","this","getSource","toSVG","getSourceControl","getTargetControl","getTarget","setPoints","points","length","Error","SOURCE","SOURCE_CONTROL","TARGET_CONTROL","TARGET","setSource","point","setSourceControl","setTargetControl","setTarget","matrix","mmul","map","row","i","asArray","_","j","reduce","acc","n","get","rowIndex","columnIndex","x","y","translate","clone","asMatrix","Matrix","transform","final","static","pointA","pointB","matrices","m","deg","Math","cos","sin","origin","multiply","translateMatrix","scaleMatrix","rotateMatrix","serialize","deserialize","data","scale","createScaleMatrix","forEach","getPoints","rotate","degrees","createRotateMatrix","PI","getOrigin","offsetX","offsetY","doClone","ob","Object","create","dimensions","getBoundingBox","middlePoint","getTopLeft","getBottomRight","polygons","boundingBoxFromPoints","flatMap","polygon","Rectangle","minX","maxX","minY","maxY","a","b","c","d","pointsFromBounds","width","height","updateDimensions","containsPoint","tl","br","getWidth","sqrt","pow","getTopRight","getHeight","getBottomLeft","getTopMiddle","getBottomMiddle","getLeftMiddle","getRightMiddle","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}