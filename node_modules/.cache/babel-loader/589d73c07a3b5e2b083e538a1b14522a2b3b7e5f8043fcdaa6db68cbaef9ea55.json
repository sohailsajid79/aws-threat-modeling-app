{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalGrid from '../grid/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { DATA_ATTR_FIELD_ERROR, DATA_ATTR_FIELD_LABEL, getFieldSlotSeletor, getSubStepAllSelector, getTextFromSelector } from '../internal/analytics/selectors';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { FormFieldContext, useFormFieldContext } from '../internal/context/form-field-context';\nimport { InfoLinkLabelContext } from '../internal/context/info-link-label-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { joinStrings } from '../internal/utils/strings';\nimport { getAriaDescribedBy, getGridDefinition, getSlotIds } from './util';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nexport function FormFieldError(_ref) {\n  let {\n    id,\n    children,\n    errorIconAriaLabel\n  } = _ref;\n  const i18n = useInternalI18n('form-field');\n  const contentRef = useRef(null);\n  const i18nErrorIconAriaLabel = i18n('i18nStrings.errorIconAriaLabel', errorIconAriaLabel);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: id,\n    className: styles.error\n  }, React.createElement(\"div\", {\n    className: styles['error-icon-shake-wrapper']\n  }, React.createElement(\"div\", {\n    role: \"img\",\n    \"aria-label\": i18nErrorIconAriaLabel,\n    className: styles['error-icon-scale-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"status-negative\",\n    size: \"small\"\n  }))), React.createElement(\"span\", {\n    className: styles.error__message,\n    ref: contentRef\n  }, children)), React.createElement(LiveRegion, {\n    assertive: true,\n    source: [i18nErrorIconAriaLabel, contentRef]\n  }));\n}\nexport function FormFieldWarning(_ref2) {\n  let {\n    id,\n    children,\n    warningIconAriaLabel\n  } = _ref2;\n  const i18n = useInternalI18n('form-field');\n  const contentRef = useRef(null);\n  const i18nWarningIconAriaLabel = i18n('i18nStrings.warningIconAriaLabel', warningIconAriaLabel);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: id,\n    className: styles.warning\n  }, React.createElement(\"div\", {\n    className: styles['warning-icon-shake-wrapper']\n  }, React.createElement(\"div\", {\n    role: \"img\",\n    \"aria-label\": i18nWarningIconAriaLabel,\n    className: styles['warning-icon-scale-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"status-warning\",\n    size: \"small\"\n  }))), React.createElement(\"span\", {\n    className: styles.warning__message,\n    ref: contentRef\n  }, children)), React.createElement(LiveRegion, {\n    assertive: true,\n    source: [i18nWarningIconAriaLabel, contentRef]\n  }));\n}\nexport function ConstraintText(_ref3) {\n  let {\n    id,\n    hasValidationText,\n    children\n  } = _ref3;\n  return React.createElement(\"div\", {\n    id: id,\n    className: clsx(styles.constraint, hasValidationText && styles['constraint-has-validation-text'])\n  }, children);\n}\nexport default function InternalFormField(_a) {\n  var {\n      controlId,\n      stretch = false,\n      label,\n      info,\n      i18nStrings,\n      children,\n      secondaryControl,\n      description,\n      constraintText,\n      errorText,\n      warningText,\n      __hideLabel,\n      __internalRootRef = null,\n      __disableGutters = false,\n      __analyticsMetadata = undefined\n    } = _a,\n    rest = __rest(_a, [\"controlId\", \"stretch\", \"label\", \"info\", \"i18nStrings\", \"children\", \"secondaryControl\", \"description\", \"constraintText\", \"errorText\", \"warningText\", \"__hideLabel\", \"__internalRootRef\", \"__disableGutters\", \"__analyticsMetadata\"]);\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const instanceUniqueId = useUniqueId('formField');\n  const generatedControlId = controlId || instanceUniqueId;\n  const formFieldId = controlId || generatedControlId;\n  const {\n    funnelIdentifier,\n    funnelInteractionId,\n    submissionAttempt,\n    funnelState,\n    errorCount\n  } = useFunnel();\n  const {\n    stepIdentifier,\n    stepNumber,\n    stepNameSelector\n  } = useFunnelStep();\n  const {\n    subStepErrorContext,\n    subStepIdentifier,\n    subStepSelector,\n    subStepNameSelector\n  } = useFunnelSubStep();\n  const showWarning = warningText && !errorText;\n  if (warningText && errorText) {\n    warnOnce('FileUpload', 'Both `errorText` and `warningText` exist. `warningText` will not be shown.');\n  }\n  const slotIds = getSlotIds(formFieldId, label, description, constraintText, errorText, showWarning ? warningText : undefined);\n  const ariaDescribedBy = getAriaDescribedBy(slotIds);\n  const gridDefinition = getGridDefinition(stretch, !!secondaryControl, isRefresh);\n  const {\n    ariaLabelledby: parentAriaLabelledby,\n    ariaDescribedby: parentAriaDescribedby,\n    invalid: parentInvalid,\n    warning: parentWarning\n  } = useFormFieldContext({});\n  const contextValuesWithoutControlId = {\n    ariaLabelledby: joinStrings(parentAriaLabelledby, slotIds.label) || undefined,\n    ariaDescribedby: joinStrings(parentAriaDescribedby, ariaDescribedBy) || undefined,\n    invalid: !!errorText || !!parentInvalid,\n    warning: !!warningText && !errorText || !!parentWarning && !parentInvalid\n  };\n  const analyticsAttributes = {\n    [DATA_ATTR_FIELD_LABEL]: slotIds.label ? getFieldSlotSeletor(slotIds.label) : undefined,\n    [DATA_ATTR_FIELD_ERROR]: slotIds.error ? getFieldSlotSeletor(slotIds.error) : undefined\n  };\n  useEffect(() => {\n    var _a, _b, _c;\n    if (funnelInteractionId && errorText && funnelState.current !== 'complete') {\n      const stepName = getTextFromSelector(stepNameSelector);\n      const subStepName = getTextFromSelector(subStepNameSelector);\n      errorCount.current++;\n      // We don't want to report an error if it is hidden, e.g. inside an Expandable Section.\n      const errorIsVisible = ((_c = (_b = (_a = __internalRootRef === null || __internalRootRef === void 0 ? void 0 : __internalRootRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.width) !== null && _c !== void 0 ? _c : 0) > 0;\n      if (errorIsVisible) {\n        FunnelMetrics.funnelSubStepError({\n          funnelInteractionId,\n          funnelIdentifier,\n          subStepSelector,\n          subStepName,\n          subStepNameSelector,\n          subStepIdentifier,\n          stepNumber,\n          stepName,\n          stepNameSelector,\n          stepIdentifier,\n          subStepErrorContext,\n          fieldErrorSelector: `${getFieldSlotSeletor(slotIds.error)} .${styles.error__message}`,\n          fieldLabelSelector: getFieldSlotSeletor(slotIds.label),\n          subStepAllSelector: getSubStepAllSelector(),\n          fieldIdentifier: __analyticsMetadata === null || __analyticsMetadata === void 0 ? void 0 : __analyticsMetadata.instanceIdentifier,\n          fieldErrorContext: __analyticsMetadata === null || __analyticsMetadata === void 0 ? void 0 : __analyticsMetadata.errorContext\n        });\n      }\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        errorCount.current--;\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [funnelInteractionId, errorText, submissionAttempt, errorCount]);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: __internalRootRef\n  }, analyticsAttributes, copyAnalyticsMetadataAttribute(rest)), React.createElement(\"div\", {\n    className: clsx(styles['label-wrapper'], __hideLabel && styles['visually-hidden'])\n  }, label && React.createElement(\"label\", {\n    className: clsx(styles.label, analyticsSelectors.label),\n    id: slotIds.label,\n    htmlFor: generatedControlId\n  }, label), React.createElement(InfoLinkLabelContext.Provider, {\n    value: slotIds.label\n  }, !__hideLabel && info && React.createElement(\"span\", {\n    className: styles.info\n  }, info))), description && React.createElement(\"div\", {\n    className: styles.description,\n    id: slotIds.description\n  }, description), React.createElement(\"div\", {\n    className: clsx(styles.controls, __hideLabel && styles['label-hidden'])\n  }, React.createElement(InternalGrid, {\n    gridDefinition: gridDefinition,\n    disableGutters: __disableGutters\n  }, React.createElement(FormFieldContext.Provider, {\n    value: Object.assign({\n      controlId: generatedControlId\n    }, contextValuesWithoutControlId)\n  }, children && React.createElement(\"div\", {\n    className: styles.control\n  }, children)), secondaryControl && React.createElement(FormFieldContext.Provider, {\n    value: contextValuesWithoutControlId\n  }, React.createElement(\"div\", {\n    className: styles['secondary-control']\n  }, secondaryControl)))), (constraintText || errorText || warningText) && React.createElement(\"div\", {\n    className: styles.hints\n  }, errorText && React.createElement(FormFieldError, {\n    id: slotIds.error,\n    errorIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel\n  }, errorText), showWarning && React.createElement(FormFieldWarning, {\n    id: slotIds.warning,\n    warningIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.warningIconAriaLabel\n  }, warningText), constraintText && React.createElement(ConstraintText, {\n    id: slotIds.constraint,\n    hasValidationText: !!errorText || !!warningText\n  }, constraintText)));\n}","map":{"version":3,"names":["React","useEffect","useRef","clsx","warnOnce","copyAnalyticsMetadataAttribute","InternalGrid","useInternalI18n","InternalIcon","FunnelMetrics","useFunnel","useFunnelStep","useFunnelSubStep","DATA_ATTR_FIELD_ERROR","DATA_ATTR_FIELD_LABEL","getFieldSlotSeletor","getSubStepAllSelector","getTextFromSelector","getBaseProps","LiveRegion","FormFieldContext","useFormFieldContext","InfoLinkLabelContext","useUniqueId","useVisualRefresh","joinStrings","getAriaDescribedBy","getGridDefinition","getSlotIds","analyticsSelectors","styles","FormFieldError","_ref","id","children","errorIconAriaLabel","i18n","contentRef","i18nErrorIconAriaLabel","createElement","Fragment","className","error","role","name","size","error__message","ref","assertive","source","FormFieldWarning","_ref2","warningIconAriaLabel","i18nWarningIconAriaLabel","warning","warning__message","ConstraintText","_ref3","hasValidationText","constraint","InternalFormField","_a","controlId","stretch","label","info","i18nStrings","secondaryControl","description","constraintText","errorText","warningText","__hideLabel","__internalRootRef","__disableGutters","__analyticsMetadata","undefined","rest","__rest","baseProps","isRefresh","instanceUniqueId","generatedControlId","formFieldId","funnelIdentifier","funnelInteractionId","submissionAttempt","funnelState","errorCount","stepIdentifier","stepNumber","stepNameSelector","subStepErrorContext","subStepIdentifier","subStepSelector","subStepNameSelector","showWarning","slotIds","ariaDescribedBy","gridDefinition","ariaLabelledby","parentAriaLabelledby","ariaDescribedby","parentAriaDescribedby","invalid","parentInvalid","parentWarning","contextValuesWithoutControlId","analyticsAttributes","current","stepName","subStepName","errorIsVisible","_c","_b","getBoundingClientRect","width","funnelSubStepError","fieldErrorSelector","fieldLabelSelector","subStepAllSelector","fieldIdentifier","instanceIdentifier","fieldErrorContext","errorContext","Object","assign","root","htmlFor","Provider","value","controls","disableGutters","control","hints"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/form-field/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { copyAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalGrid from '../grid/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport {\n  DATA_ATTR_FIELD_ERROR,\n  DATA_ATTR_FIELD_LABEL,\n  getFieldSlotSeletor,\n  getSubStepAllSelector,\n  getTextFromSelector,\n} from '../internal/analytics/selectors';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { FormFieldContext, useFormFieldContext } from '../internal/context/form-field-context';\nimport { InfoLinkLabelContext } from '../internal/context/info-link-label-context';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { joinStrings } from '../internal/utils/strings';\nimport { InternalFormFieldProps } from './interfaces';\nimport { getAriaDescribedBy, getGridDefinition, getSlotIds } from './util';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface FormFieldErrorProps {\n  id?: string;\n  children?: React.ReactNode;\n  errorIconAriaLabel?: string;\n}\n\ninterface FormFieldWarningProps {\n  id?: string;\n  children?: React.ReactNode;\n  warningIconAriaLabel?: string;\n}\n\nexport function FormFieldError({ id, children, errorIconAriaLabel }: FormFieldErrorProps) {\n  const i18n = useInternalI18n('form-field');\n  const contentRef = useRef<HTMLDivElement | null>(null);\n  const i18nErrorIconAriaLabel = i18n('i18nStrings.errorIconAriaLabel', errorIconAriaLabel);\n\n  return (\n    <>\n      <div id={id} className={styles.error}>\n        <div className={styles['error-icon-shake-wrapper']}>\n          <div role=\"img\" aria-label={i18nErrorIconAriaLabel} className={styles['error-icon-scale-wrapper']}>\n            <InternalIcon name=\"status-negative\" size=\"small\" />\n          </div>\n        </div>\n        <span className={styles.error__message} ref={contentRef}>\n          {children}\n        </span>\n      </div>\n\n      <LiveRegion assertive={true} source={[i18nErrorIconAriaLabel, contentRef]} />\n    </>\n  );\n}\n\nexport function FormFieldWarning({ id, children, warningIconAriaLabel }: FormFieldWarningProps) {\n  const i18n = useInternalI18n('form-field');\n  const contentRef = useRef<HTMLDivElement | null>(null);\n  const i18nWarningIconAriaLabel = i18n('i18nStrings.warningIconAriaLabel', warningIconAriaLabel);\n\n  return (\n    <>\n      <div id={id} className={styles.warning}>\n        <div className={styles['warning-icon-shake-wrapper']}>\n          <div role=\"img\" aria-label={i18nWarningIconAriaLabel} className={styles['warning-icon-scale-wrapper']}>\n            <InternalIcon name=\"status-warning\" size=\"small\" />\n          </div>\n        </div>\n        <span className={styles.warning__message} ref={contentRef}>\n          {children}\n        </span>\n      </div>\n\n      <LiveRegion assertive={true} source={[i18nWarningIconAriaLabel, contentRef]} />\n    </>\n  );\n}\n\nexport function ConstraintText({\n  id,\n  hasValidationText,\n  children,\n}: {\n  id?: string;\n  hasValidationText: boolean;\n  children: React.ReactNode;\n}) {\n  return (\n    <div id={id} className={clsx(styles.constraint, hasValidationText && styles['constraint-has-validation-text'])}>\n      {children}\n    </div>\n  );\n}\n\nexport default function InternalFormField({\n  controlId,\n  stretch = false,\n  label,\n  info,\n  i18nStrings,\n  children,\n  secondaryControl,\n  description,\n  constraintText,\n  errorText,\n  warningText,\n  __hideLabel,\n  __internalRootRef = null,\n  __disableGutters = false,\n  __analyticsMetadata = undefined,\n  ...rest\n}: InternalFormFieldProps) {\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n\n  const instanceUniqueId = useUniqueId('formField');\n  const generatedControlId = controlId || instanceUniqueId;\n  const formFieldId = controlId || generatedControlId;\n\n  const { funnelIdentifier, funnelInteractionId, submissionAttempt, funnelState, errorCount } = useFunnel();\n  const { stepIdentifier, stepNumber, stepNameSelector } = useFunnelStep();\n  const { subStepErrorContext, subStepIdentifier, subStepSelector, subStepNameSelector } = useFunnelSubStep();\n\n  const showWarning = warningText && !errorText;\n\n  if (warningText && errorText) {\n    warnOnce('FileUpload', 'Both `errorText` and `warningText` exist. `warningText` will not be shown.');\n  }\n\n  const slotIds = getSlotIds(\n    formFieldId,\n    label,\n    description,\n    constraintText,\n    errorText,\n    showWarning ? warningText : undefined\n  );\n\n  const ariaDescribedBy = getAriaDescribedBy(slotIds);\n\n  const gridDefinition = getGridDefinition(stretch, !!secondaryControl, isRefresh);\n\n  const {\n    ariaLabelledby: parentAriaLabelledby,\n    ariaDescribedby: parentAriaDescribedby,\n    invalid: parentInvalid,\n    warning: parentWarning,\n  } = useFormFieldContext({});\n\n  const contextValuesWithoutControlId = {\n    ariaLabelledby: joinStrings(parentAriaLabelledby, slotIds.label) || undefined,\n    ariaDescribedby: joinStrings(parentAriaDescribedby, ariaDescribedBy) || undefined,\n    invalid: !!errorText || !!parentInvalid,\n    warning: (!!warningText && !errorText) || (!!parentWarning && !parentInvalid),\n  };\n\n  const analyticsAttributes = {\n    [DATA_ATTR_FIELD_LABEL]: slotIds.label ? getFieldSlotSeletor(slotIds.label) : undefined,\n    [DATA_ATTR_FIELD_ERROR]: slotIds.error ? getFieldSlotSeletor(slotIds.error) : undefined,\n  };\n\n  useEffect(() => {\n    if (funnelInteractionId && errorText && funnelState.current !== 'complete') {\n      const stepName = getTextFromSelector(stepNameSelector);\n      const subStepName = getTextFromSelector(subStepNameSelector);\n\n      errorCount.current++;\n\n      // We don't want to report an error if it is hidden, e.g. inside an Expandable Section.\n      const errorIsVisible = (__internalRootRef?.current?.getBoundingClientRect()?.width ?? 0) > 0;\n\n      if (errorIsVisible) {\n        FunnelMetrics.funnelSubStepError({\n          funnelInteractionId,\n          funnelIdentifier,\n          subStepSelector,\n          subStepName,\n          subStepNameSelector,\n          subStepIdentifier,\n          stepNumber,\n          stepName,\n          stepNameSelector,\n          stepIdentifier,\n          subStepErrorContext,\n          fieldErrorSelector: `${getFieldSlotSeletor(slotIds.error)} .${styles.error__message}`,\n          fieldLabelSelector: getFieldSlotSeletor(slotIds.label),\n          subStepAllSelector: getSubStepAllSelector(),\n          fieldIdentifier: __analyticsMetadata?.instanceIdentifier,\n          fieldErrorContext: __analyticsMetadata?.errorContext,\n        });\n      }\n\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        errorCount.current--;\n      };\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [funnelInteractionId, errorText, submissionAttempt, errorCount]);\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.root)}\n      ref={__internalRootRef}\n      {...analyticsAttributes}\n      {...copyAnalyticsMetadataAttribute(rest)}\n    >\n      <div className={clsx(styles['label-wrapper'], __hideLabel && styles['visually-hidden'])}>\n        {label && (\n          <label\n            className={clsx(styles.label, analyticsSelectors.label)}\n            id={slotIds.label}\n            htmlFor={generatedControlId}\n          >\n            {label}\n          </label>\n        )}\n        <InfoLinkLabelContext.Provider value={slotIds.label}>\n          {!__hideLabel && info && <span className={styles.info}>{info}</span>}\n        </InfoLinkLabelContext.Provider>\n      </div>\n\n      {description && (\n        <div className={styles.description} id={slotIds.description}>\n          {description}\n        </div>\n      )}\n\n      <div className={clsx(styles.controls, __hideLabel && styles['label-hidden'])}>\n        <InternalGrid gridDefinition={gridDefinition} disableGutters={__disableGutters}>\n          <FormFieldContext.Provider\n            value={{\n              controlId: generatedControlId,\n              ...contextValuesWithoutControlId,\n            }}\n          >\n            {children && <div className={styles.control}>{children}</div>}\n          </FormFieldContext.Provider>\n\n          {secondaryControl && (\n            <FormFieldContext.Provider value={contextValuesWithoutControlId}>\n              <div className={styles['secondary-control']}>{secondaryControl}</div>\n            </FormFieldContext.Provider>\n          )}\n        </InternalGrid>\n      </div>\n\n      {(constraintText || errorText || warningText) && (\n        <div className={styles.hints}>\n          {errorText && (\n            <FormFieldError id={slotIds.error} errorIconAriaLabel={i18nStrings?.errorIconAriaLabel}>\n              {errorText}\n            </FormFieldError>\n          )}\n          {showWarning && (\n            <FormFieldWarning id={slotIds.warning} warningIconAriaLabel={i18nStrings?.warningIconAriaLabel}>\n              {warningText}\n            </FormFieldWarning>\n          )}\n          {constraintText && (\n            <ConstraintText id={slotIds.constraint} hasValidationText={!!errorText || !!warningText}>\n              {constraintText}\n            </ConstraintText>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}