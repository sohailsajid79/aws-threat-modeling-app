{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLastInteraction } from \"./use-last-interaction\";\nexport function useAutoScroll() {\n  const [activeAutoScroll, setActiveAutoScroll] = useState(\"none\");\n  const scrollIntoViewTimerRef = useRef(null);\n  const getLastInteraction = useLastInteraction();\n  // Scroll window repeatedly if activeAutoScroll=\"up\" or activeAutoScroll=\"down\".\n  useEffect(() => {\n    if (activeAutoScroll === \"none\") {\n      return;\n    }\n    const direction = activeAutoScroll === \"up\" ? -1 : 1;\n    let timer;\n    function scrollLoop() {\n      timer = setTimeout(() => {\n        window.scrollBy({\n          top: direction * 5\n        });\n        scrollLoop();\n      }, 10);\n    }\n    scrollLoop();\n    return () => clearTimeout(timer);\n  }, [activeAutoScroll]);\n  const onPointerMove = useCallback(event => {\n    const autoScrollMargin = 50;\n    if (event.clientY > window.innerHeight - autoScrollMargin) {\n      setActiveAutoScroll(\"down\");\n    } else if (event.clientY < autoScrollMargin) {\n      setActiveAutoScroll(\"up\");\n    } else {\n      setActiveAutoScroll(\"none\");\n    }\n  }, []);\n  const onPointerUp = useCallback(() => {\n    setActiveAutoScroll(\"none\");\n  }, []);\n  const addPointerEventHandlers = useCallback(() => {\n    if (getLastInteraction() === \"pointer\") {\n      window.addEventListener(\"pointermove\", onPointerMove);\n      window.addEventListener(\"pointerup\", onPointerUp);\n    }\n  }, [getLastInteraction, onPointerMove, onPointerUp]);\n  const removePointerEventHandlers = useCallback(() => {\n    window.removeEventListener(\"pointermove\", onPointerMove);\n    window.removeEventListener(\"pointerup\", onPointerUp);\n  }, [onPointerMove, onPointerUp]);\n  const scheduleActiveElementScrollIntoView = useCallback(delay => {\n    scrollIntoViewTimerRef.current && clearTimeout(scrollIntoViewTimerRef.current);\n    const activeElementBeforeDelay = document.activeElement;\n    scrollIntoViewTimerRef.current = setTimeout(() => {\n      var _a, _b;\n      if (document.activeElement && document.activeElement === activeElementBeforeDelay && getLastInteraction() === \"keyboard\") {\n        (_b = (_a = document.activeElement).scrollIntoView) === null || _b === void 0 ? void 0 : _b.call(_a, {\n          behavior: \"smooth\",\n          block: \"nearest\"\n        });\n      }\n    }, delay);\n  }, [getLastInteraction]);\n  return {\n    addPointerEventHandlers,\n    removePointerEventHandlers,\n    scheduleActiveElementScrollIntoView\n  };\n}","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useLastInteraction","useAutoScroll","activeAutoScroll","setActiveAutoScroll","scrollIntoViewTimerRef","getLastInteraction","direction","timer","scrollLoop","setTimeout","window","scrollBy","top","clearTimeout","onPointerMove","event","autoScrollMargin","clientY","innerHeight","onPointerUp","addPointerEventHandlers","addEventListener","removePointerEventHandlers","removeEventListener","scheduleActiveElementScrollIntoView","delay","current","activeElementBeforeDelay","document","activeElement","_b","_a","scrollIntoView","call","behavior","block"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/utils/use-auto-scroll.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { useLastInteraction } from \"./use-last-interaction\";\n\nexport function useAutoScroll() {\n  const [activeAutoScroll, setActiveAutoScroll] = useState<\"up\" | \"down\" | \"none\">(\"none\");\n  const scrollIntoViewTimerRef = useRef<null | ReturnType<typeof setTimeout>>(null);\n  const getLastInteraction = useLastInteraction();\n\n  // Scroll window repeatedly if activeAutoScroll=\"up\" or activeAutoScroll=\"down\".\n  useEffect(() => {\n    if (activeAutoScroll === \"none\") {\n      return;\n    }\n    const direction = activeAutoScroll === \"up\" ? -1 : 1;\n\n    let timer: ReturnType<typeof setTimeout>;\n\n    function scrollLoop() {\n      timer = setTimeout(() => {\n        window.scrollBy({ top: direction * 5 });\n        scrollLoop();\n      }, 10);\n    }\n    scrollLoop();\n\n    return () => clearTimeout(timer);\n  }, [activeAutoScroll]);\n\n  const onPointerMove = useCallback((event: PointerEvent) => {\n    const autoScrollMargin = 50;\n    if (event.clientY > window.innerHeight - autoScrollMargin) {\n      setActiveAutoScroll(\"down\");\n    } else if (event.clientY < autoScrollMargin) {\n      setActiveAutoScroll(\"up\");\n    } else {\n      setActiveAutoScroll(\"none\");\n    }\n  }, []);\n\n  const onPointerUp = useCallback(() => {\n    setActiveAutoScroll(\"none\");\n  }, []);\n\n  const addPointerEventHandlers = useCallback(() => {\n    if (getLastInteraction() === \"pointer\") {\n      window.addEventListener(\"pointermove\", onPointerMove);\n      window.addEventListener(\"pointerup\", onPointerUp);\n    }\n  }, [getLastInteraction, onPointerMove, onPointerUp]);\n\n  const removePointerEventHandlers = useCallback(() => {\n    window.removeEventListener(\"pointermove\", onPointerMove);\n    window.removeEventListener(\"pointerup\", onPointerUp);\n  }, [onPointerMove, onPointerUp]);\n\n  const scheduleActiveElementScrollIntoView = useCallback(\n    (delay: number) => {\n      scrollIntoViewTimerRef.current && clearTimeout(scrollIntoViewTimerRef.current);\n\n      const activeElementBeforeDelay = document.activeElement;\n\n      scrollIntoViewTimerRef.current = setTimeout(() => {\n        if (\n          document.activeElement &&\n          document.activeElement === activeElementBeforeDelay &&\n          getLastInteraction() === \"keyboard\"\n        ) {\n          document.activeElement.scrollIntoView?.({ behavior: \"smooth\", block: \"nearest\" });\n        }\n      }, delay);\n    },\n    [getLastInteraction],\n  );\n\n  return { addPointerEventHandlers, removePointerEventHandlers, scheduleActiveElementScrollIntoView };\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEhE,SAASC,kBAAkB,QAAQ,wBAAwB;AAE3D,OAAM,SAAUC,aAAaA,CAAA;EAC3B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGJ,QAAQ,CAAyB,MAAM,CAAC;EACxF,MAAMK,sBAAsB,GAAGN,MAAM,CAAuC,IAAI,CAAC;EACjF,MAAMO,kBAAkB,GAAGL,kBAAkB,EAAE;EAE/C;EACAH,SAAS,CAAC,MAAK;IACb,IAAIK,gBAAgB,KAAK,MAAM,EAAE;MAC/B;;IAEF,MAAMI,SAAS,GAAGJ,gBAAgB,KAAK,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;IAEpD,IAAIK,KAAoC;IAExC,SAASC,UAAUA,CAAA;MACjBD,KAAK,GAAGE,UAAU,CAAC,MAAK;QACtBC,MAAM,CAACC,QAAQ,CAAC;UAAEC,GAAG,EAAEN,SAAS,GAAG;QAAC,CAAE,CAAC;QACvCE,UAAU,EAAE;MACd,CAAC,EAAE,EAAE,CAAC;IACR;IACAA,UAAU,EAAE;IAEZ,OAAO,MAAMK,YAAY,CAACN,KAAK,CAAC;EAClC,CAAC,EAAE,CAACL,gBAAgB,CAAC,CAAC;EAEtB,MAAMY,aAAa,GAAGlB,WAAW,CAAEmB,KAAmB,IAAI;IACxD,MAAMC,gBAAgB,GAAG,EAAE;IAC3B,IAAID,KAAK,CAACE,OAAO,GAAGP,MAAM,CAACQ,WAAW,GAAGF,gBAAgB,EAAE;MACzDb,mBAAmB,CAAC,MAAM,CAAC;KAC5B,MAAM,IAAIY,KAAK,CAACE,OAAO,GAAGD,gBAAgB,EAAE;MAC3Cb,mBAAmB,CAAC,IAAI,CAAC;KAC1B,MAAM;MACLA,mBAAmB,CAAC,MAAM,CAAC;;EAE/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,WAAW,GAAGvB,WAAW,CAAC,MAAK;IACnCO,mBAAmB,CAAC,MAAM,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,uBAAuB,GAAGxB,WAAW,CAAC,MAAK;IAC/C,IAAIS,kBAAkB,EAAE,KAAK,SAAS,EAAE;MACtCK,MAAM,CAACW,gBAAgB,CAAC,aAAa,EAAEP,aAAa,CAAC;MACrDJ,MAAM,CAACW,gBAAgB,CAAC,WAAW,EAAEF,WAAW,CAAC;;EAErD,CAAC,EAAE,CAACd,kBAAkB,EAAES,aAAa,EAAEK,WAAW,CAAC,CAAC;EAEpD,MAAMG,0BAA0B,GAAG1B,WAAW,CAAC,MAAK;IAClDc,MAAM,CAACa,mBAAmB,CAAC,aAAa,EAAET,aAAa,CAAC;IACxDJ,MAAM,CAACa,mBAAmB,CAAC,WAAW,EAAEJ,WAAW,CAAC;EACtD,CAAC,EAAE,CAACL,aAAa,EAAEK,WAAW,CAAC,CAAC;EAEhC,MAAMK,mCAAmC,GAAG5B,WAAW,CACpD6B,KAAa,IAAI;IAChBrB,sBAAsB,CAACsB,OAAO,IAAIb,YAAY,CAACT,sBAAsB,CAACsB,OAAO,CAAC;IAE9E,MAAMC,wBAAwB,GAAGC,QAAQ,CAACC,aAAa;IAEvDzB,sBAAsB,CAACsB,OAAO,GAAGjB,UAAU,CAAC,MAAK;;MAC/C,IACEmB,QAAQ,CAACC,aAAa,IACtBD,QAAQ,CAACC,aAAa,KAAKF,wBAAwB,IACnDtB,kBAAkB,EAAE,KAAK,UAAU,EACnC;QACA,CAAAyB,EAAA,IAAAC,EAAA,GAAAH,QAAQ,CAACC,aAAa,EAACG,cAAc,cAAAF,EAAA,uBAAAA,EAAA,CAAAG,IAAA,CAAAF,EAAA,EAAG;UAAEG,QAAQ,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAS,CAAE,CAAC;;IAErF,CAAC,EAAEV,KAAK,CAAC;EACX,CAAC,EACD,CAACpB,kBAAkB,CAAC,CACrB;EAED,OAAO;IAAEe,uBAAuB;IAAEE,0BAA0B;IAAEE;EAAmC,CAAE;AACrG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}