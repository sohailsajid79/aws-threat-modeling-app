{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import Button from'@cloudscape-design/components/button';import Container from'@cloudscape-design/components/container';import Grid from'@cloudscape-design/components/grid';import Header from'@cloudscape-design/components/header';import SpaceBetween from'@cloudscape-design/components/space-between';import TextFilter from'@cloudscape-design/components/text-filter';import{useCallback,useMemo,useState}from'react';import{useAssumptionLinksContext}from'../../../contexts';import{useAssumptionsContext}from'../../../contexts/AssumptionsContext/context';import{addTagToEntity,removeTagFromEntity}from'../../../utils/entityTag';import LinkedEntityFilter,{ALL,WITHOUT_NO_LINKED_ENTITY,WITH_LINKED_ENTITY}from'../../generic/LinkedEntityFilter';import TagSelector from'../../generic/TagSelector';import AssumptionCard from'../AssumptionCard';import AssumptionCreationCard from'../AssumptionCreationCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AssumptionList=()=>{const{assumptionList,removeAssumption,saveAssumption}=useAssumptionsContext();const{assumptionLinkList,addAssumptionLinks,removeAssumptionLinksByAssumptionId}=useAssumptionLinksContext();const[filteringText,setFilteringText]=useState('');const[selectedTags,setSelectedTags]=useState([]);const[selectedLinkedThreatsFilter,setSelectedLinkedThreatsFilter]=useState(ALL);const[selectedLinkedControlFilter,setSelectedLinkedControlFilter]=useState(ALL);const[selectedLinkedMitigationFilter,setSelectedLinkedMitigationFilter]=useState(ALL);const handleAddTagToEntity=useCallback((assumption,tag)=>{const updated=addTagToEntity(assumption,tag);saveAssumption(updated);},[saveAssumption]);const handleRemoveTagFromEntity=useCallback((assumption,tag)=>{const updated=removeTagFromEntity(assumption,tag);saveAssumption(updated);},[saveAssumption]);const handleRemove=useCallback(async assumptionId=>{removeAssumption(assumptionId);await removeAssumptionLinksByAssumptionId(assumptionId);},[removeAssumption,removeAssumptionLinksByAssumptionId]);const filteredList=useMemo(()=>{let output=assumptionList;if(filteringText){output=output.filter(st=>st.content&&st.content.toLowerCase().indexOf(filteringText.toLowerCase())>=0);}if(selectedTags&&selectedTags.length>0){output=output.filter(st=>{var _st$tags;return(_st$tags=st.tags)===null||_st$tags===void 0?void 0:_st$tags.some(t=>selectedTags.includes(t));});}if(selectedLinkedThreatsFilter!==ALL){output=output.filter(st=>{return assumptionLinkList.some(al=>al.assumptionId===st.id&&al.type==='Threat')?selectedLinkedThreatsFilter===WITH_LINKED_ENTITY:selectedLinkedThreatsFilter===WITHOUT_NO_LINKED_ENTITY;});}if(selectedLinkedMitigationFilter!==ALL){output=output.filter(st=>{return assumptionLinkList.some(al=>al.assumptionId===st.id&&al.type==='Mitigation')?selectedLinkedMitigationFilter===WITH_LINKED_ENTITY:selectedLinkedMitigationFilter===WITHOUT_NO_LINKED_ENTITY;});}if(selectedLinkedControlFilter!==ALL){output=output.filter(st=>{return assumptionLinkList.some(al=>al.assumptionId===st.id&&al.type==='Control')?selectedLinkedControlFilter===WITH_LINKED_ENTITY:selectedLinkedControlFilter===WITHOUT_NO_LINKED_ENTITY;});}output=output.sort((op1,op2)=>(op2.displayOrder||Number.MAX_VALUE)-(op1.displayOrder||Number.MAX_VALUE));return output;},[filteringText,assumptionList,selectedTags,assumptionLinkList,selectedLinkedMitigationFilter,selectedLinkedControlFilter,selectedLinkedThreatsFilter]);const hasNoFilter=useMemo(()=>{return filteringText===''&&selectedLinkedMitigationFilter===ALL&&selectedLinkedControlFilter===ALL&&selectedLinkedThreatsFilter===ALL&&selectedTags.length===0;},[filteringText,selectedTags,selectedLinkedThreatsFilter,selectedLinkedControlFilter,selectedLinkedMitigationFilter]);const allTags=useMemo(()=>{return assumptionList.reduce((all,cur)=>{var _cur$tags;return[...all,...(((_cur$tags=cur.tags)===null||_cur$tags===void 0?void 0:_cur$tags.filter(ia=>!all.includes(ia)))||[])];},[]);},[assumptionList]);const handleClearFilter=useCallback(()=>{setFilteringText('');setSelectedTags([]);setSelectedLinkedMitigationFilter(ALL);setSelectedLinkedControlFilter(ALL);setSelectedLinkedThreatsFilter(ALL);},[]);const handleSaveNew=useCallback((assumption,linkedMitigationIds,linkedThreatIds)=>{const updated=saveAssumption(assumption);const assumptionLinks=[];linkedMitigationIds.forEach(id=>{assumptionLinks.push({linkedId:id,assumptionId:updated.id,type:'Mitigation'});});linkedThreatIds.forEach(id=>{assumptionLinks.push({linkedId:id,assumptionId:updated.id,type:'Threat'});});addAssumptionLinks(assumptionLinks);},[saveAssumption,addAssumptionLinks]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(SpaceBetween,{direction:\"vertical\",size:\"s\",children:[/*#__PURE__*/_jsx(Container,{header:/*#__PURE__*/_jsx(Header,{counter:`(${filteredList.length})`,children:\"Assumption List\"}),children:/*#__PURE__*/_jsxs(SpaceBetween,{direction:\"vertical\",size:\"s\",children:[/*#__PURE__*/_jsx(TextFilter,{filteringText:filteringText,filteringPlaceholder:\"Find assumptions\",filteringAriaLabel:\"Filter assumptions\",onChange:_ref=>{let{detail}=_ref;return setFilteringText(detail.filteringText);}}),/*#__PURE__*/_jsxs(Grid,{gridDefinition:[{colspan:{default:12,xs:2}},{colspan:{default:12,xs:3}},{colspan:{default:12,xs:3}},{colspan:{default:12,xs:3}},{colspan:{default:1}}],children:[/*#__PURE__*/_jsx(TagSelector,{allTags:allTags,selectedTags:selectedTags,setSelectedTags:setSelectedTags}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked threats\",entityDisplayName:\"threats\",callerName:\"assumptions\",selected:selectedLinkedThreatsFilter,setSelected:setSelectedLinkedThreatsFilter}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked controls\",entityDisplayName:\"controls\",callerName:\"assumptions\",selected:selectedLinkedControlFilter,setSelected:setSelectedLinkedControlFilter}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked mitigations\",entityDisplayName:\"mitigations\",callerName:\"assumptions\",selected:selectedLinkedMitigationFilter,setSelected:setSelectedLinkedMitigationFilter}),/*#__PURE__*/_jsx(Button,{onClick:handleClearFilter,variant:\"icon\",iconSvg:/*#__PURE__*/_jsx(\"svg\",{focusable:\"false\",\"aria-hidden\":\"true\",viewBox:\"0 0 24 24\",tabIndex:-1,children:/*#__PURE__*/_jsx(\"path\",{d:\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"})}),ariaLabel:\"Clear filters\",disabled:hasNoFilter})]})]})}),filteredList===null||filteredList===void 0?void 0:filteredList.map(entity=>/*#__PURE__*/_jsx(AssumptionCard,{assumption:entity,onRemove:handleRemove,onEdit:saveAssumption,onAddTagToAssumption:handleAddTagToEntity,onRemoveTagFromAssumption:handleRemoveTagFromEntity},entity.id)),/*#__PURE__*/_jsx(AssumptionCreationCard,{onSave:handleSaveNew})]})});};export default AssumptionList;","map":{"version":3,"names":["Button","Container","Grid","Header","SpaceBetween","TextFilter","useCallback","useMemo","useState","useAssumptionLinksContext","useAssumptionsContext","addTagToEntity","removeTagFromEntity","LinkedEntityFilter","ALL","WITHOUT_NO_LINKED_ENTITY","WITH_LINKED_ENTITY","TagSelector","AssumptionCard","AssumptionCreationCard","jsx","_jsx","jsxs","_jsxs","AssumptionList","assumptionList","removeAssumption","saveAssumption","assumptionLinkList","addAssumptionLinks","removeAssumptionLinksByAssumptionId","filteringText","setFilteringText","selectedTags","setSelectedTags","selectedLinkedThreatsFilter","setSelectedLinkedThreatsFilter","selectedLinkedControlFilter","setSelectedLinkedControlFilter","selectedLinkedMitigationFilter","setSelectedLinkedMitigationFilter","handleAddTagToEntity","assumption","tag","updated","handleRemoveTagFromEntity","handleRemove","assumptionId","filteredList","output","filter","st","content","toLowerCase","indexOf","length","_st$tags","tags","some","t","includes","al","id","type","sort","op1","op2","displayOrder","Number","MAX_VALUE","hasNoFilter","allTags","reduce","all","cur","_cur$tags","ia","handleClearFilter","handleSaveNew","linkedMitigationIds","linkedThreatIds","assumptionLinks","forEach","push","linkedId","children","direction","size","header","counter","filteringPlaceholder","filteringAriaLabel","onChange","_ref","detail","gridDefinition","colspan","default","xs","label","entityDisplayName","callerName","selected","setSelected","onClick","variant","iconSvg","focusable","viewBox","tabIndex","d","ariaLabel","disabled","map","entity","onRemove","onEdit","onAddTagToAssumption","onRemoveTagFromAssumption","onSave"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/assumptions/AssumptionList/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Button from '@cloudscape-design/components/button';\nimport Container from '@cloudscape-design/components/container';\nimport Grid from '@cloudscape-design/components/grid';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport { FC, useCallback, useMemo, useState } from 'react';\nimport { useAssumptionLinksContext } from '../../../contexts';\nimport { useAssumptionsContext } from '../../../contexts/AssumptionsContext/context';\nimport { Assumption, AssumptionLink } from '../../../customTypes';\nimport { addTagToEntity, removeTagFromEntity } from '../../../utils/entityTag';\nimport LinkedEntityFilter, { ALL, WITHOUT_NO_LINKED_ENTITY, WITH_LINKED_ENTITY } from '../../generic/LinkedEntityFilter';\nimport TagSelector from '../../generic/TagSelector';\nimport AssumptionCard from '../AssumptionCard';\nimport AssumptionCreationCard from '../AssumptionCreationCard';\n\nconst AssumptionList: FC = () => {\n  const {\n    assumptionList,\n    removeAssumption,\n    saveAssumption,\n  } = useAssumptionsContext();\n\n  const {\n    assumptionLinkList,\n    addAssumptionLinks,\n    removeAssumptionLinksByAssumptionId,\n  } = useAssumptionLinksContext();\n\n  const [filteringText, setFilteringText] = useState('');\n\n  const [\n    selectedTags,\n    setSelectedTags,\n  ] = useState<string[]>([]);\n\n  const [\n    selectedLinkedThreatsFilter,\n    setSelectedLinkedThreatsFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedControlFilter,\n    setSelectedLinkedControlFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedMitigationFilter,\n    setSelectedLinkedMitigationFilter,\n  ] = useState(ALL);\n\n  const handleAddTagToEntity = useCallback((assumption: Assumption, tag: string) => {\n    const updated = addTagToEntity(assumption, tag);\n    saveAssumption(updated as Assumption);\n  }, [saveAssumption]);\n\n  const handleRemoveTagFromEntity = useCallback((assumption: Assumption, tag: string) => {\n    const updated = removeTagFromEntity(assumption, tag);\n    saveAssumption(updated as Assumption);\n  }, [saveAssumption]);\n\n  const handleRemove = useCallback(async (assumptionId: string) => {\n    removeAssumption(assumptionId);\n    await removeAssumptionLinksByAssumptionId(assumptionId);\n  }, [removeAssumption, removeAssumptionLinksByAssumptionId]);\n\n  const filteredList = useMemo(() => {\n    let output = assumptionList;\n\n    if (filteringText) {\n      output = output.filter(st => st.content && st.content.toLowerCase().indexOf(filteringText.toLowerCase()) >= 0);\n    }\n\n    if (selectedTags && selectedTags.length > 0) {\n      output = output.filter(st => {\n        return st.tags?.some(t => selectedTags.includes(t));\n      });\n    }\n\n    if (selectedLinkedThreatsFilter !== ALL) {\n      output = output.filter(st => {\n        return assumptionLinkList.some(al => al.assumptionId === st.id && al.type === 'Threat') ?\n          selectedLinkedThreatsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedThreatsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedMitigationFilter !== ALL) {\n      output = output.filter(st => {\n        return assumptionLinkList.some(al => al.assumptionId === st.id && al.type === 'Mitigation') ?\n          selectedLinkedMitigationFilter === WITH_LINKED_ENTITY :\n          selectedLinkedMitigationFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedControlFilter !== ALL) {\n      output = output.filter(st => {\n        return assumptionLinkList.some(al => al.assumptionId === st.id && al.type === 'Control') ?\n          selectedLinkedControlFilter === WITH_LINKED_ENTITY :\n          selectedLinkedControlFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    output = output.sort((op1, op2) => (op2.displayOrder || Number.MAX_VALUE) - (op1.displayOrder || Number.MAX_VALUE));\n\n    return output;\n  }, [filteringText, assumptionList, selectedTags,\n    assumptionLinkList,\n    selectedLinkedMitigationFilter, selectedLinkedControlFilter, selectedLinkedThreatsFilter]);\n\n  const hasNoFilter = useMemo(() => {\n    return (filteringText === ''\n      && selectedLinkedMitigationFilter === ALL\n      && selectedLinkedControlFilter === ALL\n      && selectedLinkedThreatsFilter === ALL\n      && selectedTags.length === 0);\n  }, [filteringText, selectedTags, selectedLinkedThreatsFilter, selectedLinkedControlFilter, selectedLinkedMitigationFilter]);\n\n  const allTags = useMemo(() => {\n    return assumptionList\n      .reduce((all: string[], cur) => {\n        return [...all, ...cur.tags?.filter(ia => !all.includes(ia)) || []];\n      }, []);\n  }, [assumptionList]);\n\n  const handleClearFilter = useCallback(() => {\n    setFilteringText('');\n    setSelectedTags([]);\n    setSelectedLinkedMitigationFilter(ALL);\n    setSelectedLinkedControlFilter(ALL);\n    setSelectedLinkedThreatsFilter(ALL);\n  }, []);\n\n  const handleSaveNew = useCallback((assumption: Assumption,\n    linkedMitigationIds: string[],\n    linkedThreatIds: string[]) => {\n    const updated = saveAssumption(assumption);\n\n    const assumptionLinks: AssumptionLink[] = [];\n\n    linkedMitigationIds.forEach(id => {\n      assumptionLinks.push({\n        linkedId: id,\n        assumptionId: updated.id,\n        type: 'Mitigation',\n      });\n    });\n\n    linkedThreatIds.forEach(id => {\n      assumptionLinks.push({\n        linkedId: id,\n        assumptionId: updated.id,\n        type: 'Threat',\n      });\n    });\n\n    addAssumptionLinks(assumptionLinks);\n\n  }, [saveAssumption, addAssumptionLinks]);\n\n  return (<div>\n    <SpaceBetween direction='vertical' size='s'>\n      <Container header={\n        <Header counter={`(${filteredList.length})`}>Assumption List</Header>\n      }>\n        <SpaceBetween direction='vertical' size='s'>\n          <TextFilter\n            filteringText={filteringText}\n            filteringPlaceholder=\"Find assumptions\"\n            filteringAriaLabel=\"Filter assumptions\"\n            onChange={({ detail }) =>\n              setFilteringText(detail.filteringText)\n            }\n          />\n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xs: 2 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 1 } },\n            ]}\n          >\n            <TagSelector\n              allTags={allTags}\n              selectedTags={selectedTags}\n              setSelectedTags={setSelectedTags}\n            />\n            <LinkedEntityFilter\n              label='Linked threats'\n              entityDisplayName='threats'\n              callerName='assumptions'\n              selected={selectedLinkedThreatsFilter}\n              setSelected={setSelectedLinkedThreatsFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked controls'\n              entityDisplayName='controls'\n              callerName='assumptions'\n              selected={selectedLinkedControlFilter}\n              setSelected={setSelectedLinkedControlFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked mitigations'\n              entityDisplayName='mitigations'\n              callerName='assumptions'\n              selected={selectedLinkedMitigationFilter}\n              setSelected={setSelectedLinkedMitigationFilter}\n            />\n            <Button onClick={handleClearFilter}\n              variant='icon'\n              iconSvg={<svg\n                focusable=\"false\"\n                aria-hidden=\"true\"\n                viewBox=\"0 0 24 24\"\n                tabIndex={-1}\n              >\n                <path d=\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"></path>\n              </svg>}\n              ariaLabel='Clear filters'\n              disabled={hasNoFilter}\n            />\n          </Grid>\n        </SpaceBetween>\n      </Container>\n      {filteredList?.map(entity => (<AssumptionCard\n        key={entity.id}\n        assumption={entity}\n        onRemove={handleRemove}\n        onEdit={saveAssumption}\n        onAddTagToAssumption={handleAddTagToEntity}\n        onRemoveTagFromAssumption={handleRemoveTagFromEntity}\n      />))}\n      <AssumptionCreationCard\n        onSave={handleSaveNew}\n      />\n    </SpaceBetween>\n  </div>);\n};\n\nexport default AssumptionList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}