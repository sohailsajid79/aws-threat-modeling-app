{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var KeyCode;\n(function (KeyCode) {\n  KeyCode[KeyCode[\"pageUp\"] = 33] = \"pageUp\";\n  KeyCode[KeyCode[\"pageDown\"] = 34] = \"pageDown\";\n  KeyCode[KeyCode[\"end\"] = 35] = \"end\";\n  KeyCode[KeyCode[\"home\"] = 36] = \"home\";\n  KeyCode[KeyCode[\"backspace\"] = 8] = \"backspace\";\n  KeyCode[KeyCode[\"space\"] = 32] = \"space\";\n  KeyCode[KeyCode[\"down\"] = 40] = \"down\";\n  KeyCode[KeyCode[\"left\"] = 37] = \"left\";\n  KeyCode[KeyCode[\"right\"] = 39] = \"right\";\n  KeyCode[KeyCode[\"up\"] = 38] = \"up\";\n  KeyCode[KeyCode[\"escape\"] = 27] = \"escape\";\n  KeyCode[KeyCode[\"enter\"] = 13] = \"enter\";\n  KeyCode[KeyCode[\"tab\"] = 9] = \"tab\";\n  KeyCode[KeyCode[\"shift\"] = 16] = \"shift\";\n  KeyCode[KeyCode[\"control\"] = 17] = \"control\";\n  KeyCode[KeyCode[\"alt\"] = 18] = \"alt\";\n  KeyCode[KeyCode[\"meta\"] = 91] = \"meta\";\n})(KeyCode || (KeyCode = {}));\nexport function isModifierKey(event) {\n  // we do not want to highlight focused element\n  // when special keys are pressed\n  return [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;\n}","map":{"version":3,"names":["KeyCode","isModifierKey","event","shift","alt","control","meta","indexOf","keyCode"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@cloudscape-design/component-toolkit/internal/keycode.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"pageUp\"] = 33] = \"pageUp\";\n    KeyCode[KeyCode[\"pageDown\"] = 34] = \"pageDown\";\n    KeyCode[KeyCode[\"end\"] = 35] = \"end\";\n    KeyCode[KeyCode[\"home\"] = 36] = \"home\";\n    KeyCode[KeyCode[\"backspace\"] = 8] = \"backspace\";\n    KeyCode[KeyCode[\"space\"] = 32] = \"space\";\n    KeyCode[KeyCode[\"down\"] = 40] = \"down\";\n    KeyCode[KeyCode[\"left\"] = 37] = \"left\";\n    KeyCode[KeyCode[\"right\"] = 39] = \"right\";\n    KeyCode[KeyCode[\"up\"] = 38] = \"up\";\n    KeyCode[KeyCode[\"escape\"] = 27] = \"escape\";\n    KeyCode[KeyCode[\"enter\"] = 13] = \"enter\";\n    KeyCode[KeyCode[\"tab\"] = 9] = \"tab\";\n    KeyCode[KeyCode[\"shift\"] = 16] = \"shift\";\n    KeyCode[KeyCode[\"control\"] = 17] = \"control\";\n    KeyCode[KeyCode[\"alt\"] = 18] = \"alt\";\n    KeyCode[KeyCode[\"meta\"] = 91] = \"meta\";\n})(KeyCode || (KeyCode = {}));\nexport function isModifierKey(event) {\n    // we do not want to highlight focused element\n    // when special keys are pressed\n    return [KeyCode.shift, KeyCode.alt, KeyCode.control, KeyCode.meta].indexOf(event.keyCode) > -1;\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,IAAIA,OAAO;AAClB,CAAC,UAAUA,OAAO,EAAE;EAChBA,OAAO,CAACA,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ;EAC1CA,OAAO,CAACA,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,UAAU;EAC9CA,OAAO,CAACA,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK;EACpCA,OAAO,CAACA,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM;EACtCA,OAAO,CAACA,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW;EAC/CA,OAAO,CAACA,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO;EACxCA,OAAO,CAACA,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM;EACtCA,OAAO,CAACA,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM;EACtCA,OAAO,CAACA,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO;EACxCA,OAAO,CAACA,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI;EAClCA,OAAO,CAACA,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ;EAC1CA,OAAO,CAACA,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO;EACxCA,OAAO,CAACA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;EACnCA,OAAO,CAACA,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO;EACxCA,OAAO,CAACA,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS;EAC5CA,OAAO,CAACA,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK;EACpCA,OAAO,CAACA,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM;AAC1C,CAAC,EAAEA,OAAO,KAAKA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7B,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAE;EACjC;EACA;EACA,OAAO,CAACF,OAAO,CAACG,KAAK,EAAEH,OAAO,CAACI,GAAG,EAAEJ,OAAO,CAACK,OAAO,EAAEL,OAAO,CAACM,IAAI,CAAC,CAACC,OAAO,CAACL,KAAK,CAACM,OAAO,CAAC,GAAG,CAAC,CAAC;AAClG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}