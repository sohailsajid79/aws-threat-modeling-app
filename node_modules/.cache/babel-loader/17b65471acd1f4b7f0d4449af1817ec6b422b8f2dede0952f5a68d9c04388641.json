{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getDaysInMonth } from 'date-fns';\nimport MaskedInput from '../internal/components/masked-input';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { displayToIso, isoToDisplay, parseDate } from '../internal/utils/date-time';\nimport styles from './styles.css.js';\nfunction daysMax(value) {\n  // force to first day in month, as new Date('2018-02-30') -> March 2nd 2018\n  const baseDate = displayToIso(value).substring(0, 7);\n  return getDaysInMonth(parseDate(baseDate));\n}\nconst yearMask = {\n  min: 0,\n  max: 9999,\n  default: 2000,\n  length: 4\n};\nconst monthMask = {\n  min: 1,\n  max: 12,\n  length: 2\n};\nconst dayMask = {\n  min: 1,\n  max: daysMax,\n  length: 2\n};\nconst InternalDateInput = React.forwardRef((_a, ref) => {\n  var {\n      value,\n      onChange,\n      granularity,\n      __internalRootRef = null\n    } = _a,\n    props = __rest(_a, [\"value\", \"onChange\", \"granularity\", \"__internalRootRef\"]);\n  const maskArgs = {\n    separator: '/',\n    inputSeparators: ['-', '.', ' '],\n    segments: granularity === 'month' ? [yearMask, monthMask] : [yearMask, monthMask, dayMask]\n  };\n  return React.createElement(MaskedInput, Object.assign({\n    ref: ref\n  }, props, {\n    value: isoToDisplay(value || ''),\n    onChange: event => fireNonCancelableEvent(onChange, {\n      value: displayToIso(event.detail.value)\n    }),\n    className: clsx(styles.root, props.className),\n    mask: maskArgs,\n    autofix: true,\n    autoComplete: false,\n    disableAutocompleteOnBlur: false,\n    disableBrowserAutocorrect: true,\n    __internalRootRef: __internalRootRef\n  }));\n});\nexport default InternalDateInput;","map":{"version":3,"names":["React","clsx","getDaysInMonth","MaskedInput","fireNonCancelableEvent","displayToIso","isoToDisplay","parseDate","styles","daysMax","value","baseDate","substring","yearMask","min","max","default","length","monthMask","dayMask","InternalDateInput","forwardRef","_a","ref","onChange","granularity","__internalRootRef","props","__rest","maskArgs","separator","inputSeparators","segments","createElement","Object","assign","event","detail","className","root","mask","autofix","autoComplete","disableAutocompleteOnBlur","disableBrowserAutocorrect"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/date-input/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref } from 'react';\nimport clsx from 'clsx';\nimport { getDaysInMonth } from 'date-fns';\n\nimport { CalendarProps } from '../calendar/interfaces';\nimport MaskedInput from '../internal/components/masked-input';\nimport { MaskArgs } from '../internal/components/masked-input/utils/mask-format';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { displayToIso, isoToDisplay, parseDate } from '../internal/utils/date-time';\nimport { DateInputProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ntype InternalDateInputProps = DateInputProps &\n  InternalBaseComponentProps & {\n    granularity?: CalendarProps.Granularity;\n  };\n\nfunction daysMax(value: string): number {\n  // force to first day in month, as new Date('2018-02-30') -> March 2nd 2018\n  const baseDate = displayToIso(value).substring(0, 7);\n  return getDaysInMonth(parseDate(baseDate));\n}\n\nconst yearMask = { min: 0, max: 9999, default: 2000, length: 4 };\nconst monthMask = { min: 1, max: 12, length: 2 };\nconst dayMask = { min: 1, max: daysMax, length: 2 };\n\nconst InternalDateInput = React.forwardRef(\n  (\n    { value, onChange, granularity, __internalRootRef = null, ...props }: InternalDateInputProps,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    const maskArgs: MaskArgs = {\n      separator: '/',\n      inputSeparators: ['-', '.', ' '],\n      segments: granularity === 'month' ? [yearMask, monthMask] : [yearMask, monthMask, dayMask],\n    };\n\n    return (\n      <MaskedInput\n        ref={ref}\n        {...props}\n        value={isoToDisplay(value || '')}\n        onChange={event => fireNonCancelableEvent(onChange, { value: displayToIso(event.detail.value) })}\n        className={clsx(styles.root, props.className)}\n        mask={maskArgs}\n        autofix={true}\n        autoComplete={false}\n        disableAutocompleteOnBlur={false}\n        disableBrowserAutocorrect={true}\n        __internalRootRef={__internalRootRef}\n      />\n    );\n  }\n);\n\nexport default InternalDateInput;\n"],"mappings":"AAAA;AACA;;AAEA,OAAOA,KAAc,MAAM,OAAO;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,cAAc,QAAQ,UAAU;AAGzC,OAAOC,WAAW,MAAM,qCAAqC;AAE7D,SAASC,sBAAsB,QAAQ,oBAAoB;AAE3D,SAASC,YAAY,EAAEC,YAAY,EAAEC,SAAS,QAAQ,6BAA6B;AAGnF,OAAOC,MAAM,MAAM,iBAAiB;AAOpC,SAASC,OAAOA,CAACC,KAAa;EAC5B;EACA,MAAMC,QAAQ,GAAGN,YAAY,CAACK,KAAK,CAAC,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EACpD,OAAOV,cAAc,CAACK,SAAS,CAACI,QAAQ,CAAC,CAAC;AAC5C;AAEA,MAAME,QAAQ,GAAG;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE,IAAI;EAAEC,OAAO,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAC,CAAE;AAChE,MAAMC,SAAS,GAAG;EAAEJ,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE,EAAE;EAAEE,MAAM,EAAE;AAAC,CAAE;AAChD,MAAME,OAAO,GAAG;EAAEL,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAEN,OAAO;EAAEQ,MAAM,EAAE;AAAC,CAAE;AAEnD,MAAMG,iBAAiB,GAAGpB,KAAK,CAACqB,UAAU,CACxC,CACEC,EAA4F,EAC5FC,GAA0B,KACxB;MAFF;MAAEb,KAAK;MAAEc,QAAQ;MAAEC,WAAW;MAAEC,iBAAiB,GAAG;IAAI,IAAAJ,EAAoC;IAA/BK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EAAlE,yDAAoE,CAAF;EAGlE,MAAMO,QAAQ,GAAa;IACzBC,SAAS,EAAE,GAAG;IACdC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAChCC,QAAQ,EAAEP,WAAW,KAAK,OAAO,GAAG,CAACZ,QAAQ,EAAEK,SAAS,CAAC,GAAG,CAACL,QAAQ,EAAEK,SAAS,EAAEC,OAAO;GAC1F;EAED,OACEnB,KAAA,CAAAiC,aAAA,CAAC9B,WAAW,EAAA+B,MAAA,CAAAC,MAAA;IACVZ,GAAG,EAAEA;EAAG,GACJI,KAAK;IACTjB,KAAK,EAAEJ,YAAY,CAACI,KAAK,IAAI,EAAE,CAAC;IAChCc,QAAQ,EAAEY,KAAK,IAAIhC,sBAAsB,CAACoB,QAAQ,EAAE;MAAEd,KAAK,EAAEL,YAAY,CAAC+B,KAAK,CAACC,MAAM,CAAC3B,KAAK;IAAC,CAAE,CAAC;IAChG4B,SAAS,EAAErC,IAAI,CAACO,MAAM,CAAC+B,IAAI,EAAEZ,KAAK,CAACW,SAAS,CAAC;IAC7CE,IAAI,EAAEX,QAAQ;IACdY,OAAO,EAAE,IAAI;IACbC,YAAY,EAAE,KAAK;IACnBC,yBAAyB,EAAE,KAAK;IAChCC,yBAAyB,EAAE,IAAI;IAC/BlB,iBAAiB,EAAEA;EAAiB,GACpC;AAEN,CAAC,CACF;AAED,eAAeN,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}