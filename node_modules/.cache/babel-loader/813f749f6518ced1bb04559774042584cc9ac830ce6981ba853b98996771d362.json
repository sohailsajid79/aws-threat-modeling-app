{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { BreadcrumbGroupImplementation } from '../../../breadcrumb-group/implementation';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { ToolbarSlot } from '../skeleton/slot-wrappers';\nimport { DrawerTriggers } from './drawer-triggers';\nimport TriggerButton from './trigger-button';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n// support compatibility with changes before this commit: cf0f2b0755af1a28ac7c3c9476418a7ea807d0fd\nfunction convertLegacyProps(toolbarProps, legacyProps) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\n  return {\n    ariaLabels: (_a = toolbarProps.ariaLabels) !== null && _a !== void 0 ? _a : legacyProps.ariaLabels,\n    activeDrawerId: (_b = toolbarProps.activeDrawerId) !== null && _b !== void 0 ? _b : (_c = legacyProps.activeDrawer) === null || _c === void 0 ? void 0 : _c.id,\n    drawers: (_d = toolbarProps.drawers) !== null && _d !== void 0 ? _d : legacyProps.drawers,\n    drawersFocusRef: (_e = toolbarProps.drawersFocusRef) !== null && _e !== void 0 ? _e : (_f = legacyProps.drawersFocusControl) === null || _f === void 0 ? void 0 : _f.refs.toggle,\n    globalDrawersFocusControl: toolbarProps.globalDrawersFocusControl,\n    onActiveDrawerChange: (_g = toolbarProps.onActiveDrawerChange) !== null && _g !== void 0 ? _g : legacyProps.onActiveDrawerChange,\n    globalDrawers: (_h = toolbarProps.globalDrawers) !== null && _h !== void 0 ? _h : legacyProps.globalDrawers,\n    activeGlobalDrawersIds: (_j = toolbarProps.activeGlobalDrawersIds) !== null && _j !== void 0 ? _j : legacyProps.activeGlobalDrawersIds,\n    onActiveGlobalDrawersChange: (_k = toolbarProps.onActiveGlobalDrawersChange) !== null && _k !== void 0 ? _k : legacyProps.onActiveGlobalDrawersChange,\n    hasNavigation: (_l = toolbarProps.hasNavigation) !== null && _l !== void 0 ? _l : !!legacyProps.navigation,\n    navigationOpen: (_m = toolbarProps.navigationOpen) !== null && _m !== void 0 ? _m : legacyProps.navigationOpen,\n    navigationFocusRef: (_o = toolbarProps.navigationFocusRef) !== null && _o !== void 0 ? _o : (_p = legacyProps.navigationFocusControl) === null || _p === void 0 ? void 0 : _p.refs.toggle,\n    onNavigationToggle: (_q = toolbarProps.onNavigationToggle) !== null && _q !== void 0 ? _q : legacyProps.onNavigationToggle,\n    hasSplitPanel: (_r = toolbarProps.hasSplitPanel) !== null && _r !== void 0 ? _r : true,\n    splitPanelFocusRef: (_s = legacyProps.splitPanelFocusControl) === null || _s === void 0 ? void 0 : _s.refs.toggle,\n    splitPanelToggleProps: (_t = toolbarProps.splitPanelToggleProps) !== null && _t !== void 0 ? _t : Object.assign(Object.assign({}, legacyProps.splitPanelToggleConfig), {\n      active: legacyProps.splitPanelOpen,\n      controlId: legacyProps.splitPanelControlId,\n      position: legacyProps.splitPanelPosition\n    }),\n    onSplitPanelToggle: (_u = toolbarProps.onSplitPanelToggle) !== null && _u !== void 0 ? _u : legacyProps.onSplitPanelToggle\n  };\n}\nexport function AppLayoutToolbarImplementation(_ref) {\n  let {\n    appLayoutInternals,\n    // the value could be undefined if this component is loaded as a widget by a different app layout version\n    // not testable in a single-version setup\n    toolbarProps = {}\n  } = _ref;\n  var _a, _b, _c;\n  const {\n    breadcrumbs,\n    discoveredBreadcrumbs,\n    verticalOffsets,\n    isMobile,\n    toolbarState,\n    setToolbarState,\n    setToolbarHeight,\n    globalDrawersFocusControl\n  } = appLayoutInternals;\n  const {\n    ariaLabels,\n    activeDrawerId,\n    drawers,\n    drawersFocusRef,\n    onActiveDrawerChange,\n    globalDrawers,\n    activeGlobalDrawersIds,\n    onActiveGlobalDrawersChange,\n    hasNavigation,\n    navigationOpen,\n    navigationFocusRef,\n    onNavigationToggle,\n    hasSplitPanel,\n    splitPanelFocusRef,\n    splitPanelToggleProps,\n    onSplitPanelToggle\n  } = convertLegacyProps(toolbarProps, appLayoutInternals);\n  // TODO: expose configuration property\n  const pinnedToolbar = true;\n  const ref = useRef(null);\n  useResizeObserver(ref, entry => setToolbarHeight(entry.borderBoxHeight));\n  useEffect(() => {\n    return () => {\n      setToolbarHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    let lastScrollY = window.scrollY;\n    /* istanbul ignore next not testable in JSDOM */\n    const updateScrollDirection = () => {\n      if (pinnedToolbar) {\n        setToolbarState('show');\n        return;\n      }\n      const scrollY = window.scrollY;\n      // 80 is an arbitrary number to have a pause before the toolbar scrolls out of view at the top of the page\n      const direction = scrollY > lastScrollY && scrollY > 80 ? 'hide' : 'show';\n      // 2 as a buffer to avoid mistaking minor accidental mouse moves as scroll\n      if (direction !== toolbarState && (scrollY - lastScrollY > 2 || scrollY - lastScrollY < -2)) {\n        setToolbarState(direction);\n      }\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n    };\n    window.addEventListener('scroll', updateScrollDirection);\n    return () => {\n      window.removeEventListener('scroll', updateScrollDirection);\n    };\n  }, [pinnedToolbar, setToolbarState, toolbarState]);\n  const anyPanelOpenInMobile = !!isMobile && (!!activeDrawerId || !!navigationOpen && !!hasNavigation);\n  useEffect(() => {\n    if (anyPanelOpenInMobile) {\n      document.body.classList.add(styles['block-body-scroll']);\n    } else {\n      document.body.classList.remove(styles['block-body-scroll']);\n    }\n    return () => {\n      document.body.classList.remove(styles['block-body-scroll']);\n    };\n  }, [anyPanelOpenInMobile]);\n  const toolbarHidden = toolbarState === 'hide' && !pinnedToolbar;\n  return React.createElement(ToolbarSlot, {\n    ref: ref,\n    className: clsx(styles['universal-toolbar'], testutilStyles.toolbar, {\n      [testutilStyles['mobile-bar']]: isMobile,\n      [styles['toolbar-hidden']]: toolbarHidden\n    }),\n    style: {\n      insetBlockStart: toolbarHidden ? '-60px' : verticalOffsets.toolbar\n    }\n  }, React.createElement(\"div\", {\n    className: styles['toolbar-container']\n  }, hasNavigation && React.createElement(\"nav\", {\n    className: clsx(styles['universal-toolbar-nav'])\n  }, React.createElement(TriggerButton, {\n    ariaLabel: (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationToggle) !== null && _a !== void 0 ? _a : undefined,\n    ariaExpanded: false,\n    iconName: \"menu\",\n    className: testutilStyles['navigation-toggle'],\n    onClick: () => onNavigationToggle === null || onNavigationToggle === void 0 ? void 0 : onNavigationToggle(!navigationOpen),\n    ref: navigationFocusRef,\n    selected: navigationOpen,\n    disabled: anyPanelOpenInMobile\n  })), (breadcrumbs || discoveredBreadcrumbs) && React.createElement(\"div\", {\n    className: clsx(styles['universal-toolbar-breadcrumbs'], testutilStyles.breadcrumbs)\n  }, breadcrumbs, discoveredBreadcrumbs && React.createElement(BreadcrumbGroupImplementation, Object.assign({}, discoveredBreadcrumbs, {\n    \"data-awsui-discovered-breadcrumbs\": true,\n    __injectAnalyticsComponentMetadata: true\n  }))), (drawers && drawers.length > 0 || hasSplitPanel && (splitPanelToggleProps === null || splitPanelToggleProps === void 0 ? void 0 : splitPanelToggleProps.displayed)) && React.createElement(\"div\", {\n    className: clsx(styles['universal-toolbar-drawers'])\n  }, React.createElement(DrawerTriggers, {\n    ariaLabels: ariaLabels,\n    activeDrawerId: activeDrawerId !== null && activeDrawerId !== void 0 ? activeDrawerId : null,\n    drawers: (_b = drawers === null || drawers === void 0 ? void 0 : drawers.filter(item => !!item.trigger)) !== null && _b !== void 0 ? _b : [],\n    drawersFocusRef: drawersFocusRef,\n    onActiveDrawerChange: onActiveDrawerChange,\n    splitPanelToggleProps: (splitPanelToggleProps === null || splitPanelToggleProps === void 0 ? void 0 : splitPanelToggleProps.displayed) ? splitPanelToggleProps : undefined,\n    splitPanelFocusRef: splitPanelFocusRef,\n    onSplitPanelToggle: onSplitPanelToggle,\n    disabled: anyPanelOpenInMobile,\n    globalDrawersFocusControl: globalDrawersFocusControl,\n    globalDrawers: (_c = globalDrawers === null || globalDrawers === void 0 ? void 0 : globalDrawers.filter(item => !!item.trigger)) !== null && _c !== void 0 ? _c : [],\n    activeGlobalDrawersIds: activeGlobalDrawersIds !== null && activeGlobalDrawersIds !== void 0 ? activeGlobalDrawersIds : [],\n    onActiveGlobalDrawersChange: onActiveGlobalDrawersChange\n  }))));\n}\nexport const createWidgetizedAppLayoutToolbar = createWidgetizedComponent(AppLayoutToolbarImplementation);","map":{"version":3,"names":["React","useEffect","useRef","clsx","useResizeObserver","BreadcrumbGroupImplementation","createWidgetizedComponent","ToolbarSlot","DrawerTriggers","TriggerButton","testutilStyles","styles","convertLegacyProps","toolbarProps","legacyProps","ariaLabels","_a","activeDrawerId","_b","_c","activeDrawer","id","drawers","_d","drawersFocusRef","_e","_f","drawersFocusControl","refs","toggle","globalDrawersFocusControl","onActiveDrawerChange","_g","globalDrawers","_h","activeGlobalDrawersIds","_j","onActiveGlobalDrawersChange","_k","hasNavigation","_l","navigation","navigationOpen","_m","navigationFocusRef","_o","_p","navigationFocusControl","onNavigationToggle","_q","hasSplitPanel","_r","splitPanelFocusRef","_s","splitPanelFocusControl","splitPanelToggleProps","_t","Object","assign","splitPanelToggleConfig","active","splitPanelOpen","controlId","splitPanelControlId","position","splitPanelPosition","onSplitPanelToggle","_u","AppLayoutToolbarImplementation","_ref","appLayoutInternals","breadcrumbs","discoveredBreadcrumbs","verticalOffsets","isMobile","toolbarState","setToolbarState","setToolbarHeight","pinnedToolbar","ref","entry","borderBoxHeight","lastScrollY","window","scrollY","updateScrollDirection","direction","addEventListener","removeEventListener","anyPanelOpenInMobile","document","body","classList","add","remove","toolbarHidden","createElement","className","toolbar","style","insetBlockStart","ariaLabel","navigationToggle","undefined","ariaExpanded","iconName","onClick","selected","disabled","__injectAnalyticsComponentMetadata","length","displayed","filter","item","trigger","createWidgetizedAppLayoutToolbar"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/visual-refresh-toolbar/toolbar/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { BreadcrumbGroupImplementation } from '../../../breadcrumb-group/implementation';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { AppLayoutProps } from '../../interfaces';\nimport { Focusable, FocusControlMultipleStates } from '../../utils/use-focus-control';\nimport { AppLayoutInternals } from '../interfaces';\nimport { ToolbarSlot } from '../skeleton/slot-wrappers';\nimport { DrawerTriggers, SplitPanelToggleProps } from './drawer-triggers';\nimport TriggerButton from './trigger-button';\n\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nexport { SplitPanelToggleProps };\n\nexport interface ToolbarProps {\n  ariaLabels?: AppLayoutProps.Labels;\n  // navigation\n  hasNavigation?: boolean;\n  navigationOpen?: boolean;\n  onNavigationToggle?: (open: boolean) => void;\n  navigationFocusRef?: React.Ref<Focusable>;\n\n  // breadcrumbs\n  hasBreadcrumbsPortal?: boolean;\n\n  // split panel\n  hasSplitPanel?: boolean;\n  splitPanelToggleProps?: SplitPanelToggleProps;\n  splitPanelFocusRef?: React.Ref<Focusable>;\n  onSplitPanelToggle?: () => void;\n\n  // drawers\n  activeDrawerId?: string | null;\n  drawers?: ReadonlyArray<AppLayoutProps.Drawer>;\n  drawersFocusRef?: React.Ref<Focusable>;\n  globalDrawersFocusControl?: FocusControlMultipleStates;\n  onActiveDrawerChange?: (drawerId: string | null) => void;\n  globalDrawers?: ReadonlyArray<AppLayoutProps.Drawer> | undefined;\n  activeGlobalDrawersIds?: ReadonlyArray<string>;\n  onActiveGlobalDrawersChange?: ((drawerId: string) => void) | undefined;\n}\n\ninterface AppLayoutToolbarImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n  toolbarProps: ToolbarProps;\n}\n\n// support compatibility with changes before this commit: cf0f2b0755af1a28ac7c3c9476418a7ea807d0fd\nfunction convertLegacyProps(toolbarProps: ToolbarProps, legacyProps: AppLayoutInternals): ToolbarProps {\n  return {\n    ariaLabels: toolbarProps.ariaLabels ?? legacyProps.ariaLabels,\n    activeDrawerId: toolbarProps.activeDrawerId ?? legacyProps.activeDrawer?.id,\n    drawers: toolbarProps.drawers ?? legacyProps.drawers,\n    drawersFocusRef: toolbarProps.drawersFocusRef ?? legacyProps.drawersFocusControl?.refs.toggle,\n    globalDrawersFocusControl: toolbarProps.globalDrawersFocusControl,\n    onActiveDrawerChange: toolbarProps.onActiveDrawerChange ?? legacyProps.onActiveDrawerChange,\n    globalDrawers: toolbarProps.globalDrawers ?? legacyProps.globalDrawers,\n    activeGlobalDrawersIds: toolbarProps.activeGlobalDrawersIds ?? legacyProps.activeGlobalDrawersIds,\n    onActiveGlobalDrawersChange: toolbarProps.onActiveGlobalDrawersChange ?? legacyProps.onActiveGlobalDrawersChange,\n    hasNavigation: toolbarProps.hasNavigation ?? !!legacyProps.navigation,\n    navigationOpen: toolbarProps.navigationOpen ?? legacyProps.navigationOpen,\n    navigationFocusRef: toolbarProps.navigationFocusRef ?? legacyProps.navigationFocusControl?.refs.toggle,\n    onNavigationToggle: toolbarProps.onNavigationToggle ?? legacyProps.onNavigationToggle,\n    hasSplitPanel: toolbarProps.hasSplitPanel ?? true,\n    splitPanelFocusRef: legacyProps.splitPanelFocusControl?.refs.toggle,\n    splitPanelToggleProps: toolbarProps.splitPanelToggleProps ?? {\n      ...legacyProps.splitPanelToggleConfig,\n      active: legacyProps.splitPanelOpen,\n      controlId: legacyProps.splitPanelControlId,\n      position: legacyProps.splitPanelPosition,\n    },\n    onSplitPanelToggle: toolbarProps.onSplitPanelToggle ?? legacyProps.onSplitPanelToggle,\n  };\n}\n\nexport function AppLayoutToolbarImplementation({\n  appLayoutInternals,\n  // the value could be undefined if this component is loaded as a widget by a different app layout version\n  // not testable in a single-version setup\n  toolbarProps = {},\n}: AppLayoutToolbarImplementationProps) {\n  const {\n    breadcrumbs,\n    discoveredBreadcrumbs,\n    verticalOffsets,\n    isMobile,\n    toolbarState,\n    setToolbarState,\n    setToolbarHeight,\n    globalDrawersFocusControl,\n  } = appLayoutInternals;\n  const {\n    ariaLabels,\n    activeDrawerId,\n    drawers,\n    drawersFocusRef,\n    onActiveDrawerChange,\n    globalDrawers,\n    activeGlobalDrawersIds,\n    onActiveGlobalDrawersChange,\n    hasNavigation,\n    navigationOpen,\n    navigationFocusRef,\n    onNavigationToggle,\n    hasSplitPanel,\n    splitPanelFocusRef,\n    splitPanelToggleProps,\n    onSplitPanelToggle,\n  } = convertLegacyProps(toolbarProps, appLayoutInternals);\n  // TODO: expose configuration property\n  const pinnedToolbar = true;\n  const ref = useRef<HTMLElement>(null);\n  useResizeObserver(ref, entry => setToolbarHeight(entry.borderBoxHeight));\n  useEffect(() => {\n    return () => {\n      setToolbarHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    let lastScrollY = window.scrollY;\n\n    /* istanbul ignore next not testable in JSDOM */\n    const updateScrollDirection = () => {\n      if (pinnedToolbar) {\n        setToolbarState('show');\n        return;\n      }\n      const scrollY = window.scrollY;\n      // 80 is an arbitrary number to have a pause before the toolbar scrolls out of view at the top of the page\n      const direction = scrollY > lastScrollY && scrollY > 80 ? 'hide' : 'show';\n      // 2 as a buffer to avoid mistaking minor accidental mouse moves as scroll\n      if (direction !== toolbarState && (scrollY - lastScrollY > 2 || scrollY - lastScrollY < -2)) {\n        setToolbarState(direction);\n      }\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n    };\n\n    window.addEventListener('scroll', updateScrollDirection);\n    return () => {\n      window.removeEventListener('scroll', updateScrollDirection);\n    };\n  }, [pinnedToolbar, setToolbarState, toolbarState]);\n\n  const anyPanelOpenInMobile = !!isMobile && (!!activeDrawerId || (!!navigationOpen && !!hasNavigation));\n  useEffect(() => {\n    if (anyPanelOpenInMobile) {\n      document.body.classList.add(styles['block-body-scroll']);\n    } else {\n      document.body.classList.remove(styles['block-body-scroll']);\n    }\n    return () => {\n      document.body.classList.remove(styles['block-body-scroll']);\n    };\n  }, [anyPanelOpenInMobile]);\n\n  const toolbarHidden = toolbarState === 'hide' && !pinnedToolbar;\n\n  return (\n    <ToolbarSlot\n      ref={ref}\n      className={clsx(styles['universal-toolbar'], testutilStyles.toolbar, {\n        [testutilStyles['mobile-bar']]: isMobile,\n        [styles['toolbar-hidden']]: toolbarHidden,\n      })}\n      style={{\n        insetBlockStart: toolbarHidden ? '-60px' : verticalOffsets.toolbar,\n      }}\n    >\n      <div className={styles['toolbar-container']}>\n        {hasNavigation && (\n          <nav className={clsx(styles['universal-toolbar-nav'])}>\n            <TriggerButton\n              ariaLabel={ariaLabels?.navigationToggle ?? undefined}\n              ariaExpanded={false}\n              iconName=\"menu\"\n              className={testutilStyles['navigation-toggle']}\n              onClick={() => onNavigationToggle?.(!navigationOpen)}\n              ref={navigationFocusRef}\n              selected={navigationOpen}\n              disabled={anyPanelOpenInMobile}\n            />\n          </nav>\n        )}\n        {(breadcrumbs || discoveredBreadcrumbs) && (\n          <div className={clsx(styles['universal-toolbar-breadcrumbs'], testutilStyles.breadcrumbs)}>\n            {breadcrumbs}\n            {discoveredBreadcrumbs && (\n              <BreadcrumbGroupImplementation\n                {...discoveredBreadcrumbs}\n                data-awsui-discovered-breadcrumbs={true}\n                __injectAnalyticsComponentMetadata={true}\n              />\n            )}\n          </div>\n        )}\n        {((drawers && drawers.length > 0) || (hasSplitPanel && splitPanelToggleProps?.displayed)) && (\n          <div className={clsx(styles['universal-toolbar-drawers'])}>\n            <DrawerTriggers\n              ariaLabels={ariaLabels}\n              activeDrawerId={activeDrawerId ?? null}\n              drawers={drawers?.filter(item => !!item.trigger) ?? []}\n              drawersFocusRef={drawersFocusRef}\n              onActiveDrawerChange={onActiveDrawerChange}\n              splitPanelToggleProps={splitPanelToggleProps?.displayed ? splitPanelToggleProps : undefined}\n              splitPanelFocusRef={splitPanelFocusRef}\n              onSplitPanelToggle={onSplitPanelToggle}\n              disabled={anyPanelOpenInMobile}\n              globalDrawersFocusControl={globalDrawersFocusControl}\n              globalDrawers={globalDrawers?.filter(item => !!item.trigger) ?? []}\n              activeGlobalDrawersIds={activeGlobalDrawersIds ?? []}\n              onActiveGlobalDrawersChange={onActiveGlobalDrawersChange}\n            />\n          </div>\n        )}\n      </div>\n    </ToolbarSlot>\n  );\n}\n\nexport const createWidgetizedAppLayoutToolbar = createWidgetizedComponent(AppLayoutToolbarImplementation);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}