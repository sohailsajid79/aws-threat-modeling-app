{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalLink from './internal';\nconst Link = React.forwardRef((_a, ref) => {\n  var {\n      fontSize = 'body-m',\n      color = 'normal',\n      external = false\n    } = _a,\n    props = __rest(_a, [\"fontSize\", \"color\", \"external\"]);\n  const baseComponentProps = useBaseComponent('Link', {\n    props: {\n      color,\n      external,\n      fontSize,\n      rel: props.rel,\n      target: props.target,\n      variant: props.variant\n    }\n  });\n  const analyticsMetadata = {\n    action: 'click',\n    detail: {\n      label: {\n        root: 'self'\n      },\n      external: `${external}`\n    },\n    component: {\n      name: 'awsui.Link',\n      label: {\n        root: 'self'\n      },\n      properties: {\n        variant: props.variant || 'secondary'\n      }\n    }\n  };\n  if (props.href) {\n    analyticsMetadata.detail.href = props.href;\n  }\n  return React.createElement(InternalLink, Object.assign({\n    fontSize: fontSize,\n    color: color,\n    external: external\n  }, props, baseComponentProps, {\n    ref: ref\n  }, getAnalyticsMetadataAttribute(analyticsMetadata)));\n});\napplyDisplayName(Link, 'Link');\nexport default Link;","map":{"version":3,"names":["React","getAnalyticsMetadataAttribute","useBaseComponent","applyDisplayName","InternalLink","Link","forwardRef","_a","ref","fontSize","color","external","props","__rest","baseComponentProps","rel","target","variant","analyticsMetadata","action","detail","label","root","component","name","properties","href","createElement","Object","assign"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/link/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataLinkFragment } from './analytics-metadata/interfaces';\nimport { LinkProps } from './interfaces';\nimport InternalLink from './internal';\n\nexport { LinkProps };\n\nconst Link = React.forwardRef(\n  ({ fontSize = 'body-m', color = 'normal', external = false, ...props }: LinkProps, ref: React.Ref<LinkProps.Ref>) => {\n    const baseComponentProps = useBaseComponent('Link', {\n      props: { color, external, fontSize, rel: props.rel, target: props.target, variant: props.variant },\n    });\n\n    const analyticsMetadata: GeneratedAnalyticsMetadataLinkFragment = {\n      action: 'click',\n      detail: {\n        label: { root: 'self' },\n        external: `${external}`,\n      },\n      component: {\n        name: 'awsui.Link',\n        label: { root: 'self' },\n        properties: { variant: props.variant || 'secondary' },\n      },\n    };\n\n    if (props.href) {\n      analyticsMetadata.detail.href = props.href;\n    }\n\n    return (\n      <InternalLink\n        fontSize={fontSize}\n        color={color}\n        external={external}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n        {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n      />\n    );\n  }\n);\n\napplyDisplayName(Link, 'Link');\nexport default Link;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAGvE,OAAOC,YAAY,MAAM,YAAY;AAIrC,MAAMC,IAAI,GAAGL,KAAK,CAACM,UAAU,CAC3B,CAACC,EAAgF,EAAEC,GAA6B,KAAI;MAAnH;MAAEC,QAAQ,GAAG,QAAQ;MAAEC,KAAK,GAAG,QAAQ;MAAEC,QAAQ,GAAG;IAAK,IAAAJ,EAAuB;IAAlBK,KAAK,GAAAC,MAAA,CAAAN,EAAA,EAAnE,iCAAqE,CAAF;EAClE,MAAMO,kBAAkB,GAAGZ,gBAAgB,CAAC,MAAM,EAAE;IAClDU,KAAK,EAAE;MAAEF,KAAK;MAAEC,QAAQ;MAAEF,QAAQ;MAAEM,GAAG,EAAEH,KAAK,CAACG,GAAG;MAAEC,MAAM,EAAEJ,KAAK,CAACI,MAAM;MAAEC,OAAO,EAAEL,KAAK,CAACK;IAAO;GACjG,CAAC;EAEF,MAAMC,iBAAiB,GAA2C;IAChEC,MAAM,EAAE,OAAO;IACfC,MAAM,EAAE;MACNC,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAM,CAAE;MACvBX,QAAQ,EAAE,GAAGA,QAAQ;KACtB;IACDY,SAAS,EAAE;MACTC,IAAI,EAAE,YAAY;MAClBH,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAM,CAAE;MACvBG,UAAU,EAAE;QAAER,OAAO,EAAEL,KAAK,CAACK,OAAO,IAAI;MAAW;;GAEtD;EAED,IAAIL,KAAK,CAACc,IAAI,EAAE;IACdR,iBAAiB,CAACE,MAAM,CAACM,IAAI,GAAGd,KAAK,CAACc,IAAI;;EAG5C,OACE1B,KAAA,CAAA2B,aAAA,CAACvB,YAAY,EAAAwB,MAAA,CAAAC,MAAA;IACXpB,QAAQ,EAAEA,QAAQ;IAClBC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EAAQ,GACdC,KAAK,EACLE,kBAAkB;IACtBN,GAAG,EAAEA;EAAG,GACJP,6BAA6B,CAACiB,iBAAiB,CAAC,EACpD;AAEN,CAAC,CACF;AAEDf,gBAAgB,CAACE,IAAI,EAAE,MAAM,CAAC;AAC9B,eAAeA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}