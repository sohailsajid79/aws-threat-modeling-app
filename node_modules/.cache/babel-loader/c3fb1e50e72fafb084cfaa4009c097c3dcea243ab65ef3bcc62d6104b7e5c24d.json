{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import Button from'@cloudscape-design/components/button';import Container from'@cloudscape-design/components/container';import Grid from'@cloudscape-design/components/grid';import Header from'@cloudscape-design/components/header';import SpaceBetween from'@cloudscape-design/components/space-between';import TextFilter from'@cloudscape-design/components/text-filter';import{useCallback,useMemo,useState}from'react';import{useMitigationLinksContext,useControlLinksContext,useApplicationInfoContext}from'../../../contexts';import{useControlsContext}from'../../../contexts/ControlsContext/context';import LinkedEntityFilter,{ALL,WITHOUT_NO_LINKED_ENTITY,WITH_LINKED_ENTITY}from'../../generic/LinkedEntityFilter';import TagSelector from'../../generic/TagSelector';import{OPTIONS as STRIDEOptions}from'../../generic/STRIDESelector';import{LEVEL_NOT_SET}from'../../../configs';import ControlCard from'../ControlCard';import ControlCreationCard from'../ControlCreationCard';import{Link,Multiselect}from'@cloudscape-design/components';import{getControlProfileByName}from'../../../data/controlProfileProvider';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ControlList=()=>{const{applicationInfo}=useApplicationInfoContext();const{//controlList,\nremoveControl,saveControl}=useControlsContext();const{addControlLinks,controlLinkList,removeControlLinksByControlId}=useControlLinksContext();const{addMitigationLinks,mitigationLinkList,removeMitigationLinksByLinkedEntityId}=useMitigationLinksContext();const[filteringText,setFilteringText]=useState('');let selectedCategory=applicationInfo.securityCategory==undefined?'CCCS Medium':applicationInfo.securityCategory;const controlList=useMemo(()=>{return getControlProfileByName(selectedCategory);},[selectedCategory]);const allTags=useMemo(()=>{return controlList.reduce((all,cur)=>{var _cur$tags;return[...all,...(((_cur$tags=cur.tags)===null||_cur$tags===void 0?void 0:_cur$tags.filter(ia=>!all.includes(ia)))||[])];},[]).filter(t=>t!==applicationInfo.securityCategory).concat(['Data','Storage','Application','Compute','Network']);},[applicationInfo.securityCategory,controlList]);const[selectedTags,setSelectedTags]=useState(allTags.filter(t=>{return t.includes(applicationInfo.securityCategory||'')||t==='CSP Stacked IaaS'&&applicationInfo.useIaaS||t==='CSP Stacked PaaS'&&applicationInfo.usePaaS||t==='CSP Stacked SaaS'&&applicationInfo.useSaaS||t.includes('Data')&&applicationInfo.useData||t.includes('Storage')&&applicationInfo.useStorage||t.includes('Application')&&applicationInfo.useApplication||t.includes('Compute')&&applicationInfo.useCompute||t.includes('Network')&&applicationInfo.useNetwork;}).concat(['Technical']));const STRIDE_OPTION_NO_VALUE={label:'STRIDE Not Set',value:LEVEL_NOT_SET};const STRIDEOptionsWithNoValue=[...STRIDEOptions,STRIDE_OPTION_NO_VALUE];const[selectedSTRIDEs,setSelectedSTRIDEs]=useState([]);const[selectedLinkedThreatsFilter,setSelectedLinkedThreatsFilter]=useState(ALL);const[selectedLinkedMitigationsFilter,setSelectedLinkedMitigationsFilter]=useState(ALL);const handleRemove=useCallback(async controlId=>{removeControl(controlId);await removeMitigationLinksByLinkedEntityId(controlId);await removeControlLinksByControlId(controlId);},[removeMitigationLinksByLinkedEntityId,removeControl,removeControlLinksByControlId]);const hasNoFilter=useMemo(()=>{return filteringText===''&&selectedLinkedMitigationsFilter===ALL&&selectedLinkedThreatsFilter===ALL&&selectedTags.length===0;},[filteringText,selectedTags,selectedLinkedThreatsFilter,selectedLinkedMitigationsFilter]);const handleClearFilter=useCallback(()=>{setFilteringText('');setSelectedTags([]);setSelectedLinkedMitigationsFilter(ALL);setSelectedLinkedThreatsFilter(ALL);},[]);const handleAddTagToEntity=useCallback((control,tag)=>{const updated={...control,tags:control.tags?!control.tags.includes(tag)?[...control.tags,tag]:control.tags:[tag]};saveControl(updated);},[saveControl]);const handleRemoveTagFromEntity=useCallback((control,tag)=>{var _control$tags;const updated={...control,tags:(_control$tags=control.tags)===null||_control$tags===void 0?void 0:_control$tags.filter(t=>t!==tag)};saveControl(updated);},[saveControl]);const filteredList=useMemo(()=>{// display only controls that have at least one linked threat\nlet output=controlList;//.filter(c => {return controlLinkList?.some(cl => cl.controlId.toLowerCase() === c.id.toLowerCase());});\nif(filteringText){output=output.filter(c=>c.content&&c.content.toLowerCase().indexOf(filteringText.toLowerCase())>=0);}if(selectedTags&&selectedTags.length>0){console.log('selectedTags',selectedTags);output=output.filter(c=>{var _c$tags;return(_c$tags=c.tags)===null||_c$tags===void 0?void 0:_c$tags.some(t=>selectedTags.includes(t));});}if(selectedSTRIDEs&&selectedSTRIDEs.length>0){output=output.filter(c=>{var _c$metadata;const stride=(_c$metadata=c.metadata)===null||_c$metadata===void 0?void 0:_c$metadata.find(m=>m.key==='STRIDE');const includedNoValue=selectedSTRIDEs.includes(LEVEL_NOT_SET);if(includedNoValue&&(!stride||!stride.value||stride.value.length===0||stride.value.length===1&&stride.value[0]==='')){return true;}return(stride===null||stride===void 0?void 0:stride.value)&&stride.value.some(t=>selectedSTRIDEs.includes(t));});}if(selectedLinkedThreatsFilter!==ALL){output=output.filter(c=>{return controlLinkList.some(cl=>cl.controlId===c.id)?selectedLinkedThreatsFilter===WITH_LINKED_ENTITY:selectedLinkedThreatsFilter===WITHOUT_NO_LINKED_ENTITY;});}if(selectedLinkedMitigationsFilter!==ALL){output=output.filter(c=>{return mitigationLinkList.some(ml=>ml.linkedId===c.id)?selectedLinkedMitigationsFilter===WITH_LINKED_ENTITY:selectedLinkedMitigationsFilter===WITHOUT_NO_LINKED_ENTITY;});}output=output.sort((op1,op2)=>(op2.displayOrder||Number.MAX_VALUE)-(op1.displayOrder||Number.MAX_VALUE));return output;},[filteringText,controlList,selectedTags,selectedSTRIDEs,mitigationLinkList,controlLinkList,selectedLinkedMitigationsFilter,selectedLinkedThreatsFilter]);const handleSaveNew=useCallback((control,linkedMitigationIds,linkedThreatIds)=>{const updated=saveControl(control);const controlLinks=[];linkedThreatIds.forEach(id=>{controlLinks.push({linkedId:id,controlId:updated.id});});addControlLinks(controlLinks);const mitigationLinks=[];linkedMitigationIds.forEach(id=>{mitigationLinks.push({linkedId:updated.id,mitigationId:id});});addMitigationLinks(mitigationLinks);},[saveControl,addControlLinks,addMitigationLinks]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(SpaceBetween,{direction:\"vertical\",size:\"s\",children:[/*#__PURE__*/_jsx(Container,{header:/*#__PURE__*/_jsx(Header,{counter:`(${filteredList.length})`,info:/*#__PURE__*/_jsx(Link,{variant:\"info\",children:\"Info\"}),children:\"Control List\"}),children:/*#__PURE__*/_jsxs(SpaceBetween,{direction:\"vertical\",size:\"s\",children:[/*#__PURE__*/_jsx(TextFilter,{filteringText:filteringText,filteringPlaceholder:\"Find controls\",filteringAriaLabel:\"Filter controls\",onChange:_ref=>{let{detail}=_ref;return setFilteringText(detail.filteringText);}}),/*#__PURE__*/_jsxs(Grid,{gridDefinition:[{colspan:{default:12,xs:2}},{colspan:{default:12,xs:3}},{colspan:{default:12,xs:3}},{colspan:{default:12,xs:3}},{colspan:{default:1}}],children:[/*#__PURE__*/_jsx(TagSelector,{allTags:allTags,selectedTags:selectedTags,setSelectedTags:setSelectedTags}),/*#__PURE__*/_jsx(Multiselect,{tokenLimit:3,selectedOptions:[...STRIDEOptions.filter(x=>selectedSTRIDEs.includes(x.value)),...(selectedSTRIDEs.includes(LEVEL_NOT_SET)?[STRIDE_OPTION_NO_VALUE]:[])],onChange:_ref2=>{var _detail$selectedOptio;let{detail}=_ref2;return setSelectedSTRIDEs(((_detail$selectedOptio=detail.selectedOptions)===null||_detail$selectedOptio===void 0?void 0:_detail$selectedOptio.map(o=>o.value||''))||[]);},deselectAriaLabel:e=>`Remove ${e.label}`,options:STRIDEOptionsWithNoValue,placeholder:\"Filtered by STRIDE\",selectedAriaLabel:\"Selected\"}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked threats\",entityDisplayName:\"threats\",callerName:\"controls\",selected:selectedLinkedThreatsFilter,setSelected:setSelectedLinkedThreatsFilter}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked mitigations\",entityDisplayName:\"mitigations\",callerName:\"controls\",selected:selectedLinkedMitigationsFilter,setSelected:setSelectedLinkedMitigationsFilter}),/*#__PURE__*/_jsx(Button,{onClick:handleClearFilter,variant:\"icon\",iconSvg:/*#__PURE__*/_jsx(\"svg\",{focusable:\"false\",\"aria-hidden\":\"true\",viewBox:\"0 0 24 24\",tabIndex:-1,children:/*#__PURE__*/_jsx(\"path\",{d:\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"})}),ariaLabel:\"Clear filters\",disabled:hasNoFilter})]})]})}),filteredList===null||filteredList===void 0?void 0:filteredList.map(entity=>/*#__PURE__*/_jsx(ControlCard,{entity:entity,onRemove:handleRemove,onEdit:saveControl,onAddTagToEntity:handleAddTagToEntity,onRemoveTagFromEntity:handleRemoveTagFromEntity,controlList:controlList},entity.id)),/*#__PURE__*/_jsx(ControlCreationCard,{onSave:handleSaveNew,controlList:controlList})]})});};export default ControlList;","map":{"version":3,"names":["Button","Container","Grid","Header","SpaceBetween","TextFilter","useCallback","useMemo","useState","useMitigationLinksContext","useControlLinksContext","useApplicationInfoContext","useControlsContext","LinkedEntityFilter","ALL","WITHOUT_NO_LINKED_ENTITY","WITH_LINKED_ENTITY","TagSelector","OPTIONS","STRIDEOptions","LEVEL_NOT_SET","ControlCard","ControlCreationCard","Link","Multiselect","getControlProfileByName","jsx","_jsx","jsxs","_jsxs","ControlList","applicationInfo","removeControl","saveControl","addControlLinks","controlLinkList","removeControlLinksByControlId","addMitigationLinks","mitigationLinkList","removeMitigationLinksByLinkedEntityId","filteringText","setFilteringText","selectedCategory","securityCategory","undefined","controlList","allTags","reduce","all","cur","_cur$tags","tags","filter","ia","includes","t","concat","selectedTags","setSelectedTags","useIaaS","usePaaS","useSaaS","useData","useStorage","useApplication","useCompute","useNetwork","STRIDE_OPTION_NO_VALUE","label","value","STRIDEOptionsWithNoValue","selectedSTRIDEs","setSelectedSTRIDEs","selectedLinkedThreatsFilter","setSelectedLinkedThreatsFilter","selectedLinkedMitigationsFilter","setSelectedLinkedMitigationsFilter","handleRemove","controlId","hasNoFilter","length","handleClearFilter","handleAddTagToEntity","control","tag","updated","handleRemoveTagFromEntity","_control$tags","filteredList","output","c","content","toLowerCase","indexOf","console","log","_c$tags","some","_c$metadata","stride","metadata","find","m","key","includedNoValue","cl","id","ml","linkedId","sort","op1","op2","displayOrder","Number","MAX_VALUE","handleSaveNew","linkedMitigationIds","linkedThreatIds","controlLinks","forEach","push","mitigationLinks","mitigationId","children","direction","size","header","counter","info","variant","filteringPlaceholder","filteringAriaLabel","onChange","_ref","detail","gridDefinition","colspan","default","xs","tokenLimit","selectedOptions","x","_ref2","_detail$selectedOptio","map","o","deselectAriaLabel","e","options","placeholder","selectedAriaLabel","entityDisplayName","callerName","selected","setSelected","onClick","iconSvg","focusable","viewBox","tabIndex","d","ariaLabel","disabled","entity","onRemove","onEdit","onAddTagToEntity","onRemoveTagFromEntity","onSave"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/controls/ControlList/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Button from '@cloudscape-design/components/button';\nimport Container from '@cloudscape-design/components/container';\nimport Grid from '@cloudscape-design/components/grid';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport { FC, useCallback, useMemo, useState } from 'react';\nimport { useMitigationLinksContext, useControlLinksContext, useApplicationInfoContext } from '../../../contexts';\nimport { useControlsContext } from '../../../contexts/ControlsContext/context';\nimport { MitigationLink, Control, ControlLink } from '../../../customTypes';\nimport LinkedEntityFilter, { ALL, WITHOUT_NO_LINKED_ENTITY, WITH_LINKED_ENTITY } from '../../generic/LinkedEntityFilter';\nimport TagSelector from '../../generic/TagSelector';\nimport { OPTIONS as STRIDEOptions } from '../../generic/STRIDESelector';\nimport { LEVEL_NOT_SET } from '../../../configs';\nimport ControlCard from '../ControlCard';\nimport ControlCreationCard from '../ControlCreationCard';\nimport { Link, Multiselect } from '@cloudscape-design/components';\nimport { getControlProfileByName } from '../../../data/controlProfileProvider';\n\nconst ControlList: FC = () => {\n  const { applicationInfo } = useApplicationInfoContext();\n  const {\n    //controlList,\n    removeControl,\n    saveControl,\n  } = useControlsContext();\n\n  const {\n    addControlLinks,\n    controlLinkList,\n    removeControlLinksByControlId,\n  } = useControlLinksContext();\n\n  const {\n    addMitigationLinks,\n    mitigationLinkList,\n    removeMitigationLinksByLinkedEntityId,\n  } = useMitigationLinksContext();\n\n  const [filteringText, setFilteringText] = useState('');\n\n  let selectedCategory = (applicationInfo.securityCategory == undefined ? 'CCCS Medium' : applicationInfo.securityCategory);\n  const controlList = useMemo(() => {\n    return getControlProfileByName(selectedCategory) as Control[];\n  }, [selectedCategory]);\n\n  const allTags = useMemo(() => {\n    return controlList\n      .reduce((all: string[], cur) => {\n        return [...all, ...cur.tags?.filter(ia => !all.includes(ia)) || []];\n      }, []).filter(t=>t!==applicationInfo.securityCategory).concat(['Data', 'Storage', 'Application', 'Compute', 'Network']);\n  }, [applicationInfo.securityCategory, controlList]);\n\n  const [\n    selectedTags,\n    setSelectedTags,\n  ] = useState<string[]>(allTags.filter(t => {\n    return (t.includes(applicationInfo.securityCategory||'') ||\n           (t === 'CSP Stacked IaaS' && applicationInfo.useIaaS) ||\n           (t === 'CSP Stacked PaaS' && applicationInfo.usePaaS) ||\n           (t === 'CSP Stacked SaaS' && applicationInfo.useSaaS) ||\n           (t.includes('Data') && applicationInfo.useData) ||\n           (t.includes('Storage') && applicationInfo.useStorage) ||\n           (t.includes('Application') && applicationInfo.useApplication) ||\n           (t.includes('Compute') && applicationInfo.useCompute) ||\n           (t.includes('Network') && applicationInfo.useNetwork)\n    );\n  }).concat(['Technical']));\n\n  const STRIDE_OPTION_NO_VALUE = {\n    label: 'STRIDE Not Set', value: LEVEL_NOT_SET,\n  };\n\n  const STRIDEOptionsWithNoValue = [...STRIDEOptions, STRIDE_OPTION_NO_VALUE];\n\n  const [\n    selectedSTRIDEs,\n    setSelectedSTRIDEs,\n  ] = useState<string[]>([]);\n\n  const [\n    selectedLinkedThreatsFilter,\n    setSelectedLinkedThreatsFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedMitigationsFilter,\n    setSelectedLinkedMitigationsFilter,\n  ] = useState(ALL);\n\n  const handleRemove = useCallback(async (controlId: string) => {\n    removeControl(controlId);\n    await removeMitigationLinksByLinkedEntityId(controlId);\n    await removeControlLinksByControlId(controlId);\n  }, [removeMitigationLinksByLinkedEntityId, removeControl, removeControlLinksByControlId]);\n\n  const hasNoFilter = useMemo(() => {\n    return (filteringText === ''\n      && selectedLinkedMitigationsFilter === ALL\n      && selectedLinkedThreatsFilter === ALL\n      && selectedTags.length === 0);\n  }, [filteringText, selectedTags,\n    selectedLinkedThreatsFilter, selectedLinkedMitigationsFilter]);\n\n  const handleClearFilter = useCallback(() => {\n    setFilteringText('');\n    setSelectedTags([]);\n    setSelectedLinkedMitigationsFilter(ALL);\n    setSelectedLinkedThreatsFilter(ALL);\n  }, []);\n\n  const handleAddTagToEntity = useCallback((control: Control, tag: string) => {\n    const updated: Control = {\n      ...control,\n      tags: control.tags ?\n        (!control.tags.includes(tag) ?\n          [...control.tags, tag] : control.tags) :\n        [tag],\n    };\n    saveControl(updated);\n  }, [saveControl]);\n\n  const handleRemoveTagFromEntity = useCallback((control: Control, tag: string) => {\n    const updated: Control = {\n      ...control,\n      tags: control.tags?.filter(t => t !== tag),\n    };\n    saveControl(updated);\n  }, [saveControl]);\n\n\n  const filteredList = useMemo(() => {\n    // display only controls that have at least one linked threat\n    let output = controlList;//.filter(c => {return controlLinkList?.some(cl => cl.controlId.toLowerCase() === c.id.toLowerCase());});\n\n    if (filteringText) {\n      output = output.filter(c => c.content && c.content.toLowerCase().indexOf(filteringText.toLowerCase()) >= 0);\n    }\n    if (selectedTags && selectedTags.length > 0) {\n      console.log('selectedTags', selectedTags);\n      output = output.filter(c => {\n        return c.tags?.some(t => selectedTags.includes(t));\n      });\n    }\n    if (selectedSTRIDEs && selectedSTRIDEs.length > 0) {\n      output = output.filter(c => {\n        const stride = c.metadata?.find(m => m.key === 'STRIDE');\n        const includedNoValue = selectedSTRIDEs.includes(LEVEL_NOT_SET);\n        if (includedNoValue && (!stride || !stride.value || stride.value.length === 0 || (stride.value.length === 1 && stride.value[0]===''))) {\n          return true;\n        }\n\n        return stride?.value && (stride.value as string[]).some(t => selectedSTRIDEs.includes(t));\n      });\n    }\n\n    if (selectedLinkedThreatsFilter !== ALL) {\n      output = output.filter(c => {\n        return controlLinkList.some(cl => cl. controlId === c.id) ?\n          selectedLinkedThreatsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedThreatsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedMitigationsFilter !== ALL) {\n      output = output.filter(c => {\n        return mitigationLinkList.some(ml => ml.linkedId === c.id) ?\n          selectedLinkedMitigationsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedMitigationsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n    output = output.sort((op1, op2) => (op2.displayOrder || Number.MAX_VALUE) - (op1.displayOrder || Number.MAX_VALUE));\n    return output;\n  }, [filteringText, controlList, selectedTags, selectedSTRIDEs,\n    mitigationLinkList, controlLinkList,\n    selectedLinkedMitigationsFilter, selectedLinkedThreatsFilter]);\n\n\n  const handleSaveNew = useCallback((control: Control,\n    linkedMitigationIds: string[],\n    linkedThreatIds: string[]) => {\n    const updated = saveControl(control);\n\n    const controlLinks: ControlLink[] = [];\n    linkedThreatIds.forEach(id => {\n      controlLinks.push({\n        linkedId: id,\n        controlId: updated.id,\n      });\n    });\n\n    addControlLinks(controlLinks);\n\n    const mitigationLinks: MitigationLink[] = [];\n    linkedMitigationIds.forEach(id => {\n      mitigationLinks.push({\n        linkedId: updated.id,\n        mitigationId: id,\n      });\n    });\n\n    addMitigationLinks(mitigationLinks);\n\n  }, [saveControl, addControlLinks, addMitigationLinks]);\n\n  return (<div>\n    <SpaceBetween direction='vertical' size='s'>\n      <Container header={\n        <Header\n          counter={`(${filteredList.length})`}\n          info={<Link variant=\"info\">Info</Link>}\n        >Control List</Header>\n      }>\n        <SpaceBetween direction='vertical' size='s'>\n          <TextFilter\n            filteringText={filteringText}\n            filteringPlaceholder=\"Find controls\"\n            filteringAriaLabel=\"Filter controls\"\n            onChange={({ detail }) =>\n              setFilteringText(detail.filteringText)\n            }\n          />\n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xs: 2 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 1 } },\n            ]}\n          >\n            <TagSelector\n              allTags={allTags}\n              selectedTags={selectedTags}\n              setSelectedTags={setSelectedTags}\n            />\n            <Multiselect\n              tokenLimit={3}\n              selectedOptions={[...STRIDEOptions.filter(x => selectedSTRIDEs.includes(x.value)),\n                ...selectedSTRIDEs.includes(LEVEL_NOT_SET) ? [STRIDE_OPTION_NO_VALUE] : []]}\n              onChange={({ detail }) =>\n                setSelectedSTRIDEs(detail.selectedOptions?.map(o => o.value || '') || [])\n              }\n              deselectAriaLabel={e => `Remove ${e.label}`}\n              options={STRIDEOptionsWithNoValue}\n              placeholder=\"Filtered by STRIDE\"\n              selectedAriaLabel=\"Selected\"\n            />\n            <LinkedEntityFilter\n              label='Linked threats'\n              entityDisplayName='threats'\n              callerName='controls'\n              selected={selectedLinkedThreatsFilter}\n              setSelected={setSelectedLinkedThreatsFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked mitigations'\n              entityDisplayName='mitigations'\n              callerName='controls'\n              selected={selectedLinkedMitigationsFilter}\n              setSelected={setSelectedLinkedMitigationsFilter}\n            />\n            <Button onClick={handleClearFilter}\n              variant='icon'\n              iconSvg={<svg\n                focusable=\"false\"\n                aria-hidden=\"true\"\n                viewBox=\"0 0 24 24\"\n                tabIndex={-1}\n              >\n                <path d=\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"></path>\n              </svg>}\n              ariaLabel='Clear filters'\n              disabled={hasNoFilter}\n            />\n          </Grid>\n        </SpaceBetween>\n      </Container>\n      {filteredList?.map(entity => (<ControlCard\n        key={entity.id}\n        entity={entity}\n        onRemove={handleRemove}\n        onEdit={saveControl}\n        onAddTagToEntity={handleAddTagToEntity}\n        onRemoveTagFromEntity={handleRemoveTagFromEntity}\n        controlList={controlList}\n      />))}\n      <ControlCreationCard\n        onSave={handleSaveNew}\n        controlList={controlList}\n      />\n    </SpaceBetween>\n  </div>);\n};\n\nexport default ControlList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}