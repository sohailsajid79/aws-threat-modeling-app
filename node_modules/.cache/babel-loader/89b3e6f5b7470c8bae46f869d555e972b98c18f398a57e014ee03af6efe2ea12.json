{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport LiveRegion from '../internal/components/live-region';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport styles from './styles.css.js';\nexport function NoDataCell({\n  totalColumnsCount,\n  hasFooter,\n  loading,\n  loadingText,\n  empty,\n  tableRef,\n  containerRef\n}) {\n  const cellContentRef = useRef(null);\n  useResizeObserver(containerRef, ({\n    contentBoxWidth: containerInlineSize\n  }) => {\n    if (tableRef.current && cellContentRef.current) {\n      const tablePaddingInlineStart = parseFloat(getComputedStyle(tableRef.current).paddingInlineStart) || 0;\n      const tablePaddingInlineEnd = parseFloat(getComputedStyle(tableRef.current).paddingInlineEnd) || 0;\n      const inlineSize = containerInlineSize + tablePaddingInlineStart + tablePaddingInlineEnd;\n      cellContentRef.current.style.inlineSize = Math.floor(inlineSize) + 'px';\n    }\n  });\n  return React.createElement(\"td\", {\n    colSpan: totalColumnsCount,\n    className: clsx(styles['cell-merged'], hasFooter && styles['has-footer'])\n  }, React.createElement(\"div\", {\n    ref: cellContentRef,\n    className: styles['cell-merged-content'],\n    \"data-awsui-table-suppress-navigation\": true\n  }, loading ? React.createElement(InternalStatusIndicator, {\n    type: \"loading\",\n    className: styles.loading,\n    wrapText: true\n  }, React.createElement(LiveRegion, {\n    visible: true\n  }, loadingText)) : React.createElement(\"div\", {\n    className: styles.empty\n  }, empty)));\n}","map":{"version":3,"names":["React","useRef","clsx","useResizeObserver","LiveRegion","InternalStatusIndicator","styles","NoDataCell","totalColumnsCount","hasFooter","loading","loadingText","empty","tableRef","containerRef","cellContentRef","contentBoxWidth","containerInlineSize","current","tablePaddingInlineStart","parseFloat","getComputedStyle","paddingInlineStart","tablePaddingInlineEnd","paddingInlineEnd","inlineSize","style","Math","floor","createElement","colSpan","className","ref","type","wrapText","visible"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/no-data-cell.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport LiveRegion from '../internal/components/live-region';\nimport InternalStatusIndicator from '../status-indicator/internal';\n\nimport styles from './styles.css.js';\n\ninterface NoDataCellProps {\n  totalColumnsCount: number;\n  hasFooter: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  empty?: React.ReactNode;\n  tableRef: React.RefObject<HTMLTableElement>;\n  containerRef: React.RefObject<HTMLElement>;\n}\n\nexport function NoDataCell({\n  totalColumnsCount,\n  hasFooter,\n  loading,\n  loadingText,\n  empty,\n  tableRef,\n  containerRef,\n}: NoDataCellProps) {\n  const cellContentRef = useRef<HTMLDivElement>(null);\n\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerInlineSize }) => {\n    if (tableRef.current && cellContentRef.current) {\n      const tablePaddingInlineStart = parseFloat(getComputedStyle(tableRef.current).paddingInlineStart) || 0;\n      const tablePaddingInlineEnd = parseFloat(getComputedStyle(tableRef.current).paddingInlineEnd) || 0;\n      const inlineSize = containerInlineSize + tablePaddingInlineStart + tablePaddingInlineEnd;\n      cellContentRef.current.style.inlineSize = Math.floor(inlineSize) + 'px';\n    }\n  });\n\n  return (\n    <td colSpan={totalColumnsCount} className={clsx(styles['cell-merged'], hasFooter && styles['has-footer'])}>\n      <div ref={cellContentRef} className={styles['cell-merged-content']} data-awsui-table-suppress-navigation={true}>\n        {loading ? (\n          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n          </InternalStatusIndicator>\n        ) : (\n          <div className={styles.empty}>{empty}</div>\n        )}\n      </div>\n    </td>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,iBAAiB,QAAQ,+CAA+C;AAEjF,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,uBAAuB,MAAM,8BAA8B;AAElE,OAAOC,MAAM,MAAM,iBAAiB;AAYpC,OAAM,SAAUC,UAAUA,CAAC;EACzBC,iBAAiB;EACjBC,SAAS;EACTC,OAAO;EACPC,WAAW;EACXC,KAAK;EACLC,QAAQ;EACRC;AAAY,CACI;EAChB,MAAMC,cAAc,GAAGd,MAAM,CAAiB,IAAI,CAAC;EAEnDE,iBAAiB,CAACW,YAAY,EAAE,CAAC;IAAEE,eAAe,EAAEC;EAAmB,CAAE,KAAI;IAC3E,IAAIJ,QAAQ,CAACK,OAAO,IAAIH,cAAc,CAACG,OAAO,EAAE;MAC9C,MAAMC,uBAAuB,GAAGC,UAAU,CAACC,gBAAgB,CAACR,QAAQ,CAACK,OAAO,CAAC,CAACI,kBAAkB,CAAC,IAAI,CAAC;MACtG,MAAMC,qBAAqB,GAAGH,UAAU,CAACC,gBAAgB,CAACR,QAAQ,CAACK,OAAO,CAAC,CAACM,gBAAgB,CAAC,IAAI,CAAC;MAClG,MAAMC,UAAU,GAAGR,mBAAmB,GAAGE,uBAAuB,GAAGI,qBAAqB;MACxFR,cAAc,CAACG,OAAO,CAACQ,KAAK,CAACD,UAAU,GAAGE,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,GAAG,IAAI;;EAE3E,CAAC,CAAC;EAEF,OACEzB,KAAA,CAAA6B,aAAA;IAAIC,OAAO,EAAEtB,iBAAiB;IAAEuB,SAAS,EAAE7B,IAAI,CAACI,MAAM,CAAC,aAAa,CAAC,EAAEG,SAAS,IAAIH,MAAM,CAAC,YAAY,CAAC;EAAC,GACvGN,KAAA,CAAA6B,aAAA;IAAKG,GAAG,EAAEjB,cAAc;IAAEgB,SAAS,EAAEzB,MAAM,CAAC,qBAAqB,CAAC;IAAA,wCAAwC;EAAI,GAC3GI,OAAO,GACNV,KAAA,CAAA6B,aAAA,CAACxB,uBAAuB;IAAC4B,IAAI,EAAC,SAAS;IAACF,SAAS,EAAEzB,MAAM,CAACI,OAAO;IAAEwB,QAAQ,EAAE;EAAI,GAC/ElC,KAAA,CAAA6B,aAAA,CAACzB,UAAU;IAAC+B,OAAO,EAAE;EAAI,GAAGxB,WAAW,CAAc,CAC7B,GAE1BX,KAAA,CAAA6B,aAAA;IAAKE,SAAS,EAAEzB,MAAM,CAACM;EAAK,GAAGA,KAAK,CACrC,CACG,CACH;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}