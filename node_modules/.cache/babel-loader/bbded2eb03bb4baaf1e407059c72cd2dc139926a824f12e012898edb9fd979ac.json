{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../../icon/internal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\nimport styles from './styles.css.js';\nexport function ExpandToggleButton({\n  isExpanded,\n  onExpandableItemToggle,\n  expandButtonLabel,\n  collapseButtonLabel\n}) {\n  const buttonRef = useRef(null);\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(buttonRef);\n  return React.createElement(\"button\", {\n    type: \"button\",\n    ref: buttonRef,\n    tabIndex: tabIndex,\n    \"aria-label\": isExpanded ? collapseButtonLabel : expandButtonLabel,\n    \"aria-expanded\": isExpanded,\n    className: styles['expand-toggle'],\n    onClick: onExpandableItemToggle\n  }, React.createElement(InternalIcon, {\n    size: \"small\",\n    name: \"caret-down-filled\",\n    className: clsx(styles['expand-toggle-icon'], isExpanded && styles['expand-toggle-icon-expanded'])\n  }));\n}","map":{"version":3,"names":["React","useRef","clsx","InternalIcon","useSingleTabStopNavigation","styles","ExpandToggleButton","isExpanded","onExpandableItemToggle","expandButtonLabel","collapseButtonLabel","buttonRef","tabIndex","createElement","type","ref","className","onClick","size","name"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/expandable-rows/expand-toggle-button.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport InternalIcon from '../../icon/internal';\nimport { useSingleTabStopNavigation } from '../../internal/context/single-tab-stop-navigation-context';\n\nimport styles from './styles.css.js';\n\nexport function ExpandToggleButton({\n  isExpanded,\n  onExpandableItemToggle,\n  expandButtonLabel,\n  collapseButtonLabel,\n}: {\n  isExpanded?: boolean;\n  onExpandableItemToggle?: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}) {\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const { tabIndex } = useSingleTabStopNavigation(buttonRef);\n  return (\n    <button\n      type=\"button\"\n      ref={buttonRef}\n      tabIndex={tabIndex}\n      aria-label={isExpanded ? collapseButtonLabel : expandButtonLabel}\n      aria-expanded={isExpanded}\n      className={styles['expand-toggle']}\n      onClick={onExpandableItemToggle}\n    >\n      <InternalIcon\n        size=\"small\"\n        name=\"caret-down-filled\"\n        className={clsx(styles['expand-toggle-icon'], isExpanded && styles['expand-toggle-icon-expanded'])}\n      />\n    </button>\n  );\n}\n"],"mappings":"AAAA;AACA;AAEA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,0BAA0B,QAAQ,2DAA2D;AAEtG,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAM,SAAUC,kBAAkBA,CAAC;EACjCC,UAAU;EACVC,sBAAsB;EACtBC,iBAAiB;EACjBC;AAAmB,CAMpB;EACC,MAAMC,SAAS,GAAGV,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAM;IAAEW;EAAQ,CAAE,GAAGR,0BAA0B,CAACO,SAAS,CAAC;EAC1D,OACEX,KAAA,CAAAa,aAAA;IACEC,IAAI,EAAC,QAAQ;IACbC,GAAG,EAAEJ,SAAS;IACdC,QAAQ,EAAEA,QAAQ;IAAA,cACNL,UAAU,GAAGG,mBAAmB,GAAGD,iBAAiB;IAAA,iBACjDF,UAAU;IACzBS,SAAS,EAAEX,MAAM,CAAC,eAAe,CAAC;IAClCY,OAAO,EAAET;EAAsB,GAE/BR,KAAA,CAAAa,aAAA,CAACV,YAAY;IACXe,IAAI,EAAC,OAAO;IACZC,IAAI,EAAC,mBAAmB;IACxBH,SAAS,EAAEd,IAAI,CAACG,MAAM,CAAC,oBAAoB,CAAC,EAAEE,UAAU,IAAIF,MAAM,CAAC,6BAA6B,CAAC;EAAC,EAClG,CACK;AAEb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}