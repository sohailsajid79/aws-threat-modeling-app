{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { padLeftZeros } from '../strings';\n/**\n * Transforms Date's object date part to a string.\n *\n * We cannot use Date.toISOString because it produces GMT time where the date can be different than local.\n */\nexport function formatDate(value, granularity = 'day') {\n  const year = value.getFullYear();\n  const month = padLeftZeros(`${value.getMonth() + 1}`, 2);\n  if (granularity === 'month') {\n    return `${year}-${month}`;\n  }\n  const date = padLeftZeros(`${value.getDate()}`, 2);\n  return `${year}-${month}-${date}`;\n}","map":{"version":3,"names":["padLeftZeros","formatDate","value","granularity","year","getFullYear","month","getMonth","date","getDate"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/utils/date-time/format-date.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { CalendarProps } from '../../../calendar/interfaces';\nimport { padLeftZeros } from '../strings';\n\n/**\n * Transforms Date's object date part to a string.\n *\n * We cannot use Date.toISOString because it produces GMT time where the date can be different than local.\n */\nexport function formatDate(value: Date, granularity: CalendarProps.Granularity = 'day'): string {\n  const year = value.getFullYear();\n  const month = padLeftZeros(`${value.getMonth() + 1}`, 2);\n  if (granularity === 'month') {\n    return `${year}-${month}`;\n  }\n  const date = padLeftZeros(`${value.getDate()}`, 2);\n  return `${year}-${month}-${date}`;\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,YAAY,QAAQ,YAAY;AAEzC;;;;;AAKA,OAAM,SAAUC,UAAUA,CAACC,KAAW,EAAEC,WAAA,GAAyC,KAAK;EACpF,MAAMC,IAAI,GAAGF,KAAK,CAACG,WAAW,EAAE;EAChC,MAAMC,KAAK,GAAGN,YAAY,CAAC,GAAGE,KAAK,CAACK,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;EACxD,IAAIJ,WAAW,KAAK,OAAO,EAAE;IAC3B,OAAO,GAAGC,IAAI,IAAIE,KAAK,EAAE;;EAE3B,MAAME,IAAI,GAAGR,YAAY,CAAC,GAAGE,KAAK,CAACO,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;EAClD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAIE,IAAI,EAAE;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}