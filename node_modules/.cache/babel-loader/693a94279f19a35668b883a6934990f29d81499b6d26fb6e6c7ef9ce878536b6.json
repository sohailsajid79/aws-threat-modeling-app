{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { useCallback, useRef } from 'react';\nimport { Transition as ReactTransitionGroupTransition } from 'react-transition-group';\nimport { useReducedMotion } from '@cloudscape-design/component-toolkit/internal';\n/**\n * This component is a wrapper around the CSSTransition component.\n *\n * It provides a second parameter in its rendering function that must be\n * attached to the node that is transitioning.\n */\nexport function Transition(_a) {\n  var {\n      in: isIn,\n      children,\n      exit = true,\n      onStatusChange = () => void 0,\n      disabled = false,\n      transitionChangeDelay\n    } = _a,\n    rest = __rest(_a, [\"in\", \"children\", \"exit\", \"onStatusChange\", \"disabled\", \"transitionChangeDelay\"]);\n  const transitionRootElement = useRef(null);\n  // the initial state of the transition should be either 'exited' or 'entered' depending\n  // on the `in` property, this mimicks how internally the Transition component works here:\n  // https://github.com/reactjs/react-transition-group/blob/6cbd6aaedaf8e9472007640b429ddb48c6c24158/src/Transition.js#L121\n  const [transitionState, setTransitionState] = useState(isIn ? 'entered' : 'exited');\n  const motionDisabled = useReducedMotion(transitionRootElement) || disabled;\n  const addTransitionEndListener = useCallback(done => {\n    const node = transitionRootElement.current;\n    if (node === null) {\n      return;\n    }\n    const listener = e => {\n      if (e.target === node) {\n        node.removeEventListener('transitionend', listener);\n        node.removeEventListener('animationend', listener);\n        done();\n      }\n    };\n    node.addEventListener('transitionend', listener);\n    node.addEventListener('animationend', listener);\n  }, []);\n  return React.createElement(ReactTransitionGroupTransition, Object.assign({\n    addEndListener: addTransitionEndListener,\n    timeout: motionDisabled ? 0 : undefined,\n    in: isIn,\n    nodeRef: transitionRootElement,\n    exit: exit,\n    onEnter: isAppearing => {\n      if (!isAppearing) {\n        setTransitionState('enter');\n        onStatusChange('enter');\n      }\n    },\n    onEntering: isAppearing => {\n      var _a;\n      if (!isAppearing) {\n        // This line forces the browser to recalculate the layout because we want the starting state in the 'enter' style\n        // to be applied before the animation starts.\n        void ((_a = transitionRootElement.current) === null || _a === void 0 ? void 0 : _a.offsetHeight);\n        if (transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering) {\n          setTimeout(() => {\n            setTransitionState('entering');\n            onStatusChange('entering');\n          }, transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering);\n        } else {\n          setTransitionState('entering');\n          onStatusChange('entering');\n        }\n      }\n    },\n    onEntered: isAppearing => {\n      if (!isAppearing) {\n        setTransitionState('entered');\n        onStatusChange('entered');\n      }\n    },\n    onExit: () => {\n      setTransitionState('exit');\n      onStatusChange('exit');\n    },\n    onExiting: () => {\n      setTransitionState('exiting');\n      onStatusChange('exiting');\n    },\n    onExited: () => {\n      setTransitionState('exited');\n      onStatusChange('exited');\n    }\n  }, rest), () => children(transitionState, transitionRootElement));\n}","map":{"version":3,"names":["React","useState","useCallback","useRef","Transition","ReactTransitionGroupTransition","useReducedMotion","_a","in","isIn","children","exit","onStatusChange","disabled","transitionChangeDelay","rest","__rest","transitionRootElement","transitionState","setTransitionState","motionDisabled","addTransitionEndListener","done","node","current","listener","e","target","removeEventListener","addEventListener","createElement","Object","assign","addEndListener","timeout","undefined","nodeRef","onEnter","isAppearing","onEntering","offsetHeight","entering","setTimeout","onEntered","onExit","onExiting","onExited"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/transition/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport { MutableRefObject, useCallback, useRef } from 'react';\nimport {\n  Transition as ReactTransitionGroupTransition,\n  TransitionStatus as ReactTransitionGroupTransitionStatus,\n} from 'react-transition-group';\n\nimport { useReducedMotion } from '@cloudscape-design/component-toolkit/internal';\n\nexport type TransitionStatus = ReactTransitionGroupTransitionStatus | 'enter' | 'exit';\n\nexport interface TransitionProps {\n  in: boolean;\n  exit?: boolean;\n\n  disabled?: boolean;\n\n  children: (state: TransitionStatus, transitioningElementRef: MutableRefObject<any>) => React.ReactNode;\n  onStatusChange?: (status: TransitionStatus) => void;\n  transitionChangeDelay?: { entering?: number };\n}\n\n/**\n * This component is a wrapper around the CSSTransition component.\n *\n * It provides a second parameter in its rendering function that must be\n * attached to the node that is transitioning.\n */\nexport function Transition({\n  in: isIn,\n  children,\n  exit = true,\n  onStatusChange = () => void 0,\n  disabled = false,\n  transitionChangeDelay,\n  ...rest\n}: TransitionProps) {\n  const transitionRootElement = useRef<HTMLElement>(null);\n  // the initial state of the transition should be either 'exited' or 'entered' depending\n  // on the `in` property, this mimicks how internally the Transition component works here:\n  // https://github.com/reactjs/react-transition-group/blob/6cbd6aaedaf8e9472007640b429ddb48c6c24158/src/Transition.js#L121\n  const [transitionState, setTransitionState] = useState<TransitionStatus>(isIn ? 'entered' : 'exited');\n  const motionDisabled = useReducedMotion(transitionRootElement) || disabled;\n\n  const addTransitionEndListener = useCallback((done: () => void) => {\n    const node = transitionRootElement.current;\n\n    if (node === null) {\n      return;\n    }\n    const listener = (e: TransitionEvent | AnimationEvent) => {\n      if (e.target === node) {\n        node.removeEventListener('transitionend', listener);\n        node.removeEventListener('animationend', listener);\n        done();\n      }\n    };\n    node.addEventListener('transitionend', listener);\n    node.addEventListener('animationend', listener);\n  }, []);\n\n  return (\n    <ReactTransitionGroupTransition\n      addEndListener={addTransitionEndListener}\n      timeout={motionDisabled ? 0 : undefined}\n      in={isIn}\n      nodeRef={transitionRootElement}\n      exit={exit}\n      onEnter={isAppearing => {\n        if (!isAppearing) {\n          setTransitionState('enter');\n          onStatusChange('enter');\n        }\n      }}\n      onEntering={isAppearing => {\n        if (!isAppearing) {\n          // This line forces the browser to recalculate the layout because we want the starting state in the 'enter' style\n          // to be applied before the animation starts.\n          void transitionRootElement.current?.offsetHeight;\n\n          if (transitionChangeDelay?.entering) {\n            setTimeout(() => {\n              setTransitionState('entering');\n              onStatusChange('entering');\n            }, transitionChangeDelay?.entering);\n          } else {\n            setTransitionState('entering');\n            onStatusChange('entering');\n          }\n        }\n      }}\n      onEntered={isAppearing => {\n        if (!isAppearing) {\n          setTransitionState('entered');\n          onStatusChange('entered');\n        }\n      }}\n      onExit={() => {\n        setTransitionState('exit');\n        onStatusChange('exit');\n      }}\n      onExiting={() => {\n        setTransitionState('exiting');\n        onStatusChange('exiting');\n      }}\n      onExited={() => {\n        setTransitionState('exited');\n        onStatusChange('exited');\n      }}\n      {...rest}\n    >\n      {() => children(transitionState, transitionRootElement)}\n    </ReactTransitionGroupTransition>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}