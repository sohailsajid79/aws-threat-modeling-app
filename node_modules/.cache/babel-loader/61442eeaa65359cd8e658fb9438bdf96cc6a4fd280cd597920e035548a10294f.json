{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsLabelAttribute, getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { useUniqueId } from '../../hooks/use-unique-id';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nfunction joinString(values) {\n  return values.filter(value => !!value).join(' ');\n}\nexport default function AbstractSwitch(_a) {\n  var {\n      controlId,\n      controlClassName,\n      outlineClassName,\n      showOutline,\n      disabled,\n      readOnly,\n      nativeControl,\n      styledControl,\n      label,\n      description,\n      descriptionBottomPadding,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      ariaControls,\n      onClick,\n      __internalRootRef\n    } = _a,\n    rest = __rest(_a, [\"controlId\", \"controlClassName\", \"outlineClassName\", \"showOutline\", \"disabled\", \"readOnly\", \"nativeControl\", \"styledControl\", \"label\", \"description\", \"descriptionBottomPadding\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"ariaControls\", \"onClick\", \"__internalRootRef\"]);\n  const uniqueId = useUniqueId();\n  const id = controlId || uniqueId;\n  const labelId = `${id}-label`;\n  const descriptionId = `${id}-description`;\n  const ariaLabelledByIds = [];\n  if (label && !ariaLabel) {\n    ariaLabelledByIds.push(labelId);\n  }\n  if (ariaLabelledby) {\n    ariaLabelledByIds.push(ariaLabelledby);\n  }\n  const ariaDescriptions = [];\n  if (ariaDescribedby) {\n    ariaDescriptions.push(ariaDescribedby);\n  }\n  if (description) {\n    ariaDescriptions.push(descriptionId);\n  }\n  return React.createElement(\"span\", Object.assign({}, rest, {\n    className: clsx(styles.wrapper, rest.className),\n    ref: __internalRootRef\n  }, getAnalyticsLabelAttribute(label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`)), React.createElement(\"span\", Object.assign({\n    className: styles['label-wrapper'],\n    \"aria-disabled\": disabled ? 'true' : undefined,\n    onClick: disabled || readOnly ? undefined : onClick\n  }, getAnalyticsMetadataAttribute(disabled || readOnly ? {} : {\n    action: 'select',\n    detail: {\n      label: label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`\n    }\n  })), React.createElement(\"span\", {\n    className: clsx(styles.control, controlClassName)\n  }, styledControl, nativeControl({\n    id,\n    disabled,\n    className: clsx(styles['native-input'], analyticsSelectors['native-input']),\n    'aria-describedby': ariaDescriptions.length ? joinString(ariaDescriptions) : undefined,\n    'aria-labelledby': ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : undefined,\n    'aria-label': ariaLabel,\n    'aria-controls': ariaControls\n  }), React.createElement(\"span\", {\n    className: clsx(styles.outline, outlineClassName, showOutline && styles['show-outline'])\n  })), React.createElement(\"span\", {\n    className: clsx(styles.content, !label && !description && styles['empty-content'])\n  }, label && React.createElement(\"span\", {\n    id: labelId,\n    className: clsx(styles.label, analyticsSelectors.label, {\n      [styles['label-disabled']]: disabled\n    })\n  }, label), description && React.createElement(\"span\", {\n    id: descriptionId,\n    className: clsx(styles.description, {\n      [styles['description-disabled']]: disabled,\n      [styles['description-bottom-padding']]: descriptionBottomPadding\n    })\n  }, description))));\n}","map":{"version":3,"names":["React","clsx","getAnalyticsLabelAttribute","getAnalyticsMetadataAttribute","useUniqueId","analyticsSelectors","styles","joinString","values","filter","value","join","AbstractSwitch","_a","controlId","controlClassName","outlineClassName","showOutline","disabled","readOnly","nativeControl","styledControl","label","description","descriptionBottomPadding","ariaLabel","ariaLabelledby","ariaDescribedby","ariaControls","onClick","__internalRootRef","rest","__rest","uniqueId","id","labelId","descriptionId","ariaLabelledByIds","push","ariaDescriptions","createElement","Object","assign","className","wrapper","ref","undefined","action","detail","control","length","outline","content"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/abstract-switch/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport {\n  getAnalyticsLabelAttribute,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalBaseComponentProps } from '../../hooks/use-base-component/index.js';\nimport { useUniqueId } from '../../hooks/use-unique-id';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface AbstractSwitchProps extends React.HTMLAttributes<HTMLElement>, InternalBaseComponentProps {\n  controlId?: string;\n  controlClassName: string;\n  outlineClassName: string;\n  showOutline?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  nativeControl: (props: React.InputHTMLAttributes<HTMLInputElement>) => React.ReactElement;\n  styledControl: React.ReactElement;\n  label?: React.ReactNode;\n  description?: React.ReactNode;\n  descriptionBottomPadding?: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  ariaControls?: string;\n  onClick: () => void;\n}\n\nfunction joinString(values: (string | undefined)[]) {\n  return values.filter((value): value is string => !!value).join(' ');\n}\n\nexport default function AbstractSwitch({\n  controlId,\n  controlClassName,\n  outlineClassName,\n  showOutline,\n  disabled,\n  readOnly,\n  nativeControl,\n  styledControl,\n  label,\n  description,\n  descriptionBottomPadding,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescribedby,\n  ariaControls,\n  onClick,\n  __internalRootRef,\n  ...rest\n}: AbstractSwitchProps) {\n  const uniqueId = useUniqueId();\n  const id = controlId || uniqueId;\n\n  const labelId = `${id}-label`;\n  const descriptionId = `${id}-description`;\n\n  const ariaLabelledByIds = [];\n  if (label && !ariaLabel) {\n    ariaLabelledByIds.push(labelId);\n  }\n  if (ariaLabelledby) {\n    ariaLabelledByIds.push(ariaLabelledby);\n  }\n\n  const ariaDescriptions = [];\n  if (ariaDescribedby) {\n    ariaDescriptions.push(ariaDescribedby);\n  }\n  if (description) {\n    ariaDescriptions.push(descriptionId);\n  }\n\n  return (\n    <span\n      {...rest}\n      className={clsx(styles.wrapper, rest.className)}\n      ref={__internalRootRef}\n      {...getAnalyticsLabelAttribute(label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`)}\n    >\n      <span\n        className={styles['label-wrapper']}\n        aria-disabled={disabled ? 'true' : undefined}\n        onClick={disabled || readOnly ? undefined : onClick}\n        {...getAnalyticsMetadataAttribute(\n          disabled || readOnly\n            ? {}\n            : {\n                action: 'select',\n                detail: {\n                  label: label ? `.${analyticsSelectors.label}` : `.${analyticsSelectors['native-input']}`,\n                },\n              }\n        )}\n      >\n        <span className={clsx(styles.control, controlClassName)}>\n          {styledControl}\n          {nativeControl({\n            id,\n            disabled,\n            className: clsx(styles['native-input'], analyticsSelectors['native-input']),\n            'aria-describedby': ariaDescriptions.length ? joinString(ariaDescriptions) : undefined,\n            'aria-labelledby': ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : undefined,\n            'aria-label': ariaLabel,\n            'aria-controls': ariaControls,\n          })}\n          <span className={clsx(styles.outline, outlineClassName, showOutline && styles['show-outline'])} />\n        </span>\n        <span className={clsx(styles.content, !label && !description && styles['empty-content'])}>\n          {label && (\n            <span\n              id={labelId}\n              className={clsx(styles.label, analyticsSelectors.label, { [styles['label-disabled']]: disabled })}\n            >\n              {label}\n            </span>\n          )}\n          {description && (\n            <span\n              id={descriptionId}\n              className={clsx(styles.description, {\n                [styles['description-disabled']]: disabled,\n                [styles['description-bottom-padding']]: descriptionBottomPadding,\n              })}\n            >\n              {description}\n            </span>\n          )}\n        </span>\n      </span>\n    </span>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}