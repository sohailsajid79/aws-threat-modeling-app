{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nexport const Notifications = React.forwardRef((_a, ref) => {\n  var _b, _c;\n  var {\n      sticky,\n      disableContentPaddings\n    } = _a,\n    props = __rest(_a, [\"sticky\", \"disableContentPaddings\"]);\n  return sticky ? React.createElement(\"div\", {\n    ref: ref,\n    className: styles['notifications-sticky'],\n    style: {\n      top: props.topOffset\n    }\n  }, React.createElement(\"div\", {\n    role: \"region\",\n    className: clsx(props.testUtilsClassName, disableContentPaddings && styles['no-content-paddings']),\n    \"aria-label\": (_b = props.labels) === null || _b === void 0 ? void 0 : _b.notifications\n  }, props.children)) : React.createElement(\"div\", {\n    role: \"region\",\n    ref: ref,\n    className: clsx(props.testUtilsClassName, styles.notifications, disableContentPaddings && styles['no-content-paddings']),\n    \"aria-label\": (_c = props.labels) === null || _c === void 0 ? void 0 : _c.notifications\n  }, props.children);\n});","map":{"version":3,"names":["React","clsx","styles","Notifications","forwardRef","_a","ref","sticky","disableContentPaddings","props","__rest","createElement","className","style","top","topOffset","role","testUtilsClassName","_b","labels","notifications","children","_c"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/notifications/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { AppLayoutProps } from '../interfaces';\n\nimport styles from './styles.css.js';\n\ninterface NotificationsProps {\n  testUtilsClassName: string;\n  children?: React.ReactNode;\n  labels: AppLayoutProps.Labels | undefined;\n  topOffset: number | undefined;\n  disableContentPaddings?: boolean;\n}\ninterface NotificationWrapperProps extends NotificationsProps {\n  sticky: boolean | undefined;\n}\n\nexport const Notifications = React.forwardRef(\n  ({ sticky, disableContentPaddings, ...props }: NotificationWrapperProps, ref: React.Ref<HTMLDivElement>) => {\n    return sticky ? (\n      <div ref={ref} className={styles['notifications-sticky']} style={{ top: props.topOffset }}>\n        <div\n          role=\"region\"\n          className={clsx(props.testUtilsClassName, disableContentPaddings && styles['no-content-paddings'])}\n          aria-label={props.labels?.notifications}\n        >\n          {props.children}\n        </div>\n      </div>\n    ) : (\n      <div\n        role=\"region\"\n        ref={ref}\n        className={clsx(\n          props.testUtilsClassName,\n          styles.notifications,\n          disableContentPaddings && styles['no-content-paddings']\n        )}\n        aria-label={props.labels?.notifications}\n      >\n        {props.children}\n      </div>\n    );\n  }\n);\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAIvB,OAAOC,MAAM,MAAM,iBAAiB;AAapC,OAAO,MAAMC,aAAa,GAAGH,KAAK,CAACI,UAAU,CAC3C,CAACC,EAAsE,EAAEC,GAA8B,KAAI;;MAA1G;MAAEC,MAAM;MAAEC;IAAsB,IAAAH,EAAsC;IAAjCI,KAAK,GAAAC,MAAA,CAAAL,EAAA,EAA1C,oCAA4C,CAAF;EACzC,OAAOE,MAAM,GACXP,KAAA,CAAAW,aAAA;IAAKL,GAAG,EAAEA,GAAG;IAAEM,SAAS,EAAEV,MAAM,CAAC,sBAAsB,CAAC;IAAEW,KAAK,EAAE;MAAEC,GAAG,EAAEL,KAAK,CAACM;IAAS;EAAE,GACvFf,KAAA,CAAAW,aAAA;IACEK,IAAI,EAAC,QAAQ;IACbJ,SAAS,EAAEX,IAAI,CAACQ,KAAK,CAACQ,kBAAkB,EAAET,sBAAsB,IAAIN,MAAM,CAAC,qBAAqB,CAAC,CAAC;IAAA,cACtF,CAAAgB,EAAA,GAAAT,KAAK,CAACU,MAAM,cAAAD,EAAA,uBAAAA,EAAA,CAAEE;EAAa,GAEtCX,KAAK,CAACY,QAAQ,CACX,CACF,GAENrB,KAAA,CAAAW,aAAA;IACEK,IAAI,EAAC,QAAQ;IACbV,GAAG,EAAEA,GAAG;IACRM,SAAS,EAAEX,IAAI,CACbQ,KAAK,CAACQ,kBAAkB,EACxBf,MAAM,CAACkB,aAAa,EACpBZ,sBAAsB,IAAIN,MAAM,CAAC,qBAAqB,CAAC,CACxD;IAAA,cACW,CAAAoB,EAAA,GAAAb,KAAK,CAACU,MAAM,cAAAG,EAAA,uBAAAA,EAAA,CAAEF;EAAa,GAEtCX,KAAK,CAACY,QAAQ,CAElB;AACH,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}