{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport React, { useMemo, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useAutosuggestLoadMore } from '../autosuggest/load-more-controller';\nimport { useAutosuggestItems } from '../autosuggest/options-controller';\nimport AutosuggestOptionsList from '../autosuggest/options-list';\nimport AutosuggestInput from '../internal/components/autosuggest-input';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { fireCancelableEvent } from '../internal/events/index';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { joinStrings } from '../internal/utils/strings';\nimport { filterOptions } from './filter-options';\nimport autosuggestStyles from '../autosuggest/styles.css.js';\nimport styles from './styles.css.js';\nconst DROPDOWN_WIDTH_OPTIONS_LIST = 300;\nconst DROPDOWN_WIDTH_CUSTOM_FORM = 200;\nconst PropertyFilterAutosuggest = React.forwardRef((props, ref) => {\n  var _a;\n  const {\n      value,\n      onChange,\n      onFocus,\n      onBlur,\n      onLoadItems,\n      options,\n      statusType = 'finished',\n      placeholder,\n      disabled,\n      ariaLabel,\n      enteredTextLabel,\n      onKeyDown,\n      virtualScroll,\n      expandToViewport,\n      customForm,\n      filterText,\n      onOptionClick,\n      hideEnteredTextOption,\n      searchResultsId,\n      onCloseDropdown\n    } = props,\n    rest = __rest(props, [\"value\", \"onChange\", \"onFocus\", \"onBlur\", \"onLoadItems\", \"options\", \"statusType\", \"placeholder\", \"disabled\", \"ariaLabel\", \"enteredTextLabel\", \"onKeyDown\", \"virtualScroll\", \"expandToViewport\", \"customForm\", \"filterText\", \"onOptionClick\", \"hideEnteredTextOption\", \"searchResultsId\", \"onCloseDropdown\"]);\n  const highlightText = filterText === undefined ? value : filterText;\n  const customFormRef = useRef(null);\n  const autosuggestInputRef = useRef(null);\n  const mergedRef = useMergeRefs(autosuggestInputRef, ref);\n  const filteredOptions = useMemo(() => filterOptions(options || [], highlightText), [options, highlightText]);\n  const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n    options: filteredOptions,\n    filterValue: value,\n    filterText: highlightText,\n    filteringType: 'manual',\n    enteredTextLabel,\n    hideEnteredTextLabel: hideEnteredTextOption,\n    onSelectItem: option => {\n      var _a;\n      const value = option.value || '';\n      fireNonCancelableEvent(onChange, {\n        value\n      });\n      const selectedCancelled = fireCancelableEvent(onOptionClick, option);\n      if (!selectedCancelled) {\n        (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n      } else {\n        autosuggestItemsHandlers.resetHighlightWithKeyboard();\n      }\n    }\n  });\n  const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options,\n    statusType,\n    onLoadItems: detail => fireNonCancelableEvent(onLoadItems, detail)\n  });\n  const handleChange = event => {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n  const handleDelayedInput = event => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n  const handleFocus = () => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireCancelableEvent(onFocus, null);\n  };\n  const handleBlur = () => {\n    fireCancelableEvent(onBlur, null);\n  };\n  const handleKeyDown = e => {\n    fireCancelableEvent(onKeyDown, e.detail);\n  };\n  const handlePressArrowDown = () => {\n    var _a;\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n    if (customFormRef.current) {\n      (_a = getFirstFocusable(customFormRef.current)) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  const handlePressArrowUp = () => {\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n  const handlePressEnter = () => {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n  const handleCloseDropdown = () => {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    onCloseDropdown === null || onCloseDropdown === void 0 ? void 0 : onCloseDropdown();\n  };\n  const handleRecoveryClick = () => {\n    var _a;\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  const selfControlId = useUniqueId('input');\n  const controlId = (_a = rest.controlId) !== null && _a !== void 0 ? _a : selfControlId;\n  const listId = useUniqueId('list');\n  const footerId = useUniqueId('footer');\n  const highlightedOptionIdSource = useUniqueId();\n  const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n  const isEmpty = !value && !autosuggestItemsState.items.length;\n  const dropdownStatus = useDropdownStatus(Object.assign(Object.assign({}, props), {\n    isEmpty,\n    onRecoveryClick: handleRecoveryClick,\n    hasRecoveryCallback: !!onLoadItems\n  }));\n  let content = null;\n  if (customForm) {\n    content = React.createElement(\"div\", {\n      ref: customFormRef,\n      className: styles['custom-content-wrapper']\n    }, customForm.content);\n  } else if (autosuggestItemsState.items.length > 0) {\n    content = React.createElement(AutosuggestOptionsList, {\n      statusType: statusType,\n      autosuggestItemsState: autosuggestItemsState,\n      autosuggestItemsHandlers: autosuggestItemsHandlers,\n      highlightedOptionId: highlightedOptionId,\n      highlightText: highlightText,\n      listId: listId,\n      controlId: controlId,\n      handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll,\n      hasDropdownStatus: dropdownStatus.content !== null,\n      virtualScroll: virtualScroll,\n      listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n        content: dropdownStatus.content,\n        id: footerId\n      }) : null,\n      ariaDescribedby: dropdownStatus.content ? footerId : undefined\n    });\n  }\n  return React.createElement(AutosuggestInput, Object.assign({\n    ref: mergedRef\n  }, rest, {\n    className: clsx(autosuggestStyles.root, styles.input),\n    value: value,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    controlId: controlId,\n    placeholder: placeholder,\n    disabled: disabled,\n    ariaLabel: ariaLabel,\n    expandToViewport: expandToViewport,\n    ariaControls: listId,\n    ariaActivedescendant: highlightedOptionId,\n    ariaDescribedby: joinStrings(searchResultsId, rest.ariaDescribedby),\n    dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null || !!customForm,\n    dropdownContentKey: customForm ? 'custom' : 'options',\n    dropdownContent: content,\n    dropdownFooter: dropdownStatus.isSticky && dropdownStatus.content && !customForm ? React.createElement(DropdownFooter, {\n      content: dropdownStatus.content,\n      hasItems: autosuggestItemsState.items.length >= 1,\n      id: footerId\n    }) : customForm ? customForm.footer : null,\n    dropdownWidth: customForm ? DROPDOWN_WIDTH_CUSTOM_FORM : DROPDOWN_WIDTH_OPTIONS_LIST,\n    dropdownContentFocusable: !!customForm,\n    onCloseDropdown: handleCloseDropdown,\n    onDelayedInput: handleDelayedInput,\n    onPressArrowDown: handlePressArrowDown,\n    onPressArrowUp: handlePressArrowUp,\n    onPressEnter: handlePressEnter,\n    loopFocus: !!customForm || dropdownStatus.hasRecoveryButton\n  }));\n});\nexport default PropertyFilterAutosuggest;","map":{"version":3,"names":["React","useMemo","useRef","clsx","useAutosuggestLoadMore","useAutosuggestItems","AutosuggestOptionsList","AutosuggestInput","DropdownFooter","useDropdownStatus","getFirstFocusable","fireNonCancelableEvent","fireCancelableEvent","useMergeRefs","useUniqueId","joinStrings","filterOptions","autosuggestStyles","styles","DROPDOWN_WIDTH_OPTIONS_LIST","DROPDOWN_WIDTH_CUSTOM_FORM","PropertyFilterAutosuggest","forwardRef","props","ref","value","onChange","onFocus","onBlur","onLoadItems","options","statusType","placeholder","disabled","ariaLabel","enteredTextLabel","onKeyDown","virtualScroll","expandToViewport","customForm","filterText","onOptionClick","hideEnteredTextOption","searchResultsId","onCloseDropdown","rest","__rest","highlightText","undefined","customFormRef","autosuggestInputRef","mergedRef","filteredOptions","autosuggestItemsState","autosuggestItemsHandlers","filterValue","filteringType","hideEnteredTextLabel","onSelectItem","option","selectedCancelled","_a","current","close","resetHighlightWithKeyboard","autosuggestLoadMoreHandlers","detail","handleChange","event","handleDelayedInput","fireLoadMoreOnInputChange","handleFocus","fireLoadMoreOnInputFocus","handleBlur","handleKeyDown","e","handlePressArrowDown","moveHighlightWithKeyboard","focus","handlePressArrowUp","handlePressEnter","selectHighlightedOptionWithKeyboard","handleCloseDropdown","handleRecoveryClick","fireLoadMoreOnRecoveryClick","selfControlId","controlId","listId","footerId","highlightedOptionIdSource","highlightedOptionId","highlightedOption","isEmpty","items","length","dropdownStatus","Object","assign","onRecoveryClick","hasRecoveryCallback","content","createElement","className","handleLoadMore","fireLoadMoreOnScroll","hasDropdownStatus","listBottom","isSticky","id","ariaDescribedby","root","input","ariaControls","ariaActivedescendant","dropdownExpanded","dropdownContentKey","dropdownContent","dropdownFooter","hasItems","footer","dropdownWidth","dropdownContentFocusable","onDelayedInput","onPressArrowDown","onPressArrowUp","onPressEnter","loopFocus","hasRecoveryButton"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/property-filter/property-filter-autosuggest.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref, useMemo, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { AutosuggestItem, AutosuggestProps } from '../autosuggest/interfaces';\nimport { useAutosuggestLoadMore } from '../autosuggest/load-more-controller';\nimport { useAutosuggestItems } from '../autosuggest/options-controller';\nimport AutosuggestOptionsList from '../autosuggest/options-list';\nimport { BaseChangeDetail } from '../input/interfaces';\nimport AutosuggestInput, { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport { getFirstFocusable } from '../internal/components/focus-lock/utils';\nimport {\n  BaseKeyDetail,\n  CancelableEventHandler,\n  fireNonCancelableEvent,\n  NonCancelableCustomEvent,\n} from '../internal/events';\nimport { fireCancelableEvent } from '../internal/events/index';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { joinStrings } from '../internal/utils/strings';\nimport { filterOptions } from './filter-options';\n\nimport autosuggestStyles from '../autosuggest/styles.css.js';\nimport styles from './styles.css.js';\n\nconst DROPDOWN_WIDTH_OPTIONS_LIST = 300;\nconst DROPDOWN_WIDTH_CUSTOM_FORM = 200;\n\nexport interface PropertyFilterAutosuggestProps\n  extends Omit<AutosuggestProps, 'filteringResultsText'>,\n    InternalBaseComponentProps {\n  customForm?: {\n    content: React.ReactNode;\n    footer: React.ReactNode;\n  };\n  filterText?: string;\n  onOptionClick?: CancelableEventHandler<AutosuggestProps.Option>;\n  hideEnteredTextOption?: boolean;\n  searchResultsId?: string;\n  onCloseDropdown?: () => void;\n}\n\nconst PropertyFilterAutosuggest = React.forwardRef(\n  (props: PropertyFilterAutosuggestProps, ref: Ref<AutosuggestInputRef>) => {\n    const {\n      value,\n      onChange,\n      onFocus,\n      onBlur,\n      onLoadItems,\n      options,\n      statusType = 'finished',\n      placeholder,\n      disabled,\n      ariaLabel,\n      enteredTextLabel,\n      onKeyDown,\n      virtualScroll,\n      expandToViewport,\n      customForm,\n      filterText,\n      onOptionClick,\n      hideEnteredTextOption,\n      searchResultsId,\n      onCloseDropdown,\n      ...rest\n    } = props;\n    const highlightText = filterText === undefined ? value : filterText;\n\n    const customFormRef = useRef<HTMLDivElement>(null);\n    const autosuggestInputRef = useRef<AutosuggestInputRef>(null);\n    const mergedRef = useMergeRefs(autosuggestInputRef, ref);\n\n    const filteredOptions = useMemo(() => filterOptions(options || [], highlightText), [options, highlightText]);\n    const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n      options: filteredOptions,\n      filterValue: value,\n      filterText: highlightText,\n      filteringType: 'manual',\n      enteredTextLabel,\n      hideEnteredTextLabel: hideEnteredTextOption,\n      onSelectItem: (option: AutosuggestItem) => {\n        const value = option.value || '';\n        fireNonCancelableEvent(onChange, { value });\n        const selectedCancelled = fireCancelableEvent(onOptionClick, option);\n        if (!selectedCancelled) {\n          autosuggestInputRef.current?.close();\n        } else {\n          autosuggestItemsHandlers.resetHighlightWithKeyboard();\n        }\n      },\n    });\n\n    const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n      options,\n      statusType,\n      onLoadItems: (detail: OptionsLoadItemsDetail) => fireNonCancelableEvent(onLoadItems, detail),\n    });\n\n    const handleChange = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n      autosuggestItemsHandlers.resetHighlightWithKeyboard();\n      fireNonCancelableEvent(onChange, event.detail);\n    };\n\n    const handleDelayedInput = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n    };\n\n    const handleFocus = () => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n      fireCancelableEvent(onFocus, null);\n    };\n\n    const handleBlur = () => {\n      fireCancelableEvent(onBlur, null);\n    };\n\n    const handleKeyDown = (e: CustomEvent<BaseKeyDetail>) => {\n      fireCancelableEvent(onKeyDown, e.detail);\n    };\n\n    const handlePressArrowDown = () => {\n      autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n      if (customFormRef.current) {\n        getFirstFocusable(customFormRef.current)?.focus();\n      }\n    };\n\n    const handlePressArrowUp = () => {\n      autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n    };\n\n    const handlePressEnter = () => {\n      return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n    };\n\n    const handleCloseDropdown = () => {\n      autosuggestItemsHandlers.resetHighlightWithKeyboard();\n      onCloseDropdown?.();\n    };\n\n    const handleRecoveryClick = () => {\n      autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n      autosuggestInputRef.current?.focus();\n    };\n\n    const selfControlId = useUniqueId('input');\n    const controlId = rest.controlId ?? selfControlId;\n    const listId = useUniqueId('list');\n    const footerId = useUniqueId('footer');\n    const highlightedOptionIdSource = useUniqueId();\n    const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n\n    const isEmpty = !value && !autosuggestItemsState.items.length;\n    const dropdownStatus = useDropdownStatus({\n      ...props,\n      isEmpty,\n      onRecoveryClick: handleRecoveryClick,\n      hasRecoveryCallback: !!onLoadItems,\n    });\n\n    let content = null;\n    if (customForm) {\n      content = (\n        <div ref={customFormRef} className={styles['custom-content-wrapper']}>\n          {customForm.content}\n        </div>\n      );\n    } else if (autosuggestItemsState.items.length > 0) {\n      content = (\n        <AutosuggestOptionsList\n          statusType={statusType}\n          autosuggestItemsState={autosuggestItemsState}\n          autosuggestItemsHandlers={autosuggestItemsHandlers}\n          highlightedOptionId={highlightedOptionId}\n          highlightText={highlightText}\n          listId={listId}\n          controlId={controlId}\n          handleLoadMore={autosuggestLoadMoreHandlers.fireLoadMoreOnScroll}\n          hasDropdownStatus={dropdownStatus.content !== null}\n          virtualScroll={virtualScroll}\n          listBottom={\n            !dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} id={footerId} /> : null\n          }\n          ariaDescribedby={dropdownStatus.content ? footerId : undefined}\n        />\n      );\n    }\n\n    return (\n      <AutosuggestInput\n        ref={mergedRef}\n        {...rest}\n        className={clsx(autosuggestStyles.root, styles.input)}\n        value={value}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        controlId={controlId}\n        placeholder={placeholder}\n        disabled={disabled}\n        ariaLabel={ariaLabel}\n        expandToViewport={expandToViewport}\n        ariaControls={listId}\n        ariaActivedescendant={highlightedOptionId}\n        ariaDescribedby={joinStrings(searchResultsId, rest.ariaDescribedby)}\n        dropdownExpanded={autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null || !!customForm}\n        dropdownContentKey={customForm ? 'custom' : 'options'}\n        dropdownContent={content}\n        dropdownFooter={\n          dropdownStatus.isSticky && dropdownStatus.content && !customForm ? (\n            <DropdownFooter\n              content={dropdownStatus.content}\n              hasItems={autosuggestItemsState.items.length >= 1}\n              id={footerId}\n            />\n          ) : customForm ? (\n            customForm.footer\n          ) : null\n        }\n        dropdownWidth={customForm ? DROPDOWN_WIDTH_CUSTOM_FORM : DROPDOWN_WIDTH_OPTIONS_LIST}\n        dropdownContentFocusable={!!customForm}\n        onCloseDropdown={handleCloseDropdown}\n        onDelayedInput={handleDelayedInput}\n        onPressArrowDown={handlePressArrowDown}\n        onPressArrowUp={handlePressArrowUp}\n        onPressEnter={handlePressEnter}\n        loopFocus={!!customForm || dropdownStatus.hasRecoveryButton}\n      />\n    );\n  }\n);\n\nexport default PropertyFilterAutosuggest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}