{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { add, differenceInDays } from 'date-fns';\nimport { X_TICK_COUNT_RATIO, Y_TICK_COUNT_RATIO } from './constants';\n// The number of ticks is currently defined by the length of the scale.\n// The x scale tends to have longer labels, so we're using less ticks for it.\n// These numbers are currently based on first impressions and might change in the future.\n// We might also open up an API in the future to control the amount of ticks displayed.\nexport function getXTickCount(width) {\n  return Math.ceil(width / X_TICK_COUNT_RATIO);\n}\nexport function getYTickCount(height) {\n  return Math.ceil(height / Y_TICK_COUNT_RATIO);\n}\nexport function createXTicks(scale, values) {\n  if (scale.isNumeric()) {\n    return scale.d3Scale.ticks(values);\n  } else if (scale.isTime()) {\n    const rawTicks = scale.d3Scale.ticks(values);\n    const domain = scale.d3Scale.domain();\n    return uniform(rawTicks, domain[domain.length - 1]);\n  } else {\n    return scale.d3Scale.domain();\n  }\n}\nexport function createYTicks(scale, values) {\n  const ticks = scale.d3Scale.ticks(values);\n  // The logarithmic scale sometimes produces a very large amount of (major and minor) ticks,\n  // at which point we need to reduce them significantly for space.\n  if (scale.scaleType === 'log' && ticks.length > 10) {\n    return scale.d3Scale.ticks(3);\n  }\n  return ticks;\n}\n/**\n * Ensure uniformly-spaced ticks for 2-day intervals. d3-scale generates\n * ticks for even or odd numbers, which causes varying interval lengths\n * between months.\n */\nfunction uniform(ticks, max) {\n  if (ticks.length < 3 || !isMixedDayInterval(ticks)) {\n    return ticks;\n  }\n  return createTwoDayInterval(ticks[0], max);\n}\nfunction isMixedDayInterval(ticks) {\n  let oneDayInterval = false;\n  let twoDayInterval = false;\n  for (let i = 1; i < ticks.length; i++) {\n    oneDayInterval = oneDayInterval || isDayInterval(ticks[i - 1], ticks[i], 1);\n    twoDayInterval = twoDayInterval || isDayInterval(ticks[i - 1], ticks[i], 2);\n  }\n  return oneDayInterval && twoDayInterval;\n}\nfunction isDayInterval(a, b) {\n  let difference = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.abs(differenceInDays(a, b)) === difference;\n}\nfunction createTwoDayInterval(start, max) {\n  const result = [];\n  let curr = start;\n  while (curr < max) {\n    result.push(curr);\n    curr = add(curr, {\n      days: 2\n    });\n  }\n  return result;\n}","map":{"version":3,"names":["add","differenceInDays","X_TICK_COUNT_RATIO","Y_TICK_COUNT_RATIO","getXTickCount","width","Math","ceil","getYTickCount","height","createXTicks","scale","values","isNumeric","d3Scale","ticks","isTime","rawTicks","domain","uniform","length","createYTicks","scaleType","max","isMixedDayInterval","createTwoDayInterval","oneDayInterval","twoDayInterval","i","isDayInterval","a","b","difference","arguments","undefined","abs","start","result","curr","push","days"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/cartesian-chart/ticks.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { add, differenceInDays } from 'date-fns';\n\nimport { ChartScale, NumericChartScale } from '../../components/cartesian-chart/scales';\nimport { X_TICK_COUNT_RATIO, Y_TICK_COUNT_RATIO } from './constants';\nimport { ChartDataTypes } from './interfaces';\n\n// The number of ticks is currently defined by the length of the scale.\n// The x scale tends to have longer labels, so we're using less ticks for it.\n// These numbers are currently based on first impressions and might change in the future.\n// We might also open up an API in the future to control the amount of ticks displayed.\nexport function getXTickCount(width: number) {\n  return Math.ceil(width / X_TICK_COUNT_RATIO);\n}\nexport function getYTickCount(height: number) {\n  return Math.ceil(height / Y_TICK_COUNT_RATIO);\n}\n\nexport function createXTicks(scale: ChartScale, values: number): ChartDataTypes[] {\n  if (scale.isNumeric()) {\n    return scale.d3Scale.ticks(values);\n  } else if (scale.isTime()) {\n    const rawTicks = scale.d3Scale.ticks(values) as Date[];\n    const domain = scale.d3Scale.domain() as Date[];\n    return uniform(rawTicks, domain[domain.length - 1]);\n  } else {\n    return scale.d3Scale.domain();\n  }\n}\n\nexport function createYTicks(scale: NumericChartScale, values: number): number[] {\n  const ticks = scale.d3Scale.ticks(values);\n\n  // The logarithmic scale sometimes produces a very large amount of (major and minor) ticks,\n  // at which point we need to reduce them significantly for space.\n  if (scale.scaleType === 'log' && ticks.length > 10) {\n    return scale.d3Scale.ticks(3);\n  }\n\n  return ticks;\n}\n\n/**\n * Ensure uniformly-spaced ticks for 2-day intervals. d3-scale generates\n * ticks for even or odd numbers, which causes varying interval lengths\n * between months.\n */\nfunction uniform(ticks: Date[], max: Date): Date[] {\n  if (ticks.length < 3 || !isMixedDayInterval(ticks)) {\n    return ticks;\n  }\n\n  return createTwoDayInterval(ticks[0], max);\n}\n\nfunction isMixedDayInterval(ticks: Date[]) {\n  let oneDayInterval = false;\n  let twoDayInterval = false;\n\n  for (let i = 1; i < ticks.length; i++) {\n    oneDayInterval = oneDayInterval || isDayInterval(ticks[i - 1], ticks[i], 1);\n    twoDayInterval = twoDayInterval || isDayInterval(ticks[i - 1], ticks[i], 2);\n  }\n  return oneDayInterval && twoDayInterval;\n}\n\nfunction isDayInterval(a: Date, b: Date, difference = 1) {\n  return Math.abs(differenceInDays(a, b)) === difference;\n}\n\nfunction createTwoDayInterval(start: Date, max: Date) {\n  const result: Date[] = [];\n  let curr = start;\n  while (curr < max) {\n    result.push(curr);\n    curr = add(curr, { days: 2 });\n  }\n  return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}