{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport InternalRadioGroup from '../radio-group/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { getAnalyticsInnerContextAttribute } from './analytics-metadata/utils';\nimport styles from './styles.css.js';\nexport const copyPreferences = _ref => {\n  let {\n    pageSize,\n    wrapLines,\n    stripedRows,\n    contentDensity,\n    visibleContent,\n    contentDisplay,\n    stickyColumns,\n    custom\n  } = _ref;\n  return {\n    pageSize,\n    wrapLines,\n    stripedRows,\n    contentDensity,\n    visibleContent,\n    contentDisplay,\n    stickyColumns,\n    custom\n  };\n};\nexport const mergePreferences = (newPref, oldPref) => {\n  const newObj = Object.assign({}, oldPref);\n  const prefNames = ['pageSize', 'wrapLines', 'stripedRows', 'contentDensity', 'visibleContent', 'custom', 'contentDisplay', 'stickyColumns'];\n  for (const prefName of prefNames) {\n    if (newPref[prefName] !== undefined) {\n      newObj[prefName] = newPref[prefName];\n    }\n  }\n  return newObj;\n};\nexport const ModalContentLayout = _ref2 => {\n  let {\n    left,\n    right\n  } = _ref2;\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const smallContainer = breakpoint === 'default';\n  const columns = left && right ? 2 : 1;\n  return React.createElement(\"div\", {\n    ref: ref\n  }, React.createElement(InternalColumnLayout, {\n    columns: smallContainer ? 1 : columns,\n    variant: \"text-grid\"\n  }, left && React.createElement(\"div\", null, left), right && React.createElement(\"div\", {\n    className: clsx(left && smallContainer && styles['second-column-small'])\n  }, right)));\n};\nexport const PageSizePreference = _ref3 => {\n  let {\n    title,\n    options,\n    value,\n    onChange\n  } = _ref3;\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({\n    className: styles['page-size']\n  }, getAnalyticsInnerContextAttribute('pageSize')), React.createElement(InternalFormField, {\n    label: i18n('pageSizePreference.title', title),\n    stretch: true,\n    className: styles['page-size-form-field']\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['page-size-radio-group'],\n    value: `${value}`,\n    items: options.map(_ref4 => {\n      let {\n        label,\n        value\n      } = _ref4;\n      return {\n        label,\n        value: `${value}`\n      };\n    }),\n    onChange: _ref5 => {\n      let {\n        detail\n      } = _ref5;\n      return onChange(parseInt(detail.value, 10));\n    }\n  })));\n};\nexport const WrapLinesPreference = _ref6 => {\n  let {\n    label,\n    description,\n    value,\n    onChange\n  } = _ref6;\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({}, getAnalyticsInnerContextAttribute('wrapLines')), React.createElement(InternalCheckbox, {\n    checked: !!value,\n    description: i18n('wrapLinesPreference.description', description),\n    onChange: _ref7 => {\n      let {\n        detail\n      } = _ref7;\n      return onChange(detail.checked);\n    },\n    className: styles['wrap-lines']\n  }, i18n('wrapLinesPreference.label', label)));\n};\nexport function StripedRowsPreference(_ref8) {\n  let {\n    label,\n    description,\n    value,\n    onChange\n  } = _ref8;\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({}, getAnalyticsInnerContextAttribute('stripedRows')), React.createElement(InternalCheckbox, {\n    checked: !!value,\n    description: i18n('stripedRowsPreference.description', description),\n    onChange: _ref9 => {\n      let {\n        detail\n      } = _ref9;\n      return onChange(detail.checked);\n    },\n    className: styles['striped-rows']\n  }, i18n('stripedRowsPreference.label', label)));\n}\nexport const ContentDensityPreference = _ref10 => {\n  let {\n    label,\n    description,\n    value,\n    onChange\n  } = _ref10;\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({}, getAnalyticsInnerContextAttribute('contentDensity')), React.createElement(InternalCheckbox, {\n    checked: value === 'compact',\n    description: i18n('contentDensityPreference.description', description),\n    onChange: _ref11 => {\n      let {\n        detail\n      } = _ref11;\n      return onChange(detail.checked ? 'compact' : 'comfortable');\n    },\n    className: styles['content-density']\n  }, i18n('contentDensityPreference.label', label)));\n};\nconst StickyPreference = _ref12 => {\n  let {\n    firstOrLast,\n    preference,\n    value,\n    onChange\n  } = _ref12;\n  const {\n    title,\n    description,\n    options\n  } = preference;\n  return React.createElement(\"div\", Object.assign({\n    className: styles[`sticky-columns-${firstOrLast}`]\n  }, getAnalyticsInnerContextAttribute('stickyColumns')), React.createElement(InternalFormField, {\n    className: styles['sticky-columns-form-field'],\n    label: title,\n    description: description\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['sticky-columns-radio-group'],\n    value: typeof value !== 'undefined' ? `${value}` : null,\n    items: options.map(_ref13 => {\n      let {\n        label,\n        value\n      } = _ref13;\n      return {\n        label,\n        value: `${value}`\n      };\n    }),\n    onChange: _ref14 => {\n      let {\n        detail\n      } = _ref14;\n      return onChange(Number(detail.value));\n    }\n  })));\n};\nexport const StickyColumnsPreference = _ref15 => {\n  let {\n    firstColumns,\n    lastColumns,\n    onChange,\n    value\n  } = _ref15;\n  return React.createElement(InternalSpaceBetween, {\n    className: styles['sticky-columns'],\n    size: \"l\"\n  }, firstColumns && React.createElement(StickyPreference, {\n    firstOrLast: \"first\",\n    preference: firstColumns,\n    value: value === null || value === void 0 ? void 0 : value.first,\n    onChange: newValue => onChange(Object.assign(Object.assign({}, value), {\n      first: newValue\n    }))\n  }), lastColumns && React.createElement(StickyPreference, {\n    firstOrLast: \"last\",\n    preference: lastColumns,\n    value: value === null || value === void 0 ? void 0 : value.last,\n    onChange: newValue => onChange(Object.assign(Object.assign({}, value), {\n      last: newValue\n    }))\n  }));\n};\nexport const CustomPreference = _ref16 => {\n  let {\n    value,\n    customPreference,\n    onChange\n  } = _ref16;\n  const [customState, setCustomState] = useState(value);\n  if (customPreference) {\n    return React.createElement(\"div\", Object.assign({\n      className: styles.custom\n    }, getAnalyticsInnerContextAttribute('custom')), customPreference(customState, value => {\n      // prevent value to be treated as a functional callback\n      setCustomState(() => value);\n      onChange(value);\n    }));\n  }\n  return null;\n};","map":{"version":3,"names":["React","useState","clsx","InternalCheckbox","InternalColumnLayout","InternalFormField","useInternalI18n","useContainerBreakpoints","InternalRadioGroup","InternalSpaceBetween","getAnalyticsInnerContextAttribute","styles","copyPreferences","_ref","pageSize","wrapLines","stripedRows","contentDensity","visibleContent","contentDisplay","stickyColumns","custom","mergePreferences","newPref","oldPref","newObj","Object","assign","prefNames","prefName","undefined","ModalContentLayout","_ref2","left","right","breakpoint","ref","smallContainer","columns","createElement","variant","className","PageSizePreference","_ref3","title","options","value","onChange","i18n","label","stretch","items","map","_ref4","_ref5","detail","parseInt","WrapLinesPreference","_ref6","description","checked","_ref7","StripedRowsPreference","_ref8","_ref9","ContentDensityPreference","_ref10","_ref11","StickyPreference","_ref12","firstOrLast","preference","_ref13","_ref14","Number","StickyColumnsPreference","_ref15","firstColumns","lastColumns","size","first","newValue","last","CustomPreference","_ref16","customPreference","customState","setCustomState"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/collection-preferences/utils.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\n\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport InternalRadioGroup from '../radio-group/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { getAnalyticsInnerContextAttribute } from './analytics-metadata/utils';\nimport { CollectionPreferencesProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport const copyPreferences = ({\n  pageSize,\n  wrapLines,\n  stripedRows,\n  contentDensity,\n  visibleContent,\n  contentDisplay,\n  stickyColumns,\n  custom,\n}: CollectionPreferencesProps.Preferences): CollectionPreferencesProps.Preferences => ({\n  pageSize,\n  wrapLines,\n  stripedRows,\n  contentDensity,\n  visibleContent,\n  contentDisplay,\n  stickyColumns,\n  custom,\n});\n\ntype CopyPreferenceName = keyof CollectionPreferencesProps.Preferences;\n\nexport const mergePreferences = (\n  newPref: CollectionPreferencesProps.Preferences,\n  oldPref: CollectionPreferencesProps.Preferences\n): CollectionPreferencesProps.Preferences => {\n  const newObj = { ...oldPref };\n  const prefNames: CopyPreferenceName[] = [\n    'pageSize',\n    'wrapLines',\n    'stripedRows',\n    'contentDensity',\n    'visibleContent',\n    'custom',\n    'contentDisplay',\n    'stickyColumns',\n  ];\n  for (const prefName of prefNames) {\n    if (newPref[prefName] !== undefined) {\n      newObj[prefName] = newPref[prefName];\n    }\n  }\n  return newObj;\n};\n\ninterface ModalContentLayoutProps {\n  left: React.ReactNode;\n  right: React.ReactNode;\n}\n\nexport const ModalContentLayout = ({ left, right }: ModalContentLayoutProps) => {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const smallContainer = breakpoint === 'default';\n\n  const columns = left && right ? 2 : 1;\n  return (\n    <div ref={ref}>\n      <InternalColumnLayout columns={smallContainer ? 1 : columns} variant=\"text-grid\">\n        {left && <div>{left}</div>}\n        {right && <div className={clsx(left && smallContainer && styles['second-column-small'])}>{right}</div>}\n      </InternalColumnLayout>\n    </div>\n  );\n};\n\ninterface PageSizePreferenceProps extends CollectionPreferencesProps.PageSizePreference {\n  onChange: (value: number) => void;\n  value?: number;\n}\n\nexport const PageSizePreference = ({ title, options, value, onChange }: PageSizePreferenceProps) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div className={styles['page-size']} {...getAnalyticsInnerContextAttribute('pageSize')}>\n      <InternalFormField\n        label={i18n('pageSizePreference.title', title)}\n        stretch={true}\n        className={styles['page-size-form-field']}\n      >\n        <InternalRadioGroup\n          className={styles['page-size-radio-group']}\n          value={`${value}`}\n          items={options.map(({ label, value }) => ({ label, value: `${value}` }))}\n          onChange={({ detail }) => onChange(parseInt(detail.value, 10))}\n        />\n      </InternalFormField>\n    </div>\n  );\n};\n\ninterface WrapLinesPreferenceProps extends CollectionPreferencesProps.WrapLinesPreference {\n  onChange: (value: boolean) => void;\n  value?: boolean;\n}\n\nexport const WrapLinesPreference = ({ label, description, value, onChange }: WrapLinesPreferenceProps) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div {...getAnalyticsInnerContextAttribute('wrapLines')}>\n      <InternalCheckbox\n        checked={!!value}\n        description={i18n('wrapLinesPreference.description', description)}\n        onChange={({ detail }) => onChange(detail.checked)}\n        className={styles['wrap-lines']}\n      >\n        {i18n('wrapLinesPreference.label', label)}\n      </InternalCheckbox>\n    </div>\n  );\n};\n\ninterface StripedRowsPreferenceProps extends CollectionPreferencesProps.StripedRowsPreference {\n  onChange: (value: boolean) => void;\n  value?: boolean;\n}\n\nexport function StripedRowsPreference({ label, description, value, onChange }: StripedRowsPreferenceProps) {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div {...getAnalyticsInnerContextAttribute('stripedRows')}>\n      <InternalCheckbox\n        checked={!!value}\n        description={i18n('stripedRowsPreference.description', description)}\n        onChange={({ detail }) => onChange(detail.checked)}\n        className={styles['striped-rows']}\n      >\n        {i18n('stripedRowsPreference.label', label)}\n      </InternalCheckbox>\n    </div>\n  );\n}\n\ninterface ContentDensityPreferenceProps extends CollectionPreferencesProps.ContentDensityPreference {\n  onChange: (value: 'comfortable' | 'compact') => void;\n  value?: 'comfortable' | 'compact';\n}\n\nexport const ContentDensityPreference = ({ label, description, value, onChange }: ContentDensityPreferenceProps) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div {...getAnalyticsInnerContextAttribute('contentDensity')}>\n      <InternalCheckbox\n        checked={value === 'compact'}\n        description={i18n('contentDensityPreference.description', description)}\n        onChange={({ detail }) => onChange(detail.checked ? 'compact' : 'comfortable')}\n        className={styles['content-density']}\n      >\n        {i18n('contentDensityPreference.label', label)}\n      </InternalCheckbox>\n    </div>\n  );\n};\n\ninterface StickyColumnsPreferenceProps extends CollectionPreferencesProps.StickyColumnsPreference {\n  onChange: (value?: { first?: number; last?: number }) => void;\n  value?: { first?: number; last?: number };\n}\ninterface StickyPreference extends CollectionPreferencesProps.StickyColumnsPreference {\n  onChange: (value: number) => void;\n  preference: {\n    title: string;\n    description: string;\n    options: ReadonlyArray<{\n      label: string;\n      value: number;\n    }>;\n  };\n  value?: number;\n  firstOrLast: 'first' | 'last';\n}\n\nconst StickyPreference = ({ firstOrLast, preference, value, onChange }: StickyPreference) => {\n  const { title, description, options } = preference;\n  return (\n    <div className={styles[`sticky-columns-${firstOrLast}`]} {...getAnalyticsInnerContextAttribute('stickyColumns')}>\n      <InternalFormField className={styles['sticky-columns-form-field']} label={title} description={description}>\n        <InternalRadioGroup\n          className={styles['sticky-columns-radio-group']}\n          value={typeof value !== 'undefined' ? `${value}` : null}\n          items={options.map(({ label, value }) => ({ label, value: `${value}` }))}\n          onChange={({ detail }) => onChange(Number(detail.value))}\n        />\n      </InternalFormField>\n    </div>\n  );\n};\n\nexport const StickyColumnsPreference = ({\n  firstColumns,\n  lastColumns,\n  onChange,\n  value,\n}: StickyColumnsPreferenceProps) => {\n  return (\n    <InternalSpaceBetween className={styles['sticky-columns']} size=\"l\">\n      {firstColumns && (\n        <StickyPreference\n          firstOrLast=\"first\"\n          preference={firstColumns}\n          value={value?.first}\n          onChange={newValue => onChange({ ...value, first: newValue })}\n        />\n      )}\n      {lastColumns && (\n        <StickyPreference\n          firstOrLast=\"last\"\n          preference={lastColumns}\n          value={value?.last}\n          onChange={newValue => onChange({ ...value, last: newValue })}\n        />\n      )}\n    </InternalSpaceBetween>\n  );\n};\n\ninterface CustomPreferenceProps<T = any> extends Pick<CollectionPreferencesProps<T>, 'customPreference'> {\n  onChange: (value: T) => void;\n  value: T;\n}\nexport const CustomPreference = ({ value, customPreference, onChange }: CustomPreferenceProps) => {\n  const [customState, setCustomState] = useState(value);\n  if (customPreference) {\n    return (\n      <div className={styles.custom} {...getAnalyticsInnerContextAttribute('custom')}>\n        {customPreference(customState, value => {\n          // prevent value to be treated as a functional callback\n          setCustomState(() => value);\n          onChange(value);\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,SAASC,iCAAiC,QAAQ,4BAA4B;AAG9E,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,MAAMC,eAAe,GAAGC,IAAA;EAAA,IAAC;IAC9BC,QAAQ;IACRC,SAAS;IACTC,WAAW;IACXC,cAAc;IACdC,cAAc;IACdC,cAAc;IACdC,aAAa;IACbC;EAAM,CACiC,GAAAR,IAAA;EAAA,OAA8C;IACrFC,QAAQ;IACRC,SAAS;IACTC,WAAW;IACXC,cAAc;IACdC,cAAc;IACdC,cAAc;IACdC,aAAa;IACbC;GACD;AAAA,CAAC;AAIF,OAAO,MAAMC,gBAAgB,GAAGA,CAC9BC,OAA+C,EAC/CC,OAA+C,KACL;EAC1C,MAAMC,MAAM,GAAAC,MAAA,CAAAC,MAAA,KAAQH,OAAO,CAAE;EAC7B,MAAMI,SAAS,GAAyB,CACtC,UAAU,EACV,WAAW,EACX,aAAa,EACb,gBAAgB,EAChB,gBAAgB,EAChB,QAAQ,EACR,gBAAgB,EAChB,eAAe,CAChB;EACD,KAAK,MAAMC,QAAQ,IAAID,SAAS,EAAE;IAChC,IAAIL,OAAO,CAACM,QAAQ,CAAC,KAAKC,SAAS,EAAE;MACnCL,MAAM,CAACI,QAAQ,CAAC,GAAGN,OAAO,CAACM,QAAQ,CAAC;;;EAGxC,OAAOJ,MAAM;AACf,CAAC;AAOD,OAAO,MAAMM,kBAAkB,GAAGC,KAAA,IAA6C;EAAA,IAA5C;IAAEC,IAAI;IAAEC;EAAK,CAA2B,GAAAF,KAAA;EACzE,MAAM,CAACG,UAAU,EAAEC,GAAG,CAAC,GAAG7B,uBAAuB,CAAC,CAAC,IAAI,CAAC,CAAC;EACzD,MAAM8B,cAAc,GAAGF,UAAU,KAAK,SAAS;EAE/C,MAAMG,OAAO,GAAGL,IAAI,IAAIC,KAAK,GAAG,CAAC,GAAG,CAAC;EACrC,OACElC,KAAA,CAAAuC,aAAA;IAAKH,GAAG,EAAEA;EAAG,GACXpC,KAAA,CAAAuC,aAAA,CAACnC,oBAAoB;IAACkC,OAAO,EAAED,cAAc,GAAG,CAAC,GAAGC,OAAO;IAAEE,OAAO,EAAC;EAAW,GAC7EP,IAAI,IAAIjC,KAAA,CAAAuC,aAAA,cAAMN,IAAI,CAAO,EACzBC,KAAK,IAAIlC,KAAA,CAAAuC,aAAA;IAAKE,SAAS,EAAEvC,IAAI,CAAC+B,IAAI,IAAII,cAAc,IAAI1B,MAAM,CAAC,qBAAqB,CAAC;EAAC,GAAGuB,KAAK,CAAO,CACjF,CACnB;AAEV,CAAC;AAOD,OAAO,MAAMQ,kBAAkB,GAAGC,KAAA,IAAiE;EAAA,IAAhE;IAAEC,KAAK;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAA2B,GAAAJ,KAAA;EAC7F,MAAMK,IAAI,GAAG1C,eAAe,CAAC,wBAAwB,CAAC;EACtD,OACEN,KAAA,CAAAuC,aAAA,QAAAb,MAAA,CAAAC,MAAA;IAAKc,SAAS,EAAE9B,MAAM,CAAC,WAAW;EAAC,GAAMD,iCAAiC,CAAC,UAAU,CAAC,GACpFV,KAAA,CAAAuC,aAAA,CAAClC,iBAAiB;IAChB4C,KAAK,EAAED,IAAI,CAAC,0BAA0B,EAAEJ,KAAK,CAAC;IAC9CM,OAAO,EAAE,IAAI;IACbT,SAAS,EAAE9B,MAAM,CAAC,sBAAsB;EAAC,GAEzCX,KAAA,CAAAuC,aAAA,CAAC/B,kBAAkB;IACjBiC,SAAS,EAAE9B,MAAM,CAAC,uBAAuB,CAAC;IAC1CmC,KAAK,EAAE,GAAGA,KAAK,EAAE;IACjBK,KAAK,EAAEN,OAAO,CAACO,GAAG,CAACC,KAAA;MAAA,IAAC;QAAEJ,KAAK;QAAEH;MAAK,CAAE,GAAAO,KAAA;MAAA,OAAM;QAAEJ,KAAK;QAAEH,KAAK,EAAE,GAAGA,KAAK;MAAE,CAAE;IAAA,CAAC,CAAC;IACxEC,QAAQ,EAAEO,KAAA;MAAA,IAAC;QAAEC;MAAM,CAAE,GAAAD,KAAA;MAAA,OAAKP,QAAQ,CAACS,QAAQ,CAACD,MAAM,CAACT,KAAK,EAAE,EAAE,CAAC,CAAC;IAAA;EAAA,EAC9D,CACgB,CAChB;AAEV,CAAC;AAOD,OAAO,MAAMW,mBAAmB,GAAGC,KAAA,IAAsE;EAAA,IAArE;IAAET,KAAK;IAAEU,WAAW;IAAEb,KAAK;IAAEC;EAAQ,CAA4B,GAAAW,KAAA;EACnG,MAAMV,IAAI,GAAG1C,eAAe,CAAC,wBAAwB,CAAC;EACtD,OACEN,KAAA,CAAAuC,aAAA,QAAAb,MAAA,CAAAC,MAAA,KAASjB,iCAAiC,CAAC,WAAW,CAAC,GACrDV,KAAA,CAAAuC,aAAA,CAACpC,gBAAgB;IACfyD,OAAO,EAAE,CAAC,CAACd,KAAK;IAChBa,WAAW,EAAEX,IAAI,CAAC,iCAAiC,EAAEW,WAAW,CAAC;IACjEZ,QAAQ,EAAEc,KAAA;MAAA,IAAC;QAAEN;MAAM,CAAE,GAAAM,KAAA;MAAA,OAAKd,QAAQ,CAACQ,MAAM,CAACK,OAAO,CAAC;IAAA;IAClDnB,SAAS,EAAE9B,MAAM,CAAC,YAAY;EAAC,GAE9BqC,IAAI,CAAC,2BAA2B,EAAEC,KAAK,CAAC,CACxB,CACf;AAEV,CAAC;AAOD,OAAM,SAAUa,qBAAqBA,CAAAC,KAAA,EAAoE;EAAA,IAAnE;IAAEd,KAAK;IAAEU,WAAW;IAAEb,KAAK;IAAEC;EAAQ,CAA8B,GAAAgB,KAAA;EACvG,MAAMf,IAAI,GAAG1C,eAAe,CAAC,wBAAwB,CAAC;EACtD,OACEN,KAAA,CAAAuC,aAAA,QAAAb,MAAA,CAAAC,MAAA,KAASjB,iCAAiC,CAAC,aAAa,CAAC,GACvDV,KAAA,CAAAuC,aAAA,CAACpC,gBAAgB;IACfyD,OAAO,EAAE,CAAC,CAACd,KAAK;IAChBa,WAAW,EAAEX,IAAI,CAAC,mCAAmC,EAAEW,WAAW,CAAC;IACnEZ,QAAQ,EAAEiB,KAAA;MAAA,IAAC;QAAET;MAAM,CAAE,GAAAS,KAAA;MAAA,OAAKjB,QAAQ,CAACQ,MAAM,CAACK,OAAO,CAAC;IAAA;IAClDnB,SAAS,EAAE9B,MAAM,CAAC,cAAc;EAAC,GAEhCqC,IAAI,CAAC,6BAA6B,EAAEC,KAAK,CAAC,CAC1B,CACf;AAEV;AAOA,OAAO,MAAMgB,wBAAwB,GAAGC,MAAA,IAA2E;EAAA,IAA1E;IAAEjB,KAAK;IAAEU,WAAW;IAAEb,KAAK;IAAEC;EAAQ,CAAiC,GAAAmB,MAAA;EAC7G,MAAMlB,IAAI,GAAG1C,eAAe,CAAC,wBAAwB,CAAC;EACtD,OACEN,KAAA,CAAAuC,aAAA,QAAAb,MAAA,CAAAC,MAAA,KAASjB,iCAAiC,CAAC,gBAAgB,CAAC,GAC1DV,KAAA,CAAAuC,aAAA,CAACpC,gBAAgB;IACfyD,OAAO,EAAEd,KAAK,KAAK,SAAS;IAC5Ba,WAAW,EAAEX,IAAI,CAAC,sCAAsC,EAAEW,WAAW,CAAC;IACtEZ,QAAQ,EAAEoB,MAAA;MAAA,IAAC;QAAEZ;MAAM,CAAE,GAAAY,MAAA;MAAA,OAAKpB,QAAQ,CAACQ,MAAM,CAACK,OAAO,GAAG,SAAS,GAAG,aAAa,CAAC;IAAA;IAC9EnB,SAAS,EAAE9B,MAAM,CAAC,iBAAiB;EAAC,GAEnCqC,IAAI,CAAC,gCAAgC,EAAEC,KAAK,CAAC,CAC7B,CACf;AAEV,CAAC;AAoBD,MAAMmB,gBAAgB,GAAGC,MAAA,IAAmE;EAAA,IAAlE;IAAEC,WAAW;IAAEC,UAAU;IAAEzB,KAAK;IAAEC;EAAQ,CAAoB,GAAAsB,MAAA;EACtF,MAAM;IAAEzB,KAAK;IAAEe,WAAW;IAAEd;EAAO,CAAE,GAAG0B,UAAU;EAClD,OACEvE,KAAA,CAAAuC,aAAA,QAAAb,MAAA,CAAAC,MAAA;IAAKc,SAAS,EAAE9B,MAAM,CAAC,kBAAkB2D,WAAW,EAAE;EAAC,GAAM5D,iCAAiC,CAAC,eAAe,CAAC,GAC7GV,KAAA,CAAAuC,aAAA,CAAClC,iBAAiB;IAACoC,SAAS,EAAE9B,MAAM,CAAC,2BAA2B,CAAC;IAAEsC,KAAK,EAAEL,KAAK;IAAEe,WAAW,EAAEA;EAAW,GACvG3D,KAAA,CAAAuC,aAAA,CAAC/B,kBAAkB;IACjBiC,SAAS,EAAE9B,MAAM,CAAC,4BAA4B,CAAC;IAC/CmC,KAAK,EAAE,OAAOA,KAAK,KAAK,WAAW,GAAG,GAAGA,KAAK,EAAE,GAAG,IAAI;IACvDK,KAAK,EAAEN,OAAO,CAACO,GAAG,CAACoB,MAAA;MAAA,IAAC;QAAEvB,KAAK;QAAEH;MAAK,CAAE,GAAA0B,MAAA;MAAA,OAAM;QAAEvB,KAAK;QAAEH,KAAK,EAAE,GAAGA,KAAK;MAAE,CAAE;IAAA,CAAC,CAAC;IACxEC,QAAQ,EAAE0B,MAAA;MAAA,IAAC;QAAElB;MAAM,CAAE,GAAAkB,MAAA;MAAA,OAAK1B,QAAQ,CAAC2B,MAAM,CAACnB,MAAM,CAACT,KAAK,CAAC,CAAC;IAAA;EAAA,EACxD,CACgB,CAChB;AAEV,CAAC;AAED,OAAO,MAAM6B,uBAAuB,GAAGC,MAAA,IAKJ;EAAA,IALK;IACtCC,YAAY;IACZC,WAAW;IACX/B,QAAQ;IACRD;EAAK,CACwB,GAAA8B,MAAA;EAC7B,OACE5E,KAAA,CAAAuC,aAAA,CAAC9B,oBAAoB;IAACgC,SAAS,EAAE9B,MAAM,CAAC,gBAAgB,CAAC;IAAEoE,IAAI,EAAC;EAAG,GAChEF,YAAY,IACX7E,KAAA,CAAAuC,aAAA,CAAC6B,gBAAgB;IACfE,WAAW,EAAC,OAAO;IACnBC,UAAU,EAAEM,YAAY;IACxB/B,KAAK,EAAEA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEkC,KAAK;IACnBjC,QAAQ,EAAEkC,QAAQ,IAAIlC,QAAQ,CAAArB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMmB,KAAK;MAAEkC,KAAK,EAAEC;IAAQ;EAAG,EAEhE,EACAH,WAAW,IACV9E,KAAA,CAAAuC,aAAA,CAAC6B,gBAAgB;IACfE,WAAW,EAAC,MAAM;IAClBC,UAAU,EAAEO,WAAW;IACvBhC,KAAK,EAAEA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEoC,IAAI;IAClBnC,QAAQ,EAAEkC,QAAQ,IAAIlC,QAAQ,CAAArB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMmB,KAAK;MAAEoC,IAAI,EAAED;IAAQ;EAAG,EAE/D,CACoB;AAE3B,CAAC;AAMD,OAAO,MAAME,gBAAgB,GAAGC,MAAA,IAAiE;EAAA,IAAhE;IAAEtC,KAAK;IAAEuC,gBAAgB;IAAEtC;EAAQ,CAAyB,GAAAqC,MAAA;EAC3F,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGtF,QAAQ,CAAC6C,KAAK,CAAC;EACrD,IAAIuC,gBAAgB,EAAE;IACpB,OACErF,KAAA,CAAAuC,aAAA,QAAAb,MAAA,CAAAC,MAAA;MAAKc,SAAS,EAAE9B,MAAM,CAACU;IAAM,GAAMX,iCAAiC,CAAC,QAAQ,CAAC,GAC3E2E,gBAAgB,CAACC,WAAW,EAAExC,KAAK,IAAG;MACrC;MACAyC,cAAc,CAAC,MAAMzC,KAAK,CAAC;MAC3BC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC,CACE;;EAGV,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}