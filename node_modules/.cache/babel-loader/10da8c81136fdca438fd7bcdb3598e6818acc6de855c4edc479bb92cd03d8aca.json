{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { AdditionalInfo } from './additional-info';\nimport { Row } from './row';\nimport styles from './styles.css.js';\nconst InternalAttributeEditor = React.forwardRef((_a, ref) => {\n  var {\n      additionalInfo,\n      disableAddButton,\n      definition,\n      items,\n      isItemRemovable = () => true,\n      empty,\n      addButtonText,\n      removeButtonText,\n      removeButtonAriaLabel,\n      i18nStrings,\n      onAddButtonClick,\n      onRemoveButtonClick,\n      __internalRootRef = null\n    } = _a,\n    props = __rest(_a, [\"additionalInfo\", \"disableAddButton\", \"definition\", \"items\", \"isItemRemovable\", \"empty\", \"addButtonText\", \"removeButtonText\", \"removeButtonAriaLabel\", \"i18nStrings\", \"onAddButtonClick\", \"onRemoveButtonClick\", \"__internalRootRef\"]);\n  const [breakpoint, breakpointRef] = useContainerBreakpoints(['default', 'xxs', 'xs']);\n  const removeButtonRefs = useRef([]);\n  const addButtonRef = useRef(null);\n  const wasNonEmpty = useRef(false);\n  const [removalAnnouncement, setRemovalAnnouncement] = useState('');\n  const baseProps = getBaseProps(props);\n  const isEmpty = items && items.length === 0;\n  wasNonEmpty.current = wasNonEmpty.current || !isEmpty;\n  useImperativeHandle(ref, () => ({\n    focusRemoveButton(rowIndex) {\n      var _a;\n      (_a = removeButtonRefs.current[rowIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    focusAddButton() {\n      var _a;\n      (_a = addButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }));\n  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n  const additionalInfoId = useUniqueId('attribute-editor-info');\n  const infoAriaDescribedBy = additionalInfo ? additionalInfoId : undefined;\n  const prevItemsLength = usePrevious(items.length);\n  React.useEffect(() => {\n    if (prevItemsLength && prevItemsLength > items.length && (i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.itemRemovedAriaLive)) {\n      setRemovalAnnouncement(i18nStrings.itemRemovedAriaLive);\n    } else {\n      setRemovalAnnouncement('');\n    }\n    // we only want to announce when the number of items decreases (i.e. when an item is removed)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.itemRemovedAriaLive]);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root)\n  }), React.createElement(InternalBox, {\n    margin: {\n      bottom: 'l'\n    }\n  }, isEmpty && React.createElement(\"div\", {\n    className: clsx(styles.empty, wasNonEmpty.current && styles['empty-appear'])\n  }, empty), items.map((item, index) => React.createElement(Row, {\n    key: index,\n    index: index,\n    breakpoint: breakpoint,\n    item: item,\n    definition: definition,\n    i18nStrings: i18nStrings,\n    removable: isItemRemovable(item),\n    removeButtonText: removeButtonText,\n    removeButtonRefs: removeButtonRefs.current,\n    onRemoveButtonClick: onRemoveButtonClick,\n    removeButtonAriaLabel: removeButtonAriaLabel\n  }))), React.createElement(InternalButton, {\n    className: styles['add-button'],\n    disabled: disableAddButton,\n    onClick: onAddButtonClick,\n    formAction: \"none\",\n    ref: addButtonRef,\n    ariaDescribedby: infoAriaDescribedBy\n  }, addButtonText), React.createElement(LiveRegion, {\n    \"data-testid\": \"removal-announcement\",\n    delay: 5,\n    key: items.length\n  }, removalAnnouncement), !!additionalInfo && React.createElement(AdditionalInfo, {\n    id: infoAriaDescribedBy\n  }, additionalInfo));\n});\nexport default InternalAttributeEditor;","map":{"version":3,"names":["React","useImperativeHandle","useRef","useState","clsx","InternalBox","InternalButton","getBaseProps","LiveRegion","useContainerBreakpoints","useMergeRefs","usePrevious","useUniqueId","AdditionalInfo","Row","styles","InternalAttributeEditor","forwardRef","_a","ref","additionalInfo","disableAddButton","definition","items","isItemRemovable","empty","addButtonText","removeButtonText","removeButtonAriaLabel","i18nStrings","onAddButtonClick","onRemoveButtonClick","__internalRootRef","props","__rest","breakpoint","breakpointRef","removeButtonRefs","addButtonRef","wasNonEmpty","removalAnnouncement","setRemovalAnnouncement","baseProps","isEmpty","length","current","focusRemoveButton","rowIndex","focus","focusAddButton","mergedRef","additionalInfoId","infoAriaDescribedBy","undefined","prevItemsLength","useEffect","itemRemovedAriaLive","createElement","Object","assign","className","root","margin","bottom","map","item","index","key","removable","disabled","onClick","formAction","ariaDescribedby","delay","id"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/attribute-editor/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport InternalBox from '../box/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { SomeRequired } from '../internal/types';\nimport { AdditionalInfo } from './additional-info';\nimport { AttributeEditorForwardRefType, AttributeEditorProps } from './interfaces';\nimport { Row } from './row';\n\nimport styles from './styles.css.js';\n\ntype InternalAttributeEditorProps<T> = SomeRequired<AttributeEditorProps<T>, 'items'> & InternalBaseComponentProps;\n\nconst InternalAttributeEditor = React.forwardRef(\n  <T,>(\n    {\n      additionalInfo,\n      disableAddButton,\n      definition,\n      items,\n      isItemRemovable = () => true,\n      empty,\n      addButtonText,\n      removeButtonText,\n      removeButtonAriaLabel,\n      i18nStrings,\n      onAddButtonClick,\n      onRemoveButtonClick,\n      __internalRootRef = null,\n      ...props\n    }: InternalAttributeEditorProps<T>,\n    ref: React.Ref<AttributeEditorProps.Ref>\n  ) => {\n    const [breakpoint, breakpointRef] = useContainerBreakpoints(['default', 'xxs', 'xs']);\n    const removeButtonRefs = useRef<Array<ButtonProps.Ref | undefined>>([]);\n    const addButtonRef = useRef<ButtonProps.Ref>(null);\n    const wasNonEmpty = useRef<boolean>(false);\n    const [removalAnnouncement, setRemovalAnnouncement] = useState<string>('');\n\n    const baseProps = getBaseProps(props);\n    const isEmpty = items && items.length === 0;\n\n    wasNonEmpty.current = wasNonEmpty.current || !isEmpty;\n\n    useImperativeHandle(ref, () => ({\n      focusRemoveButton(rowIndex: number) {\n        removeButtonRefs.current[rowIndex]?.focus();\n      },\n      focusAddButton() {\n        addButtonRef.current?.focus();\n      },\n    }));\n\n    const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);\n\n    const additionalInfoId = useUniqueId('attribute-editor-info');\n    const infoAriaDescribedBy = additionalInfo ? additionalInfoId : undefined;\n\n    const prevItemsLength = usePrevious(items.length);\n\n    React.useEffect(() => {\n      if (prevItemsLength && prevItemsLength > items.length && i18nStrings?.itemRemovedAriaLive) {\n        setRemovalAnnouncement(i18nStrings.itemRemovedAriaLive);\n      } else {\n        setRemovalAnnouncement('');\n      }\n      // we only want to announce when the number of items decreases (i.e. when an item is removed)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [items, i18nStrings?.itemRemovedAriaLive]);\n\n    return (\n      <div {...baseProps} ref={mergedRef} className={clsx(baseProps.className, styles.root)}>\n        <InternalBox margin={{ bottom: 'l' }}>\n          {isEmpty && <div className={clsx(styles.empty, wasNonEmpty.current && styles['empty-appear'])}>{empty}</div>}\n          {items.map((item, index) => (\n            <Row<T>\n              key={index}\n              index={index}\n              breakpoint={breakpoint}\n              item={item}\n              definition={definition}\n              i18nStrings={i18nStrings}\n              removable={isItemRemovable(item)}\n              removeButtonText={removeButtonText}\n              removeButtonRefs={removeButtonRefs.current}\n              onRemoveButtonClick={onRemoveButtonClick}\n              removeButtonAriaLabel={removeButtonAriaLabel}\n            />\n          ))}\n        </InternalBox>\n\n        <InternalButton\n          className={styles['add-button']}\n          disabled={disableAddButton}\n          onClick={onAddButtonClick}\n          formAction=\"none\"\n          ref={addButtonRef}\n          ariaDescribedby={infoAriaDescribedBy}\n        >\n          {addButtonText}\n        </InternalButton>\n        <LiveRegion data-testid=\"removal-announcement\" delay={5} key={items.length}>\n          {removalAnnouncement}\n        </LiveRegion>\n        {!!additionalInfo && <AdditionalInfo id={infoAriaDescribedBy}>{additionalInfo}</AdditionalInfo>}\n      </div>\n    );\n  }\n) as AttributeEditorForwardRefType;\n\nexport default InternalAttributeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}