{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/EditorThreatSource/index.tsx\",\n  _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\n/** @jsxImportSource @emotion/react */\nimport Button from '@cloudscape-design/components/button';\nimport ColumnLayout from '@cloudscape-design/components/column-layout';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport { useCallback, useEffect, useRef, forwardRef } from 'react';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport { TemplateThreatStatementSchema } from '../../../customTypes';\nimport Input from '../../generic/Input';\nimport EditorLayout from '../EditorLayout';\nimport styles from '../EditorLayout/styles';\nimport ExampleList from '../ExampleList';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst EditorThreatSource = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  statement,\n  setStatement,\n  fieldData\n}, ref) => {\n  _s();\n  const {\n    perFieldExamples,\n    previousInputs\n  } = useThreatsContext();\n  const valueRef = useRef(statement.threatSource);\n  useEffect(() => {\n    var _statement$threatSour;\n    valueRef.current = (_statement$threatSour = statement.threatSource) === null || _statement$threatSour === void 0 ? void 0 : _statement$threatSour.trim();\n  }, [statement.threatSource]);\n  const handleChange = useCallback(threatSource => {\n    setStatement(prevStatement => prevStatement && {\n      ...prevStatement,\n      threatSource: threatSource\n    });\n  }, [setStatement]);\n  return _jsxDEV(EditorLayout, {\n    title: fieldData.displayTitle,\n    description: fieldData.description,\n    children: [_jsxDEV(\"div\", {\n      css: styles.textEditorLayout,\n      children: [_jsxDEV(\"div\", {\n        css: styles.input,\n        children: _jsxDEV(Input, {\n          ref: ref,\n          spellcheck: true,\n          onChange: ({\n            detail\n          }) => handleChange(detail.value),\n          value: statement.threatSource || '',\n          placeholder: \"Enter threat source\",\n          validateData: TemplateThreatStatementSchema.shape.threatSource.safeParse,\n          stretch: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), statement.threatSource && _jsxDEV(\"div\", {\n        css: styles.inputClearSmall,\n        children: _jsxDEV(Button, {\n          variant: \"icon\",\n          iconName: \"close\",\n          onClick: () => handleChange('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), _jsxDEV(ColumnLayout, {\n      columns: previousInputs.threat_source.length > 0 ? 2 : 1,\n      children: [perFieldExamples.threat_source.length > 0 && _jsxDEV(ExampleList, {\n        examples: perFieldExamples.threat_source,\n        onSelect: handleChange,\n        showSearch: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), previousInputs.threat_source.length > 0 && _jsxDEV(TextContent, {\n        children: [_jsxDEV(\"span\", {\n          children: \"From previous input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), _jsxDEV(\"ul\", {\n          children: previousInputs.threat_source.map((threatSource, index) => _jsxDEV(\"li\", {\n            children: _jsxDEV(Button, {\n              variant: \"link\",\n              onClick: () => handleChange(threatSource),\n              children: threatSource\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 87\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 71\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this);\n}, \"gpOZjawaD5H+UsFE8ICcOmZFhcA=\", false, function () {\n  return [useThreatsContext];\n})), \"gpOZjawaD5H+UsFE8ICcOmZFhcA=\", false, function () {\n  return [useThreatsContext];\n});\n_c2 = EditorThreatSource;\nexport default EditorThreatSource;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditorThreatSource$forwardRef\");\n$RefreshReg$(_c2, \"EditorThreatSource\");","map":{"version":3,"names":["Button","ColumnLayout","TextContent","useCallback","useEffect","useRef","forwardRef","useThreatsContext","TemplateThreatStatementSchema","Input","EditorLayout","styles","ExampleList","jsxDEV","_jsxDEV","EditorThreatSource","_s","_c","statement","setStatement","fieldData","ref","perFieldExamples","previousInputs","valueRef","threatSource","_statement$threatSour","current","trim","handleChange","prevStatement","title","displayTitle","description","children","css","textEditorLayout","input","spellcheck","onChange","detail","value","placeholder","validateData","shape","safeParse","stretch","fileName","_jsxFileName","lineNumber","columnNumber","inputClearSmall","variant","iconName","onClick","columns","threat_source","length","examples","onSelect","showSearch","map","index","_c2","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/EditorThreatSource/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\n/** @jsxImportSource @emotion/react */\nimport Button from '@cloudscape-design/components/button';\nimport ColumnLayout from '@cloudscape-design/components/column-layout';\nimport { InputProps } from '@cloudscape-design/components/input';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport { FC, useCallback, useEffect, useRef, forwardRef } from 'react';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport { TemplateThreatStatementSchema } from '../../../customTypes';\nimport Input from '../../generic/Input';\nimport EditorLayout from '../EditorLayout';\nimport styles from '../EditorLayout/styles';\nimport ExampleList from '../ExampleList';\nimport { EditorProps } from '../ThreatStatementEditor/types';\n\nconst EditorThreatSource: FC<EditorProps> = forwardRef<InputProps.Ref, EditorProps>(({\n  statement, setStatement, fieldData,\n}, ref) => {\n  const { perFieldExamples, previousInputs } = useThreatsContext();\n\n  const valueRef = useRef<string | undefined>(statement.threatSource);\n  useEffect(() => {\n    valueRef.current = statement.threatSource?.trim();\n  }, [statement.threatSource]);\n\n  const handleChange = useCallback((threatSource: string) => {\n    setStatement(prevStatement => prevStatement && ({\n      ...prevStatement,\n      threatSource: threatSource,\n    }));\n  }, [setStatement]);\n\n  return (<EditorLayout\n    title={fieldData.displayTitle}\n    description={fieldData.description}\n  >\n    <div css={styles.textEditorLayout}>\n      <div css={styles.input}>\n        <Input\n          ref={ref}\n          spellcheck\n          onChange={({ detail }) => handleChange(detail.value)}\n          value={statement.threatSource || ''}\n          placeholder='Enter threat source'\n          validateData={TemplateThreatStatementSchema.shape.threatSource.safeParse}\n          stretch\n        />\n      </div>\n      {statement.threatSource && <div css={styles.inputClearSmall}>\n        <Button variant='icon' iconName='close' onClick={() => handleChange('')} />\n      </div>}\n    </div>\n    <ColumnLayout columns={previousInputs.threat_source.length > 0 ? 2 : 1}>\n      {perFieldExamples.threat_source.length > 0 &&\n        <ExampleList examples={perFieldExamples.threat_source} onSelect={handleChange} showSearch={false}></ExampleList>}\n      {previousInputs.threat_source.length > 0 && <TextContent>\n        <span>From previous input</span>\n        <ul>\n          {previousInputs.threat_source.map((threatSource, index) => (<li key={index}><Button variant='link' onClick={() => handleChange(threatSource)}>{threatSource}</Button></li>))}\n        </ul>\n      </TextContent>}\n    </ColumnLayout>\n  </EditorLayout>);\n});\n\nexport default EditorThreatSource;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}