{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __rest } from \"tslib\";\nimport React, { useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useFormFieldContext } from '../contexts/form-field';\nimport { useInternalI18n } from '../i18n/context';\nimport AutosuggestInput from '../internal/components/autosuggest-input';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../internal/events';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field';\nimport { useAutosuggestLoadMore } from './load-more-controller';\nimport { useAutosuggestItems } from './options-controller';\nimport AutosuggestOptionsList from './options-list';\nimport styles from './styles.css.js';\nconst InternalAutosuggest = React.forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n      value,\n      onChange,\n      onBlur,\n      onFocus,\n      onKeyUp,\n      onLoadItems,\n      options,\n      filteringType = 'auto',\n      statusType = 'finished',\n      placeholder,\n      clearAriaLabel,\n      name,\n      disabled,\n      disableBrowserAutocorrect = false,\n      autoFocus,\n      readOnly,\n      ariaLabel,\n      ariaRequired,\n      enteredTextLabel,\n      filteringResultsText,\n      onKeyDown,\n      virtualScroll,\n      expandToViewport,\n      onSelect,\n      renderHighlightedAriaLive,\n      __internalRootRef\n    } = props,\n    restProps = __rest(props, [\"value\", \"onChange\", \"onBlur\", \"onFocus\", \"onKeyUp\", \"onLoadItems\", \"options\", \"filteringType\", \"statusType\", \"placeholder\", \"clearAriaLabel\", \"name\", \"disabled\", \"disableBrowserAutocorrect\", \"autoFocus\", \"readOnly\", \"ariaLabel\", \"ariaRequired\", \"enteredTextLabel\", \"filteringResultsText\", \"onKeyDown\", \"virtualScroll\", \"expandToViewport\", \"onSelect\", \"renderHighlightedAriaLive\", \"__internalRootRef\"]);\n  checkControlled('Autosuggest', 'value', value, 'onChange', onChange);\n  checkOptionValueField('Autosuggest', 'options', options);\n  const autosuggestInputRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n      return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    select: () => {\n      var _a;\n      return (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n    }\n  }), []);\n  const i18n = useInternalI18n('autosuggest');\n  const errorIconAriaLabel = i18n('errorIconAriaLabel', restProps.errorIconAriaLabel);\n  const selectedAriaLabel = i18n('selectedAriaLabel', restProps.selectedAriaLabel);\n  const recoveryText = i18n('recoveryText', restProps.recoveryText);\n  if (restProps.recoveryText && !onLoadItems) {\n    warnOnce('Autosuggest', '`onLoadItems` must be provided for `recoveryText` to be displayed.');\n  }\n  const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n    options: options || [],\n    filterValue: value,\n    filterText: value,\n    filteringType,\n    enteredTextLabel,\n    hideEnteredTextLabel: false,\n    onSelectItem: option => {\n      var _a;\n      const value = option.value || '';\n      fireNonCancelableEvent(onChange, {\n        value\n      });\n      fireNonCancelableEvent(onSelect, {\n        value,\n        selectedOption: option.type !== 'use-entered' ? option.option : undefined\n      });\n      (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n    }\n  });\n  const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options,\n    statusType,\n    onLoadItems: detail => fireNonCancelableEvent(onLoadItems, detail)\n  });\n  const handleChange = event => {\n    autosuggestItemsHandlers.setShowAll(false);\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n  const handleDelayedInput = event => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n  const handleBlur = () => {\n    fireNonCancelableEvent(onBlur, null);\n  };\n  const handleFocus = () => {\n    autosuggestItemsHandlers.setShowAll(true);\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireNonCancelableEvent(onFocus, null);\n  };\n  const handleKeyUp = event => {\n    fireCancelableEvent(onKeyUp, event.detail, event);\n  };\n  const handleKeyDown = event => {\n    fireCancelableEvent(onKeyDown, event.detail, event);\n  };\n  const handlePressArrowDown = () => {\n    if (autosuggestItemsState.items.length - 1 === autosuggestItemsState.highlightedIndex) {\n      autosuggestItemsHandlers.goHomeWithKeyboard();\n      return;\n    }\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n  };\n  const handlePressArrowUp = () => {\n    var _a;\n    if (((_a = autosuggestItemsState.highlightedOption) === null || _a === void 0 ? void 0 : _a.type) === 'child' && autosuggestItemsState.highlightedIndex === 1 || autosuggestItemsState.highlightedIndex === 0) {\n      autosuggestItemsHandlers.goEndWithKeyboard();\n      return;\n    }\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n  const handlePressEnter = () => {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n  const handleCloseDropdown = () => {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n  const handleRecoveryClick = () => {\n    var _a;\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    (_a = autosuggestInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  const formFieldContext = useFormFieldContext(restProps);\n  const selfControlId = useUniqueId('input');\n  const footerControlId = useUniqueId('footer');\n  const controlId = (_a = formFieldContext.controlId) !== null && _a !== void 0 ? _a : selfControlId;\n  const listId = useUniqueId('list');\n  const highlightedOptionIdSource = useUniqueId();\n  const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n  const isEmpty = !value && !autosuggestItemsState.items.length;\n  const isFiltered = !!value && value.length !== 0;\n  const filteredText = isFiltered ? filteringResultsText === null || filteringResultsText === void 0 ? void 0 : filteringResultsText(autosuggestItemsState.items.length, (_b = options === null || options === void 0 ? void 0 : options.length) !== null && _b !== void 0 ? _b : 0) : undefined;\n  const dropdownStatus = useDropdownStatus(Object.assign(Object.assign({}, props), {\n    isEmpty,\n    isFiltered,\n    recoveryText,\n    errorIconAriaLabel,\n    onRecoveryClick: handleRecoveryClick,\n    filteringResultsText: filteredText,\n    hasRecoveryCallback: !!onLoadItems\n  }));\n  const shouldRenderDropdownContent = !isEmpty || dropdownStatus.content;\n  return React.createElement(AutosuggestInput, Object.assign({}, restProps, {\n    className: clsx(styles.root, restProps.className),\n    ref: autosuggestInputRef,\n    __internalRootRef: __internalRootRef,\n    value: value,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    name: name,\n    controlId: controlId,\n    placeholder: placeholder,\n    disabled: disabled,\n    readOnly: readOnly,\n    autoFocus: autoFocus,\n    ariaLabel: ariaLabel,\n    ariaRequired: ariaRequired,\n    clearAriaLabel: clearAriaLabel,\n    disableBrowserAutocorrect: disableBrowserAutocorrect,\n    expandToViewport: expandToViewport,\n    ariaControls: listId,\n    ariaActivedescendant: highlightedOptionId,\n    dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null,\n    dropdownContent: shouldRenderDropdownContent && React.createElement(AutosuggestOptionsList, {\n      statusType: statusType,\n      autosuggestItemsState: autosuggestItemsState,\n      autosuggestItemsHandlers: autosuggestItemsHandlers,\n      highlightedOptionId: highlightedOptionId,\n      highlightText: value,\n      listId: listId,\n      controlId: controlId,\n      handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll,\n      hasDropdownStatus: dropdownStatus.content !== null,\n      virtualScroll: virtualScroll,\n      selectedAriaLabel: selectedAriaLabel,\n      renderHighlightedAriaLive: renderHighlightedAriaLive,\n      listBottom: !dropdownStatus.isSticky ? React.createElement(DropdownFooter, {\n        content: dropdownStatus.content,\n        id: footerControlId\n      }) : null,\n      ariaDescribedby: dropdownStatus.content ? footerControlId : undefined\n    }),\n    dropdownFooter: dropdownStatus.isSticky && dropdownStatus.content ? React.createElement(DropdownFooter, {\n      id: footerControlId,\n      content: dropdownStatus.content,\n      hasItems: autosuggestItemsState.items.length >= 1\n    }) : null,\n    loopFocus: dropdownStatus.hasRecoveryButton,\n    onCloseDropdown: handleCloseDropdown,\n    onDelayedInput: handleDelayedInput,\n    onPressArrowDown: handlePressArrowDown,\n    onPressArrowUp: handlePressArrowUp,\n    onPressEnter: handlePressEnter\n  }));\n});\nexport default InternalAutosuggest;","map":{"version":3,"names":["React","useImperativeHandle","useRef","clsx","warnOnce","useFormFieldContext","useInternalI18n","AutosuggestInput","DropdownFooter","useDropdownStatus","fireCancelableEvent","fireNonCancelableEvent","checkControlled","useUniqueId","checkOptionValueField","useAutosuggestLoadMore","useAutosuggestItems","AutosuggestOptionsList","styles","InternalAutosuggest","forwardRef","props","ref","value","onChange","onBlur","onFocus","onKeyUp","onLoadItems","options","filteringType","statusType","placeholder","clearAriaLabel","name","disabled","disableBrowserAutocorrect","autoFocus","readOnly","ariaLabel","ariaRequired","enteredTextLabel","filteringResultsText","onKeyDown","virtualScroll","expandToViewport","onSelect","renderHighlightedAriaLive","__internalRootRef","restProps","__rest","autosuggestInputRef","focus","_a","current","select","i18n","errorIconAriaLabel","selectedAriaLabel","recoveryText","autosuggestItemsState","autosuggestItemsHandlers","filterValue","filterText","hideEnteredTextLabel","onSelectItem","option","selectedOption","type","undefined","close","autosuggestLoadMoreHandlers","detail","handleChange","event","setShowAll","resetHighlightWithKeyboard","handleDelayedInput","fireLoadMoreOnInputChange","handleBlur","handleFocus","fireLoadMoreOnInputFocus","handleKeyUp","handleKeyDown","handlePressArrowDown","items","length","highlightedIndex","goHomeWithKeyboard","moveHighlightWithKeyboard","handlePressArrowUp","highlightedOption","goEndWithKeyboard","handlePressEnter","selectHighlightedOptionWithKeyboard","handleCloseDropdown","handleRecoveryClick","fireLoadMoreOnRecoveryClick","formFieldContext","selfControlId","footerControlId","controlId","listId","highlightedOptionIdSource","highlightedOptionId","isEmpty","isFiltered","filteredText","_b","dropdownStatus","Object","assign","onRecoveryClick","hasRecoveryCallback","shouldRenderDropdownContent","content","createElement","className","root","ariaControls","ariaActivedescendant","dropdownExpanded","dropdownContent","highlightText","handleLoadMore","fireLoadMoreOnScroll","hasDropdownStatus","listBottom","isSticky","id","ariaDescribedby","dropdownFooter","hasItems","loopFocus","hasRecoveryButton","onCloseDropdown","onDelayedInput","onPressArrowDown","onPressArrowUp","onPressEnter"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/autosuggest/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useFormFieldContext } from '../contexts/form-field';\nimport { useInternalI18n } from '../i18n/context';\nimport { BaseChangeDetail } from '../input/interfaces';\nimport AutosuggestInput, { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport DropdownFooter from '../internal/components/dropdown-footer';\nimport { useDropdownStatus } from '../internal/components/dropdown-status';\nimport {\n  BaseKeyDetail,\n  fireCancelableEvent,\n  fireNonCancelableEvent,\n  NonCancelableCustomEvent,\n} from '../internal/events';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { checkOptionValueField } from '../select/utils/check-option-value-field';\nimport { AutosuggestItem, AutosuggestProps } from './interfaces';\nimport { useAutosuggestLoadMore } from './load-more-controller';\nimport { useAutosuggestItems } from './options-controller';\nimport AutosuggestOptionsList from './options-list';\n\nimport styles from './styles.css.js';\n\nexport interface InternalAutosuggestProps extends AutosuggestProps, InternalBaseComponentProps {}\n\nconst InternalAutosuggest = React.forwardRef((props: InternalAutosuggestProps, ref: Ref<AutosuggestProps.Ref>) => {\n  const {\n    value,\n    onChange,\n    onBlur,\n    onFocus,\n    onKeyUp,\n    onLoadItems,\n    options,\n    filteringType = 'auto',\n    statusType = 'finished',\n    placeholder,\n    clearAriaLabel,\n    name,\n    disabled,\n    disableBrowserAutocorrect = false,\n    autoFocus,\n    readOnly,\n    ariaLabel,\n    ariaRequired,\n    enteredTextLabel,\n    filteringResultsText,\n    onKeyDown,\n    virtualScroll,\n    expandToViewport,\n    onSelect,\n    renderHighlightedAriaLive,\n    __internalRootRef,\n    ...restProps\n  } = props;\n\n  checkControlled('Autosuggest', 'value', value, 'onChange', onChange);\n  checkOptionValueField('Autosuggest', 'options', options);\n\n  const autosuggestInputRef = useRef<AutosuggestInputRef>(null);\n  useImperativeHandle(\n    ref,\n    () => ({\n      focus: () => autosuggestInputRef.current?.focus(),\n      select: () => autosuggestInputRef.current?.select(),\n    }),\n    []\n  );\n\n  const i18n = useInternalI18n('autosuggest');\n  const errorIconAriaLabel = i18n('errorIconAriaLabel', restProps.errorIconAriaLabel);\n  const selectedAriaLabel = i18n('selectedAriaLabel', restProps.selectedAriaLabel);\n  const recoveryText = i18n('recoveryText', restProps.recoveryText);\n\n  if (restProps.recoveryText && !onLoadItems) {\n    warnOnce('Autosuggest', '`onLoadItems` must be provided for `recoveryText` to be displayed.');\n  }\n\n  const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({\n    options: options || [],\n    filterValue: value,\n    filterText: value,\n    filteringType,\n    enteredTextLabel,\n    hideEnteredTextLabel: false,\n    onSelectItem: (option: AutosuggestItem) => {\n      const value = option.value || '';\n      fireNonCancelableEvent(onChange, { value });\n      fireNonCancelableEvent(onSelect, {\n        value,\n        selectedOption: option.type !== 'use-entered' ? option.option : undefined,\n      });\n      autosuggestInputRef.current?.close();\n    },\n  });\n\n  const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({\n    options,\n    statusType,\n    onLoadItems: (detail: OptionsLoadItemsDetail) => fireNonCancelableEvent(onLoadItems, detail),\n  });\n\n  const handleChange = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n    autosuggestItemsHandlers.setShowAll(false);\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n    fireNonCancelableEvent(onChange, event.detail);\n  };\n\n  const handleDelayedInput = (event: NonCancelableCustomEvent<BaseChangeDetail>) => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);\n  };\n\n  const handleBlur = () => {\n    fireNonCancelableEvent(onBlur, null);\n  };\n\n  const handleFocus = () => {\n    autosuggestItemsHandlers.setShowAll(true);\n    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();\n    fireNonCancelableEvent(onFocus, null);\n  };\n\n  const handleKeyUp = (event: CustomEvent<BaseKeyDetail>) => {\n    fireCancelableEvent(onKeyUp, event.detail, event);\n  };\n\n  const handleKeyDown = (event: CustomEvent<BaseKeyDetail>) => {\n    fireCancelableEvent(onKeyDown, event.detail, event);\n  };\n\n  const handlePressArrowDown = () => {\n    if (autosuggestItemsState.items.length - 1 === autosuggestItemsState.highlightedIndex) {\n      autosuggestItemsHandlers.goHomeWithKeyboard();\n      return;\n    }\n\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);\n  };\n\n  const handlePressArrowUp = () => {\n    if (\n      (autosuggestItemsState.highlightedOption?.type === 'child' && autosuggestItemsState.highlightedIndex === 1) ||\n      autosuggestItemsState.highlightedIndex === 0\n    ) {\n      autosuggestItemsHandlers.goEndWithKeyboard();\n      return;\n    }\n\n    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);\n  };\n\n  const handlePressEnter = () => {\n    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();\n  };\n\n  const handleCloseDropdown = () => {\n    autosuggestItemsHandlers.resetHighlightWithKeyboard();\n  };\n\n  const handleRecoveryClick = () => {\n    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();\n    autosuggestInputRef.current?.focus();\n  };\n\n  const formFieldContext = useFormFieldContext(restProps);\n  const selfControlId = useUniqueId('input');\n  const footerControlId = useUniqueId('footer');\n  const controlId = formFieldContext.controlId ?? selfControlId;\n  const listId = useUniqueId('list');\n  const highlightedOptionIdSource = useUniqueId();\n  const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : undefined;\n\n  const isEmpty = !value && !autosuggestItemsState.items.length;\n  const isFiltered = !!value && value.length !== 0;\n  const filteredText = isFiltered\n    ? filteringResultsText?.(autosuggestItemsState.items.length, options?.length ?? 0)\n    : undefined;\n  const dropdownStatus = useDropdownStatus({\n    ...props,\n    isEmpty,\n    isFiltered,\n    recoveryText,\n    errorIconAriaLabel,\n    onRecoveryClick: handleRecoveryClick,\n    filteringResultsText: filteredText,\n    hasRecoveryCallback: !!onLoadItems,\n  });\n\n  const shouldRenderDropdownContent = !isEmpty || dropdownStatus.content;\n\n  return (\n    <AutosuggestInput\n      {...restProps}\n      className={clsx(styles.root, restProps.className)}\n      ref={autosuggestInputRef}\n      __internalRootRef={__internalRootRef}\n      value={value}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onKeyUp={handleKeyUp}\n      onKeyDown={handleKeyDown}\n      name={name}\n      controlId={controlId}\n      placeholder={placeholder}\n      disabled={disabled}\n      readOnly={readOnly}\n      autoFocus={autoFocus}\n      ariaLabel={ariaLabel}\n      ariaRequired={ariaRequired}\n      clearAriaLabel={clearAriaLabel}\n      disableBrowserAutocorrect={disableBrowserAutocorrect}\n      expandToViewport={expandToViewport}\n      ariaControls={listId}\n      ariaActivedescendant={highlightedOptionId}\n      dropdownExpanded={autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null}\n      dropdownContent={\n        shouldRenderDropdownContent && (\n          <AutosuggestOptionsList\n            statusType={statusType}\n            autosuggestItemsState={autosuggestItemsState}\n            autosuggestItemsHandlers={autosuggestItemsHandlers}\n            highlightedOptionId={highlightedOptionId}\n            highlightText={value}\n            listId={listId}\n            controlId={controlId}\n            handleLoadMore={autosuggestLoadMoreHandlers.fireLoadMoreOnScroll}\n            hasDropdownStatus={dropdownStatus.content !== null}\n            virtualScroll={virtualScroll}\n            selectedAriaLabel={selectedAriaLabel}\n            renderHighlightedAriaLive={renderHighlightedAriaLive}\n            listBottom={\n              !dropdownStatus.isSticky ? <DropdownFooter content={dropdownStatus.content} id={footerControlId} /> : null\n            }\n            ariaDescribedby={dropdownStatus.content ? footerControlId : undefined}\n          />\n        )\n      }\n      dropdownFooter={\n        dropdownStatus.isSticky && dropdownStatus.content ? (\n          <DropdownFooter\n            id={footerControlId}\n            content={dropdownStatus.content}\n            hasItems={autosuggestItemsState.items.length >= 1}\n          />\n        ) : null\n      }\n      loopFocus={dropdownStatus.hasRecoveryButton}\n      onCloseDropdown={handleCloseDropdown}\n      onDelayedInput={handleDelayedInput}\n      onPressArrowDown={handlePressArrowDown}\n      onPressArrowUp={handlePressArrowUp}\n      onPressEnter={handlePressEnter}\n    />\n  );\n});\n\nexport default InternalAutosuggest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}