{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport { componentTypes } from '../../../FormRenderer';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport Box from '@cloudscape-design/components/box';\nimport Popover from '@cloudscape-design/components/popover';\nimport StatusIndicator from '@cloudscape-design/components/status-indicator';\nimport Button from '@cloudscape-design/components/button';\nimport QRCode from 'react-qr-code';\nimport { IMAGE_AUTH_APP } from '../../assets/images';\nimport GenericView from '../GenericView';\nconst MFATotpView = ({\n  secretCode,\n  onConfirm,\n  onBackToSignIn\n}) => {\n  const CustomComponent = useMemo(() => {\n    return () => {\n      return _jsxs(SpaceBetween, {\n        size: \"xl\",\n        direction: \"horizontal\",\n        children: [_jsxs(SpaceBetween, {\n          size: \"xl\",\n          direction: \"horizontal\",\n          children: [_jsx(\"span\", {\n            children: \"1.\"\n          }), _jsx(\"img\", {\n            width: 75,\n            src: IMAGE_AUTH_APP,\n            alt: \"authenticator_app_mfa\"\n          }), _jsx(\"span\", {\n            children: \"Install an authenticator app on your mobile device.\"\n          })]\n        }), _jsxs(SpaceBetween, {\n          size: 'xl',\n          direction: 'horizontal',\n          children: [_jsx(\"span\", {\n            children: \"2.\"\n          }), _jsx(QRCode, {\n            size: 75,\n            value: `otpauth://totp/${window.location.origin}?secret=${secretCode}`\n          }), _jsx(\"span\", {\n            style: {\n              display: 'block',\n              maxWidth: '320px'\n            },\n            children: \"Scan this QR code with your authenticator app. Alternatively, you can copy the secret key below and enter it in your authenticator app.\"\n          }), _jsx(Box, {\n            margin: \"l\",\n            children: _jsx(Popover, {\n              dismissButton: false,\n              position: \"top\",\n              size: \"small\",\n              triggerType: \"custom\",\n              content: _jsx(StatusIndicator, {\n                type: \"success\",\n                children: \"Secret key copied\"\n              }),\n              children: _jsx(Button, {\n                iconName: \"copy\",\n                onClick: () => navigator?.clipboard?.writeText?.(secretCode),\n                children: \"Copy secret key\"\n              })\n            })\n          })]\n        })]\n      });\n    };\n  }, [secretCode]);\n  const schema = useMemo(() => {\n    return {\n      header: 'Set Up Authenticator',\n      headerVariant: 'h2',\n      variant: 'embedded',\n      canCancel: false,\n      submitLabel: 'Continue',\n      fields: [{\n        component: componentTypes.CUSTOM,\n        CustomComponent: CustomComponent,\n        name: 'description'\n      }, {\n        component: componentTypes.TEXT_FIELD,\n        isRequired: true,\n        label: 'Code',\n        name: 'confirmationCode',\n        placeholder: 'Code',\n        validate: [{\n          type: 'required'\n        }]\n      }]\n    };\n  }, [CustomComponent]);\n  return _jsx(GenericView, {\n    schema: schema,\n    onBackToSignIn: onBackToSignIn,\n    onSubmit: onConfirm\n  });\n};\nexport default MFATotpView;","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","useMemo","componentTypes","SpaceBetween","Box","Popover","StatusIndicator","Button","QRCode","IMAGE_AUTH_APP","GenericView","MFATotpView","secretCode","onConfirm","onBackToSignIn","CustomComponent","size","direction","children","width","src","alt","value","window","location","origin","style","display","maxWidth","margin","dismissButton","position","triggerType","content","type","iconName","onClick","navigator","clipboard","writeText","schema","header","headerVariant","variant","canCancel","submitLabel","fields","component","CUSTOM","name","TEXT_FIELD","isRequired","label","placeholder","validate","onSubmit"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/MFATotpSetupView/index.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport { componentTypes } from '../../../FormRenderer';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport Box from '@cloudscape-design/components/box';\nimport Popover from '@cloudscape-design/components/popover';\nimport StatusIndicator from '@cloudscape-design/components/status-indicator';\nimport Button from '@cloudscape-design/components/button';\nimport QRCode from 'react-qr-code';\nimport { IMAGE_AUTH_APP } from '../../assets/images';\nimport GenericView from '../GenericView';\nconst MFATotpView = ({ secretCode, onConfirm, onBackToSignIn }) => {\n    const CustomComponent = useMemo(() => {\n        return () => {\n            return (_jsxs(SpaceBetween, { size: \"xl\", direction: \"horizontal\", children: [_jsxs(SpaceBetween, { size: \"xl\", direction: \"horizontal\", children: [_jsx(\"span\", { children: \"1.\" }), _jsx(\"img\", { width: 75, src: IMAGE_AUTH_APP, alt: \"authenticator_app_mfa\" }), _jsx(\"span\", { children: \"Install an authenticator app on your mobile device.\" })] }), _jsxs(SpaceBetween, { size: 'xl', direction: 'horizontal', children: [_jsx(\"span\", { children: \"2.\" }), _jsx(QRCode, { size: 75, value: `otpauth://totp/${window.location.origin}?secret=${secretCode}` }), _jsx(\"span\", { style: { display: 'block', maxWidth: '320px' }, children: \"Scan this QR code with your authenticator app. Alternatively, you can copy the secret key below and enter it in your authenticator app.\" }), _jsx(Box, { margin: \"l\", children: _jsx(Popover, { dismissButton: false, position: \"top\", size: \"small\", triggerType: \"custom\", content: _jsx(StatusIndicator, { type: \"success\", children: \"Secret key copied\" }), children: _jsx(Button, { iconName: \"copy\", onClick: () => navigator?.clipboard?.writeText?.(secretCode), children: \"Copy secret key\" }) }) })] })] }));\n        };\n    }, [secretCode]);\n    const schema = useMemo(() => {\n        return {\n            header: 'Set Up Authenticator',\n            headerVariant: 'h2',\n            variant: 'embedded',\n            canCancel: false,\n            submitLabel: 'Continue',\n            fields: [\n                {\n                    component: componentTypes.CUSTOM,\n                    CustomComponent: CustomComponent,\n                    name: 'description',\n                },\n                {\n                    component: componentTypes.TEXT_FIELD,\n                    isRequired: true,\n                    label: 'Code',\n                    name: 'confirmationCode',\n                    placeholder: 'Code',\n                    validate: [\n                        {\n                            type: 'required',\n                        },\n                    ],\n                },\n            ],\n        };\n    }, [CustomComponent]);\n    return _jsx(GenericView, { schema: schema, onBackToSignIn: onBackToSignIn, onSubmit: onConfirm });\n};\nexport default MFATotpView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}