{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport TokenList from '../internal/components/token-list';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useListFocusController } from '../internal/hooks/use-list-focus-controller';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { joinStrings } from '../internal/utils/strings';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport { usePropertyFilterI18n } from './i18n-utils';\nimport { PropertyEditorContent, PropertyEditorFooter } from './property-editor';\nimport PropertyFilterAutosuggest from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\nimport tokenListStyles from '../internal/components/token-list/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nconst PropertyFilterInternal = React.forwardRef((_a, ref) => {\n  var _b;\n  var {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions,\n      customGroupsText,\n      disableFreeTextFiltering,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel,\n      enableTokenGroups,\n      __internalRootRef\n    } = _a,\n    rest = __rest(_a, [\"disabled\", \"countText\", \"query\", \"hideOperations\", \"onChange\", \"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"disableFreeTextFiltering\", \"freeTextFiltering\", \"onLoadItems\", \"virtualScroll\", \"customControl\", \"customFilterActions\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"filteringEmpty\", \"filteringLoadingText\", \"filteringFinishedText\", \"filteringErrorText\", \"filteringRecoveryText\", \"filteringConstraintText\", \"filteringStatusType\", \"asyncProperties\", \"tokenLimit\", \"expandToViewport\", \"tokenLimitShowFewerAriaLabel\", \"tokenLimitShowMoreAriaLabel\", \"enableTokenGroups\", \"__internalRootRef\"]);\n  const [nextFocusIndex, setNextFocusIndex] = useState(null);\n  const tokenListRef = useListFocusController({\n    nextFocusIndex,\n    onFocusMoved: (target, targetType) => {\n      var _a;\n      if (targetType === 'fallback') {\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n      } else {\n        target.focus();\n      }\n      setNextFocusIndex(null);\n    },\n    listItemSelector: `.${tokenListStyles['list-item']}`,\n    showMoreSelector: `.${tokenListStyles.toggle}`,\n    fallbackSelector: `.${styles.input}`\n  });\n  const mergedRef = useMergeRefs(tokenListRef, __internalRootRef);\n  const inputRef = useRef(null);\n  const baseProps = getBaseProps(rest);\n  const i18nStrings = usePropertyFilterI18n(rest.i18nStrings);\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n      return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }), []);\n  const [filteringText, setFilteringText] = useState('');\n  const {\n    internalProperties,\n    internalOptions,\n    internalQuery,\n    internalFreeText\n  } = (() => {\n    var _a, _b;\n    const propertyByKey = filteringProperties.reduce((acc, property) => {\n      var _a, _b, _c, _d, _e;\n      const extendedOperators = ((_a = property === null || property === void 0 ? void 0 : property.operators) !== null && _a !== void 0 ? _a : []).reduce((acc, operator) => typeof operator === 'object' ? acc.set(operator.operator, operator) : acc, new Map());\n      acc.set(property.key, {\n        propertyKey: property.key,\n        propertyLabel: (_b = property === null || property === void 0 ? void 0 : property.propertyLabel) !== null && _b !== void 0 ? _b : '',\n        groupValuesLabel: (_c = property === null || property === void 0 ? void 0 : property.groupValuesLabel) !== null && _c !== void 0 ? _c : '',\n        propertyGroup: property === null || property === void 0 ? void 0 : property.group,\n        operators: ((_d = property === null || property === void 0 ? void 0 : property.operators) !== null && _d !== void 0 ? _d : []).map(op => typeof op === 'string' ? op : op.operator),\n        defaultOperator: (_e = property === null || property === void 0 ? void 0 : property.defaultOperator) !== null && _e !== void 0 ? _e : '=',\n        getValueFormatter: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.format) !== null && _b !== void 0 ? _b : null : null;\n        },\n        getValueFormRenderer: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.form) !== null && _b !== void 0 ? _b : null : null;\n        },\n        externalProperty: property\n      });\n      return acc;\n    }, new Map());\n    const getProperty = propertyKey => {\n      var _a;\n      return (_a = propertyByKey.get(propertyKey)) !== null && _a !== void 0 ? _a : null;\n    };\n    const internalOptions = filteringOptions.map(option => {\n      var _a, _b;\n      return {\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: (_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.value) !== null && _b !== void 0 ? _b : ''\n      };\n    });\n    function transformToken(tokenOrGroup, standaloneIndex) {\n      return 'operation' in tokenOrGroup ? {\n        operation: tokenOrGroup.operation,\n        tokens: tokenOrGroup.tokens.map(token => transformToken(token))\n      } : {\n        standaloneIndex,\n        property: tokenOrGroup.propertyKey ? getProperty(tokenOrGroup.propertyKey) : null,\n        operator: tokenOrGroup.operator,\n        value: tokenOrGroup.value\n      };\n    }\n    const internalQuery = {\n      operation: query.operation,\n      tokens: (enableTokenGroups && query.tokenGroups ? query.tokenGroups : query.tokens).map(transformToken)\n    };\n    const internalFreeText = {\n      disabled: disableFreeTextFiltering,\n      operators: (_a = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.operators) !== null && _a !== void 0 ? _a : [':', '!:'],\n      defaultOperator: (_b = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.defaultOperator) !== null && _b !== void 0 ? _b : ':'\n    };\n    return {\n      internalProperties: [...propertyByKey.values()],\n      internalOptions,\n      internalQuery,\n      internalFreeText\n    };\n  })();\n  const {\n    addToken,\n    updateToken,\n    updateOperation,\n    removeToken,\n    removeAllTokens\n  } = getQueryActions({\n    query: internalQuery,\n    filteringOptions: internalOptions,\n    onChange,\n    enableTokenGroups\n  });\n  const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n  const autosuggestOptions = getAutosuggestOptions(parsedText, internalProperties, internalOptions, customGroupsText, i18nStrings);\n  const createToken = currentText => {\n    const parsedText = parseText(currentText, internalProperties, internalFreeText);\n    let newToken;\n    switch (parsedText.step) {\n      case 'property':\n        {\n          newToken = {\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'free-text':\n        {\n          newToken = {\n            property: null,\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'operator':\n        {\n          newToken = {\n            property: null,\n            operator: internalFreeText.defaultOperator,\n            value: currentText\n          };\n          break;\n        }\n    }\n    if (internalFreeText.disabled && !newToken.property) {\n      return;\n    }\n    addToken(newToken);\n    setFilteringText('');\n  };\n  const getLoadMoreDetail = (parsedText, filteringText) => {\n    const loadMoreDetail = {\n      filteringProperty: undefined,\n      filteringText,\n      filteringOperator: undefined\n    };\n    if (parsedText.step === 'property') {\n      loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n      loadMoreDetail.filteringText = parsedText.value;\n      loadMoreDetail.filteringOperator = parsedText.operator;\n    }\n    return loadMoreDetail;\n  };\n  const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n  const inputLoadItemsHandlers = useLoadItems(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);\n  const asyncProps = {\n    empty: filteringEmpty,\n    loadingText: filteringLoadingText,\n    finishedText: filteringFinishedText,\n    errorText: filteringErrorText,\n    recoveryText: filteringRecoveryText,\n    statusType: filteringStatusType\n  };\n  const asyncAutosuggestProps = !!filteringText.length || asyncProperties ? Object.assign(Object.assign({}, inputLoadItemsHandlers), asyncProps) : {};\n  const handleSelected = event => {\n    var _a;\n    const {\n      detail: option\n    } = event;\n    const value = option.value || '';\n    if (!value) {\n      return;\n    }\n    if (!('keepOpenOnSelect' in option)) {\n      createToken(value);\n      return;\n    }\n    // stop dropdown from closing\n    event.preventDefault();\n    const parsedText = parseText(value, internalProperties, internalFreeText);\n    const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n    // Insert operator automatically if only one operator is defined for the given property.\n    if (parsedText.step === 'operator') {\n      const operators = getAllowedOperators(parsedText.property);\n      if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n        loadMoreDetail.filteringProperty = (_a = parsedText.property.externalProperty) !== null && _a !== void 0 ? _a : undefined;\n        loadMoreDetail.filteringOperator = operators[0];\n        loadMoreDetail.filteringText = '';\n        setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n      }\n    }\n    fireNonCancelableEvent(onLoadItems, Object.assign(Object.assign({}, loadMoreDetail), {\n      firstPage: true,\n      samePage: false\n    }));\n  };\n  const propertyStep = parsedText.step === 'property' ? parsedText : null;\n  const customValueKey = propertyStep ? propertyStep.property.propertyKey + ':' + propertyStep.operator : '';\n  const [customFormValueRecord, setCustomFormValueRecord] = useState({});\n  const customFormValue = customValueKey in customFormValueRecord ? customFormValueRecord[customValueKey] : null;\n  const setCustomFormValue = value => setCustomFormValueRecord({\n    [customValueKey]: value\n  });\n  const operatorForm = propertyStep && propertyStep.property.getValueFormRenderer(propertyStep.operator);\n  const searchResultsId = useUniqueId('property-filter-search-results');\n  const constraintTextId = useUniqueId('property-filter-constraint');\n  const textboxAriaDescribedBy = filteringConstraintText ? joinStrings(rest.ariaDescribedby, constraintTextId) : rest.ariaDescribedby;\n  const showResults = !!((_b = internalQuery.tokens) === null || _b === void 0 ? void 0 : _b.length) && !disabled && !!countText;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles['search-field'], analyticsSelectors['search-field'])\n  }, customControl && React.createElement(\"div\", {\n    className: styles['custom-control']\n  }, customControl), React.createElement(\"div\", {\n    className: styles['input-wrapper']\n  }, React.createElement(PropertyFilterAutosuggest, Object.assign({\n    ref: inputRef,\n    virtualScroll: virtualScroll,\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    ariaLabel: filteringAriaLabel !== null && filteringAriaLabel !== void 0 ? filteringAriaLabel : i18nStrings.filteringAriaLabel,\n    placeholder: filteringPlaceholder !== null && filteringPlaceholder !== void 0 ? filteringPlaceholder : i18nStrings.filteringPlaceholder,\n    ariaLabelledby: rest.ariaLabelledby,\n    ariaDescribedby: textboxAriaDescribedBy,\n    controlId: rest.controlId,\n    value: filteringText,\n    disabled: disabled\n  }, autosuggestOptions, {\n    onChange: event => setFilteringText(event.detail.value),\n    empty: filteringEmpty\n  }, asyncAutosuggestProps, {\n    expandToViewport: expandToViewport,\n    onOptionClick: handleSelected,\n    customForm: operatorForm ? {\n      content: React.createElement(PropertyEditorContent, {\n        key: customValueKey,\n        property: propertyStep.property,\n        operator: propertyStep.operator,\n        filter: propertyStep.value,\n        operatorForm: operatorForm,\n        value: customFormValue,\n        onChange: setCustomFormValue\n      }),\n      footer: React.createElement(PropertyEditorFooter, {\n        key: customValueKey,\n        property: propertyStep.property,\n        operator: propertyStep.operator,\n        value: customFormValue,\n        i18nStrings: i18nStrings,\n        onCancel: () => {\n          var _a, _b;\n          setFilteringText('');\n          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n          (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n            preventDropdown: true\n          });\n        },\n        onSubmit: token => {\n          var _a, _b;\n          addToken(token);\n          setFilteringText('');\n          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n            preventDropdown: true\n          });\n          (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.close();\n        }\n      })\n    } : undefined,\n    onCloseDropdown: () => setCustomFormValueRecord({}),\n    hideEnteredTextOption: internalFreeText.disabled && parsedText.step !== 'property',\n    clearAriaLabel: i18nStrings.clearAriaLabel,\n    searchResultsId: showResults ? searchResultsId : undefined\n  })), showResults ? React.createElement(\"div\", {\n    className: styles.results\n  }, React.createElement(SearchResults, {\n    id: searchResultsId\n  }, countText)) : null)), filteringConstraintText && React.createElement(\"div\", {\n    id: constraintTextId,\n    className: styles.constraint\n  }, filteringConstraintText), internalQuery.tokens && internalQuery.tokens.length > 0 && React.createElement(\"div\", {\n    className: styles.tokens\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(TokenList, {\n    alignment: \"inline\",\n    limit: tokenLimit,\n    items: internalQuery.tokens,\n    limitShowFewerAriaLabel: tokenLimitShowFewerAriaLabel,\n    limitShowMoreAriaLabel: tokenLimitShowMoreAriaLabel,\n    renderItem: (_, tokenIndex) => React.createElement(TokenButton, {\n      query: internalQuery,\n      tokenIndex: tokenIndex,\n      onUpdateToken: (token, releasedTokens) => {\n        updateToken(tokenIndex, token, releasedTokens);\n      },\n      onUpdateOperation: updateOperation,\n      onRemoveToken: () => {\n        removeToken(tokenIndex);\n        setNextFocusIndex(tokenIndex);\n      },\n      filteringProperties: internalProperties,\n      filteringOptions: internalOptions,\n      asyncProps: asyncProps,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings,\n      asyncProperties: asyncProperties,\n      hideOperations: hideOperations,\n      customGroupsText: customGroupsText,\n      freeTextFiltering: internalFreeText,\n      disabled: disabled,\n      expandToViewport: expandToViewport,\n      enableTokenGroups: enableTokenGroups\n    }),\n    i18nStrings: {\n      limitShowFewer: i18nStrings.tokenLimitShowFewer,\n      limitShowMore: i18nStrings.tokenLimitShowMore\n    },\n    after: customFilterActions ? React.createElement(\"div\", {\n      className: styles['custom-filter-actions']\n    }, customFilterActions) : React.createElement(\"span\", Object.assign({}, getAnalyticsMetadataAttribute({\n      action: 'clearFilters'\n    })), React.createElement(InternalButton, {\n      formAction: \"none\",\n      onClick: () => {\n        var _a;\n        removeAllTokens();\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n      },\n      className: styles['remove-all'],\n      disabled: disabled\n    }, i18nStrings.clearFiltersText))\n  }))));\n});\nexport default PropertyFilterInternal;","map":{"version":3,"names":["React","useImperativeHandle","useRef","useState","clsx","getAnalyticsMetadataAttribute","InternalButton","getBaseProps","TokenList","fireNonCancelableEvent","useListFocusController","useMergeRefs","useUniqueId","joinStrings","InternalSpaceBetween","SearchResults","getAllowedOperators","getAutosuggestOptions","getQueryActions","parseText","usePropertyFilterI18n","PropertyEditorContent","PropertyEditorFooter","PropertyFilterAutosuggest","TokenButton","useLoadItems","tokenListStyles","analyticsSelectors","styles","PropertyFilterInternal","forwardRef","_a","ref","disabled","countText","query","hideOperations","onChange","filteringProperties","filteringOptions","customGroupsText","disableFreeTextFiltering","freeTextFiltering","onLoadItems","virtualScroll","customControl","customFilterActions","filteringPlaceholder","filteringAriaLabel","filteringEmpty","filteringLoadingText","filteringFinishedText","filteringErrorText","filteringRecoveryText","filteringConstraintText","filteringStatusType","asyncProperties","tokenLimit","expandToViewport","tokenLimitShowFewerAriaLabel","tokenLimitShowMoreAriaLabel","enableTokenGroups","__internalRootRef","rest","__rest","nextFocusIndex","setNextFocusIndex","tokenListRef","onFocusMoved","target","targetType","inputRef","current","focus","preventDropdown","listItemSelector","showMoreSelector","toggle","fallbackSelector","input","mergedRef","baseProps","i18nStrings","filteringText","setFilteringText","internalProperties","internalOptions","internalQuery","internalFreeText","propertyByKey","reduce","acc","property","extendedOperators","operators","operator","set","Map","key","propertyKey","propertyLabel","_b","groupValuesLabel","_c","propertyGroup","group","_d","map","op","defaultOperator","_e","getValueFormatter","get","format","getValueFormRenderer","form","externalProperty","getProperty","option","value","label","transformToken","tokenOrGroup","standaloneIndex","operation","tokens","token","tokenGroups","values","addToken","updateToken","updateOperation","removeToken","removeAllTokens","parsedText","autosuggestOptions","createToken","currentText","newToken","step","getLoadMoreDetail","loadMoreDetail","filteringProperty","undefined","filteringOperator","inputLoadItemsHandlers","asyncProps","empty","loadingText","finishedText","errorText","recoveryText","statusType","asyncAutosuggestProps","length","Object","assign","handleSelected","event","detail","preventDefault","trim","firstPage","samePage","propertyStep","customValueKey","customFormValueRecord","setCustomFormValueRecord","customFormValue","setCustomFormValue","operatorForm","searchResultsId","constraintTextId","textboxAriaDescribedBy","ariaDescribedby","showResults","createElement","className","root","enteredTextLabel","ariaLabel","placeholder","ariaLabelledby","controlId","onOptionClick","customForm","content","filter","footer","onCancel","close","onSubmit","onCloseDropdown","hideEnteredTextOption","clearAriaLabel","results","id","constraint","size","direction","alignment","limit","items","limitShowFewerAriaLabel","limitShowMoreAriaLabel","renderItem","_","tokenIndex","onUpdateToken","releasedTokens","onUpdateOperation","onRemoveToken","limitShowFewer","tokenLimitShowFewer","limitShowMore","tokenLimitShowMore","after","action","formAction","onClick","clearFiltersText"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/property-filter/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { PropertyFilterOperator } from '@cloudscape-design/collection-hooks';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport TokenList from '../internal/components/token-list';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useListFocusController } from '../internal/hooks/use-list-focus-controller';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { SomeRequired } from '../internal/types';\nimport { joinStrings } from '../internal/utils/strings';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport { GeneratedAnalyticsMetadataPropertyFilterClearFilters } from './analytics-metadata/interfaces';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport { usePropertyFilterI18n } from './i18n-utils';\nimport {\n  ComparisonOperator,\n  ExtendedOperator,\n  FilteringProperty,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalFreeTextFiltering,\n  InternalQuery,\n  InternalToken,\n  InternalTokenGroup,\n  ParsedText,\n  PropertyFilterProps,\n  Ref,\n  Token,\n  TokenGroup,\n} from './interfaces';\nimport { PropertyEditorContent, PropertyEditorFooter } from './property-editor';\nimport PropertyFilterAutosuggest, { PropertyFilterAutosuggestProps } from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\n\nimport tokenListStyles from '../internal/components/token-list/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport type PropertyFilterInternalProps = SomeRequired<\n  PropertyFilterProps,\n  'filteringOptions' | 'customGroupsText' | 'enableTokenGroups' | 'disableFreeTextFiltering' | 'hideOperations'\n> &\n  InternalBaseComponentProps;\n\nconst PropertyFilterInternal = React.forwardRef(\n  (\n    {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions,\n      customGroupsText,\n      disableFreeTextFiltering,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel,\n      enableTokenGroups,\n      __internalRootRef,\n      ...rest\n    }: PropertyFilterInternalProps,\n    ref: React.Ref<Ref>\n  ) => {\n    const [nextFocusIndex, setNextFocusIndex] = useState<null | number>(null);\n    const tokenListRef = useListFocusController({\n      nextFocusIndex,\n      onFocusMoved: (target, targetType) => {\n        if (targetType === 'fallback') {\n          inputRef.current?.focus({ preventDropdown: true });\n        } else {\n          target.focus();\n        }\n        setNextFocusIndex(null);\n      },\n      listItemSelector: `.${tokenListStyles['list-item']}`,\n      showMoreSelector: `.${tokenListStyles.toggle}`,\n      fallbackSelector: `.${styles.input}`,\n    });\n\n    const mergedRef = useMergeRefs(tokenListRef, __internalRootRef);\n    const inputRef = useRef<AutosuggestInputRef>(null);\n    const baseProps = getBaseProps(rest);\n\n    const i18nStrings = usePropertyFilterI18n(rest.i18nStrings);\n\n    useImperativeHandle(ref, () => ({ focus: () => inputRef.current?.focus() }), []);\n    const [filteringText, setFilteringText] = useState<string>('');\n\n    const { internalProperties, internalOptions, internalQuery, internalFreeText } = (() => {\n      const propertyByKey = filteringProperties.reduce((acc, property) => {\n        const extendedOperators = (property?.operators ?? []).reduce(\n          (acc, operator) => (typeof operator === 'object' ? acc.set(operator.operator, operator) : acc),\n          new Map<PropertyFilterOperator, null | ExtendedOperator<any>>()\n        );\n        acc.set(property.key, {\n          propertyKey: property.key,\n          propertyLabel: property?.propertyLabel ?? '',\n          groupValuesLabel: property?.groupValuesLabel ?? '',\n          propertyGroup: property?.group,\n          operators: (property?.operators ?? []).map(op => (typeof op === 'string' ? op : op.operator)),\n          defaultOperator: property?.defaultOperator ?? '=',\n          getValueFormatter: operator => (operator ? extendedOperators.get(operator)?.format ?? null : null),\n          getValueFormRenderer: operator => (operator ? extendedOperators.get(operator)?.form ?? null : null),\n          externalProperty: property,\n        });\n        return acc;\n      }, new Map<string, InternalFilteringProperty>());\n      const getProperty = (propertyKey: string): null | InternalFilteringProperty =>\n        propertyByKey.get(propertyKey) ?? null;\n\n      const internalOptions: readonly InternalFilteringOption[] = filteringOptions.map(option => ({\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: option.label ?? option.value ?? '',\n      }));\n\n      function transformToken(\n        tokenOrGroup: Token | TokenGroup,\n        standaloneIndex?: number\n      ): InternalToken | InternalTokenGroup {\n        return 'operation' in tokenOrGroup\n          ? {\n              operation: tokenOrGroup.operation,\n              tokens: tokenOrGroup.tokens.map(token => transformToken(token)),\n            }\n          : {\n              standaloneIndex,\n              property: tokenOrGroup.propertyKey ? getProperty(tokenOrGroup.propertyKey) : null,\n              operator: tokenOrGroup.operator,\n              value: tokenOrGroup.value,\n            };\n      }\n\n      const internalQuery: InternalQuery = {\n        operation: query.operation,\n        tokens: (enableTokenGroups && query.tokenGroups ? query.tokenGroups : query.tokens).map(transformToken),\n      };\n\n      const internalFreeText: InternalFreeTextFiltering = {\n        disabled: disableFreeTextFiltering,\n        operators: freeTextFiltering?.operators ?? [':', '!:'],\n        defaultOperator: freeTextFiltering?.defaultOperator ?? ':',\n      };\n\n      return { internalProperties: [...propertyByKey.values()], internalOptions, internalQuery, internalFreeText };\n    })();\n\n    const { addToken, updateToken, updateOperation, removeToken, removeAllTokens } = getQueryActions({\n      query: internalQuery,\n      filteringOptions: internalOptions,\n      onChange,\n      enableTokenGroups,\n    });\n\n    const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n    const autosuggestOptions = getAutosuggestOptions(\n      parsedText,\n      internalProperties,\n      internalOptions,\n      customGroupsText,\n      i18nStrings\n    );\n\n    const createToken = (currentText: string) => {\n      const parsedText = parseText(currentText, internalProperties, internalFreeText);\n      let newToken: InternalToken;\n      switch (parsedText.step) {\n        case 'property': {\n          newToken = {\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'free-text': {\n          newToken = {\n            property: null,\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'operator': {\n          newToken = {\n            property: null,\n            operator: internalFreeText.defaultOperator,\n            value: currentText,\n          };\n          break;\n        }\n      }\n      if (internalFreeText.disabled && !newToken.property) {\n        return;\n      }\n      addToken(newToken);\n      setFilteringText('');\n    };\n    const getLoadMoreDetail = (parsedText: ParsedText, filteringText: string) => {\n      const loadMoreDetail: {\n        filteringProperty: FilteringProperty | undefined;\n        filteringText: string;\n        filteringOperator: ComparisonOperator | undefined;\n      } = {\n        filteringProperty: undefined,\n        filteringText,\n        filteringOperator: undefined,\n      };\n      if (parsedText.step === 'property') {\n        loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n        loadMoreDetail.filteringText = parsedText.value;\n        loadMoreDetail.filteringOperator = parsedText.operator;\n      }\n      return loadMoreDetail;\n    };\n    const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n    const inputLoadItemsHandlers = useLoadItems(\n      onLoadItems,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringProperty,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringOperator\n    );\n    const asyncProps = {\n      empty: filteringEmpty,\n      loadingText: filteringLoadingText,\n      finishedText: filteringFinishedText,\n      errorText: filteringErrorText,\n      recoveryText: filteringRecoveryText,\n      statusType: filteringStatusType,\n    };\n    const asyncAutosuggestProps =\n      !!filteringText.length || asyncProperties\n        ? {\n            ...inputLoadItemsHandlers,\n            ...asyncProps,\n          }\n        : {};\n    const handleSelected: PropertyFilterAutosuggestProps['onOptionClick'] = event => {\n      const { detail: option } = event;\n      const value = option.value || '';\n      if (!value) {\n        return;\n      }\n\n      if (!('keepOpenOnSelect' in option)) {\n        createToken(value);\n        return;\n      }\n\n      // stop dropdown from closing\n      event.preventDefault();\n\n      const parsedText = parseText(value, internalProperties, internalFreeText);\n      const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n\n      // Insert operator automatically if only one operator is defined for the given property.\n      if (parsedText.step === 'operator') {\n        const operators = getAllowedOperators(parsedText.property);\n        if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n          loadMoreDetail.filteringProperty = parsedText.property.externalProperty ?? undefined;\n          loadMoreDetail.filteringOperator = operators[0];\n          loadMoreDetail.filteringText = '';\n          setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n        }\n      }\n\n      fireNonCancelableEvent(onLoadItems, { ...loadMoreDetail, firstPage: true, samePage: false });\n    };\n\n    const propertyStep = parsedText.step === 'property' ? parsedText : null;\n    const customValueKey = propertyStep ? propertyStep.property.propertyKey + ':' + propertyStep.operator : '';\n    const [customFormValueRecord, setCustomFormValueRecord] = useState<Record<string, any>>({});\n    const customFormValue = customValueKey in customFormValueRecord ? customFormValueRecord[customValueKey] : null;\n    const setCustomFormValue = (value: null | any) => setCustomFormValueRecord({ [customValueKey]: value });\n    const operatorForm = propertyStep && propertyStep.property.getValueFormRenderer(propertyStep.operator);\n\n    const searchResultsId = useUniqueId('property-filter-search-results');\n    const constraintTextId = useUniqueId('property-filter-constraint');\n    const textboxAriaDescribedBy = filteringConstraintText\n      ? joinStrings(rest.ariaDescribedby, constraintTextId)\n      : rest.ariaDescribedby;\n\n    const showResults = !!internalQuery.tokens?.length && !disabled && !!countText;\n\n    return (\n      <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n        <div className={clsx(styles['search-field'], analyticsSelectors['search-field'])}>\n          {customControl && <div className={styles['custom-control']}>{customControl}</div>}\n          <div className={styles['input-wrapper']}>\n            <PropertyFilterAutosuggest\n              ref={inputRef}\n              virtualScroll={virtualScroll}\n              enteredTextLabel={i18nStrings.enteredTextLabel}\n              ariaLabel={filteringAriaLabel ?? i18nStrings.filteringAriaLabel}\n              placeholder={filteringPlaceholder ?? i18nStrings.filteringPlaceholder}\n              ariaLabelledby={rest.ariaLabelledby}\n              ariaDescribedby={textboxAriaDescribedBy}\n              controlId={rest.controlId}\n              value={filteringText}\n              disabled={disabled}\n              {...autosuggestOptions}\n              onChange={event => setFilteringText(event.detail.value)}\n              empty={filteringEmpty}\n              {...asyncAutosuggestProps}\n              expandToViewport={expandToViewport}\n              onOptionClick={handleSelected}\n              customForm={\n                operatorForm\n                  ? {\n                      content: (\n                        <PropertyEditorContent\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          operator={propertyStep.operator}\n                          filter={propertyStep.value}\n                          operatorForm={operatorForm}\n                          value={customFormValue}\n                          onChange={setCustomFormValue}\n                        />\n                      ),\n                      footer: (\n                        <PropertyEditorFooter\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          operator={propertyStep.operator}\n                          value={customFormValue}\n                          i18nStrings={i18nStrings}\n                          onCancel={() => {\n                            setFilteringText('');\n                            inputRef.current?.close();\n                            inputRef.current?.focus({ preventDropdown: true });\n                          }}\n                          onSubmit={token => {\n                            addToken(token);\n                            setFilteringText('');\n                            inputRef.current?.focus({ preventDropdown: true });\n                            inputRef.current?.close();\n                          }}\n                        />\n                      ),\n                    }\n                  : undefined\n              }\n              onCloseDropdown={() => setCustomFormValueRecord({})}\n              hideEnteredTextOption={internalFreeText.disabled && parsedText.step !== 'property'}\n              clearAriaLabel={i18nStrings.clearAriaLabel}\n              searchResultsId={showResults ? searchResultsId : undefined}\n            />\n            {showResults ? (\n              <div className={styles.results}>\n                <SearchResults id={searchResultsId}>{countText}</SearchResults>\n              </div>\n            ) : null}\n          </div>\n        </div>\n        {filteringConstraintText && (\n          <div id={constraintTextId} className={styles.constraint}>\n            {filteringConstraintText}\n          </div>\n        )}\n        {internalQuery.tokens && internalQuery.tokens.length > 0 && (\n          <div className={styles.tokens}>\n            <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n              <TokenList\n                alignment=\"inline\"\n                limit={tokenLimit}\n                items={internalQuery.tokens}\n                limitShowFewerAriaLabel={tokenLimitShowFewerAriaLabel}\n                limitShowMoreAriaLabel={tokenLimitShowMoreAriaLabel}\n                renderItem={(_, tokenIndex) => (\n                  <TokenButton\n                    query={internalQuery}\n                    tokenIndex={tokenIndex}\n                    onUpdateToken={(token, releasedTokens) => {\n                      updateToken(tokenIndex, token, releasedTokens);\n                    }}\n                    onUpdateOperation={updateOperation}\n                    onRemoveToken={() => {\n                      removeToken(tokenIndex);\n                      setNextFocusIndex(tokenIndex);\n                    }}\n                    filteringProperties={internalProperties}\n                    filteringOptions={internalOptions}\n                    asyncProps={asyncProps}\n                    onLoadItems={onLoadItems}\n                    i18nStrings={i18nStrings}\n                    asyncProperties={asyncProperties}\n                    hideOperations={hideOperations}\n                    customGroupsText={customGroupsText}\n                    freeTextFiltering={internalFreeText}\n                    disabled={disabled}\n                    expandToViewport={expandToViewport}\n                    enableTokenGroups={enableTokenGroups}\n                  />\n                )}\n                i18nStrings={{\n                  limitShowFewer: i18nStrings.tokenLimitShowFewer,\n                  limitShowMore: i18nStrings.tokenLimitShowMore,\n                }}\n                after={\n                  customFilterActions ? (\n                    <div className={styles['custom-filter-actions']}>{customFilterActions}</div>\n                  ) : (\n                    <span\n                      {...getAnalyticsMetadataAttribute({\n                        action: 'clearFilters',\n                      } as Partial<GeneratedAnalyticsMetadataPropertyFilterClearFilters>)}\n                    >\n                      <InternalButton\n                        formAction=\"none\"\n                        onClick={() => {\n                          removeAllTokens();\n                          inputRef.current?.focus({ preventDropdown: true });\n                        }}\n                        className={styles['remove-all']}\n                        disabled={disabled}\n                      >\n                        {i18nStrings.clearFiltersText}\n                      </InternalButton>\n                    </span>\n                  )\n                }\n              />\n            </InternalSpaceBetween>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default PropertyFilterInternal;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,mBAAmB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpE,OAAOC,IAAI,MAAM,MAAM;AAGvB,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,OAAOC,SAAS,MAAM,mCAAmC;AACzD,SAASC,sBAAsB,QAAQ,oBAAoB;AAE3D,SAASC,sBAAsB,QAAQ,6CAA6C;AACpF,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,WAAW,QAAQ,uCAAuC;AAEnE,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,+BAA+B;AAE7D,SAASC,mBAAmB,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,SAAS,QAAQ,cAAc;AACrG,SAASC,qBAAqB,QAAQ,cAAc;AAiBpD,SAASC,qBAAqB,EAAEC,oBAAoB,QAAQ,mBAAmB;AAC/E,OAAOC,yBAA6D,MAAM,+BAA+B;AACzG,SAASC,WAAW,QAAQ,SAAS;AACrC,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,OAAOC,eAAe,MAAM,iDAAiD;AAC7E,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,OAAOC,MAAM,MAAM,iBAAiB;AAQpC,MAAMC,sBAAsB,GAAG7B,KAAK,CAAC8B,UAAU,CAC7C,CACEC,EAgC8B,EAC9BC,GAAmB,KACjB;;MAlCF;MACEC,QAAQ;MACRC,SAAS;MACTC,KAAK;MACLC,cAAc;MACdC,QAAQ;MACRC,mBAAmB;MACnBC,gBAAgB;MAChBC,gBAAgB;MAChBC,wBAAwB;MACxBC,iBAAiB;MACjBC,WAAW;MACXC,aAAa;MACbC,aAAa;MACbC,mBAAmB;MACnBC,oBAAoB;MACpBC,kBAAkB;MAClBC,cAAc;MACdC,oBAAoB;MACpBC,qBAAqB;MACrBC,kBAAkB;MAClBC,qBAAqB;MACrBC,uBAAuB;MACvBC,mBAAmB;MACnBC,eAAe;MACfC,UAAU;MACVC,gBAAgB;MAChBC,4BAA4B;MAC5BC,2BAA2B;MAC3BC,iBAAiB;MACjBC;IAAiB,IAAA/B,EAEW;IADzBgC,IAAI,GAAAC,MAAA,CAAAjC,EAAA,EA/BT,wmBAgCC,CADQ;EAIT,MAAM,CAACkC,cAAc,EAAEC,iBAAiB,CAAC,GAAG/D,QAAQ,CAAgB,IAAI,CAAC;EACzE,MAAMgE,YAAY,GAAGzD,sBAAsB,CAAC;IAC1CuD,cAAc;IACdG,YAAY,EAAEA,CAACC,MAAM,EAAEC,UAAU,KAAI;;MACnC,IAAIA,UAAU,KAAK,UAAU,EAAE;QAC7B,CAAAvC,EAAA,GAAAwC,QAAQ,CAACC,OAAO,cAAAzC,EAAA,uBAAAA,EAAA,CAAE0C,KAAK,CAAC;UAAEC,eAAe,EAAE;QAAI,CAAE,CAAC;OACnD,MAAM;QACLL,MAAM,CAACI,KAAK,EAAE;;MAEhBP,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC;IACDS,gBAAgB,EAAE,IAAIjD,eAAe,CAAC,WAAW,CAAC,EAAE;IACpDkD,gBAAgB,EAAE,IAAIlD,eAAe,CAACmD,MAAM,EAAE;IAC9CC,gBAAgB,EAAE,IAAIlD,MAAM,CAACmD,KAAK;GACnC,CAAC;EAEF,MAAMC,SAAS,GAAGrE,YAAY,CAACwD,YAAY,EAAEL,iBAAiB,CAAC;EAC/D,MAAMS,QAAQ,GAAGrE,MAAM,CAAsB,IAAI,CAAC;EAClD,MAAM+E,SAAS,GAAG1E,YAAY,CAACwD,IAAI,CAAC;EAEpC,MAAMmB,WAAW,GAAG9D,qBAAqB,CAAC2C,IAAI,CAACmB,WAAW,CAAC;EAE3DjF,mBAAmB,CAAC+B,GAAG,EAAE,OAAO;IAAEyC,KAAK,EAAEA,CAAA,KAAK;MAAA,IAAA1C,EAAA;MAAC,QAAAA,EAAA,GAAAwC,QAAQ,CAACC,OAAO,cAAAzC,EAAA,uBAAAA,EAAA,CAAE0C,KAAK,EAAE;IAAA;EAAA,CAAE,CAAC,EAAE,EAAE,CAAC;EAChF,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGjF,QAAQ,CAAS,EAAE,CAAC;EAE9D,MAAM;IAAEkF,kBAAkB;IAAEC,eAAe;IAAEC,aAAa;IAAEC;EAAgB,CAAE,GAAG,CAAC,MAAK;;IACrF,MAAMC,aAAa,GAAGnD,mBAAmB,CAACoD,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAI;;MACjE,MAAMC,iBAAiB,GAAG,CAAC,CAAA9D,EAAA,GAAA6D,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,SAAS,cAAA/D,EAAA,cAAAA,EAAA,GAAI,EAAE,EAAE2D,MAAM,CAC1D,CAACC,GAAG,EAAEI,QAAQ,KAAM,OAAOA,QAAQ,KAAK,QAAQ,GAAGJ,GAAG,CAACK,GAAG,CAACD,QAAQ,CAACA,QAAQ,EAAEA,QAAQ,CAAC,GAAGJ,GAAI,EAC9F,IAAIM,GAAG,EAAwD,CAChE;MACDN,GAAG,CAACK,GAAG,CAACJ,QAAQ,CAACM,GAAG,EAAE;QACpBC,WAAW,EAAEP,QAAQ,CAACM,GAAG;QACzBE,aAAa,EAAE,CAAAC,EAAA,GAAAT,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEQ,aAAa,cAAAC,EAAA,cAAAA,EAAA,GAAI,EAAE;QAC5CC,gBAAgB,EAAE,CAAAC,EAAA,GAAAX,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,gBAAgB,cAAAC,EAAA,cAAAA,EAAA,GAAI,EAAE;QAClDC,aAAa,EAAEZ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEa,KAAK;QAC9BX,SAAS,EAAE,CAAC,CAAAY,EAAA,GAAAd,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,SAAS,cAAAY,EAAA,cAAAA,EAAA,GAAI,EAAE,EAAEC,GAAG,CAACC,EAAE,IAAK,OAAOA,EAAE,KAAK,QAAQ,GAAGA,EAAE,GAAGA,EAAE,CAACb,QAAS,CAAC;QAC7Fc,eAAe,EAAE,CAAAC,EAAA,GAAAlB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEiB,eAAe,cAAAC,EAAA,cAAAA,EAAA,GAAI,GAAG;QACjDC,iBAAiB,EAAEhB,QAAQ,IAAG;UAAA,IAAAhE,EAAA,EAAAsE,EAAA;UAAC,OAACN,QAAQ,GAAG,CAAAM,EAAA,IAAAtE,EAAA,GAAA8D,iBAAiB,CAACmB,GAAG,CAACjB,QAAQ,CAAC,cAAAhE,EAAA,uBAAAA,EAAA,CAAEkF,MAAM,cAAAZ,EAAA,cAAAA,EAAA,GAAI,IAAI,GAAG,IAAI;QAAC;QAClGa,oBAAoB,EAAEnB,QAAQ,IAAG;UAAA,IAAAhE,EAAA,EAAAsE,EAAA;UAAC,OAACN,QAAQ,GAAG,CAAAM,EAAA,IAAAtE,EAAA,GAAA8D,iBAAiB,CAACmB,GAAG,CAACjB,QAAQ,CAAC,cAAAhE,EAAA,uBAAAA,EAAA,CAAEoF,IAAI,cAAAd,EAAA,cAAAA,EAAA,GAAI,IAAI,GAAG,IAAI;QAAC;QACnGe,gBAAgB,EAAExB;OACnB,CAAC;MACF,OAAOD,GAAG;IACZ,CAAC,EAAE,IAAIM,GAAG,EAAqC,CAAC;IAChD,MAAMoB,WAAW,GAAIlB,WAAmB,IAAsC;MAAA,IAAApE,EAAA;MAC5E,QAAAA,EAAA,GAAA0D,aAAa,CAACuB,GAAG,CAACb,WAAW,CAAC,cAAApE,EAAA,cAAAA,EAAA,GAAI,IAAI;IAAA;IAExC,MAAMuD,eAAe,GAAuC/C,gBAAgB,CAACoE,GAAG,CAACW,MAAM,IAAG;;MAAC,OAAC;QAC1F1B,QAAQ,EAAEyB,WAAW,CAACC,MAAM,CAACnB,WAAW,CAAC;QACzCoB,KAAK,EAAED,MAAM,CAACC,KAAK;QACnBC,KAAK,EAAE,CAAAnB,EAAA,IAAAtE,EAAA,GAAAuF,MAAM,CAACE,KAAK,cAAAzF,EAAA,cAAAA,EAAA,GAAIuF,MAAM,CAACC,KAAK,cAAAlB,EAAA,cAAAA,EAAA,GAAI;OACxC;KAAC,CAAC;IAEH,SAASoB,cAAcA,CACrBC,YAAgC,EAChCC,eAAwB;MAExB,OAAO,WAAW,IAAID,YAAY,GAC9B;QACEE,SAAS,EAAEF,YAAY,CAACE,SAAS;QACjCC,MAAM,EAAEH,YAAY,CAACG,MAAM,CAAClB,GAAG,CAACmB,KAAK,IAAIL,cAAc,CAACK,KAAK,CAAC;OAC/D,GACD;QACEH,eAAe;QACf/B,QAAQ,EAAE8B,YAAY,CAACvB,WAAW,GAAGkB,WAAW,CAACK,YAAY,CAACvB,WAAW,CAAC,GAAG,IAAI;QACjFJ,QAAQ,EAAE2B,YAAY,CAAC3B,QAAQ;QAC/BwB,KAAK,EAAEG,YAAY,CAACH;OACrB;IACP;IAEA,MAAMhC,aAAa,GAAkB;MACnCqC,SAAS,EAAEzF,KAAK,CAACyF,SAAS;MAC1BC,MAAM,EAAE,CAAChE,iBAAiB,IAAI1B,KAAK,CAAC4F,WAAW,GAAG5F,KAAK,CAAC4F,WAAW,GAAG5F,KAAK,CAAC0F,MAAM,EAAElB,GAAG,CAACc,cAAc;KACvG;IAED,MAAMjC,gBAAgB,GAA8B;MAClDvD,QAAQ,EAAEQ,wBAAwB;MAClCqD,SAAS,EAAE,CAAA/D,EAAA,GAAAW,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEoD,SAAS,cAAA/D,EAAA,cAAAA,EAAA,GAAI,CAAC,GAAG,EAAE,IAAI,CAAC;MACtD8E,eAAe,EAAE,CAAAR,EAAA,GAAA3D,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEmE,eAAe,cAAAR,EAAA,cAAAA,EAAA,GAAI;KACxD;IAED,OAAO;MAAEhB,kBAAkB,EAAE,CAAC,GAAGI,aAAa,CAACuC,MAAM,EAAE,CAAC;MAAE1C,eAAe;MAAEC,aAAa;MAAEC;IAAgB,CAAE;EAC9G,CAAC,EAAC,CAAE;EAEJ,MAAM;IAAEyC,QAAQ;IAAEC,WAAW;IAAEC,eAAe;IAAEC,WAAW;IAAEC;EAAe,CAAE,GAAGnH,eAAe,CAAC;IAC/FiB,KAAK,EAAEoD,aAAa;IACpBhD,gBAAgB,EAAE+C,eAAe;IACjCjD,QAAQ;IACRwB;GACD,CAAC;EAEF,MAAMyE,UAAU,GAAGnH,SAAS,CAACgE,aAAa,EAAEE,kBAAkB,EAAEG,gBAAgB,CAAC;EACjF,MAAM+C,kBAAkB,GAAGtH,qBAAqB,CAC9CqH,UAAU,EACVjD,kBAAkB,EAClBC,eAAe,EACf9C,gBAAgB,EAChB0C,WAAW,CACZ;EAED,MAAMsD,WAAW,GAAIC,WAAmB,IAAI;IAC1C,MAAMH,UAAU,GAAGnH,SAAS,CAACsH,WAAW,EAAEpD,kBAAkB,EAAEG,gBAAgB,CAAC;IAC/E,IAAIkD,QAAuB;IAC3B,QAAQJ,UAAU,CAACK,IAAI;MACrB,KAAK,UAAU;QAAE;UACfD,QAAQ,GAAG;YACT9C,QAAQ,EAAE0C,UAAU,CAAC1C,QAAQ;YAC7BG,QAAQ,EAAEuC,UAAU,CAACvC,QAAQ;YAC7BwB,KAAK,EAAEe,UAAU,CAACf;WACnB;UACD;;MAEF,KAAK,WAAW;QAAE;UAChBmB,QAAQ,GAAG;YACT9C,QAAQ,EAAE,IAAI;YACdG,QAAQ,EAAEuC,UAAU,CAACvC,QAAQ,IAAIP,gBAAgB,CAACqB,eAAe;YACjEU,KAAK,EAAEe,UAAU,CAACf;WACnB;UACD;;MAEF,KAAK,UAAU;QAAE;UACfmB,QAAQ,GAAG;YACT9C,QAAQ,EAAE,IAAI;YACdG,QAAQ,EAAEP,gBAAgB,CAACqB,eAAe;YAC1CU,KAAK,EAAEkB;WACR;UACD;;;IAGJ,IAAIjD,gBAAgB,CAACvD,QAAQ,IAAI,CAACyG,QAAQ,CAAC9C,QAAQ,EAAE;MACnD;;IAEFqC,QAAQ,CAACS,QAAQ,CAAC;IAClBtD,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EACD,MAAMwD,iBAAiB,GAAGA,CAACN,UAAsB,EAAEnD,aAAqB,KAAI;IAC1E,MAAM0D,cAAc,GAIhB;MACFC,iBAAiB,EAAEC,SAAS;MAC5B5D,aAAa;MACb6D,iBAAiB,EAAED;KACpB;IACD,IAAIT,UAAU,CAACK,IAAI,KAAK,UAAU,EAAE;MAClCE,cAAc,CAACC,iBAAiB,GAAGR,UAAU,CAAC1C,QAAQ,CAACwB,gBAAgB;MACvEyB,cAAc,CAAC1D,aAAa,GAAGmD,UAAU,CAACf,KAAK;MAC/CsB,cAAc,CAACG,iBAAiB,GAAGV,UAAU,CAACvC,QAAQ;;IAExD,OAAO8C,cAAc;EACvB,CAAC;EACD,MAAMA,cAAc,GAAGD,iBAAiB,CAACN,UAAU,EAAEnD,aAAa,CAAC;EACnE,MAAM8D,sBAAsB,GAAGxH,YAAY,CACzCkB,WAAW,EACXkG,cAAc,CAAC1D,aAAa,EAC5B0D,cAAc,CAACC,iBAAiB,EAChCD,cAAc,CAAC1D,aAAa,EAC5B0D,cAAc,CAACG,iBAAiB,CACjC;EACD,MAAME,UAAU,GAAG;IACjBC,KAAK,EAAElG,cAAc;IACrBmG,WAAW,EAAElG,oBAAoB;IACjCmG,YAAY,EAAElG,qBAAqB;IACnCmG,SAAS,EAAElG,kBAAkB;IAC7BmG,YAAY,EAAElG,qBAAqB;IACnCmG,UAAU,EAAEjG;GACb;EACD,MAAMkG,qBAAqB,GACzB,CAAC,CAACtE,aAAa,CAACuE,MAAM,IAAIlG,eAAe,GACtCmG,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACMX,sBAAsB,GACtBC,UAAU,IAEf,EAAE;EACR,MAAMW,cAAc,GAAoDC,KAAK,IAAG;;IAC9E,MAAM;MAAEC,MAAM,EAAEzC;IAAM,CAAE,GAAGwC,KAAK;IAChC,MAAMvC,KAAK,GAAGD,MAAM,CAACC,KAAK,IAAI,EAAE;IAChC,IAAI,CAACA,KAAK,EAAE;MACV;;IAGF,IAAI,EAAE,kBAAkB,IAAID,MAAM,CAAC,EAAE;MACnCkB,WAAW,CAACjB,KAAK,CAAC;MAClB;;IAGF;IACAuC,KAAK,CAACE,cAAc,EAAE;IAEtB,MAAM1B,UAAU,GAAGnH,SAAS,CAACoG,KAAK,EAAElC,kBAAkB,EAAEG,gBAAgB,CAAC;IACzE,MAAMqD,cAAc,GAAGD,iBAAiB,CAACN,UAAU,EAAEf,KAAK,CAAC;IAE3D;IACA,IAAIe,UAAU,CAACK,IAAI,KAAK,UAAU,EAAE;MAClC,MAAM7C,SAAS,GAAG9E,mBAAmB,CAACsH,UAAU,CAAC1C,QAAQ,CAAC;MAC1D,IAAI2B,KAAK,CAAC0C,IAAI,EAAE,KAAK3B,UAAU,CAAC1C,QAAQ,CAACQ,aAAa,IAAIN,SAAS,CAAC4D,MAAM,KAAK,CAAC,EAAE;QAChFb,cAAc,CAACC,iBAAiB,GAAG,CAAA/G,EAAA,GAAAuG,UAAU,CAAC1C,QAAQ,CAACwB,gBAAgB,cAAArF,EAAA,cAAAA,EAAA,GAAIgH,SAAS;QACpFF,cAAc,CAACG,iBAAiB,GAAGlD,SAAS,CAAC,CAAC,CAAC;QAC/C+C,cAAc,CAAC1D,aAAa,GAAG,EAAE;QACjCC,gBAAgB,CAACkD,UAAU,CAAC1C,QAAQ,CAACQ,aAAa,GAAG,GAAG,GAAGN,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;;;IAIlFrF,sBAAsB,CAACkC,WAAW,EAAAgH,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOf,cAAc;MAAEqB,SAAS,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,GAAG;EAC9F,CAAC;EAED,MAAMC,YAAY,GAAG9B,UAAU,CAACK,IAAI,KAAK,UAAU,GAAGL,UAAU,GAAG,IAAI;EACvE,MAAM+B,cAAc,GAAGD,YAAY,GAAGA,YAAY,CAACxE,QAAQ,CAACO,WAAW,GAAG,GAAG,GAAGiE,YAAY,CAACrE,QAAQ,GAAG,EAAE;EAC1G,MAAM,CAACuE,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGpK,QAAQ,CAAsB,EAAE,CAAC;EAC3F,MAAMqK,eAAe,GAAGH,cAAc,IAAIC,qBAAqB,GAAGA,qBAAqB,CAACD,cAAc,CAAC,GAAG,IAAI;EAC9G,MAAMI,kBAAkB,GAAIlD,KAAiB,IAAKgD,wBAAwB,CAAC;IAAE,CAACF,cAAc,GAAG9C;EAAK,CAAE,CAAC;EACvG,MAAMmD,YAAY,GAAGN,YAAY,IAAIA,YAAY,CAACxE,QAAQ,CAACsB,oBAAoB,CAACkD,YAAY,CAACrE,QAAQ,CAAC;EAEtG,MAAM4E,eAAe,GAAG/J,WAAW,CAAC,gCAAgC,CAAC;EACrE,MAAMgK,gBAAgB,GAAGhK,WAAW,CAAC,4BAA4B,CAAC;EAClE,MAAMiK,sBAAsB,GAAGvH,uBAAuB,GAClDzC,WAAW,CAACkD,IAAI,CAAC+G,eAAe,EAAEF,gBAAgB,CAAC,GACnD7G,IAAI,CAAC+G,eAAe;EAExB,MAAMC,WAAW,GAAG,CAAC,EAAC,CAAA1E,EAAA,GAAAd,aAAa,CAACsC,MAAM,cAAAxB,EAAA,uBAAAA,EAAA,CAAEqD,MAAM,KAAI,CAACzH,QAAQ,IAAI,CAAC,CAACC,SAAS;EAE9E,OACElC,KAAA,CAAAgL,aAAA,QAAArB,MAAA,CAAAC,MAAA,KAAS3E,SAAS;IAAEgG,SAAS,EAAE7K,IAAI,CAAC6E,SAAS,CAACgG,SAAS,EAAErJ,MAAM,CAACsJ,IAAI,CAAC;IAAElJ,GAAG,EAAEgD;EAAS,IACnFhF,KAAA,CAAAgL,aAAA;IAAKC,SAAS,EAAE7K,IAAI,CAACwB,MAAM,CAAC,cAAc,CAAC,EAAED,kBAAkB,CAAC,cAAc,CAAC;EAAC,GAC7EkB,aAAa,IAAI7C,KAAA,CAAAgL,aAAA;IAAKC,SAAS,EAAErJ,MAAM,CAAC,gBAAgB;EAAC,GAAGiB,aAAa,CAAO,EACjF7C,KAAA,CAAAgL,aAAA;IAAKC,SAAS,EAAErJ,MAAM,CAAC,eAAe;EAAC,GACrC5B,KAAA,CAAAgL,aAAA,CAACzJ,yBAAyB,EAAAoI,MAAA,CAAAC,MAAA;IACxB5H,GAAG,EAAEuC,QAAQ;IACb3B,aAAa,EAAEA,aAAa;IAC5BuI,gBAAgB,EAAEjG,WAAW,CAACiG,gBAAgB;IAC9CC,SAAS,EAAEpI,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GAAIkC,WAAW,CAAClC,kBAAkB;IAC/DqI,WAAW,EAAEtI,oBAAoB,aAApBA,oBAAoB,cAApBA,oBAAoB,GAAImC,WAAW,CAACnC,oBAAoB;IACrEuI,cAAc,EAAEvH,IAAI,CAACuH,cAAc;IACnCR,eAAe,EAAED,sBAAsB;IACvCU,SAAS,EAAExH,IAAI,CAACwH,SAAS;IACzBhE,KAAK,EAAEpC,aAAa;IACpBlD,QAAQ,EAAEA;EAAQ,GACdsG,kBAAkB;IACtBlG,QAAQ,EAAEyH,KAAK,IAAI1E,gBAAgB,CAAC0E,KAAK,CAACC,MAAM,CAACxC,KAAK,CAAC;IACvD4B,KAAK,EAAElG;EAAc,GACjBwG,qBAAqB;IACzB/F,gBAAgB,EAAEA,gBAAgB;IAClC8H,aAAa,EAAE3B,cAAc;IAC7B4B,UAAU,EACRf,YAAY,GACR;MACEgB,OAAO,EACL1L,KAAA,CAAAgL,aAAA,CAAC3J,qBAAqB;QACpB6E,GAAG,EAAEmE,cAAc;QACnBzE,QAAQ,EAAEwE,YAAY,CAACxE,QAAQ;QAC/BG,QAAQ,EAAEqE,YAAY,CAACrE,QAAQ;QAC/B4F,MAAM,EAAEvB,YAAY,CAAC7C,KAAK;QAC1BmD,YAAY,EAAEA,YAAY;QAC1BnD,KAAK,EAAEiD,eAAe;QACtBnI,QAAQ,EAAEoI;MAAkB,EAE/B;MACDmB,MAAM,EACJ5L,KAAA,CAAAgL,aAAA,CAAC1J,oBAAoB;QACnB4E,GAAG,EAAEmE,cAAc;QACnBzE,QAAQ,EAAEwE,YAAY,CAACxE,QAAQ;QAC/BG,QAAQ,EAAEqE,YAAY,CAACrE,QAAQ;QAC/BwB,KAAK,EAAEiD,eAAe;QACtBtF,WAAW,EAAEA,WAAW;QACxB2G,QAAQ,EAAEA,CAAA,KAAK;;UACbzG,gBAAgB,CAAC,EAAE,CAAC;UACpB,CAAArD,EAAA,GAAAwC,QAAQ,CAACC,OAAO,cAAAzC,EAAA,uBAAAA,EAAA,CAAE+J,KAAK,EAAE;UACzB,CAAAzF,EAAA,GAAA9B,QAAQ,CAACC,OAAO,cAAA6B,EAAA,uBAAAA,EAAA,CAAE5B,KAAK,CAAC;YAAEC,eAAe,EAAE;UAAI,CAAE,CAAC;QACpD,CAAC;QACDqH,QAAQ,EAAEjE,KAAK,IAAG;;UAChBG,QAAQ,CAACH,KAAK,CAAC;UACf1C,gBAAgB,CAAC,EAAE,CAAC;UACpB,CAAArD,EAAA,GAAAwC,QAAQ,CAACC,OAAO,cAAAzC,EAAA,uBAAAA,EAAA,CAAE0C,KAAK,CAAC;YAAEC,eAAe,EAAE;UAAI,CAAE,CAAC;UAClD,CAAA2B,EAAA,GAAA9B,QAAQ,CAACC,OAAO,cAAA6B,EAAA,uBAAAA,EAAA,CAAEyF,KAAK,EAAE;QAC3B;MAAC;KAGN,GACD/C,SAAS;IAEfiD,eAAe,EAAEA,CAAA,KAAMzB,wBAAwB,CAAC,EAAE,CAAC;IACnD0B,qBAAqB,EAAEzG,gBAAgB,CAACvD,QAAQ,IAAIqG,UAAU,CAACK,IAAI,KAAK,UAAU;IAClFuD,cAAc,EAAEhH,WAAW,CAACgH,cAAc;IAC1CvB,eAAe,EAAEI,WAAW,GAAGJ,eAAe,GAAG5B;EAAS,GAC1D,EACDgC,WAAW,GACV/K,KAAA,CAAAgL,aAAA;IAAKC,SAAS,EAAErJ,MAAM,CAACuK;EAAO,GAC5BnM,KAAA,CAAAgL,aAAA,CAACjK,aAAa;IAACqL,EAAE,EAAEzB;EAAe,GAAGzI,SAAS,CAAiB,CAC3D,GACJ,IAAI,CACJ,CACF,EACLoB,uBAAuB,IACtBtD,KAAA,CAAAgL,aAAA;IAAKoB,EAAE,EAAExB,gBAAgB;IAAEK,SAAS,EAAErJ,MAAM,CAACyK;EAAU,GACpD/I,uBAAuB,CAE3B,EACAiC,aAAa,CAACsC,MAAM,IAAItC,aAAa,CAACsC,MAAM,CAAC6B,MAAM,GAAG,CAAC,IACtD1J,KAAA,CAAAgL,aAAA;IAAKC,SAAS,EAAErJ,MAAM,CAACiG;EAAM,GAC3B7H,KAAA,CAAAgL,aAAA,CAAClK,oBAAoB;IAACwL,IAAI,EAAC,IAAI;IAACC,SAAS,EAAC;EAAY,GACpDvM,KAAA,CAAAgL,aAAA,CAACxK,SAAS;IACRgM,SAAS,EAAC,QAAQ;IAClBC,KAAK,EAAEhJ,UAAU;IACjBiJ,KAAK,EAAEnH,aAAa,CAACsC,MAAM;IAC3B8E,uBAAuB,EAAEhJ,4BAA4B;IACrDiJ,sBAAsB,EAAEhJ,2BAA2B;IACnDiJ,UAAU,EAAEA,CAACC,CAAC,EAAEC,UAAU,KACxB/M,KAAA,CAAAgL,aAAA,CAACxJ,WAAW;MACVW,KAAK,EAAEoD,aAAa;MACpBwH,UAAU,EAAEA,UAAU;MACtBC,aAAa,EAAEA,CAAClF,KAAK,EAAEmF,cAAc,KAAI;QACvC/E,WAAW,CAAC6E,UAAU,EAAEjF,KAAK,EAAEmF,cAAc,CAAC;MAChD,CAAC;MACDC,iBAAiB,EAAE/E,eAAe;MAClCgF,aAAa,EAAEA,CAAA,KAAK;QAClB/E,WAAW,CAAC2E,UAAU,CAAC;QACvB7I,iBAAiB,CAAC6I,UAAU,CAAC;MAC/B,CAAC;MACDzK,mBAAmB,EAAE+C,kBAAkB;MACvC9C,gBAAgB,EAAE+C,eAAe;MACjC4D,UAAU,EAAEA,UAAU;MACtBvG,WAAW,EAAEA,WAAW;MACxBuC,WAAW,EAAEA,WAAW;MACxB1B,eAAe,EAAEA,eAAe;MAChCpB,cAAc,EAAEA,cAAc;MAC9BI,gBAAgB,EAAEA,gBAAgB;MAClCE,iBAAiB,EAAE8C,gBAAgB;MACnCvD,QAAQ,EAAEA,QAAQ;MAClByB,gBAAgB,EAAEA,gBAAgB;MAClCG,iBAAiB,EAAEA;IAAiB,EAEvC;IACDqB,WAAW,EAAE;MACXkI,cAAc,EAAElI,WAAW,CAACmI,mBAAmB;MAC/CC,aAAa,EAAEpI,WAAW,CAACqI;KAC5B;IACDC,KAAK,EACH1K,mBAAmB,GACjB9C,KAAA,CAAAgL,aAAA;MAAKC,SAAS,EAAErJ,MAAM,CAAC,uBAAuB;IAAC,GAAGkB,mBAAmB,CAAO,GAE5E9C,KAAA,CAAAgL,aAAA,SAAArB,MAAA,CAAAC,MAAA,KACMvJ,6BAA6B,CAAC;MAChCoN,MAAM,EAAE;KACwD,CAAC,GAEnEzN,KAAA,CAAAgL,aAAA,CAAC1K,cAAc;MACboN,UAAU,EAAC,MAAM;MACjBC,OAAO,EAAEA,CAAA,KAAK;;QACZtF,eAAe,EAAE;QACjB,CAAAtG,EAAA,GAAAwC,QAAQ,CAACC,OAAO,cAAAzC,EAAA,uBAAAA,EAAA,CAAE0C,KAAK,CAAC;UAAEC,eAAe,EAAE;QAAI,CAAE,CAAC;MACpD,CAAC;MACDuG,SAAS,EAAErJ,MAAM,CAAC,YAAY,CAAC;MAC/BK,QAAQ,EAAEA;IAAQ,GAEjBiD,WAAW,CAAC0I,gBAAgB,CACd;EAEpB,EAEH,CACmB,CAE1B,CACG;AAEV,CAAC,CACF;AAED,eAAe/L,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}