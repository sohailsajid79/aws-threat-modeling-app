{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalIcon from '../../icon/internal';\nimport Dropdown from '../../internal/components/dropdown';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport ItemsList from '../items-list';\nimport Tooltip from '../tooltip.js';\nimport { getMenuItemProps } from '../utils/menu-item';\nimport styles from './styles.css.js';\nconst ExpandableCategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  lastInDropdown,\n  highlightItem,\n  disabled,\n  expandToViewport,\n  variant,\n  position\n}) => {\n  const highlighted = isHighlighted(item);\n  const expanded = isExpanded(item);\n  const isKeyboardHighlighted = isKeyboardHighlight(item);\n  const triggerRef = React.useRef(null);\n  const ref = useRef(null);\n  useEffect(() => {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n  const onClick = event => {\n    var _a;\n    if (!disabled) {\n      event.preventDefault();\n      onGroupToggle(item, event);\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  const onHover = () => {\n    highlightItem(item);\n  };\n  const isDisabledWithReason = !!item.disabledReason && item.disabled;\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(item.disabledReason);\n  const trigger = item.text && React.createElement(\"span\", Object.assign({\n    className: clsx(styles.header, styles['expandable-header'], styles[`variant-${variant}`], {\n      [styles.disabled]: disabled,\n      [styles.highlighted]: highlighted,\n      [styles['is-focused']]: isKeyboardHighlighted\n    }),\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ref: triggerRef\n  }, getMenuItemProps({\n    parent: true,\n    expanded,\n    disabled\n  }), isDisabledWithReason ? targetProps : {}, getAnalyticsMetadataAttribute(disabled ? {} : {\n    action: 'expand',\n    detail: {\n      position: position || '0',\n      label: {\n        root: 'self'\n      },\n      id: item.id || '',\n      expanded: `${!expanded}`\n    }\n  })), item.text, React.createElement(\"span\", {\n    className: clsx(styles['expand-icon'], styles['expand-icon-right'])\n  }, React.createElement(InternalIcon, {\n    name: \"caret-down-filled\"\n  })));\n  let content;\n  // If the category element is disabled, we do not render a dropdown.\n  // Screenreaders are confused by additional sections\n  if (isDisabledWithReason) {\n    content = React.createElement(Tooltip, {\n      content: item.disabledReason\n    }, trigger, descriptionEl);\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = React.createElement(Dropdown, {\n      open: expanded,\n      stretchWidth: false,\n      interior: true,\n      expandToViewport: expandToViewport,\n      trigger: trigger\n    }, item.items && expanded && React.createElement(\"ul\", {\n      role: \"menu\",\n      \"aria-label\": item.text,\n      className: clsx(styles['items-list-container'], styles['in-dropdown'])\n    }, React.createElement(ItemsList, {\n      items: item.items,\n      onItemActivate: onItemActivate,\n      onGroupToggle: onGroupToggle,\n      targetItem: targetItem,\n      isHighlighted: isHighlighted,\n      isKeyboardHighlight: isKeyboardHighlight,\n      isExpanded: isExpanded,\n      lastInDropdown: lastInDropdown,\n      highlightItem: highlightItem,\n      variant: variant,\n      position: position\n    })));\n  }\n  return React.createElement(\"li\", {\n    className: clsx(styles.category, styles[`variant-${variant}`], styles.expandable, {\n      [styles.expanded]: expanded,\n      [styles.disabled]: disabled,\n      [styles.highlighted]: highlighted\n    }),\n    role: \"presentation\",\n    \"data-testid\": item.id,\n    ref: ref,\n    onClick: onClick,\n    onMouseEnter: onHover,\n    onTouchStart: onHover\n  }, content);\n};\nexport default ExpandableCategoryElement;","map":{"version":3,"names":["React","useEffect","useRef","clsx","getAnalyticsMetadataAttribute","InternalIcon","Dropdown","useHiddenDescription","ItemsList","Tooltip","getMenuItemProps","styles","ExpandableCategoryElement","item","onItemActivate","onGroupToggle","targetItem","isHighlighted","isKeyboardHighlight","isExpanded","lastInDropdown","highlightItem","disabled","expandToViewport","variant","position","highlighted","expanded","isKeyboardHighlighted","triggerRef","ref","current","focus","onClick","event","preventDefault","_a","onHover","isDisabledWithReason","disabledReason","targetProps","descriptionEl","trigger","text","createElement","Object","assign","className","header","tabIndex","parent","action","detail","label","root","id","name","content","open","stretchWidth","interior","items","role","category","expandable","onMouseEnter","onTouchStart"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/button-dropdown/category-elements/expandable-category-element.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalIcon from '../../icon/internal';\nimport Dropdown from '../../internal/components/dropdown';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { GeneratedAnalyticsMetadataButtonDropdownExpand } from '../analytics-metadata/interfaces.js';\nimport { CategoryProps } from '../interfaces';\nimport ItemsList from '../items-list';\nimport Tooltip from '../tooltip.js';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nimport styles from './styles.css.js';\n\nconst ExpandableCategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  lastInDropdown,\n  highlightItem,\n  disabled,\n  expandToViewport,\n  variant,\n  position,\n}: CategoryProps) => {\n  const highlighted = isHighlighted(item);\n  const expanded = isExpanded(item);\n  const isKeyboardHighlighted = isKeyboardHighlight(item);\n  const triggerRef = React.useRef<HTMLSpanElement>(null);\n  const ref = useRef<HTMLLIElement>(null);\n\n  useEffect(() => {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n\n  const onClick: React.MouseEventHandler = event => {\n    if (!disabled) {\n      event.preventDefault();\n      onGroupToggle(item, event);\n      triggerRef.current?.focus();\n    }\n  };\n\n  const onHover = () => {\n    highlightItem(item);\n  };\n\n  const isDisabledWithReason = !!item.disabledReason && item.disabled;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const trigger = item.text && (\n    <span\n      className={clsx(styles.header, styles['expandable-header'], styles[`variant-${variant}`], {\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      // We are using the roving tabindex technique to manage the focus state of the dropdown.\n      // The current element will always have tabindex=0 which means that it can be tabbed to,\n      // while all other items have tabindex=-1 so we can focus them when necessary.\n      tabIndex={highlighted ? 0 : -1}\n      ref={triggerRef}\n      {...getMenuItemProps({ parent: true, expanded, disabled })}\n      {...(isDisabledWithReason ? targetProps : {})}\n      {...getAnalyticsMetadataAttribute(\n        disabled\n          ? {}\n          : ({\n              action: 'expand',\n              detail: {\n                position: position || '0',\n                label: { root: 'self' },\n                id: item.id || '',\n                expanded: `${!expanded}`,\n              },\n            } as GeneratedAnalyticsMetadataButtonDropdownExpand)\n      )}\n    >\n      {item.text}\n      <span className={clsx(styles['expand-icon'], styles['expand-icon-right'])}>\n        <InternalIcon name=\"caret-down-filled\" />\n      </span>\n    </span>\n  );\n\n  let content: React.ReactNode;\n  // If the category element is disabled, we do not render a dropdown.\n  // Screenreaders are confused by additional sections\n  if (isDisabledWithReason) {\n    content = (\n      <Tooltip content={item.disabledReason}>\n        {trigger}\n        {descriptionEl}\n      </Tooltip>\n    );\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = (\n      <Dropdown\n        open={expanded}\n        stretchWidth={false}\n        interior={true}\n        expandToViewport={expandToViewport}\n        trigger={trigger}\n      >\n        {item.items && expanded && (\n          <ul\n            role=\"menu\"\n            aria-label={item.text}\n            className={clsx(styles['items-list-container'], styles['in-dropdown'])}\n          >\n            <ItemsList\n              items={item.items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              lastInDropdown={lastInDropdown}\n              highlightItem={highlightItem}\n              variant={variant}\n              position={position}\n            />\n          </ul>\n        )}\n      </Dropdown>\n    );\n  }\n\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], styles.expandable, {\n        [styles.expanded]: expanded,\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      ref={ref}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n    >\n      {content}\n    </li>\n  );\n};\n\nexport default ExpandableCategoryElement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}