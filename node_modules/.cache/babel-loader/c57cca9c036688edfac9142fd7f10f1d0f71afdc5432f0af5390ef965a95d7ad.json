{"ast":null,"code":"var _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\nconst useThreats = (composerMode, statementList, setStatementList, filteredStatementList, setFilteredStatementList, editingStatement, setEditingStatement, onThreatEditorView) => {\n  _s();\n  const [view, setView] = useState('list');\n  const handleAddStatement = useCallback(idToCopy => {\n    if (idToCopy) {\n      const copiedStatement = statementList.find(st => st.id === idToCopy);\n      if (copiedStatement) {\n        const {\n          id: _id,\n          displayOrder,\n          tags,\n          metadata,\n          ...rest\n        } = copiedStatement;\n        const newStatement = {\n          ...rest,\n          id: uuidV4(),\n          numericId: -1\n        };\n        setEditingStatement(newStatement);\n        onThreatEditorView === null || onThreatEditorView === void 0 ? void 0 : onThreatEditorView(newStatement.id);\n      }\n    } else {\n      const newStatement = {\n        id: uuidV4(),\n        numericId: -1\n      };\n      setEditingStatement(newStatement);\n      onThreatEditorView === null || onThreatEditorView === void 0 ? void 0 : onThreatEditorView(newStatement.id);\n    }\n  }, [statementList, setEditingStatement, onThreatEditorView]);\n  const handlRemoveStatement = useCallback(id => {\n    setStatementList(prevList => prevList.filter(x => x.id !== id));\n  }, [setStatementList]);\n  const handleEditStatement = useCallback(id => {\n    const statement = statementList.find(s => s.id === id);\n    if (statement) {\n      setEditingStatement(statement);\n    }\n  }, [statementList, setEditingStatement]);\n  const handleSaveStatement = useCallback(statement => {\n    setStatementList(prevList => {\n      var _updatedStatement$thr, _updatedStatement$pre, _updatedStatement$thr2, _updatedStatement$thr3;\n      let numericId = statement.numericId;\n      if (numericId === -1) {\n        const maxId = prevList.reduce((max, cur) => {\n          if (cur.numericId > max) {\n            return cur.numericId;\n          }\n          return max;\n        }, 0);\n        numericId = maxId + 1;\n      }\n      let updatedStatement = {\n        ...statement,\n        numericId,\n        displayOrder: numericId\n      };\n      updatedStatement = {\n        ...updatedStatement,\n        threatSource: (_updatedStatement$thr = updatedStatement.threatSource) === null || _updatedStatement$thr === void 0 ? void 0 : _updatedStatement$thr.trim(),\n        prerequisites: (_updatedStatement$pre = updatedStatement.prerequisites) === null || _updatedStatement$pre === void 0 ? void 0 : _updatedStatement$pre.trim(),\n        threatAction: (_updatedStatement$thr2 = updatedStatement.threatAction) === null || _updatedStatement$thr2 === void 0 ? void 0 : _updatedStatement$thr2.trim(),\n        threatImpact: (_updatedStatement$thr3 = updatedStatement.threatImpact) === null || _updatedStatement$thr3 === void 0 ? void 0 : _updatedStatement$thr3.trim()\n      };\n      const foundIndex = prevList.findIndex(st => st.id === statement.id);\n      if (foundIndex >= 0) {\n        return [...prevList.slice(0, foundIndex), updatedStatement, ...prevList.slice(foundIndex + 1)];\n      }\n      return [...prevList, updatedStatement];\n    });\n  }, [setStatementList]);\n  useEffect(() => {\n    if (composerMode === 'ThreatsOnly') {\n      if (editingStatement) {\n        setView('editor');\n      } else {\n        setView('list');\n      }\n    }\n  }, [composerMode, editingStatement, setView]);\n  const lenStatementList = statementList.length;\n  const editingStatementExist = !!editingStatement;\n  const handleFilterStatement = useCallback(strideFilter => {\n    const filteredStatements = filteredStatementList.filter(s => s.id === strideFilter);\n    if (filteredStatements) {\n      setFilteredStatementList(filteredStatements);\n    }\n    ;\n  }, [filteredStatementList, setFilteredStatementList]);\n  return {\n    view,\n    setView,\n    handleAddStatement,\n    handlRemoveStatement,\n    handleEditStatement,\n    handleSaveStatement,\n    handleFilterStatement,\n    lenStatementList,\n    editingStatementExist\n  };\n};\n_s(useThreats, \"QVStacp6L1nx4zs/GjyQBBdOLpg=\");\nexport default useThreats;","map":{"version":3,"names":["useCallback","useEffect","useState","v4","uuidV4","useThreats","composerMode","statementList","setStatementList","filteredStatementList","setFilteredStatementList","editingStatement","setEditingStatement","onThreatEditorView","_s","view","setView","handleAddStatement","idToCopy","copiedStatement","find","st","id","_id","displayOrder","tags","metadata","rest","newStatement","numericId","handlRemoveStatement","prevList","filter","x","handleEditStatement","statement","s","handleSaveStatement","_updatedStatement$thr","_updatedStatement$pre","_updatedStatement$thr2","_updatedStatement$thr3","maxId","reduce","max","cur","updatedStatement","threatSource","trim","prerequisites","threatAction","threatImpact","foundIndex","findIndex","slice","lenStatementList","length","editingStatementExist","handleFilterStatement","strideFilter","filteredStatements"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/contexts/ThreatsContext/hooks/useThreats/index.ts"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\nimport { ComposerMode, TemplateThreatStatement } from '../../../../customTypes';\nimport { ThreatsContextProviderProps, View } from '../../types';\n\nconst useThreats = (\n  composerMode: ComposerMode,\n  statementList: TemplateThreatStatement[],\n  setStatementList: React.Dispatch<React.SetStateAction<TemplateThreatStatement[]>>,\n  filteredStatementList: TemplateThreatStatement[],\n  setFilteredStatementList: React.Dispatch<React.SetStateAction<TemplateThreatStatement[]>>,\n  editingStatement: TemplateThreatStatement | null,\n  setEditingStatement: React.Dispatch<React.SetStateAction<TemplateThreatStatement | null>>,\n  onThreatEditorView: ThreatsContextProviderProps['onThreatEditorView'],\n) => {\n  const [view, setView] = useState<View>('list');\n\n  const handleAddStatement = useCallback((idToCopy?: string) => {\n    if (idToCopy) {\n      const copiedStatement = statementList.find(st => st.id === idToCopy);\n      if (copiedStatement) {\n        const { id: _id, displayOrder, tags, metadata, ...rest } = copiedStatement;\n        const newStatement = {\n          ...rest,\n          id: uuidV4(),\n          numericId: -1,\n        };\n\n        setEditingStatement(newStatement);\n        onThreatEditorView?.(newStatement.id);\n      }\n    } else {\n      const newStatement: TemplateThreatStatement = {\n        id: uuidV4(),\n        numericId: -1,\n      };\n      setEditingStatement(newStatement);\n      onThreatEditorView?.(newStatement.id);\n    }\n  }, [statementList, setEditingStatement, onThreatEditorView]);\n\n  const handlRemoveStatement = useCallback((id: string) => {\n    setStatementList((prevList) => prevList.filter(x => x.id !== id));\n  }, [setStatementList]);\n\n  const handleEditStatement = useCallback((id: string) => {\n    const statement = statementList.find(s => s.id === id);\n    if (statement) {\n      setEditingStatement(statement as TemplateThreatStatement);\n    }\n  }, [statementList, setEditingStatement]);\n\n  const handleSaveStatement = useCallback((statement: TemplateThreatStatement) => {\n    setStatementList((prevList) => {\n      let numericId = statement.numericId;\n\n      if (numericId === -1) {\n        const maxId = prevList.reduce((max: number, cur: TemplateThreatStatement) => {\n\n          if (cur.numericId > max) {\n            return cur.numericId;\n          }\n\n          return max;\n        }, 0);\n        numericId = maxId + 1;\n      }\n\n      let updatedStatement: TemplateThreatStatement = {\n        ...statement,\n        numericId,\n        displayOrder: numericId,\n      };\n\n      updatedStatement = {\n        ...updatedStatement,\n        threatSource: updatedStatement.threatSource?.trim(),\n        prerequisites: updatedStatement.prerequisites?.trim(),\n        threatAction: updatedStatement.threatAction?.trim(),\n        threatImpact: updatedStatement.threatImpact?.trim(),\n      };\n\n      const foundIndex = prevList.findIndex(st => st.id === statement.id);\n      if (foundIndex >= 0) {\n        return [...prevList.slice(0, foundIndex), updatedStatement, ...prevList.slice(foundIndex + 1)];\n      }\n\n      return [...prevList, updatedStatement];\n    });\n  }, [setStatementList]);\n\n  useEffect(() => {\n    if (composerMode === 'ThreatsOnly') {\n      if (editingStatement) {\n        setView('editor');\n      } else {\n        setView('list');\n      }\n    }\n  }, [composerMode, editingStatement, setView]);\n\n  const lenStatementList = statementList.length;\n  const editingStatementExist = !!editingStatement;\n\n  const handleFilterStatement = useCallback((strideFilter: '') => {\n    const filteredStatements = filteredStatementList.filter(s => s.id === strideFilter);\n    if (filteredStatements) {\n      setFilteredStatementList(filteredStatements as TemplateThreatStatement[]);\n    };\n  }, [filteredStatementList, setFilteredStatementList]);\n\n  return {\n    view,\n    setView,\n    handleAddStatement,\n    handlRemoveStatement,\n    handleEditStatement,\n    handleSaveStatement,\n    handleFilterStatement,\n    lenStatementList,\n    editingStatementExist,\n  };\n};\n\nexport default useThreats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}