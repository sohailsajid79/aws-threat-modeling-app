{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import{z}from'zod';import{ContentEntityBaseSchema,EntityLinkBaseSchema}from'./entities';export const AssumptionSchema=ContentEntityBaseSchema.extend({/**\n   * A flag determining the assumption is still valid or not.\n   */valid:z.boolean().optional()}).strict();export const AssumptionLinkSchema=EntityLinkBaseSchema.extend({type:z.union([z.literal('Mitigation'),z.literal('Control'),z.literal('Threat')]),/**\n   * The assumption being linked.\n   */assumptionId:z.string().length(36),/**\n   * The linked entity Id.\n   */linkedId:z.string().length(36)}).strict();","map":{"version":3,"names":["z","ContentEntityBaseSchema","EntityLinkBaseSchema","AssumptionSchema","extend","valid","boolean","optional","strict","AssumptionLinkSchema","type","union","literal","assumptionId","string","length","linkedId"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/customTypes/assumptions.ts"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { z } from 'zod';\nimport { ContentEntityBaseSchema, EntityLinkBaseSchema } from './entities';\n\nexport const AssumptionSchema = ContentEntityBaseSchema.extend({\n  /**\n   * A flag determining the assumption is still valid or not.\n   */\n  valid: z.boolean().optional(),\n}).strict();\n\nexport type Assumption = z.infer<typeof AssumptionSchema>;\n\nexport const AssumptionLinkSchema = EntityLinkBaseSchema.extend({\n  type: z.union([z.literal('Mitigation'), z.literal('Control'), z.literal('Threat')]),\n  /**\n   * The assumption being linked.\n   */\n  assumptionId: z.string().length(36),\n  /**\n   * The linked entity Id.\n   */\n  linkedId: z.string().length(36),\n}).strict();\n\nexport type AssumptionLink = z.infer<typeof AssumptionLinkSchema>;\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAEA,OAASA,CAAC,KAAQ,KAAK,CACvB,OAASC,uBAAuB,CAAEC,oBAAoB,KAAQ,YAAY,CAE1E,MAAO,MAAM,CAAAC,gBAAgB,CAAGF,uBAAuB,CAACG,MAAM,CAAC,CAC7D;AACF;AACA,KACEC,KAAK,CAAEL,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAC9B,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAIX,MAAO,MAAM,CAAAC,oBAAoB,CAAGP,oBAAoB,CAACE,MAAM,CAAC,CAC9DM,IAAI,CAAEV,CAAC,CAACW,KAAK,CAAC,CAACX,CAAC,CAACY,OAAO,CAAC,YAAY,CAAC,CAAEZ,CAAC,CAACY,OAAO,CAAC,SAAS,CAAC,CAAEZ,CAAC,CAACY,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CACnF;AACF;AACA,KACEC,YAAY,CAAEb,CAAC,CAACc,MAAM,CAAC,CAAC,CAACC,MAAM,CAAC,EAAE,CAAC,CACnC;AACF;AACA,KACEC,QAAQ,CAAEhB,CAAC,CAACc,MAAM,CAAC,CAAC,CAACC,MAAM,CAAC,EAAE,CAChC,CAAC,CAAC,CAACP,MAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}