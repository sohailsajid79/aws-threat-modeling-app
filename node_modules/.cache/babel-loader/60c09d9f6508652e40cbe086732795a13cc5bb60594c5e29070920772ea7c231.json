{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../button/internal';\nimport { highContrastHeaderClassName } from '../../internal/utils/content-header-utils';\nimport { useAppLayoutInternals } from './context';\nimport { MobileTriggers as DrawersMobileTriggers } from './drawers';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nexport default function MobileToolbar() {\n  var _a, _b, _c;\n  const {\n    ariaLabels,\n    breadcrumbs,\n    drawers,\n    handleNavigationClick,\n    handleToolsClick,\n    hasDrawerViewportOverlay,\n    isMobile,\n    navigationOpen,\n    __embeddedViewMode,\n    isToolsOpen,\n    navigationHide,\n    navigationRefs,\n    toolsHide,\n    toolsRefs,\n    headerVariant\n  } = useAppLayoutInternals();\n  if (!isMobile || __embeddedViewMode || navigationHide && !breadcrumbs && toolsHide && (!drawers || drawers.length === 0)) {\n    return null;\n  }\n  return React.createElement(\"section\", {\n    className: clsx(styles['mobile-toolbar'], [testutilStyles['mobile-bar']], {\n      [styles['has-breadcrumbs']]: breadcrumbs,\n      [styles.unfocusable]: hasDrawerViewportOverlay,\n      [highContrastHeaderClassName]: headerVariant === 'high-contrast'\n    }, testutilStyles['mobile-bar'], headerVariant !== 'high-contrast' && styles['remove-high-contrast-header'])\n  }, !navigationHide && React.createElement(\"nav\", {\n    \"aria-hidden\": navigationOpen,\n    \"aria-orientation\": \"horizontal\",\n    className: clsx(styles['mobile-toolbar-nav'], {\n      [testutilStyles['drawer-closed']]: !navigationOpen\n    })\n  }, React.createElement(InternalButton, {\n    ariaLabel: (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.navigationToggle) !== null && _a !== void 0 ? _a : undefined,\n    ariaExpanded: navigationOpen ? undefined : false,\n    iconName: \"menu\",\n    formAction: \"none\",\n    onClick: () => handleNavigationClick(true),\n    variant: \"icon\",\n    className: testutilStyles['navigation-toggle'],\n    ref: navigationRefs.toggle,\n    disabled: hasDrawerViewportOverlay,\n    __nativeAttributes: {\n      'aria-haspopup': navigationOpen ? undefined : true\n    }\n  })), breadcrumbs && React.createElement(\"div\", {\n    className: clsx(styles['mobile-toolbar-breadcrumbs'], testutilStyles.breadcrumbs)\n  }, breadcrumbs), drawers ? React.createElement(DrawersMobileTriggers, null) : !toolsHide && React.createElement(\"aside\", {\n    \"aria-hidden\": isToolsOpen,\n    \"aria-label\": (_b = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tools) !== null && _b !== void 0 ? _b : undefined,\n    className: clsx(styles['mobile-toolbar-tools'], {\n      [testutilStyles['drawer-closed']]: !isToolsOpen\n    })\n  }, React.createElement(InternalButton, {\n    className: testutilStyles['tools-toggle'],\n    ariaExpanded: isToolsOpen,\n    disabled: hasDrawerViewportOverlay,\n    ariaLabel: (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.toolsToggle) !== null && _c !== void 0 ? _c : undefined,\n    iconName: \"status-info\",\n    formAction: \"none\",\n    onClick: () => handleToolsClick(true),\n    variant: \"icon\",\n    ref: toolsRefs.toggle,\n    __nativeAttributes: {\n      'aria-haspopup': true\n    }\n  })));\n}","map":{"version":3,"names":["React","clsx","InternalButton","highContrastHeaderClassName","useAppLayoutInternals","MobileTriggers","DrawersMobileTriggers","testutilStyles","styles","MobileToolbar","ariaLabels","breadcrumbs","drawers","handleNavigationClick","handleToolsClick","hasDrawerViewportOverlay","isMobile","navigationOpen","__embeddedViewMode","isToolsOpen","navigationHide","navigationRefs","toolsHide","toolsRefs","headerVariant","length","createElement","className","unfocusable","ariaLabel","_a","navigationToggle","undefined","ariaExpanded","iconName","formAction","onClick","variant","ref","toggle","disabled","__nativeAttributes","_b","tools","_c","toolsToggle"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/visual-refresh/mobile-toolbar.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { InternalButton } from '../../button/internal';\nimport { highContrastHeaderClassName } from '../../internal/utils/content-header-utils';\nimport { useAppLayoutInternals } from './context';\nimport { MobileTriggers as DrawersMobileTriggers } from './drawers';\n\nimport testutilStyles from '../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nexport default function MobileToolbar() {\n  const {\n    ariaLabels,\n    breadcrumbs,\n    drawers,\n    handleNavigationClick,\n    handleToolsClick,\n    hasDrawerViewportOverlay,\n    isMobile,\n    navigationOpen,\n    __embeddedViewMode,\n    isToolsOpen,\n    navigationHide,\n    navigationRefs,\n    toolsHide,\n    toolsRefs,\n    headerVariant,\n  } = useAppLayoutInternals();\n\n  if (\n    !isMobile ||\n    __embeddedViewMode ||\n    (navigationHide && !breadcrumbs && toolsHide && (!drawers || drawers.length === 0))\n  ) {\n    return null;\n  }\n\n  return (\n    <section\n      className={clsx(\n        styles['mobile-toolbar'],\n        [testutilStyles['mobile-bar']],\n        {\n          [styles['has-breadcrumbs']]: breadcrumbs,\n          [styles.unfocusable]: hasDrawerViewportOverlay,\n          [highContrastHeaderClassName]: headerVariant === 'high-contrast',\n        },\n        testutilStyles['mobile-bar'],\n        headerVariant !== 'high-contrast' && styles['remove-high-contrast-header']\n      )}\n    >\n      {!navigationHide && (\n        <nav\n          aria-hidden={navigationOpen}\n          aria-orientation=\"horizontal\"\n          className={clsx(styles['mobile-toolbar-nav'], { [testutilStyles['drawer-closed']]: !navigationOpen })}\n        >\n          <InternalButton\n            ariaLabel={ariaLabels?.navigationToggle ?? undefined}\n            ariaExpanded={navigationOpen ? undefined : false}\n            iconName=\"menu\"\n            formAction=\"none\"\n            onClick={() => handleNavigationClick(true)}\n            variant=\"icon\"\n            className={testutilStyles['navigation-toggle']}\n            ref={navigationRefs.toggle}\n            disabled={hasDrawerViewportOverlay}\n            __nativeAttributes={{ 'aria-haspopup': navigationOpen ? undefined : true }}\n          />\n        </nav>\n      )}\n\n      {breadcrumbs && (\n        <div className={clsx(styles['mobile-toolbar-breadcrumbs'], testutilStyles.breadcrumbs)}>{breadcrumbs}</div>\n      )}\n\n      {drawers ? (\n        <DrawersMobileTriggers />\n      ) : (\n        !toolsHide && (\n          <aside\n            aria-hidden={isToolsOpen}\n            aria-label={ariaLabels?.tools ?? undefined}\n            className={clsx(styles['mobile-toolbar-tools'], { [testutilStyles['drawer-closed']]: !isToolsOpen })}\n          >\n            <InternalButton\n              className={testutilStyles['tools-toggle']}\n              ariaExpanded={isToolsOpen}\n              disabled={hasDrawerViewportOverlay}\n              ariaLabel={ariaLabels?.toolsToggle ?? undefined}\n              iconName=\"status-info\"\n              formAction=\"none\"\n              onClick={() => handleToolsClick(true)}\n              variant=\"icon\"\n              ref={toolsRefs.toggle}\n              __nativeAttributes={{ 'aria-haspopup': true }}\n            />\n          </aside>\n        )\n      )}\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}