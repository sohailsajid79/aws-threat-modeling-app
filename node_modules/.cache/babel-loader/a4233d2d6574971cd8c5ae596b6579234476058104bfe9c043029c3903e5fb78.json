{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport FormRenderer, { componentTypes } from '../../../FormRenderer';\nimport Link from '@cloudscape-design/components/link';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport useSubmitCallback from '../../hooks/useSubmitCallback';\nimport AttributeMapping from '../../attributeMapping';\nimport validatePasswords from '../../utils/validatePasswords';\nconst SignUpView = ({\n  attributes,\n  onSignUp,\n  hrefTermsAndConditions\n}) => {\n  const schema = useMemo(() => {\n    const formSchema = {\n      variant: 'embedded',\n      canCancel: false,\n      headerVariant: 'h2',\n      submitLabel: 'Sign up',\n      fields: [{\n        component: componentTypes.TEXT_FIELD,\n        isRequired: true,\n        label: 'Username',\n        name: 'username',\n        placeholder: 'Enter your Username',\n        validate: [{\n          type: 'required'\n        }]\n      }, {\n        component: componentTypes.TEXT_FIELD,\n        isRequired: true,\n        label: 'Password',\n        name: 'password',\n        type: 'password',\n        placeholder: 'Enter your Password',\n        validate: [{\n          type: 'required'\n        }]\n      }, {\n        component: componentTypes.TEXT_FIELD,\n        isRequired: true,\n        label: 'Confirm Password',\n        name: 'confirmPassword',\n        type: 'password',\n        placeholder: 'Confirm your Password',\n        validate: [{\n          type: 'required'\n        }]\n      }]\n    };\n    attributes && formSchema.fields.push(...attributes.map(attr => {\n      const displayName = attr.displayName || AttributeMapping[attr.name]?.displayName || attr.name;\n      return {\n        component: componentTypes.TEXT_FIELD,\n        isRequired: true,\n        label: displayName,\n        placeholder: `Enter ${displayName}`,\n        name: `attributes[${attr.name}]`,\n        ...AttributeMapping[attr.name]?.componentSettingsOverride,\n        validate: [...(attr.required ? [{\n          type: 'required'\n        }] : []), ...(AttributeMapping[attr.name]?.componentSettingsOverride?.validate || [])]\n      };\n    }));\n    return formSchema;\n  }, [attributes]);\n  const {\n    handleSubmit,\n    isSubmitting,\n    errorMessage\n  } = useSubmitCallback(onSignUp);\n  return _jsxs(SpaceBetween, {\n    direction: \"vertical\",\n    size: \"xl\",\n    \"data-testid\": \"sign-up-form\",\n    children: [_jsx(FormRenderer, {\n      schema: schema,\n      onSubmit: handleSubmit,\n      errorText: errorMessage,\n      isSubmitting: isSubmitting,\n      validate: validatePasswords\n    }), hrefTermsAndConditions && _jsx(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      },\n      children: _jsx(Link, {\n        href: hrefTermsAndConditions,\n        external: true,\n        children: \"Terms and Conditions\"\n      })\n    })]\n  });\n};\nexport default SignUpView;","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","useMemo","FormRenderer","componentTypes","Link","SpaceBetween","useSubmitCallback","AttributeMapping","validatePasswords","SignUpView","attributes","onSignUp","hrefTermsAndConditions","schema","formSchema","variant","canCancel","headerVariant","submitLabel","fields","component","TEXT_FIELD","isRequired","label","name","placeholder","validate","type","push","map","attr","displayName","componentSettingsOverride","required","handleSubmit","isSubmitting","errorMessage","direction","size","children","onSubmit","errorText","style","width","textAlign","href","external"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/SignUpView/index.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport FormRenderer, { componentTypes } from '../../../FormRenderer';\nimport Link from '@cloudscape-design/components/link';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport useSubmitCallback from '../../hooks/useSubmitCallback';\nimport AttributeMapping from '../../attributeMapping';\nimport validatePasswords from '../../utils/validatePasswords';\nconst SignUpView = ({ attributes, onSignUp, hrefTermsAndConditions }) => {\n    const schema = useMemo(() => {\n        const formSchema = {\n            variant: 'embedded',\n            canCancel: false,\n            headerVariant: 'h2',\n            submitLabel: 'Sign up',\n            fields: [\n                {\n                    component: componentTypes.TEXT_FIELD,\n                    isRequired: true,\n                    label: 'Username',\n                    name: 'username',\n                    placeholder: 'Enter your Username',\n                    validate: [\n                        {\n                            type: 'required',\n                        },\n                    ],\n                },\n                {\n                    component: componentTypes.TEXT_FIELD,\n                    isRequired: true,\n                    label: 'Password',\n                    name: 'password',\n                    type: 'password',\n                    placeholder: 'Enter your Password',\n                    validate: [\n                        {\n                            type: 'required',\n                        },\n                    ],\n                },\n                {\n                    component: componentTypes.TEXT_FIELD,\n                    isRequired: true,\n                    label: 'Confirm Password',\n                    name: 'confirmPassword',\n                    type: 'password',\n                    placeholder: 'Confirm your Password',\n                    validate: [\n                        {\n                            type: 'required',\n                        },\n                    ],\n                },\n            ],\n        };\n        attributes &&\n            formSchema.fields.push(...attributes.map((attr) => {\n                const displayName = attr.displayName || AttributeMapping[attr.name]?.displayName || attr.name;\n                return {\n                    component: componentTypes.TEXT_FIELD,\n                    isRequired: true,\n                    label: displayName,\n                    placeholder: `Enter ${displayName}`,\n                    name: `attributes[${attr.name}]`,\n                    ...AttributeMapping[attr.name]?.componentSettingsOverride,\n                    validate: [\n                        ...(attr.required\n                            ? [\n                                {\n                                    type: 'required',\n                                },\n                            ]\n                            : []),\n                        ...(AttributeMapping[attr.name]?.componentSettingsOverride?.validate || []),\n                    ],\n                };\n            }));\n        return formSchema;\n    }, [attributes]);\n    const { handleSubmit, isSubmitting, errorMessage } = useSubmitCallback(onSignUp);\n    return (_jsxs(SpaceBetween, { direction: \"vertical\", size: \"xl\", \"data-testid\": \"sign-up-form\", children: [_jsx(FormRenderer, { schema: schema, onSubmit: handleSubmit, errorText: errorMessage, isSubmitting: isSubmitting, validate: validatePasswords }), hrefTermsAndConditions && (_jsx(\"div\", { style: {\n                    width: '100%',\n                    textAlign: 'center',\n                }, children: _jsx(Link, { href: hrefTermsAndConditions, external: true, children: \"Terms and Conditions\" }) }))] }));\n};\nexport default SignUpView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}