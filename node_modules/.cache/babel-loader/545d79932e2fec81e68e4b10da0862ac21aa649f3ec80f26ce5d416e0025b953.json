{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { isDataSeries, isXThreshold, isYThreshold, matchesX } from './utils';\n/** Formats provided x-position and its corresponding series values. */\nexport default function formatHighlighted({\n  position,\n  series,\n  xTickFormatter,\n  detailPopoverSeriesContent\n}) {\n  const formattedPosition = xTickFormatter ? xTickFormatter(position) : position.toString();\n  const details = [];\n  series.forEach(s => {\n    const detail = getSeriesDetail({\n      internalSeries: s,\n      targetX: position,\n      detailPopoverSeriesContent\n    });\n    if (detail) {\n      details.push(detail);\n    }\n  });\n  return {\n    position: formattedPosition,\n    details\n  };\n}\nfunction getSeriesDetail({\n  internalSeries,\n  targetX,\n  detailPopoverSeriesContent\n}) {\n  var _a;\n  const {\n    series,\n    color\n  } = internalSeries;\n  // X-thresholds are only shown when X matches.\n  if (isXThreshold(series)) {\n    return series.x === targetX ? {\n      key: series.title,\n      value: '',\n      color,\n      markerType: 'dashed'\n    } : null;\n  }\n  if (isYThreshold(series)) {\n    return {\n      key: series.title,\n      value: series.valueFormatter ? series.valueFormatter(series.y) : series.y,\n      color,\n      markerType: 'dashed'\n    };\n  }\n  if (isDataSeries(series)) {\n    for (const datum of series.data) {\n      if (matchesX(targetX, datum.x)) {\n        const customContent = detailPopoverSeriesContent ? detailPopoverSeriesContent({\n          series,\n          x: targetX,\n          y: datum.y\n        }) : undefined;\n        const hasSubItems = !!((_a = customContent === null || customContent === void 0 ? void 0 : customContent.subItems) === null || _a === void 0 ? void 0 : _a.length);\n        const isExpandable = (customContent === null || customContent === void 0 ? void 0 : customContent.expandable) && hasSubItems;\n        const isKeyString = typeof (customContent === null || customContent === void 0 ? void 0 : customContent.key) === 'string';\n        const key = (customContent === null || customContent === void 0 ? void 0 : customContent.key) && (!isExpandable || isKeyString) ? customContent.key : series.title;\n        if ((customContent === null || customContent === void 0 ? void 0 : customContent.expandable) && !hasSubItems) {\n          warnOnce('MixedLineBarChart', '`expandable` was set to `true` for a series without sub-items. This property will be ignored.');\n        }\n        if (isExpandable && !isKeyString) {\n          warnOnce('MixedLineBarChart', 'A ReactNode was used for the key of an expandable series. The series title will be used instead because nested interactive elements can cause accessiblity issues.');\n        }\n        if (!isKeyString && !isExpandable && (customContent === null || customContent === void 0 ? void 0 : customContent.value) && typeof customContent.value !== 'string') {\n          warnOnce('MixedLineBarChart', 'Use a ReactNode for the key or the value of a series, but not for both. It is not recommended to use links for key and value at the same time.');\n        }\n        return {\n          key,\n          value: (customContent === null || customContent === void 0 ? void 0 : customContent.value) || (series.valueFormatter ? series.valueFormatter(datum.y, targetX) : datum.y),\n          color,\n          markerType: series.type === 'line' ? 'line' : 'rectangle',\n          subItems: customContent === null || customContent === void 0 ? void 0 : customContent.subItems,\n          expandableId: isExpandable ? series.title : undefined\n        };\n      }\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["warnOnce","isDataSeries","isXThreshold","isYThreshold","matchesX","formatHighlighted","position","series","xTickFormatter","detailPopoverSeriesContent","formattedPosition","toString","details","forEach","s","detail","getSeriesDetail","internalSeries","targetX","push","color","x","key","title","value","markerType","valueFormatter","y","datum","data","customContent","undefined","hasSubItems","_a","subItems","length","isExpandable","expandable","isKeyString","type","expandableId"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/mixed-line-bar-chart/format-highlighted.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport { ChartSeriesDetailItem } from '../internal/components/chart-series-details';\nimport { ChartDataTypes, InternalChartSeries, MixedLineBarChartProps } from './interfaces';\nimport { isDataSeries, isXThreshold, isYThreshold, matchesX } from './utils';\n\nexport interface HighlightDetails {\n  position: string;\n  details: ChartSeriesDetailItem[];\n}\n\n/** Formats provided x-position and its corresponding series values. */\nexport default function formatHighlighted<T extends ChartDataTypes>({\n  position,\n  series,\n  xTickFormatter,\n  detailPopoverSeriesContent,\n}: {\n  position: T;\n  series: readonly InternalChartSeries<T>[];\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>;\n  detailPopoverSeriesContent?: MixedLineBarChartProps.DetailPopoverSeriesContent<T>;\n}): HighlightDetails {\n  const formattedPosition = xTickFormatter ? xTickFormatter(position) : position.toString();\n\n  const details: ChartSeriesDetailItem[] = [];\n  series.forEach(s => {\n    const detail = getSeriesDetail({ internalSeries: s, targetX: position, detailPopoverSeriesContent });\n    if (detail) {\n      details.push(detail);\n    }\n  });\n\n  return { position: formattedPosition, details };\n}\n\nfunction getSeriesDetail<T>({\n  internalSeries,\n  targetX,\n  detailPopoverSeriesContent,\n}: {\n  internalSeries: InternalChartSeries<T>;\n  targetX: T;\n  detailPopoverSeriesContent?: MixedLineBarChartProps.DetailPopoverSeriesContent<T>;\n}): ChartSeriesDetailItem | null {\n  const { series, color } = internalSeries;\n\n  // X-thresholds are only shown when X matches.\n  if (isXThreshold(series)) {\n    return series.x === targetX\n      ? {\n          key: series.title,\n          value: '',\n          color,\n          markerType: 'dashed',\n        }\n      : null;\n  }\n\n  if (isYThreshold(series)) {\n    return {\n      key: series.title,\n      value: series.valueFormatter ? series.valueFormatter(series.y) : series.y,\n      color,\n      markerType: 'dashed',\n    };\n  }\n\n  if (isDataSeries(series)) {\n    for (const datum of series.data) {\n      if (matchesX(targetX, datum.x)) {\n        const customContent = detailPopoverSeriesContent\n          ? detailPopoverSeriesContent({ series, x: targetX, y: datum.y })\n          : undefined;\n        const hasSubItems = !!customContent?.subItems?.length;\n        const isExpandable = customContent?.expandable && hasSubItems;\n        const isKeyString = typeof customContent?.key === 'string';\n        const key = customContent?.key && (!isExpandable || isKeyString) ? customContent.key : series.title;\n\n        if (customContent?.expandable && !hasSubItems) {\n          warnOnce(\n            'MixedLineBarChart',\n            '`expandable` was set to `true` for a series without sub-items. This property will be ignored.'\n          );\n        }\n        if (isExpandable && !isKeyString) {\n          warnOnce(\n            'MixedLineBarChart',\n            'A ReactNode was used for the key of an expandable series. The series title will be used instead because nested interactive elements can cause accessiblity issues.'\n          );\n        }\n        if (!isKeyString && !isExpandable && customContent?.value && typeof customContent.value !== 'string') {\n          warnOnce(\n            'MixedLineBarChart',\n            'Use a ReactNode for the key or the value of a series, but not for both. It is not recommended to use links for key and value at the same time.'\n          );\n        }\n\n        return {\n          key,\n          value: customContent?.value || (series.valueFormatter ? series.valueFormatter(datum.y, targetX) : datum.y),\n          color,\n          markerType: series.type === 'line' ? 'line' : 'rectangle',\n          subItems: customContent?.subItems,\n          expandableId: isExpandable ? series.title : undefined,\n        };\n      }\n    }\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}