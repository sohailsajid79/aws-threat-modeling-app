{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../../icon/internal.js';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\nimport Option from '../../internal/components/option';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport Tooltip from '../../internal/components/tooltip';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport styles from './styles.css.js';\nconst Item = (_a, ref) => {\n  var {\n      option,\n      highlighted,\n      selected,\n      filteringValue,\n      hasCheckbox,\n      virtualPosition,\n      padBottom,\n      isNextSelected,\n      screenReaderContent,\n      ariaPosinset,\n      ariaSetsize,\n      highlightType\n    } = _a,\n    restProps = __rest(_a, [\"option\", \"highlighted\", \"selected\", \"filteringValue\", \"hasCheckbox\", \"virtualPosition\", \"padBottom\", \"isNextSelected\", \"screenReaderContent\", \"ariaPosinset\", \"ariaSetsize\", \"highlightType\"]);\n  const baseProps = getBaseProps(restProps);\n  const isParent = option.type === 'parent';\n  const isChild = option.type === 'child';\n  const wrappedOption = option.option;\n  const disabled = option.disabled || wrappedOption.disabled;\n  const disabledReason = disabled && wrappedOption.disabledReason ? wrappedOption.disabledReason : '';\n  const isDisabledWithReason = !!disabledReason;\n  const internalRef = useRef(null);\n  const {\n    descriptionEl,\n    descriptionId\n  } = useHiddenDescription(disabledReason);\n  return React.createElement(SelectableItem, Object.assign({\n    ariaSelected: Boolean(selected),\n    selected: selected,\n    isNextSelected: isNextSelected,\n    highlighted: highlighted,\n    disabled: option.disabled,\n    isParent: isParent,\n    isChild: isChild,\n    ref: useMergeRefs(ref, internalRef),\n    virtualPosition: virtualPosition,\n    padBottom: padBottom,\n    screenReaderContent: screenReaderContent,\n    ariaPosinset: ariaPosinset,\n    ariaSetsize: ariaSetsize,\n    highlightType: highlightType,\n    ariaDescribedby: isDisabledWithReason ? descriptionId : '',\n    value: option.option.value\n  }, baseProps), React.createElement(\"div\", {\n    className: clsx(styles.item, !isParent && wrappedOption.labelTag && styles['show-label-tag'])\n  }, hasCheckbox && !isParent && React.createElement(\"div\", {\n    className: styles.checkbox\n  }, React.createElement(CheckboxIcon, {\n    checked: selected || false,\n    disabled: option.disabled\n  })), React.createElement(Option, {\n    option: Object.assign(Object.assign({}, wrappedOption), {\n      disabled\n    }),\n    highlightedOption: highlighted,\n    selectedOption: selected,\n    highlightText: filteringValue,\n    isGroupOption: isParent\n  }), !hasCheckbox && !isParent && selected && React.createElement(\"div\", {\n    className: styles['selected-icon']\n  }, React.createElement(InternalIcon, {\n    name: \"check\"\n  })), isDisabledWithReason && React.createElement(React.Fragment, null, descriptionEl, highlighted && React.createElement(Tooltip, {\n    className: styles['disabled-reason-tooltip'],\n    trackRef: internalRef,\n    value: disabledReason,\n    position: \"right\",\n    hideOnOverscroll: true\n  }))));\n};\nexport default React.memo(React.forwardRef(Item));","map":{"version":3,"names":["React","useRef","clsx","InternalIcon","getBaseProps","CheckboxIcon","Option","SelectableItem","Tooltip","useHiddenDescription","useMergeRefs","styles","Item","_a","ref","option","highlighted","selected","filteringValue","hasCheckbox","virtualPosition","padBottom","isNextSelected","screenReaderContent","ariaPosinset","ariaSetsize","highlightType","restProps","__rest","baseProps","isParent","type","isChild","wrappedOption","disabled","disabledReason","isDisabledWithReason","internalRef","descriptionEl","descriptionId","createElement","Object","assign","ariaSelected","Boolean","ariaDescribedby","value","className","item","labelTag","checkbox","checked","highlightedOption","selectedOption","highlightText","isGroupOption","name","Fragment","trackRef","position","hideOnOverscroll","memo","forwardRef"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/select/parts/item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport InternalIcon from '../../icon/internal.js';\nimport { getBaseProps } from '../../internal/base-component';\nimport CheckboxIcon from '../../internal/components/checkbox-icon';\nimport Option from '../../internal/components/option';\nimport { DropdownOption, OptionDefinition } from '../../internal/components/option/interfaces';\nimport { HighlightType } from '../../internal/components/options-list/utils/use-highlight-option.js';\nimport SelectableItem from '../../internal/components/selectable-item';\nimport Tooltip from '../../internal/components/tooltip';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\n\nimport styles from './styles.css.js';\n\nexport interface ItemProps {\n  option: DropdownOption;\n  highlighted?: boolean;\n  selected?: boolean;\n  filteringValue?: string;\n  hasCheckbox?: boolean;\n  virtualPosition?: number;\n  padBottom?: boolean;\n  isNextSelected?: boolean;\n  screenReaderContent?: string;\n  ariaPosinset?: number;\n  ariaSetsize?: number;\n  highlightType?: HighlightType['type'];\n}\n\nconst Item = (\n  {\n    option,\n    highlighted,\n    selected,\n    filteringValue,\n    hasCheckbox,\n    virtualPosition,\n    padBottom,\n    isNextSelected,\n    screenReaderContent,\n    ariaPosinset,\n    ariaSetsize,\n    highlightType,\n    ...restProps\n  }: ItemProps,\n  ref: React.Ref<HTMLDivElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n\n  const isParent = option.type === 'parent';\n  const isChild = option.type === 'child';\n  const wrappedOption: OptionDefinition = option.option;\n  const disabled = option.disabled || wrappedOption.disabled;\n  const disabledReason = disabled && wrappedOption.disabledReason ? wrappedOption.disabledReason : '';\n  const isDisabledWithReason = !!disabledReason;\n  const internalRef = useRef<HTMLDivElement>(null);\n\n  const { descriptionEl, descriptionId } = useHiddenDescription(disabledReason);\n\n  return (\n    <SelectableItem\n      ariaSelected={Boolean(selected)}\n      selected={selected}\n      isNextSelected={isNextSelected}\n      highlighted={highlighted}\n      disabled={option.disabled}\n      isParent={isParent}\n      isChild={isChild}\n      ref={useMergeRefs(ref, internalRef)}\n      virtualPosition={virtualPosition}\n      padBottom={padBottom}\n      screenReaderContent={screenReaderContent}\n      ariaPosinset={ariaPosinset}\n      ariaSetsize={ariaSetsize}\n      highlightType={highlightType}\n      ariaDescribedby={isDisabledWithReason ? descriptionId : ''}\n      value={option.option.value}\n      {...baseProps}\n    >\n      <div className={clsx(styles.item, !isParent && wrappedOption.labelTag && styles['show-label-tag'])}>\n        {hasCheckbox && !isParent && (\n          <div className={styles.checkbox}>\n            <CheckboxIcon checked={selected || false} disabled={option.disabled} />\n          </div>\n        )}\n        <Option\n          option={{ ...wrappedOption, disabled }}\n          highlightedOption={highlighted}\n          selectedOption={selected}\n          highlightText={filteringValue}\n          isGroupOption={isParent}\n        />\n        {!hasCheckbox && !isParent && selected && (\n          <div className={styles['selected-icon']}>\n            <InternalIcon name=\"check\" />\n          </div>\n        )}\n        {isDisabledWithReason && (\n          <>\n            {descriptionEl}\n            {highlighted && (\n              <Tooltip\n                className={styles['disabled-reason-tooltip']}\n                trackRef={internalRef}\n                value={disabledReason!}\n                position=\"right\"\n                hideOnOverscroll={true}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </SelectableItem>\n  );\n};\n\nexport default React.memo(React.forwardRef(Item));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}