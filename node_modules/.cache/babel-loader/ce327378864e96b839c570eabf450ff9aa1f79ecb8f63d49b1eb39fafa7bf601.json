{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalButtonDropdown from '../../../button-dropdown/internal';\nimport InternalIcon from '../../../icon/internal';\nimport { getBaseProps } from '../../base-component';\nimport { applyDisplayName } from '../../utils/apply-display-name';\nimport buttonDropdownStyles from '../../../button-dropdown/styles.css.js';\nimport styles from './styles.css.js';\nexport const ButtonTrigger = React.forwardRef(({\n  testUtilsClass,\n  iconName,\n  iconUrl,\n  iconAlt,\n  iconSvg,\n  badge,\n  ariaLabel,\n  offsetRight,\n  disabled,\n  expanded,\n  children,\n  onClick\n}, ref) => {\n  const hasIcon = iconName || iconUrl || iconSvg;\n  return React.createElement(\"button\", {\n    ref: ref,\n    type: \"button\",\n    className: clsx(styles.button, styles[`offset-right-${offsetRight}`], testUtilsClass, {\n      [styles.expanded]: expanded\n    }),\n    \"aria-label\": ariaLabel,\n    \"aria-expanded\": !!expanded,\n    \"aria-haspopup\": true,\n    disabled: disabled,\n    onClick: event => {\n      event.preventDefault();\n      onClick && onClick();\n    }\n  }, hasIcon && React.createElement(InternalIcon, {\n    className: styles.icon,\n    name: iconName,\n    url: iconUrl,\n    alt: iconAlt,\n    svg: iconSvg,\n    badge: badge\n  }), children && React.createElement(\"span\", {\n    className: styles.text\n  }, children), children && React.createElement(InternalIcon, {\n    name: \"caret-down-filled\",\n    className: expanded ? buttonDropdownStyles['rotate-up'] : buttonDropdownStyles['rotate-down']\n  }));\n});\nconst MenuDropdown = _a => {\n  var {\n      iconName,\n      iconUrl,\n      iconAlt,\n      iconSvg,\n      badge,\n      offsetRight,\n      children\n    } = _a,\n    props = __rest(_a, [\"iconName\", \"iconUrl\", \"iconAlt\", \"iconSvg\", \"badge\", \"offsetRight\", \"children\"]);\n  const baseProps = getBaseProps(props);\n  const dropdownTrigger = ({\n    triggerRef,\n    ariaLabel,\n    isOpen,\n    testUtilsClass,\n    disabled,\n    onClick\n  }) => {\n    return React.createElement(ButtonTrigger, {\n      testUtilsClass: testUtilsClass,\n      ref: triggerRef,\n      disabled: disabled,\n      expanded: isOpen,\n      iconName: iconName,\n      iconUrl: iconUrl,\n      iconAlt: iconAlt,\n      iconSvg: iconSvg,\n      badge: badge,\n      ariaLabel: ariaLabel,\n      offsetRight: offsetRight,\n      onClick: onClick\n    }, children);\n  };\n  return React.createElement(InternalButtonDropdown, Object.assign({}, baseProps, props, {\n    variant: \"navigation\",\n    customTriggerBuilder: dropdownTrigger,\n    preferCenter: true\n  }));\n};\napplyDisplayName(MenuDropdown, 'MenuDropdown');\nexport default MenuDropdown;","map":{"version":3,"names":["React","clsx","InternalButtonDropdown","InternalIcon","getBaseProps","applyDisplayName","buttonDropdownStyles","styles","ButtonTrigger","forwardRef","testUtilsClass","iconName","iconUrl","iconAlt","iconSvg","badge","ariaLabel","offsetRight","disabled","expanded","children","onClick","ref","hasIcon","createElement","type","className","button","event","preventDefault","icon","name","url","alt","svg","text","MenuDropdown","_a","props","__rest","baseProps","dropdownTrigger","triggerRef","isOpen","Object","assign","variant","customTriggerBuilder","preferCenter"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/menu-dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { CustomTriggerProps } from '../../../button-dropdown/interfaces';\nimport InternalButtonDropdown from '../../../button-dropdown/internal';\nimport InternalIcon from '../../../icon/internal';\nimport { getBaseProps } from '../../base-component';\nimport { applyDisplayName } from '../../utils/apply-display-name';\nimport { ButtonTriggerProps, MenuDropdownProps } from './interfaces';\n\nimport buttonDropdownStyles from '../../../button-dropdown/styles.css.js';\nimport styles from './styles.css.js';\n\nexport { MenuDropdownProps };\n\nexport const ButtonTrigger = React.forwardRef(\n  (\n    {\n      testUtilsClass,\n      iconName,\n      iconUrl,\n      iconAlt,\n      iconSvg,\n      badge,\n      ariaLabel,\n      offsetRight,\n      disabled,\n      expanded,\n      children,\n      onClick,\n    }: ButtonTriggerProps,\n    ref: React.Ref<any>\n  ) => {\n    const hasIcon = iconName || iconUrl || iconSvg;\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={clsx(styles.button, styles[`offset-right-${offsetRight}`], testUtilsClass, {\n          [styles.expanded]: expanded,\n        })}\n        aria-label={ariaLabel}\n        aria-expanded={!!expanded}\n        aria-haspopup={true}\n        disabled={disabled}\n        onClick={event => {\n          event.preventDefault();\n          onClick && onClick();\n        }}\n      >\n        {hasIcon && (\n          <InternalIcon\n            className={styles.icon}\n            name={iconName}\n            url={iconUrl}\n            alt={iconAlt}\n            svg={iconSvg}\n            badge={badge}\n          />\n        )}\n        {children && <span className={styles.text}>{children}</span>}\n        {children && (\n          <InternalIcon\n            name=\"caret-down-filled\"\n            className={expanded ? buttonDropdownStyles['rotate-up'] : buttonDropdownStyles['rotate-down']}\n          />\n        )}\n      </button>\n    );\n  }\n);\n\nconst MenuDropdown = ({\n  iconName,\n  iconUrl,\n  iconAlt,\n  iconSvg,\n  badge,\n  offsetRight,\n  children,\n  ...props\n}: MenuDropdownProps) => {\n  const baseProps = getBaseProps(props);\n\n  const dropdownTrigger = ({\n    triggerRef,\n    ariaLabel,\n    isOpen,\n    testUtilsClass,\n    disabled,\n    onClick,\n  }: CustomTriggerProps) => {\n    return (\n      <ButtonTrigger\n        testUtilsClass={testUtilsClass}\n        ref={triggerRef}\n        disabled={disabled}\n        expanded={isOpen}\n        iconName={iconName}\n        iconUrl={iconUrl}\n        iconAlt={iconAlt}\n        iconSvg={iconSvg}\n        badge={badge}\n        ariaLabel={ariaLabel}\n        offsetRight={offsetRight}\n        onClick={onClick}\n      >\n        {children}\n      </ButtonTrigger>\n    );\n  };\n\n  return (\n    <InternalButtonDropdown\n      {...baseProps}\n      {...props}\n      variant=\"navigation\"\n      customTriggerBuilder={dropdownTrigger}\n      preferCenter={true}\n    />\n  );\n};\n\napplyDisplayName(MenuDropdown, 'MenuDropdown');\nexport default MenuDropdown;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAGvB,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,gBAAgB,QAAQ,gCAAgC;AAGjE,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,OAAO,MAAMC,aAAa,GAAGR,KAAK,CAACS,UAAU,CAC3C,CACE;EACEC,cAAc;EACdC,QAAQ;EACRC,OAAO;EACPC,OAAO;EACPC,OAAO;EACPC,KAAK;EACLC,SAAS;EACTC,WAAW;EACXC,QAAQ;EACRC,QAAQ;EACRC,QAAQ;EACRC;AAAO,CACY,EACrBC,GAAmB,KACjB;EACF,MAAMC,OAAO,GAAGZ,QAAQ,IAAIC,OAAO,IAAIE,OAAO;EAE9C,OACEd,KAAA,CAAAwB,aAAA;IACEF,GAAG,EAAEA,GAAG;IACRG,IAAI,EAAC,QAAQ;IACbC,SAAS,EAAEzB,IAAI,CAACM,MAAM,CAACoB,MAAM,EAAEpB,MAAM,CAAC,gBAAgBU,WAAW,EAAE,CAAC,EAAEP,cAAc,EAAE;MACpF,CAACH,MAAM,CAACY,QAAQ,GAAGA;KACpB,CAAC;IAAA,cACUH,SAAS;IAAA,iBACN,CAAC,CAACG,QAAQ;IAAA,iBACV,IAAI;IACnBD,QAAQ,EAAEA,QAAQ;IAClBG,OAAO,EAAEO,KAAK,IAAG;MACfA,KAAK,CAACC,cAAc,EAAE;MACtBR,OAAO,IAAIA,OAAO,EAAE;IACtB;EAAC,GAEAE,OAAO,IACNvB,KAAA,CAAAwB,aAAA,CAACrB,YAAY;IACXuB,SAAS,EAAEnB,MAAM,CAACuB,IAAI;IACtBC,IAAI,EAAEpB,QAAQ;IACdqB,GAAG,EAAEpB,OAAO;IACZqB,GAAG,EAAEpB,OAAO;IACZqB,GAAG,EAAEpB,OAAO;IACZC,KAAK,EAAEA;EAAK,EAEf,EACAK,QAAQ,IAAIpB,KAAA,CAAAwB,aAAA;IAAME,SAAS,EAAEnB,MAAM,CAAC4B;EAAI,GAAGf,QAAQ,CAAQ,EAC3DA,QAAQ,IACPpB,KAAA,CAAAwB,aAAA,CAACrB,YAAY;IACX4B,IAAI,EAAC,mBAAmB;IACxBL,SAAS,EAAEP,QAAQ,GAAGb,oBAAoB,CAAC,WAAW,CAAC,GAAGA,oBAAoB,CAAC,aAAa;EAAC,EAEhG,CACM;AAEb,CAAC,CACF;AAED,MAAM8B,YAAY,GAAIC,EASF,IAAI;MATF;MACpB1B,QAAQ;MACRC,OAAO;MACPC,OAAO;MACPC,OAAO;MACPC,KAAK;MACLE,WAAW;MACXG;IAAQ,IAAAiB,EAEU;IADfC,KAAK,GAAAC,MAAA,CAAAF,EAAA,EARY,iFASrB,CADS;EAER,MAAMG,SAAS,GAAGpC,YAAY,CAACkC,KAAK,CAAC;EAErC,MAAMG,eAAe,GAAGA,CAAC;IACvBC,UAAU;IACV1B,SAAS;IACT2B,MAAM;IACNjC,cAAc;IACdQ,QAAQ;IACRG;EAAO,CACY,KAAI;IACvB,OACErB,KAAA,CAAAwB,aAAA,CAAChB,aAAa;MACZE,cAAc,EAAEA,cAAc;MAC9BY,GAAG,EAAEoB,UAAU;MACfxB,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEwB,MAAM;MAChBhC,QAAQ,EAAEA,QAAQ;MAClBC,OAAO,EAAEA,OAAO;MAChBC,OAAO,EAAEA,OAAO;MAChBC,OAAO,EAAEA,OAAO;MAChBC,KAAK,EAAEA,KAAK;MACZC,SAAS,EAAEA,SAAS;MACpBC,WAAW,EAAEA,WAAW;MACxBI,OAAO,EAAEA;IAAO,GAEfD,QAAQ,CACK;EAEpB,CAAC;EAED,OACEpB,KAAA,CAAAwB,aAAA,CAACtB,sBAAsB,EAAA0C,MAAA,CAAAC,MAAA,KACjBL,SAAS,EACTF,KAAK;IACTQ,OAAO,EAAC,YAAY;IACpBC,oBAAoB,EAAEN,eAAe;IACrCO,YAAY,EAAE;EAAI,GAClB;AAEN,CAAC;AAED3C,gBAAgB,CAAC+B,YAAY,EAAE,cAAc,CAAC;AAC9C,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}