{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ButtonContext } from './button-context';\nimport { CollectionLabelContext } from './collection-label-context';\nimport { FormFieldContext } from './form-field-context';\nimport { InfoLinkLabelContext } from './info-link-label-context';\nimport { defaultValue as linkDefaultValue, LinkDefaultVariantContext } from './link-default-variant-context';\nimport { defaultValue as singleTabStopDefaultValue, SingleTabStopNavigationContext } from './single-tab-stop-navigation-context';\n/*\n Use this context-resetter when creating a new modal-type context where typically the contents\n of the modal should not be affected by the surrounding components/DOM.\n */\nconst ResetContextsForModal = ({\n  children\n}) => React.createElement(ButtonContext.Provider, {\n  value: {\n    onClick: () => {}\n  }\n}, React.createElement(CollectionLabelContext.Provider, {\n  value: {\n    assignId: () => {}\n  }\n}, React.createElement(FormFieldContext.Provider, {\n  value: {}\n}, React.createElement(InfoLinkLabelContext.Provider, {\n  value: \"\"\n}, React.createElement(LinkDefaultVariantContext.Provider, {\n  value: linkDefaultValue\n}, React.createElement(SingleTabStopNavigationContext.Provider, {\n  value: singleTabStopDefaultValue\n}, children))))));\nexport default ResetContextsForModal;","map":{"version":3,"names":["React","ButtonContext","CollectionLabelContext","FormFieldContext","InfoLinkLabelContext","defaultValue","linkDefaultValue","LinkDefaultVariantContext","singleTabStopDefaultValue","SingleTabStopNavigationContext","ResetContextsForModal","children","createElement","Provider","value","onClick","assignId"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/context/reset-contexts-for-modal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ButtonContext } from './button-context';\nimport { CollectionLabelContext } from './collection-label-context';\nimport { FormFieldContext } from './form-field-context';\nimport { InfoLinkLabelContext } from './info-link-label-context';\nimport { defaultValue as linkDefaultValue, LinkDefaultVariantContext } from './link-default-variant-context';\nimport {\n  defaultValue as singleTabStopDefaultValue,\n  SingleTabStopNavigationContext,\n} from './single-tab-stop-navigation-context';\n\n/*\n Use this context-resetter when creating a new modal-type context where typically the contents\n of the modal should not be affected by the surrounding components/DOM.\n */\nconst ResetContextsForModal = ({ children }: { children: React.ReactNode }) => (\n  <ButtonContext.Provider value={{ onClick: () => {} }}>\n    <CollectionLabelContext.Provider value={{ assignId: () => {} }}>\n      <FormFieldContext.Provider value={{}}>\n        <InfoLinkLabelContext.Provider value=\"\">\n          <LinkDefaultVariantContext.Provider value={linkDefaultValue}>\n            <SingleTabStopNavigationContext.Provider value={singleTabStopDefaultValue}>\n              {children}\n            </SingleTabStopNavigationContext.Provider>\n          </LinkDefaultVariantContext.Provider>\n        </InfoLinkLabelContext.Provider>\n      </FormFieldContext.Provider>\n    </CollectionLabelContext.Provider>\n  </ButtonContext.Provider>\n);\n\nexport default ResetContextsForModal;\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,sBAAsB,QAAQ,4BAA4B;AACnE,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,YAAY,IAAIC,gBAAgB,EAAEC,yBAAyB,QAAQ,gCAAgC;AAC5G,SACEF,YAAY,IAAIG,yBAAyB,EACzCC,8BAA8B,QACzB,sCAAsC;AAE7C;;;;AAIA,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAQ,CAAiC,KACxEX,KAAA,CAAAY,aAAA,CAACX,aAAa,CAACY,QAAQ;EAACC,KAAK,EAAE;IAAEC,OAAO,EAAEA,CAAA,KAAK,CAAE;EAAC;AAAE,GAClDf,KAAA,CAAAY,aAAA,CAACV,sBAAsB,CAACW,QAAQ;EAACC,KAAK,EAAE;IAAEE,QAAQ,EAAEA,CAAA,KAAK,CAAE;EAAC;AAAE,GAC5DhB,KAAA,CAAAY,aAAA,CAACT,gBAAgB,CAACU,QAAQ;EAACC,KAAK,EAAE;AAAE,GAClCd,KAAA,CAAAY,aAAA,CAACR,oBAAoB,CAACS,QAAQ;EAACC,KAAK,EAAC;AAAE,GACrCd,KAAA,CAAAY,aAAA,CAACL,yBAAyB,CAACM,QAAQ;EAACC,KAAK,EAAER;AAAgB,GACzDN,KAAA,CAAAY,aAAA,CAACH,8BAA8B,CAACI,QAAQ;EAACC,KAAK,EAAEN;AAAyB,GACtEG,QAAQ,CAC+B,CACP,CACP,CACN,CACI,CAErC;AAED,eAAeD,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}