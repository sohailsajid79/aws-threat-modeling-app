{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { PerformanceMetrics } from '../../analytics';\nimport { useEffectOnUpdate } from '../use-effect-on-update';\n/*\nIf the last user interaction is more than this time ago, it is not considered\nto be the cause of the current loading state.\n*/\nconst USER_ACTION_TIME_LIMIT = 1000;\nexport function useTableInteractionMetrics(_ref) {\n  let {\n    itemCount,\n    instanceIdentifier,\n    getComponentIdentifier,\n    loading = false,\n    interactionMetadata\n  } = _ref;\n  const lastUserAction = useRef(null);\n  const capturedUserAction = useRef(null);\n  const loadingStartTime = useRef(null);\n  const metadata = useRef({\n    itemCount,\n    getComponentIdentifier,\n    interactionMetadata\n  });\n  metadata.current = {\n    itemCount,\n    getComponentIdentifier,\n    interactionMetadata\n  };\n  useEffect(() => {\n    if (loading) {\n      loadingStartTime.current = performance.now();\n      if (lastUserAction.current && lastUserAction.current.time > performance.now() - USER_ACTION_TIME_LIMIT) {\n        capturedUserAction.current = lastUserAction.current.name;\n      } else {\n        capturedUserAction.current = null;\n      }\n    }\n  }, [loading]);\n  useEffectOnUpdate(() => {\n    var _a;\n    if (!loading && loadingStartTime.current !== null) {\n      const loadingDuration = performance.now() - loadingStartTime.current;\n      loadingStartTime.current = null;\n      PerformanceMetrics.tableInteraction({\n        userAction: (_a = capturedUserAction.current) !== null && _a !== void 0 ? _a : '',\n        interactionTime: Math.round(loadingDuration),\n        interactionMetadata: metadata.current.interactionMetadata(),\n        componentIdentifier: metadata.current.getComponentIdentifier(),\n        instanceIdentifier,\n        noOfResourcesInTable: metadata.current.itemCount\n      });\n    }\n  }, [instanceIdentifier, loading]);\n  return {\n    setLastUserAction: name => void (lastUserAction.current = {\n      name,\n      time: performance.now()\n    })\n  };\n}","map":{"version":3,"names":["useEffect","useRef","PerformanceMetrics","useEffectOnUpdate","USER_ACTION_TIME_LIMIT","useTableInteractionMetrics","_ref","itemCount","instanceIdentifier","getComponentIdentifier","loading","interactionMetadata","lastUserAction","capturedUserAction","loadingStartTime","metadata","current","performance","now","time","name","loadingDuration","tableInteraction","userAction","_a","interactionTime","Math","round","componentIdentifier","noOfResourcesInTable","setLastUserAction"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/hooks/use-table-interaction-metrics/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useRef } from 'react';\n\nimport { PerformanceMetrics } from '../../analytics';\nimport { useEffectOnUpdate } from '../use-effect-on-update';\n\n/*\nIf the last user interaction is more than this time ago, it is not considered\nto be the cause of the current loading state.\n*/\nconst USER_ACTION_TIME_LIMIT = 1_000;\n\nexport interface UseTableInteractionMetricsProps {\n  instanceIdentifier: string | undefined;\n  loading: boolean | undefined;\n  itemCount: number;\n  getComponentIdentifier: () => string | undefined;\n  interactionMetadata: () => string;\n}\n\nexport function useTableInteractionMetrics({\n  itemCount,\n  instanceIdentifier,\n  getComponentIdentifier,\n  loading = false,\n  interactionMetadata,\n}: UseTableInteractionMetricsProps) {\n  const lastUserAction = useRef<{ name: string; time: number } | null>(null);\n  const capturedUserAction = useRef<string | null>(null);\n  const loadingStartTime = useRef<number | null>(null);\n\n  const metadata = useRef({ itemCount, getComponentIdentifier, interactionMetadata });\n  metadata.current = { itemCount, getComponentIdentifier, interactionMetadata };\n  useEffect(() => {\n    if (loading) {\n      loadingStartTime.current = performance.now();\n\n      if (lastUserAction.current && lastUserAction.current.time > performance.now() - USER_ACTION_TIME_LIMIT) {\n        capturedUserAction.current = lastUserAction.current.name;\n      } else {\n        capturedUserAction.current = null;\n      }\n    }\n  }, [loading]);\n\n  useEffectOnUpdate(() => {\n    if (!loading && loadingStartTime.current !== null) {\n      const loadingDuration = performance.now() - loadingStartTime.current;\n      loadingStartTime.current = null;\n\n      PerformanceMetrics.tableInteraction({\n        userAction: capturedUserAction.current ?? '',\n        interactionTime: Math.round(loadingDuration),\n        interactionMetadata: metadata.current.interactionMetadata(),\n        componentIdentifier: metadata.current.getComponentIdentifier(),\n        instanceIdentifier,\n        noOfResourcesInTable: metadata.current.itemCount,\n      });\n    }\n  }, [instanceIdentifier, loading]);\n\n  return {\n    setLastUserAction: (name: string) => void (lastUserAction.current = { name, time: performance.now() }),\n  };\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,iBAAiB,QAAQ,yBAAyB;AAE3D;;;;AAIA,MAAMC,sBAAsB,GAAG,IAAK;AAUpC,OAAM,SAAUC,0BAA0BA,CAAAC,IAAA,EAMR;EAAA,IANS;IACzCC,SAAS;IACTC,kBAAkB;IAClBC,sBAAsB;IACtBC,OAAO,GAAG,KAAK;IACfC;EAAmB,CACa,GAAAL,IAAA;EAChC,MAAMM,cAAc,GAAGX,MAAM,CAAwC,IAAI,CAAC;EAC1E,MAAMY,kBAAkB,GAAGZ,MAAM,CAAgB,IAAI,CAAC;EACtD,MAAMa,gBAAgB,GAAGb,MAAM,CAAgB,IAAI,CAAC;EAEpD,MAAMc,QAAQ,GAAGd,MAAM,CAAC;IAAEM,SAAS;IAAEE,sBAAsB;IAAEE;EAAmB,CAAE,CAAC;EACnFI,QAAQ,CAACC,OAAO,GAAG;IAAET,SAAS;IAAEE,sBAAsB;IAAEE;EAAmB,CAAE;EAC7EX,SAAS,CAAC,MAAK;IACb,IAAIU,OAAO,EAAE;MACXI,gBAAgB,CAACE,OAAO,GAAGC,WAAW,CAACC,GAAG,EAAE;MAE5C,IAAIN,cAAc,CAACI,OAAO,IAAIJ,cAAc,CAACI,OAAO,CAACG,IAAI,GAAGF,WAAW,CAACC,GAAG,EAAE,GAAGd,sBAAsB,EAAE;QACtGS,kBAAkB,CAACG,OAAO,GAAGJ,cAAc,CAACI,OAAO,CAACI,IAAI;OACzD,MAAM;QACLP,kBAAkB,CAACG,OAAO,GAAG,IAAI;;;EAGvC,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEbP,iBAAiB,CAAC,MAAK;;IACrB,IAAI,CAACO,OAAO,IAAII,gBAAgB,CAACE,OAAO,KAAK,IAAI,EAAE;MACjD,MAAMK,eAAe,GAAGJ,WAAW,CAACC,GAAG,EAAE,GAAGJ,gBAAgB,CAACE,OAAO;MACpEF,gBAAgB,CAACE,OAAO,GAAG,IAAI;MAE/Bd,kBAAkB,CAACoB,gBAAgB,CAAC;QAClCC,UAAU,EAAE,CAAAC,EAAA,GAAAX,kBAAkB,CAACG,OAAO,cAAAQ,EAAA,cAAAA,EAAA,GAAI,EAAE;QAC5CC,eAAe,EAAEC,IAAI,CAACC,KAAK,CAACN,eAAe,CAAC;QAC5CV,mBAAmB,EAAEI,QAAQ,CAACC,OAAO,CAACL,mBAAmB,EAAE;QAC3DiB,mBAAmB,EAAEb,QAAQ,CAACC,OAAO,CAACP,sBAAsB,EAAE;QAC9DD,kBAAkB;QAClBqB,oBAAoB,EAAEd,QAAQ,CAACC,OAAO,CAACT;OACxC,CAAC;;EAEN,CAAC,EAAE,CAACC,kBAAkB,EAAEE,OAAO,CAAC,CAAC;EAEjC,OAAO;IACLoB,iBAAiB,EAAGV,IAAY,IAAK,MAAMR,cAAc,CAACI,OAAO,GAAG;MAAEI,IAAI;MAAED,IAAI,EAAEF,WAAW,CAACC,GAAG;IAAE,CAAE;GACtG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}