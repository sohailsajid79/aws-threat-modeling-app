{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\nimport InternalBox from '../box/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport ChartPlot from '../internal/components/chart-plot';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartPopoverFooter from '../internal/components/chart-popover-footer';\nimport SeriesDetails from '../internal/components/chart-series-details';\nimport SeriesMarker from '../internal/components/chart-series-marker';\nimport LiveRegion from '../internal/components/live-region';\nimport { useHeightMeasure } from '../internal/hooks/container-queries/use-height-measure';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport Labels from './labels';\nimport Segments from './segments';\nimport { defaultDetails, getDimensionsBySize } from './utils';\nimport styles from './styles.css.js';\nexport default _ref => {\n  let {\n    fitHeight,\n    height: explicitHeight,\n    variant,\n    size,\n    width,\n    i18nStrings,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescription,\n    innerMetricValue,\n    innerMetricDescription,\n    hideTitles,\n    hideDescriptions,\n    detailPopoverContent,\n    detailPopoverSize,\n    detailPopoverFooter,\n    segmentDescription,\n    highlightedSegment,\n    onHighlightChange,\n    legendSegment,\n    pieData,\n    dataSum\n  } = _ref;\n  var _a, _b;\n  const [pinnedSegment, setPinnedSegment] = useState(null);\n  const plotRef = useRef(null);\n  const containerRef = useRef(null);\n  const focusedSegmentRef = useRef(null);\n  const popoverTrackRef = useRef(null);\n  const popoverRef = useRef(null);\n  const hasLabels = !(hideTitles && hideDescriptions);\n  const isRefresh = useVisualRefresh();\n  const height = (_a = useHeightMeasure(() => {\n    var _a, _b;\n    return (_b = (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.svg) !== null && _b !== void 0 ? _b : null;\n  }, !fitHeight)) !== null && _a !== void 0 ? _a : explicitHeight;\n  const dimensions = useMemo(() => getDimensionsBySize({\n    size: fitHeight ? Math.min(height, width) : size,\n    hasLabels,\n    visualRefresh: isRefresh\n  }), [fitHeight, height, width, size, hasLabels, isRefresh]);\n  // Inner content is only available for donut charts and the inner description is not displayed for small charts\n  const hasInnerContent = variant === 'donut' && (innerMetricValue || innerMetricDescription && dimensions.size !== 'small');\n  const innerMetricId = useUniqueId('awsui-pie-chart__inner');\n  const [isPopoverOpen, setPopoverOpen] = useState(false);\n  const [popoverData, setPopoverData] = useState();\n  const highlightedSegmentIndex = useMemo(() => {\n    for (let index = 0; index < pieData.length; index++) {\n      if (pieData[index].data.datum === highlightedSegment) {\n        return index;\n      }\n    }\n    return null;\n  }, [pieData, highlightedSegment]);\n  const detailPopoverFooterContent = useMemo(() => detailPopoverFooter && highlightedSegment ? detailPopoverFooter(highlightedSegment) : null, [detailPopoverFooter, highlightedSegment]);\n  const i18n = useInternalI18n('pie-chart');\n  const detailFunction = detailPopoverContent || defaultDetails(i18n, i18nStrings);\n  const details = popoverData ? detailFunction(popoverData.datum, dataSum) : [];\n  const popoverContentRef = useRef(null);\n  const popoverContent = popoverData && React.createElement(SeriesDetails, {\n    details: details,\n    compactList: true,\n    ref: popoverContentRef\n  });\n  const popoverDismissedRecently = useRef(false);\n  const escapePressed = useRef(false);\n  const duringTouch = useRef(false);\n  const highlightSegment = useCallback(internalDatum => {\n    const segment = internalDatum.datum;\n    if (segment !== highlightedSegment) {\n      onHighlightChange(segment);\n    }\n    if (popoverTrackRef.current) {\n      setPopoverData({\n        datum: internalDatum.datum,\n        series: {\n          color: internalDatum.color,\n          index: internalDatum.index,\n          label: internalDatum.datum.title,\n          markerType: 'rectangle'\n        },\n        trackRef: popoverTrackRef\n      });\n      setPopoverOpen(true);\n    }\n  }, [highlightedSegment, setPopoverOpen, onHighlightChange]);\n  const clearHighlightedSegment = useCallback(() => {\n    setPopoverOpen(false);\n    onHighlightChange(null);\n  }, [onHighlightChange, setPopoverOpen]);\n  const checkMouseLeave = event => {\n    if (pinnedSegment !== null) {\n      return;\n    }\n    if (nodeContains(popoverRef.current, event.relatedTarget) || nodeContains(focusedSegmentRef.current, event.relatedTarget)) {\n      return;\n    }\n    clearHighlightedSegment();\n  };\n  useEffect(() => {\n    const onKeyDown = event => {\n      if (event.key === 'Escape') {\n        clearHighlightedSegment();\n        escapePressed.current = true;\n      }\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [clearHighlightedSegment]);\n  const onMouseDown = useCallback(internalDatum => {\n    if (pinnedSegment === internalDatum.datum) {\n      setPinnedSegment(null);\n      clearHighlightedSegment();\n    } else {\n      setPinnedSegment(internalDatum.datum);\n      highlightSegment(internalDatum);\n    }\n  }, [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]);\n  const onMouseOver = useCallback(internalDatum => {\n    if (escapePressed.current) {\n      escapePressed.current = false;\n      return;\n    }\n    if (duringTouch.current) {\n      duringTouch.current = false;\n      return;\n    }\n    if (pinnedSegment !== null) {\n      return;\n    }\n    highlightSegment(internalDatum);\n  }, [pinnedSegment, highlightSegment]);\n  const onTouchStart = useCallback(() => {\n    duringTouch.current = true;\n  }, []);\n  const onKeyDown = useCallback(event => {\n    const keyCode = event.keyCode;\n    if (keyCode !== KeyCode.right && keyCode !== KeyCode.left && keyCode !== KeyCode.enter && keyCode !== KeyCode.space) {\n      return;\n    }\n    event.preventDefault();\n    let nextIndex = highlightedSegmentIndex || 0;\n    const MAX = pieData.length - 1;\n    if (keyCode === KeyCode.right) {\n      nextIndex++;\n      if (nextIndex > MAX) {\n        nextIndex = 0;\n      }\n    } else if (keyCode === KeyCode.left) {\n      nextIndex--;\n      if (nextIndex < 0) {\n        nextIndex = MAX;\n      }\n    }\n    if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n      setPinnedSegment(pieData[nextIndex].data.datum);\n    }\n    highlightSegment(pieData[nextIndex].data);\n  }, [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]);\n  const onApplicationFocus = useCallback((_event, target) => {\n    if (pinnedSegment !== null || popoverDismissedRecently.current || target === 'mouse') {\n      return;\n    }\n    const segment = highlightedSegment || legendSegment || pieData[0].data.datum;\n    const matched = pieData.filter(d => d.data.datum === segment);\n    highlightSegment(matched[0].data);\n  }, [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]);\n  const onApplicationBlur = useCallback(event => {\n    const blurTarget = event.relatedTarget || event.target;\n    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRef.current, blurTarget)) {\n      // We only need to close the popover and remove the pinned segment so that we keep track of the current\n      // highlighted legendSeries. using clearHighlightedSegment() would set the legendSeries to null, in that case\n      // using Keyboard Tab will always highlight the first legend item in the legend component.\n      setPopoverOpen(false);\n      setPinnedSegment(null);\n    }\n  }, [setPinnedSegment]);\n  const onPopoverDismiss = outsideClick => {\n    setPopoverOpen(false);\n    setPinnedSegment(null);\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        popoverDismissedRecently.current = true;\n        plotRef.current.focusApplication();\n        popoverDismissedRecently.current = false;\n      }, 0);\n    } else {\n      onHighlightChange(null);\n    }\n  };\n  return React.createElement(\"div\", {\n    className: clsx(styles['chart-container'], fitHeight && styles['chart-container--fit-height']),\n    ref: containerRef\n  }, React.createElement(\"div\", {\n    className: clsx(styles['chart-container-chart-plot'], fitHeight && styles['chart-container-chart-plot--fit-height'])\n  }, React.createElement(ChartPlot, {\n    ref: plotRef,\n    width: \"100%\",\n    height: fitHeight ? '100%' : height,\n    transform: `translate(${width / 2} ${height / 2})`,\n    isPrecise: true,\n    isClickable: !isPopoverOpen,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescription: ariaDescription,\n    ariaDescribedby: hasInnerContent ? innerMetricId : undefined,\n    ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription,\n    activeElementRef: focusedSegmentRef,\n    activeElementKey: highlightedSegmentIndex === null || highlightedSegmentIndex === void 0 ? void 0 : highlightedSegmentIndex.toString(),\n    onApplicationFocus: onApplicationFocus,\n    onApplicationBlur: onApplicationBlur,\n    onKeyDown: onKeyDown,\n    onMouseOut: checkMouseLeave\n  }, React.createElement(Segments, {\n    pieData: pieData,\n    dimensions: dimensions,\n    variant: variant,\n    focusedSegmentRef: focusedSegmentRef,\n    popoverTrackRef: popoverTrackRef,\n    highlightedSegment: highlightedSegment,\n    segmentAriaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.segmentAriaRoleDescription,\n    onMouseDown: onMouseDown,\n    onMouseOver: onMouseOver,\n    onTouchStart: onTouchStart\n  }), hasLabels && React.createElement(Labels, {\n    pieData: pieData,\n    dimensions: dimensions,\n    segmentDescription: segmentDescription,\n    visibleDataSum: dataSum,\n    hideTitles: hideTitles,\n    hideDescriptions: hideDescriptions,\n    highlightedSegment: highlightedSegment,\n    containerRef: containerRef\n  }))), hasInnerContent && React.createElement(\"div\", {\n    className: styles['inner-content'],\n    id: innerMetricId\n  }, innerMetricValue && React.createElement(InternalBox, {\n    variant: dimensions.size === 'small' ? 'h3' : 'h1',\n    tagOverride: \"div\",\n    color: \"inherit\",\n    padding: \"n\"\n  }, innerMetricValue), innerMetricDescription && dimensions.size !== 'small' && React.createElement(InternalBox, {\n    variant: \"h3\",\n    color: \"text-body-secondary\",\n    tagOverride: \"div\",\n    padding: \"n\"\n  }, innerMetricDescription)), isPopoverOpen && popoverData && React.createElement(ChartPopover, {\n    ref: popoverRef,\n    title: popoverData.series && React.createElement(InternalBox, {\n      className: styles['popover-header'],\n      variant: \"strong\"\n    }, React.createElement(SeriesMarker, {\n      color: popoverData.series.color,\n      type: popoverData.series.markerType\n    }), ' ', popoverData.series.label),\n    trackRef: popoverData.trackRef,\n    trackKey: popoverData.series.index,\n    dismissButton: pinnedSegment !== null,\n    dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel,\n    onDismiss: onPopoverDismiss,\n    container: ((_b = plotRef.current) === null || _b === void 0 ? void 0 : _b.svg) || null,\n    size: detailPopoverSize,\n    onMouseLeave: checkMouseLeave,\n    onBlur: onApplicationBlur\n  }, popoverContent, detailPopoverFooterContent && React.createElement(ChartPopoverFooter, null, detailPopoverFooterContent)), React.createElement(LiveRegion, {\n    source: [popoverContentRef]\n  }));\n};","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","clsx","nodeContains","InternalBox","useInternalI18n","ChartPlot","ChartPopover","ChartPopoverFooter","SeriesDetails","SeriesMarker","LiveRegion","useHeightMeasure","useUniqueId","useVisualRefresh","KeyCode","nodeBelongs","Labels","Segments","defaultDetails","getDimensionsBySize","styles","_ref","fitHeight","height","explicitHeight","variant","size","width","i18nStrings","ariaLabel","ariaLabelledby","ariaDescription","innerMetricValue","innerMetricDescription","hideTitles","hideDescriptions","detailPopoverContent","detailPopoverSize","detailPopoverFooter","segmentDescription","highlightedSegment","onHighlightChange","legendSegment","pieData","dataSum","pinnedSegment","setPinnedSegment","plotRef","containerRef","focusedSegmentRef","popoverTrackRef","popoverRef","hasLabels","isRefresh","_a","_b","current","svg","dimensions","Math","min","visualRefresh","hasInnerContent","innerMetricId","isPopoverOpen","setPopoverOpen","popoverData","setPopoverData","highlightedSegmentIndex","index","length","data","datum","detailPopoverFooterContent","i18n","detailFunction","details","popoverContentRef","popoverContent","createElement","compactList","ref","popoverDismissedRecently","escapePressed","duringTouch","highlightSegment","internalDatum","segment","series","color","label","title","markerType","trackRef","clearHighlightedSegment","checkMouseLeave","event","relatedTarget","onKeyDown","key","document","addEventListener","removeEventListener","onMouseDown","onMouseOver","onTouchStart","keyCode","right","left","enter","space","preventDefault","nextIndex","MAX","onApplicationFocus","_event","target","matched","filter","d","onApplicationBlur","blurTarget","Element","onPopoverDismiss","outsideClick","setTimeout","focusApplication","className","transform","isPrecise","isClickable","ariaDescribedby","undefined","ariaRoleDescription","chartAriaRoleDescription","activeElementRef","activeElementKey","toString","onMouseOut","segmentAriaRoleDescription","visibleDataSum","id","tagOverride","padding","type","trackKey","dismissButton","dismissAriaLabel","detailPopoverDismissAriaLabel","onDismiss","container","onMouseLeave","onBlur","source"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/pie-chart/pie-chart.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { PieArcDatum } from 'd3-shape';\n\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\n\nimport InternalBox from '../box/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport ChartPlot, { ChartPlotRef } from '../internal/components/chart-plot';\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartPopoverFooter from '../internal/components/chart-popover-footer';\nimport SeriesDetails from '../internal/components/chart-series-details';\nimport SeriesMarker from '../internal/components/chart-series-marker';\nimport LiveRegion from '../internal/components/live-region';\nimport { useHeightMeasure } from '../internal/hooks/container-queries/use-height-measure';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { SomeRequired } from '../internal/types';\nimport { nodeBelongs } from '../internal/utils/node-belongs';\nimport { PieChartProps, SeriesInfo } from './interfaces';\nimport Labels from './labels';\nimport Segments from './segments';\nimport { defaultDetails, getDimensionsBySize } from './utils';\n\nimport styles from './styles.css.js';\n\nexport interface InternalChartDatum<T> {\n  index: number;\n  color: string;\n  datum: Readonly<T>;\n}\n\ninterface InternalPieChartProps<T extends PieChartProps.Datum>\n  extends SomeRequired<\n    Omit<PieChartProps<T>, 'onHighlightChange' | 'statusType'>,\n    'variant' | 'size' | 'i18nStrings' | 'hideTitles' | 'hideDescriptions'\n  > {\n  width: number;\n  height: number;\n\n  highlightedSegment: T | null;\n  onHighlightChange: (segment: null | T) => void;\n\n  legendSegment: T | null;\n\n  pieData: PieArcDatum<InternalChartDatum<T>>[];\n  dataSum: number;\n}\n\nexport interface PopoverData<T> {\n  datum: T;\n  trackRef: React.RefObject<SVGElement>;\n  series: SeriesInfo;\n}\n\nexport default <T extends PieChartProps.Datum>({\n  fitHeight,\n  height: explicitHeight,\n  variant,\n  size,\n  width,\n  i18nStrings,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  innerMetricValue,\n  innerMetricDescription,\n  hideTitles,\n  hideDescriptions,\n  detailPopoverContent,\n  detailPopoverSize,\n  detailPopoverFooter,\n  segmentDescription,\n  highlightedSegment,\n  onHighlightChange,\n  legendSegment,\n  pieData,\n  dataSum,\n}: InternalPieChartProps<T>) => {\n  const [pinnedSegment, setPinnedSegment] = useState<T | null>(null);\n  const plotRef = useRef<ChartPlotRef>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const focusedSegmentRef = useRef<SVGGElement>(null);\n  const popoverTrackRef = useRef<SVGCircleElement>(null);\n  const popoverRef = useRef<HTMLElement | null>(null);\n\n  const hasLabels = !(hideTitles && hideDescriptions);\n  const isRefresh = useVisualRefresh();\n\n  const height = useHeightMeasure(() => plotRef.current?.svg ?? null, !fitHeight) ?? explicitHeight;\n\n  const dimensions = useMemo(\n    () =>\n      getDimensionsBySize({ size: fitHeight ? Math.min(height, width) : size, hasLabels, visualRefresh: isRefresh }),\n    [fitHeight, height, width, size, hasLabels, isRefresh]\n  );\n\n  // Inner content is only available for donut charts and the inner description is not displayed for small charts\n  const hasInnerContent =\n    variant === 'donut' && (innerMetricValue || (innerMetricDescription && dimensions.size !== 'small'));\n\n  const innerMetricId = useUniqueId('awsui-pie-chart__inner');\n\n  const [isPopoverOpen, setPopoverOpen] = useState<boolean>(false);\n  const [popoverData, setPopoverData] = useState<PopoverData<T>>();\n\n  const highlightedSegmentIndex = useMemo(() => {\n    for (let index = 0; index < pieData.length; index++) {\n      if (pieData[index].data.datum === highlightedSegment) {\n        return index;\n      }\n    }\n    return null;\n  }, [pieData, highlightedSegment]);\n\n  const detailPopoverFooterContent = useMemo(\n    () => (detailPopoverFooter && highlightedSegment ? detailPopoverFooter(highlightedSegment) : null),\n    [detailPopoverFooter, highlightedSegment]\n  );\n\n  const i18n = useInternalI18n('pie-chart');\n  const detailFunction = detailPopoverContent || defaultDetails(i18n, i18nStrings);\n  const details = popoverData ? detailFunction(popoverData.datum, dataSum) : [];\n  const popoverContentRef = useRef<HTMLDivElement | null>(null);\n  const popoverContent = popoverData && <SeriesDetails details={details} compactList={true} ref={popoverContentRef} />;\n\n  const popoverDismissedRecently = useRef(false);\n  const escapePressed = useRef(false);\n  const duringTouch = useRef(false);\n\n  const highlightSegment = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      const segment = internalDatum.datum;\n      if (segment !== highlightedSegment) {\n        onHighlightChange(segment);\n      }\n\n      if (popoverTrackRef.current) {\n        setPopoverData({\n          datum: internalDatum.datum,\n          series: {\n            color: internalDatum.color,\n            index: internalDatum.index,\n            label: internalDatum.datum.title,\n            markerType: 'rectangle',\n          },\n          trackRef: popoverTrackRef,\n        });\n        setPopoverOpen(true);\n      }\n    },\n    [highlightedSegment, setPopoverOpen, onHighlightChange]\n  );\n\n  const clearHighlightedSegment = useCallback(() => {\n    setPopoverOpen(false);\n    onHighlightChange(null);\n  }, [onHighlightChange, setPopoverOpen]);\n\n  const checkMouseLeave = (event: React.MouseEvent) => {\n    if (pinnedSegment !== null) {\n      return;\n    }\n\n    if (\n      nodeContains(popoverRef.current, event.relatedTarget) ||\n      nodeContains(focusedSegmentRef.current, event.relatedTarget)\n    ) {\n      return;\n    }\n\n    clearHighlightedSegment();\n  };\n\n  useEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        clearHighlightedSegment();\n        escapePressed.current = true;\n      }\n    };\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [clearHighlightedSegment]);\n\n  const onMouseDown = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      if (pinnedSegment === internalDatum.datum) {\n        setPinnedSegment(null);\n        clearHighlightedSegment();\n      } else {\n        setPinnedSegment(internalDatum.datum);\n        highlightSegment(internalDatum);\n      }\n    },\n    [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]\n  );\n  const onMouseOver = useCallback(\n    (internalDatum: InternalChartDatum<T>) => {\n      if (escapePressed.current) {\n        escapePressed.current = false;\n        return;\n      }\n      if (duringTouch.current) {\n        duringTouch.current = false;\n        return;\n      }\n      if (pinnedSegment !== null) {\n        return;\n      }\n      highlightSegment(internalDatum);\n    },\n    [pinnedSegment, highlightSegment]\n  );\n  const onTouchStart = useCallback(() => {\n    duringTouch.current = true;\n  }, []);\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const keyCode = event.keyCode;\n      if (\n        keyCode !== KeyCode.right &&\n        keyCode !== KeyCode.left &&\n        keyCode !== KeyCode.enter &&\n        keyCode !== KeyCode.space\n      ) {\n        return;\n      }\n\n      event.preventDefault();\n\n      let nextIndex = highlightedSegmentIndex || 0;\n      const MAX = pieData.length - 1;\n      if (keyCode === KeyCode.right) {\n        nextIndex++;\n        if (nextIndex > MAX) {\n          nextIndex = 0;\n        }\n      } else if (keyCode === KeyCode.left) {\n        nextIndex--;\n        if (nextIndex < 0) {\n          nextIndex = MAX;\n        }\n      }\n      if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n        setPinnedSegment(pieData[nextIndex].data.datum);\n      }\n      highlightSegment(pieData[nextIndex].data);\n    },\n    [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]\n  );\n  const onApplicationFocus = useCallback(\n    (_event: any, target: 'keyboard' | 'mouse') => {\n      if (pinnedSegment !== null || popoverDismissedRecently.current || target === 'mouse') {\n        return;\n      }\n\n      const segment = highlightedSegment || legendSegment || pieData[0].data.datum;\n      const matched = pieData.filter(d => d.data.datum === segment);\n      highlightSegment(matched[0].data);\n    },\n    [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]\n  );\n\n  const onApplicationBlur = useCallback(\n    (event: React.FocusEvent) => {\n      const blurTarget = event.relatedTarget || event.target;\n      if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRef.current, blurTarget)) {\n        // We only need to close the popover and remove the pinned segment so that we keep track of the current\n        // highlighted legendSeries. using clearHighlightedSegment() would set the legendSeries to null, in that case\n        // using Keyboard Tab will always highlight the first legend item in the legend component.\n        setPopoverOpen(false);\n        setPinnedSegment(null);\n      }\n    },\n    [setPinnedSegment]\n  );\n  const onPopoverDismiss = (outsideClick?: boolean) => {\n    setPopoverOpen(false);\n    setPinnedSegment(null);\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        popoverDismissedRecently.current = true;\n        plotRef.current!.focusApplication();\n        popoverDismissedRecently.current = false;\n      }, 0);\n    } else {\n      onHighlightChange(null);\n    }\n  };\n\n  return (\n    <div\n      className={clsx(styles['chart-container'], fitHeight && styles['chart-container--fit-height'])}\n      ref={containerRef}\n    >\n      <div\n        className={clsx(\n          styles['chart-container-chart-plot'],\n          fitHeight && styles['chart-container-chart-plot--fit-height']\n        )}\n      >\n        <ChartPlot\n          ref={plotRef}\n          width=\"100%\"\n          height={fitHeight ? '100%' : height}\n          transform={`translate(${width / 2} ${height / 2})`}\n          isPrecise={true}\n          isClickable={!isPopoverOpen}\n          ariaLabel={ariaLabel}\n          ariaLabelledby={ariaLabelledby}\n          ariaDescription={ariaDescription}\n          ariaDescribedby={hasInnerContent ? innerMetricId : undefined}\n          ariaRoleDescription={i18nStrings?.chartAriaRoleDescription}\n          activeElementRef={focusedSegmentRef}\n          activeElementKey={highlightedSegmentIndex?.toString()}\n          onApplicationFocus={onApplicationFocus}\n          onApplicationBlur={onApplicationBlur}\n          onKeyDown={onKeyDown}\n          onMouseOut={checkMouseLeave}\n        >\n          <Segments\n            pieData={pieData}\n            dimensions={dimensions}\n            variant={variant}\n            focusedSegmentRef={focusedSegmentRef}\n            popoverTrackRef={popoverTrackRef}\n            highlightedSegment={highlightedSegment}\n            segmentAriaRoleDescription={i18nStrings?.segmentAriaRoleDescription}\n            onMouseDown={onMouseDown}\n            onMouseOver={onMouseOver}\n            onTouchStart={onTouchStart}\n          />\n          {hasLabels && (\n            <Labels\n              pieData={pieData}\n              dimensions={dimensions}\n              segmentDescription={segmentDescription}\n              visibleDataSum={dataSum}\n              hideTitles={hideTitles}\n              hideDescriptions={hideDescriptions}\n              highlightedSegment={highlightedSegment}\n              containerRef={containerRef}\n            />\n          )}\n        </ChartPlot>\n      </div>\n\n      {hasInnerContent && (\n        <div className={styles['inner-content']} id={innerMetricId}>\n          {innerMetricValue && (\n            <InternalBox\n              variant={dimensions.size === 'small' ? 'h3' : 'h1'}\n              tagOverride=\"div\"\n              color=\"inherit\"\n              padding=\"n\"\n            >\n              {innerMetricValue}\n            </InternalBox>\n          )}\n          {innerMetricDescription && dimensions.size !== 'small' && (\n            <InternalBox variant=\"h3\" color=\"text-body-secondary\" tagOverride=\"div\" padding=\"n\">\n              {innerMetricDescription}\n            </InternalBox>\n          )}\n        </div>\n      )}\n      {isPopoverOpen && popoverData && (\n        <ChartPopover\n          ref={popoverRef}\n          title={\n            popoverData.series && (\n              <InternalBox className={styles['popover-header']} variant=\"strong\">\n                <SeriesMarker color={popoverData.series.color} type={popoverData.series.markerType} />{' '}\n                {popoverData.series.label}\n              </InternalBox>\n            )\n          }\n          trackRef={popoverData.trackRef}\n          trackKey={popoverData.series.index}\n          dismissButton={pinnedSegment !== null}\n          dismissAriaLabel={i18nStrings.detailPopoverDismissAriaLabel}\n          onDismiss={onPopoverDismiss}\n          container={plotRef.current?.svg || null}\n          size={detailPopoverSize}\n          onMouseLeave={checkMouseLeave}\n          onBlur={onApplicationBlur}\n        >\n          {popoverContent}\n          {detailPopoverFooterContent && <ChartPopoverFooter>{detailPopoverFooterContent}</ChartPopoverFooter>}\n        </ChartPopover>\n      )}\n      <LiveRegion source={[popoverContentRef]} />\n    </div>\n  );\n};\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChF,OAAOC,IAAI,MAAM,MAAM;AAGvB,SAASC,YAAY,QAAQ,0CAA0C;AAEvE,OAAOC,WAAW,MAAM,iBAAiB;AACzC,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,SAA2B,MAAM,mCAAmC;AAC3E,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,kBAAkB,MAAM,6CAA6C;AAC5E,OAAOC,aAAa,MAAM,6CAA6C;AACvE,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,SAASC,gBAAgB,QAAQ,wDAAwD;AACzF,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,SAASC,WAAW,QAAQ,gCAAgC;AAE5D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,SAAS;AAE7D,OAAOC,MAAM,MAAM,iBAAiB;AA+BpC,eAAeC,IAAA,IAuBgB;EAAA,IAvBgB;IAC7CC,SAAS;IACTC,MAAM,EAAEC,cAAc;IACtBC,OAAO;IACPC,IAAI;IACJC,KAAK;IACLC,WAAW;IACXC,SAAS;IACTC,cAAc;IACdC,eAAe;IACfC,gBAAgB;IAChBC,sBAAsB;IACtBC,UAAU;IACVC,gBAAgB;IAChBC,oBAAoB;IACpBC,iBAAiB;IACjBC,mBAAmB;IACnBC,kBAAkB;IAClBC,kBAAkB;IAClBC,iBAAiB;IACjBC,aAAa;IACbC,OAAO;IACPC;EAAO,CACkB,GAAAvB,IAAA;;EACzB,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAW,IAAI,CAAC;EAClE,MAAM+C,OAAO,GAAGhD,MAAM,CAAe,IAAI,CAAC;EAC1C,MAAMiD,YAAY,GAAGjD,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAMkD,iBAAiB,GAAGlD,MAAM,CAAc,IAAI,CAAC;EACnD,MAAMmD,eAAe,GAAGnD,MAAM,CAAmB,IAAI,CAAC;EACtD,MAAMoD,UAAU,GAAGpD,MAAM,CAAqB,IAAI,CAAC;EAEnD,MAAMqD,SAAS,GAAG,EAAElB,UAAU,IAAIC,gBAAgB,CAAC;EACnD,MAAMkB,SAAS,GAAGxC,gBAAgB,EAAE;EAEpC,MAAMU,MAAM,GAAG,CAAA+B,EAAA,GAAA3C,gBAAgB,CAAC,MAAK;IAAA,IAAA2C,EAAA,EAAAC,EAAA;IAAC,QAAAA,EAAA,IAAAD,EAAA,GAAAP,OAAO,CAACS,OAAO,cAAAF,EAAA,uBAAAA,EAAA,CAAEG,GAAG,cAAAF,EAAA,cAAAA,EAAA,GAAI,IAAI;EAAA,GAAE,CAACjC,SAAS,CAAC,cAAAgC,EAAA,cAAAA,EAAA,GAAI9B,cAAc;EAEjG,MAAMkC,UAAU,GAAG5D,OAAO,CACxB,MACEqB,mBAAmB,CAAC;IAAEO,IAAI,EAAEJ,SAAS,GAAGqC,IAAI,CAACC,GAAG,CAACrC,MAAM,EAAEI,KAAK,CAAC,GAAGD,IAAI;IAAE0B,SAAS;IAAES,aAAa,EAAER;EAAS,CAAE,CAAC,EAChH,CAAC/B,SAAS,EAAEC,MAAM,EAAEI,KAAK,EAAED,IAAI,EAAE0B,SAAS,EAAEC,SAAS,CAAC,CACvD;EAED;EACA,MAAMS,eAAe,GACnBrC,OAAO,KAAK,OAAO,KAAKO,gBAAgB,IAAKC,sBAAsB,IAAIyB,UAAU,CAAChC,IAAI,KAAK,OAAQ,CAAC;EAEtG,MAAMqC,aAAa,GAAGnD,WAAW,CAAC,wBAAwB,CAAC;EAE3D,MAAM,CAACoD,aAAa,EAAEC,cAAc,CAAC,GAAGjE,QAAQ,CAAU,KAAK,CAAC;EAChE,MAAM,CAACkE,WAAW,EAAEC,cAAc,CAAC,GAAGnE,QAAQ,EAAkB;EAEhE,MAAMoE,uBAAuB,GAAGtE,OAAO,CAAC,MAAK;IAC3C,KAAK,IAAIuE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG1B,OAAO,CAAC2B,MAAM,EAAED,KAAK,EAAE,EAAE;MACnD,IAAI1B,OAAO,CAAC0B,KAAK,CAAC,CAACE,IAAI,CAACC,KAAK,KAAKhC,kBAAkB,EAAE;QACpD,OAAO6B,KAAK;;;IAGhB,OAAO,IAAI;EACb,CAAC,EAAE,CAAC1B,OAAO,EAAEH,kBAAkB,CAAC,CAAC;EAEjC,MAAMiC,0BAA0B,GAAG3E,OAAO,CACxC,MAAOwC,mBAAmB,IAAIE,kBAAkB,GAAGF,mBAAmB,CAACE,kBAAkB,CAAC,GAAG,IAAK,EAClG,CAACF,mBAAmB,EAAEE,kBAAkB,CAAC,CAC1C;EAED,MAAMkC,IAAI,GAAGtE,eAAe,CAAC,WAAW,CAAC;EACzC,MAAMuE,cAAc,GAAGvC,oBAAoB,IAAIlB,cAAc,CAACwD,IAAI,EAAE9C,WAAW,CAAC;EAChF,MAAMgD,OAAO,GAAGV,WAAW,GAAGS,cAAc,CAACT,WAAW,CAACM,KAAK,EAAE5B,OAAO,CAAC,GAAG,EAAE;EAC7E,MAAMiC,iBAAiB,GAAG9E,MAAM,CAAwB,IAAI,CAAC;EAC7D,MAAM+E,cAAc,GAAGZ,WAAW,IAAIvE,KAAA,CAAAoF,aAAA,CAACvE,aAAa;IAACoE,OAAO,EAAEA,OAAO;IAAEI,WAAW,EAAE,IAAI;IAAEC,GAAG,EAAEJ;EAAiB,EAAI;EAEpH,MAAMK,wBAAwB,GAAGnF,MAAM,CAAC,KAAK,CAAC;EAC9C,MAAMoF,aAAa,GAAGpF,MAAM,CAAC,KAAK,CAAC;EACnC,MAAMqF,WAAW,GAAGrF,MAAM,CAAC,KAAK,CAAC;EAEjC,MAAMsF,gBAAgB,GAAGzF,WAAW,CACjC0F,aAAoC,IAAI;IACvC,MAAMC,OAAO,GAAGD,aAAa,CAACd,KAAK;IACnC,IAAIe,OAAO,KAAK/C,kBAAkB,EAAE;MAClCC,iBAAiB,CAAC8C,OAAO,CAAC;;IAG5B,IAAIrC,eAAe,CAACM,OAAO,EAAE;MAC3BW,cAAc,CAAC;QACbK,KAAK,EAAEc,aAAa,CAACd,KAAK;QAC1BgB,MAAM,EAAE;UACNC,KAAK,EAAEH,aAAa,CAACG,KAAK;UAC1BpB,KAAK,EAAEiB,aAAa,CAACjB,KAAK;UAC1BqB,KAAK,EAAEJ,aAAa,CAACd,KAAK,CAACmB,KAAK;UAChCC,UAAU,EAAE;SACb;QACDC,QAAQ,EAAE3C;OACX,CAAC;MACFe,cAAc,CAAC,IAAI,CAAC;;EAExB,CAAC,EACD,CAACzB,kBAAkB,EAAEyB,cAAc,EAAExB,iBAAiB,CAAC,CACxD;EAED,MAAMqD,uBAAuB,GAAGlG,WAAW,CAAC,MAAK;IAC/CqE,cAAc,CAAC,KAAK,CAAC;IACrBxB,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC,EAAE,CAACA,iBAAiB,EAAEwB,cAAc,CAAC,CAAC;EAEvC,MAAM8B,eAAe,GAAIC,KAAuB,IAAI;IAClD,IAAInD,aAAa,KAAK,IAAI,EAAE;MAC1B;;IAGF,IACE3C,YAAY,CAACiD,UAAU,CAACK,OAAO,EAAEwC,KAAK,CAACC,aAAa,CAAC,IACrD/F,YAAY,CAAC+C,iBAAiB,CAACO,OAAO,EAAEwC,KAAK,CAACC,aAAa,CAAC,EAC5D;MACA;;IAGFH,uBAAuB,EAAE;EAC3B,CAAC;EAEDjG,SAAS,CAAC,MAAK;IACb,MAAMqG,SAAS,GAAIF,KAAoB,IAAI;MACzC,IAAIA,KAAK,CAACG,GAAG,KAAK,QAAQ,EAAE;QAC1BL,uBAAuB,EAAE;QACzBX,aAAa,CAAC3B,OAAO,GAAG,IAAI;;IAEhC,CAAC;IACD4C,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEH,SAAS,CAAC;IAC/C,OAAO,MAAME,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,SAAS,CAAC;EACjE,CAAC,EAAE,CAACJ,uBAAuB,CAAC,CAAC;EAE7B,MAAMS,WAAW,GAAG3G,WAAW,CAC5B0F,aAAoC,IAAI;IACvC,IAAIzC,aAAa,KAAKyC,aAAa,CAACd,KAAK,EAAE;MACzC1B,gBAAgB,CAAC,IAAI,CAAC;MACtBgD,uBAAuB,EAAE;KAC1B,MAAM;MACLhD,gBAAgB,CAACwC,aAAa,CAACd,KAAK,CAAC;MACrCa,gBAAgB,CAACC,aAAa,CAAC;;EAEnC,CAAC,EACD,CAACzC,aAAa,EAAEiD,uBAAuB,EAAEhD,gBAAgB,EAAEuC,gBAAgB,CAAC,CAC7E;EACD,MAAMmB,WAAW,GAAG5G,WAAW,CAC5B0F,aAAoC,IAAI;IACvC,IAAIH,aAAa,CAAC3B,OAAO,EAAE;MACzB2B,aAAa,CAAC3B,OAAO,GAAG,KAAK;MAC7B;;IAEF,IAAI4B,WAAW,CAAC5B,OAAO,EAAE;MACvB4B,WAAW,CAAC5B,OAAO,GAAG,KAAK;MAC3B;;IAEF,IAAIX,aAAa,KAAK,IAAI,EAAE;MAC1B;;IAEFwC,gBAAgB,CAACC,aAAa,CAAC;EACjC,CAAC,EACD,CAACzC,aAAa,EAAEwC,gBAAgB,CAAC,CAClC;EACD,MAAMoB,YAAY,GAAG7G,WAAW,CAAC,MAAK;IACpCwF,WAAW,CAAC5B,OAAO,GAAG,IAAI;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0C,SAAS,GAAGtG,WAAW,CAC1BoG,KAA0B,IAAI;IAC7B,MAAMU,OAAO,GAAGV,KAAK,CAACU,OAAO;IAC7B,IACEA,OAAO,KAAK5F,OAAO,CAAC6F,KAAK,IACzBD,OAAO,KAAK5F,OAAO,CAAC8F,IAAI,IACxBF,OAAO,KAAK5F,OAAO,CAAC+F,KAAK,IACzBH,OAAO,KAAK5F,OAAO,CAACgG,KAAK,EACzB;MACA;;IAGFd,KAAK,CAACe,cAAc,EAAE;IAEtB,IAAIC,SAAS,GAAG5C,uBAAuB,IAAI,CAAC;IAC5C,MAAM6C,GAAG,GAAGtE,OAAO,CAAC2B,MAAM,GAAG,CAAC;IAC9B,IAAIoC,OAAO,KAAK5F,OAAO,CAAC6F,KAAK,EAAE;MAC7BK,SAAS,EAAE;MACX,IAAIA,SAAS,GAAGC,GAAG,EAAE;QACnBD,SAAS,GAAG,CAAC;;KAEhB,MAAM,IAAIN,OAAO,KAAK5F,OAAO,CAAC8F,IAAI,EAAE;MACnCI,SAAS,EAAE;MACX,IAAIA,SAAS,GAAG,CAAC,EAAE;QACjBA,SAAS,GAAGC,GAAG;;;IAGnB,IAAIP,OAAO,KAAK5F,OAAO,CAAC+F,KAAK,IAAIH,OAAO,KAAK5F,OAAO,CAACgG,KAAK,EAAE;MAC1DhE,gBAAgB,CAACH,OAAO,CAACqE,SAAS,CAAC,CAACzC,IAAI,CAACC,KAAK,CAAC;;IAEjDa,gBAAgB,CAAC1C,OAAO,CAACqE,SAAS,CAAC,CAACzC,IAAI,CAAC;EAC3C,CAAC,EACD,CAACzB,gBAAgB,EAAEuC,gBAAgB,EAAE1C,OAAO,EAAEyB,uBAAuB,CAAC,CACvE;EACD,MAAM8C,kBAAkB,GAAGtH,WAAW,CACpC,CAACuH,MAAW,EAAEC,MAA4B,KAAI;IAC5C,IAAIvE,aAAa,KAAK,IAAI,IAAIqC,wBAAwB,CAAC1B,OAAO,IAAI4D,MAAM,KAAK,OAAO,EAAE;MACpF;;IAGF,MAAM7B,OAAO,GAAG/C,kBAAkB,IAAIE,aAAa,IAAIC,OAAO,CAAC,CAAC,CAAC,CAAC4B,IAAI,CAACC,KAAK;IAC5E,MAAM6C,OAAO,GAAG1E,OAAO,CAAC2E,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChD,IAAI,CAACC,KAAK,KAAKe,OAAO,CAAC;IAC7DF,gBAAgB,CAACgC,OAAO,CAAC,CAAC,CAAC,CAAC9C,IAAI,CAAC;EACnC,CAAC,EACD,CAAC1B,aAAa,EAAEF,OAAO,EAAE0C,gBAAgB,EAAE7C,kBAAkB,EAAEE,aAAa,CAAC,CAC9E;EAED,MAAM8E,iBAAiB,GAAG5H,WAAW,CAClCoG,KAAuB,IAAI;IAC1B,MAAMyB,UAAU,GAAGzB,KAAK,CAACC,aAAa,IAAID,KAAK,CAACoB,MAAM;IACtD,IAAIK,UAAU,KAAK,IAAI,IAAI,EAAEA,UAAU,YAAYC,OAAO,CAAC,IAAI,CAAC3G,WAAW,CAACiC,YAAY,CAACQ,OAAO,EAAEiE,UAAU,CAAC,EAAE;MAC7G;MACA;MACA;MACAxD,cAAc,CAAC,KAAK,CAAC;MACrBnB,gBAAgB,CAAC,IAAI,CAAC;;EAE1B,CAAC,EACD,CAACA,gBAAgB,CAAC,CACnB;EACD,MAAM6E,gBAAgB,GAAIC,YAAsB,IAAI;IAClD3D,cAAc,CAAC,KAAK,CAAC;IACrBnB,gBAAgB,CAAC,IAAI,CAAC;IAEtB,IAAI,CAAC8E,YAAY,EAAE;MACjB;MACAC,UAAU,CAAC,MAAK;QACd3C,wBAAwB,CAAC1B,OAAO,GAAG,IAAI;QACvCT,OAAO,CAACS,OAAQ,CAACsE,gBAAgB,EAAE;QACnC5C,wBAAwB,CAAC1B,OAAO,GAAG,KAAK;MAC1C,CAAC,EAAE,CAAC,CAAC;KACN,MAAM;MACLf,iBAAiB,CAAC,IAAI,CAAC;;EAE3B,CAAC;EAED,OACE9C,KAAA,CAAAoF,aAAA;IACEgD,SAAS,EAAE9H,IAAI,CAACmB,MAAM,CAAC,iBAAiB,CAAC,EAAEE,SAAS,IAAIF,MAAM,CAAC,6BAA6B,CAAC,CAAC;IAC9F6D,GAAG,EAAEjC;EAAY,GAEjBrD,KAAA,CAAAoF,aAAA;IACEgD,SAAS,EAAE9H,IAAI,CACbmB,MAAM,CAAC,4BAA4B,CAAC,EACpCE,SAAS,IAAIF,MAAM,CAAC,wCAAwC,CAAC;EAC9D,GAEDzB,KAAA,CAAAoF,aAAA,CAAC1E,SAAS;IACR4E,GAAG,EAAElC,OAAO;IACZpB,KAAK,EAAC,MAAM;IACZJ,MAAM,EAAED,SAAS,GAAG,MAAM,GAAGC,MAAM;IACnCyG,SAAS,EAAE,aAAarG,KAAK,GAAG,CAAC,IAAIJ,MAAM,GAAG,CAAC,GAAG;IAClD0G,SAAS,EAAE,IAAI;IACfC,WAAW,EAAE,CAAClE,aAAa;IAC3BnC,SAAS,EAAEA,SAAS;IACpBC,cAAc,EAAEA,cAAc;IAC9BC,eAAe,EAAEA,eAAe;IAChCoG,eAAe,EAAErE,eAAe,GAAGC,aAAa,GAAGqE,SAAS;IAC5DC,mBAAmB,EAAEzG,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0G,wBAAwB;IAC1DC,gBAAgB,EAAEtF,iBAAiB;IACnCuF,gBAAgB,EAAEpE,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEqE,QAAQ,EAAE;IACrDvB,kBAAkB,EAAEA,kBAAkB;IACtCM,iBAAiB,EAAEA,iBAAiB;IACpCtB,SAAS,EAAEA,SAAS;IACpBwC,UAAU,EAAE3C;EAAe,GAE3BpG,KAAA,CAAAoF,aAAA,CAAC9D,QAAQ;IACP0B,OAAO,EAAEA,OAAO;IAChBe,UAAU,EAAEA,UAAU;IACtBjC,OAAO,EAAEA,OAAO;IAChBwB,iBAAiB,EAAEA,iBAAiB;IACpCC,eAAe,EAAEA,eAAe;IAChCV,kBAAkB,EAAEA,kBAAkB;IACtCmG,0BAA0B,EAAE/G,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE+G,0BAA0B;IACnEpC,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA;EAAY,EAC1B,EACDrD,SAAS,IACRzD,KAAA,CAAAoF,aAAA,CAAC/D,MAAM;IACL2B,OAAO,EAAEA,OAAO;IAChBe,UAAU,EAAEA,UAAU;IACtBnB,kBAAkB,EAAEA,kBAAkB;IACtCqG,cAAc,EAAEhG,OAAO;IACvBV,UAAU,EAAEA,UAAU;IACtBC,gBAAgB,EAAEA,gBAAgB;IAClCK,kBAAkB,EAAEA,kBAAkB;IACtCQ,YAAY,EAAEA;EAAY,EAE7B,CACS,CACR,EAELc,eAAe,IACdnE,KAAA,CAAAoF,aAAA;IAAKgD,SAAS,EAAE3G,MAAM,CAAC,eAAe,CAAC;IAAEyH,EAAE,EAAE9E;EAAa,GACvD/B,gBAAgB,IACfrC,KAAA,CAAAoF,aAAA,CAAC5E,WAAW;IACVsB,OAAO,EAAEiC,UAAU,CAAChC,IAAI,KAAK,OAAO,GAAG,IAAI,GAAG,IAAI;IAClDoH,WAAW,EAAC,KAAK;IACjBrD,KAAK,EAAC,SAAS;IACfsD,OAAO,EAAC;EAAG,GAEV/G,gBAAgB,CAEpB,EACAC,sBAAsB,IAAIyB,UAAU,CAAChC,IAAI,KAAK,OAAO,IACpD/B,KAAA,CAAAoF,aAAA,CAAC5E,WAAW;IAACsB,OAAO,EAAC,IAAI;IAACgE,KAAK,EAAC,qBAAqB;IAACqD,WAAW,EAAC,KAAK;IAACC,OAAO,EAAC;EAAG,GAChF9G,sBAAsB,CAE1B,CAEJ,EACA+B,aAAa,IAAIE,WAAW,IAC3BvE,KAAA,CAAAoF,aAAA,CAACzE,YAAY;IACX2E,GAAG,EAAE9B,UAAU;IACfwC,KAAK,EACHzB,WAAW,CAACsB,MAAM,IAChB7F,KAAA,CAAAoF,aAAA,CAAC5E,WAAW;MAAC4H,SAAS,EAAE3G,MAAM,CAAC,gBAAgB,CAAC;MAAEK,OAAO,EAAC;IAAQ,GAChE9B,KAAA,CAAAoF,aAAA,CAACtE,YAAY;MAACgF,KAAK,EAAEvB,WAAW,CAACsB,MAAM,CAACC,KAAK;MAAEuD,IAAI,EAAE9E,WAAW,CAACsB,MAAM,CAACI;IAAU,EAAI,EAAC,GAAG,EACzF1B,WAAW,CAACsB,MAAM,CAACE,KAAK,CAE5B;IAEHG,QAAQ,EAAE3B,WAAW,CAAC2B,QAAQ;IAC9BoD,QAAQ,EAAE/E,WAAW,CAACsB,MAAM,CAACnB,KAAK;IAClC6E,aAAa,EAAErG,aAAa,KAAK,IAAI;IACrCsG,gBAAgB,EAAEvH,WAAW,CAACwH,6BAA6B;IAC3DC,SAAS,EAAE1B,gBAAgB;IAC3B2B,SAAS,EAAE,EAAA/F,EAAA,GAAAR,OAAO,CAACS,OAAO,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,GAAG,KAAI,IAAI;IACvC/B,IAAI,EAAEW,iBAAiB;IACvBkH,YAAY,EAAExD,eAAe;IAC7ByD,MAAM,EAAEhC;EAAiB,GAExB1C,cAAc,EACdL,0BAA0B,IAAI9E,KAAA,CAAAoF,aAAA,CAACxE,kBAAkB,QAAEkE,0BAA0B,CAAsB,CAEvG,EACD9E,KAAA,CAAAoF,aAAA,CAACrE,UAAU;IAAC+I,MAAM,EAAE,CAAC5E,iBAAiB;EAAC,EAAI,CACvC;AAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}