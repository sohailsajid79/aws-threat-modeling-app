{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { memo, useState, useMemo, useEffect, useCallback } from 'react';\nimport CodeEditorComponent from '@cloudscape-design/components/code-editor';\nimport withDataDrivenFormField from '../../hoc/withDataDrivenFormField';\nimport 'ace-builds/css/ace.css';\nimport 'ace-builds/css/theme/dawn.css';\nimport 'ace-builds/css/theme/tomorrow_night_bright.css';\nconst DEFAULT_RESOURCE_STRINGS = {\n  loadingState: 'Loading code editor',\n  errorState: 'There was an error loading the code editor.',\n  errorStateRecovery: 'Retry',\n  editorGroupAriaLabel: 'Code editor',\n  statusBarGroupAriaLabel: 'Status bar',\n  cursorPosition: (row, column) => `Ln ${row}, Col ${column}`,\n  errorsTab: 'Errors',\n  warningsTab: 'Warnings',\n  preferencesButtonAriaLabel: 'Preferences',\n  paneCloseButtonAriaLabel: 'Close',\n  preferencesModalHeader: 'Preferences',\n  preferencesModalCancel: 'Cancel',\n  preferencesModalConfirm: 'Confirm',\n  preferencesModalWrapLines: 'Wrap lines',\n  preferencesModalTheme: 'Theme',\n  preferencesModalLightThemes: 'Light themes',\n  preferencesModalDarkThemes: 'Dark themes'\n};\nconst CodeEditor = props => {\n  const [preferences, setPreferences] = useState(props.preferences);\n  const [loading, setLoading] = useState(true);\n  const [ace, setAce] = useState();\n  const resourceStrings = useMemo(() => {\n    return {\n      ...DEFAULT_RESOURCE_STRINGS,\n      ...props.i18nStrings\n    };\n  }, [props.i18nStrings]);\n  const loadAce = useCallback(() => {\n    setLoading(true);\n    return import('ace-builds').then(ace => {\n      ace.config.set('useStrictCSP', true);\n      ace.config.set('loadWorkerFromBlob', false);\n      setAce(ace);\n    }).then(() => import('ace-builds/webpack-resolver')).catch(e => {\n      console.log('Error in importing ace-builds', e);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    loadAce();\n  }, [loadAce]);\n  return _jsx(CodeEditorComponent, {\n    ...props,\n    ...props.input,\n    loading: loading,\n    ace: ace,\n    language: props.language,\n    i18nStrings: resourceStrings,\n    preferences: preferences,\n    onPreferencesChange: e => setPreferences(e.detail),\n    onChange: _ref => {\n      let {\n        detail\n      } = _ref;\n      return props.input.onChange(detail.value);\n    },\n    onRecoveryClick: loadAce\n  });\n};\nexport default memo(withDataDrivenFormField(CodeEditor));","map":{"version":3,"names":["jsx","_jsx","memo","useState","useMemo","useEffect","useCallback","CodeEditorComponent","withDataDrivenFormField","DEFAULT_RESOURCE_STRINGS","loadingState","errorState","errorStateRecovery","editorGroupAriaLabel","statusBarGroupAriaLabel","cursorPosition","row","column","errorsTab","warningsTab","preferencesButtonAriaLabel","paneCloseButtonAriaLabel","preferencesModalHeader","preferencesModalCancel","preferencesModalConfirm","preferencesModalWrapLines","preferencesModalTheme","preferencesModalLightThemes","preferencesModalDarkThemes","CodeEditor","props","preferences","setPreferences","loading","setLoading","ace","setAce","resourceStrings","i18nStrings","loadAce","then","config","set","catch","e","console","log","finally","input","language","onPreferencesChange","detail","onChange","_ref","value","onRecoveryClick"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/FormRenderer/components/CodeEditor/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { memo, useState, useMemo, useEffect, useCallback } from 'react';\nimport CodeEditorComponent from '@cloudscape-design/components/code-editor';\nimport withDataDrivenFormField from '../../hoc/withDataDrivenFormField';\nimport 'ace-builds/css/ace.css';\nimport 'ace-builds/css/theme/dawn.css';\nimport 'ace-builds/css/theme/tomorrow_night_bright.css';\nconst DEFAULT_RESOURCE_STRINGS = {\n    loadingState: 'Loading code editor',\n    errorState: 'There was an error loading the code editor.',\n    errorStateRecovery: 'Retry',\n    editorGroupAriaLabel: 'Code editor',\n    statusBarGroupAriaLabel: 'Status bar',\n    cursorPosition: (row, column) => `Ln ${row}, Col ${column}`,\n    errorsTab: 'Errors',\n    warningsTab: 'Warnings',\n    preferencesButtonAriaLabel: 'Preferences',\n    paneCloseButtonAriaLabel: 'Close',\n    preferencesModalHeader: 'Preferences',\n    preferencesModalCancel: 'Cancel',\n    preferencesModalConfirm: 'Confirm',\n    preferencesModalWrapLines: 'Wrap lines',\n    preferencesModalTheme: 'Theme',\n    preferencesModalLightThemes: 'Light themes',\n    preferencesModalDarkThemes: 'Dark themes',\n};\nconst CodeEditor = (props) => {\n    const [preferences, setPreferences] = useState(props.preferences);\n    const [loading, setLoading] = useState(true);\n    const [ace, setAce] = useState();\n    const resourceStrings = useMemo(() => {\n        return {\n            ...DEFAULT_RESOURCE_STRINGS,\n            ...props.i18nStrings,\n        };\n    }, [props.i18nStrings]);\n    const loadAce = useCallback(() => {\n        setLoading(true);\n        return import('ace-builds')\n            .then((ace) => {\n            ace.config.set('useStrictCSP', true);\n            ace.config.set('loadWorkerFromBlob', false);\n            setAce(ace);\n        })\n            .then(() => import('ace-builds/webpack-resolver'))\n            .catch((e) => {\n            console.log('Error in importing ace-builds', e);\n        })\n            .finally(() => {\n            setLoading(false);\n        });\n    }, []);\n    useEffect(() => {\n        loadAce();\n    }, [loadAce]);\n    return (_jsx(CodeEditorComponent, { ...props, ...props.input, loading: loading, ace: ace, language: props.language, i18nStrings: resourceStrings, preferences: preferences, onPreferencesChange: (e) => setPreferences(e.detail), onChange: ({ detail }) => props.input.onChange(detail.value), onRecoveryClick: loadAce }));\n};\nexport default memo(withDataDrivenFormField(CodeEditor));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}