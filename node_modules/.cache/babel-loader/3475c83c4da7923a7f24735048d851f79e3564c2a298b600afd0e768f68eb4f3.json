{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nexport const COMPONENT_METADATA_KEY = '__awsuiMetadata__';\nexport function useComponentMetadata(componentName, packageVersion, analyticsMetadata) {\n  const elementRef = useRef(null);\n  useEffect(() => {\n    if (elementRef.current) {\n      const node = elementRef.current;\n      const metadata = {\n        name: componentName,\n        version: packageVersion\n      };\n      // Only add analytics property to metadata if analytics property is non-empty\n      if (analyticsMetadata && Object.keys(analyticsMetadata).length > 0) {\n        metadata.analytics = analyticsMetadata;\n      }\n      Object.freeze(metadata);\n      Object.defineProperty(node, COMPONENT_METADATA_KEY, {\n        value: metadata,\n        writable: false,\n        configurable: true\n      });\n    }\n  });\n  return elementRef;\n}","map":{"version":3,"names":["useEffect","useRef","COMPONENT_METADATA_KEY","useComponentMetadata","componentName","packageVersion","analyticsMetadata","elementRef","current","node","metadata","name","version","Object","keys","length","analytics","freeze","defineProperty","value","writable","configurable"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@cloudscape-design/component-toolkit/internal/base-component/component-metadata.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nexport const COMPONENT_METADATA_KEY = '__awsuiMetadata__';\nexport function useComponentMetadata(componentName, packageVersion, analyticsMetadata) {\n    const elementRef = useRef(null);\n    useEffect(() => {\n        if (elementRef.current) {\n            const node = elementRef.current;\n            const metadata = {\n                name: componentName,\n                version: packageVersion,\n            };\n            // Only add analytics property to metadata if analytics property is non-empty\n            if (analyticsMetadata && Object.keys(analyticsMetadata).length > 0) {\n                metadata.analytics = analyticsMetadata;\n            }\n            Object.freeze(metadata);\n            Object.defineProperty(node, COMPONENT_METADATA_KEY, { value: metadata, writable: false, configurable: true });\n        }\n    });\n    return elementRef;\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAO,MAAMC,sBAAsB,GAAG,mBAAmB;AACzD,OAAO,SAASC,oBAAoBA,CAACC,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,EAAE;EACnF,MAAMC,UAAU,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC/BD,SAAS,CAAC,MAAM;IACZ,IAAIO,UAAU,CAACC,OAAO,EAAE;MACpB,MAAMC,IAAI,GAAGF,UAAU,CAACC,OAAO;MAC/B,MAAME,QAAQ,GAAG;QACbC,IAAI,EAAEP,aAAa;QACnBQ,OAAO,EAAEP;MACb,CAAC;MACD;MACA,IAAIC,iBAAiB,IAAIO,MAAM,CAACC,IAAI,CAACR,iBAAiB,CAAC,CAACS,MAAM,GAAG,CAAC,EAAE;QAChEL,QAAQ,CAACM,SAAS,GAAGV,iBAAiB;MAC1C;MACAO,MAAM,CAACI,MAAM,CAACP,QAAQ,CAAC;MACvBG,MAAM,CAACK,cAAc,CAACT,IAAI,EAAEP,sBAAsB,EAAE;QAAEiB,KAAK,EAAET,QAAQ;QAAEU,QAAQ,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAK,CAAC,CAAC;IACjH;EACJ,CAAC,CAAC;EACF,OAAOd,UAAU;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}