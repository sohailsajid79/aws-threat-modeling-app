{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter } from \"tslib\";\nimport { useCallback, useState } from 'react';\nimport { fireCancelableEvent } from '../internal/events';\nexport function useCellEditing(_ref) {\n  var _this = this;\n  let {\n    onCancel,\n    onSubmit\n  } = _ref;\n  const [currentEditCell, setCurrentEditCell] = useState(null);\n  const [lastSuccessfulEditCell, setLastSuccessfulEditCell] = useState(null);\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n  const startEdit = cellId => {\n    setLastSuccessfulEditCell(null);\n    setCurrentEditCell(cellId);\n  };\n  const cancelEdit = useCallback(() => setCurrentEditCell(null), []);\n  const completeEdit = (cellId, editCancelled) => {\n    const eventCancelled = fireCancelableEvent(onCancel, {});\n    if (!eventCancelled) {\n      setCurrentEditCell(null);\n      if (!editCancelled) {\n        setLastSuccessfulEditCell(cellId);\n      }\n    }\n  };\n  const checkEditing = _ref2 => {\n    let {\n      rowIndex,\n      colIndex\n    } = _ref2;\n    return rowIndex === (currentEditCell === null || currentEditCell === void 0 ? void 0 : currentEditCell.rowIndex) && colIndex === currentEditCell.colIndex;\n  };\n  const checkLastSuccessfulEdit = _ref3 => {\n    let {\n      rowIndex,\n      colIndex\n    } = _ref3;\n    return rowIndex === (lastSuccessfulEditCell === null || lastSuccessfulEditCell === void 0 ? void 0 : lastSuccessfulEditCell.rowIndex) && colIndex === lastSuccessfulEditCell.colIndex;\n  };\n  const submitEdit = onSubmit ? function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return __awaiter(_this, void 0, void 0, function* () {\n      setCurrentEditLoading(true);\n      try {\n        yield onSubmit(...args);\n      } finally {\n        setCurrentEditLoading(false);\n      }\n    });\n  } : undefined;\n  return {\n    isLoading: currentEditLoading,\n    startEdit,\n    cancelEdit,\n    checkEditing,\n    checkLastSuccessfulEdit,\n    completeEdit,\n    submitEdit\n  };\n}","map":{"version":3,"names":["useCallback","useState","fireCancelableEvent","useCellEditing","_ref","_this","onCancel","onSubmit","currentEditCell","setCurrentEditCell","lastSuccessfulEditCell","setLastSuccessfulEditCell","currentEditLoading","setCurrentEditLoading","startEdit","cellId","cancelEdit","completeEdit","editCancelled","eventCancelled","checkEditing","_ref2","rowIndex","colIndex","checkLastSuccessfulEdit","_ref3","submitEdit","_len","arguments","length","args","Array","_key","__awaiter","undefined","isLoading"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/use-cell-editing.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useCallback, useState } from 'react';\n\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events';\nimport { TableProps } from './interfaces';\n\nexport interface CellId {\n  rowIndex: number;\n  colIndex: number;\n}\n\ninterface CellEditingProps {\n  onCancel?: CancelableEventHandler;\n  onSubmit?: TableProps.SubmitEditFunction<any>;\n}\n\nexport function useCellEditing({ onCancel, onSubmit }: CellEditingProps) {\n  const [currentEditCell, setCurrentEditCell] = useState<null | CellId>(null);\n  const [lastSuccessfulEditCell, setLastSuccessfulEditCell] = useState<null | CellId>(null);\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n\n  const startEdit = (cellId: CellId) => {\n    setLastSuccessfulEditCell(null);\n    setCurrentEditCell(cellId);\n  };\n\n  const cancelEdit = useCallback(() => setCurrentEditCell(null), []);\n\n  const completeEdit = (cellId: CellId, editCancelled: boolean) => {\n    const eventCancelled = fireCancelableEvent(onCancel, {});\n    if (!eventCancelled) {\n      setCurrentEditCell(null);\n      if (!editCancelled) {\n        setLastSuccessfulEditCell(cellId);\n      }\n    }\n  };\n\n  const checkEditing = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === currentEditCell?.rowIndex && colIndex === currentEditCell.colIndex;\n\n  const checkLastSuccessfulEdit = ({ rowIndex, colIndex }: CellId) =>\n    rowIndex === lastSuccessfulEditCell?.rowIndex && colIndex === lastSuccessfulEditCell.colIndex;\n\n  const submitEdit = onSubmit\n    ? async (...args: Parameters<typeof onSubmit>) => {\n        setCurrentEditLoading(true);\n        try {\n          await onSubmit(...args);\n        } finally {\n          setCurrentEditLoading(false);\n        }\n      }\n    : undefined;\n\n  return {\n    isLoading: currentEditLoading,\n    startEdit,\n    cancelEdit,\n    checkEditing,\n    checkLastSuccessfulEdit,\n    completeEdit,\n    submitEdit,\n  };\n}\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAAiCC,mBAAmB,QAAQ,oBAAoB;AAahF,OAAM,SAAUC,cAAcA,CAAAC,IAAA,EAAyC;EAAA,IAAAC,KAAA;EAAA,IAAxC;IAAEC,QAAQ;IAAEC;EAAQ,CAAoB,GAAAH,IAAA;EACrE,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAACS,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EACzF,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMa,SAAS,GAAIC,MAAc,IAAI;IACnCJ,yBAAyB,CAAC,IAAI,CAAC;IAC/BF,kBAAkB,CAACM,MAAM,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAGhB,WAAW,CAAC,MAAMS,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;EAElE,MAAMQ,YAAY,GAAGA,CAACF,MAAc,EAAEG,aAAsB,KAAI;IAC9D,MAAMC,cAAc,GAAGjB,mBAAmB,CAACI,QAAQ,EAAE,EAAE,CAAC;IACxD,IAAI,CAACa,cAAc,EAAE;MACnBV,kBAAkB,CAAC,IAAI,CAAC;MACxB,IAAI,CAACS,aAAa,EAAE;QAClBP,yBAAyB,CAACI,MAAM,CAAC;;;EAGvC,CAAC;EAED,MAAMK,YAAY,GAAGC,KAAA;IAAA,IAAC;MAAEC,QAAQ;MAAEC;IAAQ,CAAU,GAAAF,KAAA;IAAA,OAClDC,QAAQ,MAAKd,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEc,QAAQ,KAAIC,QAAQ,KAAKf,eAAe,CAACe,QAAQ;EAAA;EAEjF,MAAMC,uBAAuB,GAAGC,KAAA;IAAA,IAAC;MAAEH,QAAQ;MAAEC;IAAQ,CAAU,GAAAE,KAAA;IAAA,OAC7DH,QAAQ,MAAKZ,sBAAsB,aAAtBA,sBAAsB,uBAAtBA,sBAAsB,CAAEY,QAAQ,KAAIC,QAAQ,KAAKb,sBAAsB,CAACa,QAAQ;EAAA;EAE/F,MAAMG,UAAU,GAAGnB,QAAQ,GACvB;IAAA,SAAAoB,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAUC,IAAiC,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAjCF,IAAiC,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,OAAIC,SAAA,CAAA5B,KAAA;MAC7CQ,qBAAqB,CAAC,IAAI,CAAC;MAC3B,IAAI;QACF,MAAMN,QAAQ,CAAC,GAAGuB,IAAI,CAAC;OACxB,SAAS;QACRjB,qBAAqB,CAAC,KAAK,CAAC;;IAEhC,CAAC;EAAA,IACDqB,SAAS;EAEb,OAAO;IACLC,SAAS,EAAEvB,kBAAkB;IAC7BE,SAAS;IACTE,UAAU;IACVI,YAAY;IACZI,uBAAuB;IACvBP,YAAY;IACZS;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}