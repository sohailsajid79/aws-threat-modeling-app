{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport icons from './generated/icons';\nimport styles from './styles.css.js';\nfunction iconSizeMap(height) {\n  if (height === null) {\n    // This is the best guess for the contextual height while server rendering.\n    return 'normal';\n  }\n  if (height >= 50) {\n    return 'large';\n  } else if (height >= 36) {\n    return 'big';\n  } else if (height >= 24) {\n    return 'medium';\n  } else if (height <= 16) {\n    return 'small';\n  } else {\n    return 'normal';\n  }\n}\nconst InternalIcon = _a => {\n  var {\n      name,\n      size = 'normal',\n      variant = 'normal',\n      url,\n      alt,\n      svg,\n      badge,\n      __internalRootRef = null\n    } = _a,\n    props = __rest(_a, [\"name\", \"size\", \"variant\", \"url\", \"alt\", \"svg\", \"badge\", \"__internalRootRef\"]);\n  const iconRef = useRef(null);\n  // To ensure a re-render is triggered on visual mode changes\n  useVisualRefresh();\n  const [parentHeight, setParentHeight] = useState(null);\n  const contextualSize = size === 'inherit';\n  const iconSize = contextualSize ? iconSizeMap(parentHeight) : size;\n  const inlineStyles = contextualSize && parentHeight !== null ? {\n    height: `${parentHeight}px`\n  } : {};\n  const baseProps = getBaseProps(props);\n  baseProps.className = clsx(baseProps.className, styles.icon, contextualSize && styles['icon-flex-height'], badge && styles.badge, !contextualSize && styles[`size-${iconSize}-mapped-height`], styles[`size-${iconSize}`], styles[`variant-${variant}`], styles[`name-${name}`]);\n  // Possible infinite loop is not a concern here because line\n  // height should not change without an external state update.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    if (!contextualSize || !iconRef.current) {\n      return;\n    }\n    const {\n      lineHeight\n    } = getComputedStyle(iconRef.current);\n    const newParentHeight = parseInt(lineHeight, 10);\n    setParentHeight(newParentHeight);\n  });\n  const mergedRef = useMergeRefs(iconRef, __internalRootRef);\n  if (svg) {\n    if (url) {\n      warnOnce('Icon', 'You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.');\n    }\n    return React.createElement(\"span\", Object.assign({}, baseProps, {\n      ref: mergedRef,\n      \"aria-hidden\": \"true\",\n      style: inlineStyles\n    }), svg);\n  }\n  if (url) {\n    return React.createElement(\"span\", Object.assign({}, baseProps, {\n      ref: mergedRef,\n      style: inlineStyles\n    }), React.createElement(\"img\", {\n      src: url,\n      alt: alt\n    }));\n  }\n  const validIcon = name && Object.prototype.hasOwnProperty.call(icons, name);\n  function iconMap(name) {\n    if (name === 'gen-ai' && iconSize === 'small') {\n      return React.createElement(\"svg\", {\n        width: \"12\",\n        height: \"12\",\n        viewBox: \"0 0 16 16\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        \"data-testid\": \"gen-ai-filled\"\n      }, React.createElement(\"path\", {\n        d: \"m8 4.4 1.018 2.582L11.6 8 9.018 9.018 8 11.6 6.982 9.018 4.4 8l2.582-1.018L8 4.4ZM2.405 2.41l.002-.003.003-.002-.003-.002-.002-.003-.002.003-.003.002.003.002.002.003Z\",\n        className: \"filled\"\n      }));\n    } else {\n      return icons[name];\n    }\n  }\n  return React.createElement(\"span\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    style: inlineStyles\n  }), validIcon ? iconMap(name) : undefined);\n};\nexport default InternalIcon;","map":{"version":3,"names":["React","useLayoutEffect","useRef","useState","clsx","warnOnce","getBaseProps","useMergeRefs","useVisualRefresh","icons","styles","iconSizeMap","height","InternalIcon","_a","name","size","variant","url","alt","svg","badge","__internalRootRef","props","__rest","iconRef","parentHeight","setParentHeight","contextualSize","iconSize","inlineStyles","baseProps","className","icon","current","lineHeight","getComputedStyle","newParentHeight","parseInt","mergedRef","createElement","Object","assign","ref","style","src","validIcon","prototype","hasOwnProperty","call","iconMap","width","viewBox","xmlns","focusable","d","undefined"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/icon/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport icons from './generated/icons';\nimport { IconProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ntype InternalIconProps = IconProps &\n  InternalBaseComponentProps & {\n    badge?: boolean;\n  };\n\nfunction iconSizeMap(height: number | null) {\n  if (height === null) {\n    // This is the best guess for the contextual height while server rendering.\n    return 'normal';\n  }\n\n  if (height >= 50) {\n    return 'large';\n  } else if (height >= 36) {\n    return 'big';\n  } else if (height >= 24) {\n    return 'medium';\n  } else if (height <= 16) {\n    return 'small';\n  } else {\n    return 'normal';\n  }\n}\n\nconst InternalIcon = ({\n  name,\n  size = 'normal',\n  variant = 'normal',\n  url,\n  alt,\n  svg,\n  badge,\n  __internalRootRef = null,\n  ...props\n}: InternalIconProps) => {\n  const iconRef = useRef<HTMLElement>(null);\n  // To ensure a re-render is triggered on visual mode changes\n  useVisualRefresh();\n  const [parentHeight, setParentHeight] = useState<number | null>(null);\n  const contextualSize = size === 'inherit';\n  const iconSize = contextualSize ? iconSizeMap(parentHeight) : size;\n  const inlineStyles = contextualSize && parentHeight !== null ? { height: `${parentHeight}px` } : {};\n  const baseProps = getBaseProps(props);\n\n  baseProps.className = clsx(\n    baseProps.className,\n    styles.icon,\n    contextualSize && styles['icon-flex-height'],\n    badge && styles.badge,\n    !contextualSize && styles[`size-${iconSize}-mapped-height`],\n    styles[`size-${iconSize}`],\n    styles[`variant-${variant}`],\n    styles[`name-${name}`]\n  );\n\n  // Possible infinite loop is not a concern here because line\n  // height should not change without an external state update.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    if (!contextualSize || !iconRef.current) {\n      return;\n    }\n    const { lineHeight } = getComputedStyle(iconRef.current);\n    const newParentHeight = parseInt(lineHeight, 10);\n    setParentHeight(newParentHeight);\n  });\n\n  const mergedRef = useMergeRefs(iconRef, __internalRootRef);\n\n  if (svg) {\n    if (url) {\n      warnOnce(\n        'Icon',\n        'You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.'\n      );\n    }\n    return (\n      <span {...baseProps} ref={mergedRef} aria-hidden=\"true\" style={inlineStyles}>\n        {svg}\n      </span>\n    );\n  }\n\n  if (url) {\n    return (\n      <span {...baseProps} ref={mergedRef} style={inlineStyles}>\n        <img src={url} alt={alt} />\n      </span>\n    );\n  }\n\n  const validIcon = name && Object.prototype.hasOwnProperty.call(icons, name);\n\n  function iconMap(name: IconProps.Name) {\n    if (name === 'gen-ai' && iconSize === 'small') {\n      return (\n        <svg\n          width=\"12\"\n          height=\"12\"\n          viewBox=\"0 0 16 16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          data-testid=\"gen-ai-filled\"\n        >\n          <path\n            d=\"m8 4.4 1.018 2.582L11.6 8 9.018 9.018 8 11.6 6.982 9.018 4.4 8l2.582-1.018L8 4.4ZM2.405 2.41l.002-.003.003-.002-.003-.002-.002-.003-.002.003-.003.002.003.002.002.003Z\"\n            className=\"filled\"\n          />\n        </svg>\n      );\n    } else {\n      return icons[name];\n    }\n  }\n\n  return (\n    <span {...baseProps} ref={mergedRef} style={inlineStyles}>\n      {validIcon ? iconMap(name) : undefined}\n    </span>\n  );\n};\n\nexport { InternalIconProps };\nexport default InternalIcon;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}