{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { usePrevious } from '../../internal/hooks/use-previous';\nexport default class AsyncStore {\n  constructor(state) {\n    this._listeners = [];\n    this._state = state;\n  }\n  get() {\n    return this._state;\n  }\n  set(cb) {\n    const prevState = this._state;\n    const newState = cb(prevState);\n    this._state = newState;\n    unstable_batchedUpdates(() => {\n      for (const [selector, listener] of this._listeners) {\n        if (selector(prevState) !== selector(newState)) {\n          listener(newState, prevState);\n        }\n      }\n    });\n  }\n  subscribe(selector, listener) {\n    this._listeners.push([selector, listener]);\n    return () => this.unsubscribe(listener);\n  }\n  unsubscribe(listener) {\n    for (let index = 0; index < this._listeners.length; index++) {\n      const [, storedListener] = this._listeners[index];\n      if (storedListener === listener) {\n        this._listeners.splice(index, 1);\n        break;\n      }\n    }\n  }\n}\nexport function useReaction(store, selector, effect) {\n  useLayoutEffect(() => {\n    const unsubscribe = store.subscribe(selector, (newState, prevState) => effect(selector(newState), selector(prevState)));\n    return unsubscribe;\n  },\n  // ignoring selector and effect as they are expected to stay constant\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [store]);\n}\nexport function useSelector(store, selector) {\n  const [state, setState] = useState(selector(store.get()));\n  useReaction(store, selector, newState => {\n    setState(newState);\n  });\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  const prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n  return state;\n}","map":{"version":3,"names":["useLayoutEffect","useState","unstable_batchedUpdates","usePrevious","AsyncStore","constructor","state","_listeners","_state","get","set","cb","prevState","newState","selector","listener","subscribe","push","unsubscribe","index","length","storedListener","splice","useReaction","store","effect","useSelector","setState","prevStore"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/area-chart/async-store/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\n\nimport { usePrevious } from '../../internal/hooks/use-previous';\n\ntype Selector<S, R> = (state: S) => R;\ntype Listener<S> = (state: S, prevState: S) => void;\n\nexport interface ReadonlyAsyncStore<S> {\n  get(): S;\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void;\n  unsubscribe(listener: Listener<S>): void;\n}\n\nexport default class AsyncStore<S> implements ReadonlyAsyncStore<S> {\n  _state: S;\n  _listeners: [Selector<S, unknown>, Listener<S>][] = [];\n\n  constructor(state: S) {\n    this._state = state;\n  }\n\n  get(): S {\n    return this._state;\n  }\n\n  set(cb: (state: S) => S): void {\n    const prevState = this._state;\n    const newState = cb(prevState);\n\n    this._state = newState;\n\n    unstable_batchedUpdates(() => {\n      for (const [selector, listener] of this._listeners) {\n        if (selector(prevState) !== selector(newState)) {\n          listener(newState, prevState);\n        }\n      }\n    });\n  }\n\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void {\n    this._listeners.push([selector, listener]);\n\n    return () => this.unsubscribe(listener);\n  }\n\n  unsubscribe(listener: Listener<S>): void {\n    for (let index = 0; index < this._listeners.length; index++) {\n      const [, storedListener] = this._listeners[index];\n\n      if (storedListener === listener) {\n        this._listeners.splice(index, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport function useReaction<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>, effect: Listener<R>): void {\n  useLayoutEffect(\n    () => {\n      const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n        effect(selector(newState), selector(prevState))\n      );\n      return unsubscribe;\n    },\n    // ignoring selector and effect as they are expected to stay constant\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [store]\n  );\n}\n\nexport function useSelector<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>): R {\n  const [state, setState] = useState<R>(selector(store.get()));\n\n  useReaction(store, selector, newState => {\n    setState(newState);\n  });\n\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  const prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n\n  return state;\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,uBAAuB,QAAQ,WAAW;AAEnD,SAASC,WAAW,QAAQ,mCAAmC;AAW/D,eAAc,MAAOC,UAAU;EAI7BC,YAAYC,KAAQ;IAFpB,KAAAC,UAAU,GAA0C,EAAE;IAGpD,IAAI,CAACC,MAAM,GAAGF,KAAK;EACrB;EAEAG,GAAGA,CAAA;IACD,OAAO,IAAI,CAACD,MAAM;EACpB;EAEAE,GAAGA,CAACC,EAAmB;IACrB,MAAMC,SAAS,GAAG,IAAI,CAACJ,MAAM;IAC7B,MAAMK,QAAQ,GAAGF,EAAE,CAACC,SAAS,CAAC;IAE9B,IAAI,CAACJ,MAAM,GAAGK,QAAQ;IAEtBX,uBAAuB,CAAC,MAAK;MAC3B,KAAK,MAAM,CAACY,QAAQ,EAAEC,QAAQ,CAAC,IAAI,IAAI,CAACR,UAAU,EAAE;QAClD,IAAIO,QAAQ,CAACF,SAAS,CAAC,KAAKE,QAAQ,CAACD,QAAQ,CAAC,EAAE;UAC9CE,QAAQ,CAACF,QAAQ,EAAED,SAAS,CAAC;;;IAGnC,CAAC,CAAC;EACJ;EAEAI,SAASA,CAAIF,QAAwB,EAAEC,QAAqB;IAC1D,IAAI,CAACR,UAAU,CAACU,IAAI,CAAC,CAACH,QAAQ,EAAEC,QAAQ,CAAC,CAAC;IAE1C,OAAO,MAAM,IAAI,CAACG,WAAW,CAACH,QAAQ,CAAC;EACzC;EAEAG,WAAWA,CAACH,QAAqB;IAC/B,KAAK,IAAII,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACZ,UAAU,CAACa,MAAM,EAAED,KAAK,EAAE,EAAE;MAC3D,MAAM,GAAGE,cAAc,CAAC,GAAG,IAAI,CAACd,UAAU,CAACY,KAAK,CAAC;MAEjD,IAAIE,cAAc,KAAKN,QAAQ,EAAE;QAC/B,IAAI,CAACR,UAAU,CAACe,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;QAChC;;;EAGN;;AAGF,OAAM,SAAUI,WAAWA,CAAOC,KAA4B,EAAEV,QAAwB,EAAEW,MAAmB;EAC3GzB,eAAe,CACb,MAAK;IACH,MAAMkB,WAAW,GAAGM,KAAK,CAACR,SAAS,CAACF,QAAQ,EAAE,CAACD,QAAQ,EAAED,SAAS,KAChEa,MAAM,CAACX,QAAQ,CAACD,QAAQ,CAAC,EAAEC,QAAQ,CAACF,SAAS,CAAC,CAAC,CAChD;IACD,OAAOM,WAAW;EACpB,CAAC;EACD;EACA;EACA,CAACM,KAAK,CAAC,CACR;AACH;AAEA,OAAM,SAAUE,WAAWA,CAAOF,KAA4B,EAAEV,QAAwB;EACtF,MAAM,CAACR,KAAK,EAAEqB,QAAQ,CAAC,GAAG1B,QAAQ,CAAIa,QAAQ,CAACU,KAAK,CAACf,GAAG,EAAE,CAAC,CAAC;EAE5Dc,WAAW,CAACC,KAAK,EAAEV,QAAQ,EAAED,QAAQ,IAAG;IACtCc,QAAQ,CAACd,QAAQ,CAAC;EACpB,CAAC,CAAC;EAEF;EACA,MAAMe,SAAS,GAAGzB,WAAW,CAACqB,KAAK,CAAC;EACpC,IAAII,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAKJ,KAAK,EAAE;IAC7C,OAAOV,QAAQ,CAACU,KAAK,CAACf,GAAG,EAAE,CAAC;;EAG9B,OAAOH,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}