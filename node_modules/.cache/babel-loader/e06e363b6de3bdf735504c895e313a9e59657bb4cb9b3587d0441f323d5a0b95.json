{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useLayoutEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nconst contextMatch = /awsui-context-([\\w-]+)/;\nexport function useVisualContext(elementRef) {\n  const [value, setValue] = useState('');\n  useLayoutEffect(() => {\n    var _a;\n    if (elementRef.current) {\n      const contextParent = findUpUntil(elementRef.current, node => !!node.className.match(contextMatch));\n      setValue((_a = contextParent === null || contextParent === void 0 ? void 0 : contextParent.className.match(contextMatch)[1]) !== null && _a !== void 0 ? _a : '');\n    }\n  }, [elementRef]);\n  return value;\n}\n/**\n * This function returns only the className string needed to apply a\n * visual context to the DOM. It is used by the default export but\n * can also be imported directly for situations where the insertion\n * of a <div> node creates style problems.\n */\nexport function getVisualContextClassname(contextName) {\n  return `awsui-context-${contextName}`;\n}\nexport default function VisualContext({\n  contextName,\n  className,\n  children\n}) {\n  return React.createElement(\"div\", {\n    className: clsx(getVisualContextClassname(contextName), className)\n  }, children);\n}","map":{"version":3,"names":["React","useLayoutEffect","useState","clsx","findUpUntil","contextMatch","useVisualContext","elementRef","value","setValue","current","contextParent","node","className","match","_a","getVisualContextClassname","contextName","VisualContext","children","createElement"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/visual-context/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useLayoutEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\n\ninterface VisualContextProps {\n  contextName: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst contextMatch = /awsui-context-([\\w-]+)/;\n\nexport function useVisualContext(elementRef: React.RefObject<HTMLElement>) {\n  const [value, setValue] = useState('');\n\n  useLayoutEffect(() => {\n    if (elementRef.current) {\n      const contextParent = findUpUntil(elementRef.current, node => !!node.className.match(contextMatch));\n      setValue(contextParent?.className.match(contextMatch)![1] ?? '');\n    }\n  }, [elementRef]);\n\n  return value;\n}\n\n/**\n * This function returns only the className string needed to apply a\n * visual context to the DOM. It is used by the default export but\n * can also be imported directly for situations where the insertion\n * of a <div> node creates style problems.\n */\nexport function getVisualContextClassname(contextName: string) {\n  return `awsui-context-${contextName}`;\n}\n\nexport default function VisualContext({ contextName, className, children }: VisualContextProps) {\n  return <div className={clsx(getVisualContextClassname(contextName), className)}>{children}</div>;\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,WAAW,QAAQ,0CAA0C;AAQtE,MAAMC,YAAY,GAAG,wBAAwB;AAE7C,OAAM,SAAUC,gBAAgBA,CAACC,UAAwC;EACvE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,eAAe,CAAC,MAAK;;IACnB,IAAIM,UAAU,CAACG,OAAO,EAAE;MACtB,MAAMC,aAAa,GAAGP,WAAW,CAACG,UAAU,CAACG,OAAO,EAAEE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACC,SAAS,CAACC,KAAK,CAACT,YAAY,CAAC,CAAC;MACnGI,QAAQ,CAAC,CAAAM,EAAA,GAAAJ,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,SAAS,CAACC,KAAK,CAACT,YAAY,EAAG,CAAC,CAAC,cAAAU,EAAA,cAAAA,EAAA,GAAI,EAAE,CAAC;;EAEpE,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,OAAOC,KAAK;AACd;AAEA;;;;;;AAMA,OAAM,SAAUQ,yBAAyBA,CAACC,WAAmB;EAC3D,OAAO,iBAAiBA,WAAW,EAAE;AACvC;AAEA,eAAc,SAAUC,aAAaA,CAAC;EAAED,WAAW;EAAEJ,SAAS;EAAEM;AAAQ,CAAsB;EAC5F,OAAOnB,KAAA,CAAAoB,aAAA;IAAKP,SAAS,EAAEV,IAAI,CAACa,yBAAyB,CAACC,WAAW,CAAC,EAAEJ,SAAS;EAAC,GAAGM,QAAQ,CAAO;AAClG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}