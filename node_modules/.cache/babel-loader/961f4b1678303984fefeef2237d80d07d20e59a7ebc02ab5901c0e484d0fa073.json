{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport TabTrap from '../tab-trap/index';\nimport { getFirstFocusable, getLastFocusable } from './utils';\nfunction FocusLock(_ref, ref) {\n  let {\n    className,\n    disabled,\n    autoFocus,\n    restoreFocus,\n    children\n  } = _ref;\n  const returnFocusToRef = useRef(null);\n  const containerRef = useRef(null);\n  const focusFirst = () => {\n    var _a;\n    if (containerRef.current) {\n      (_a = getFirstFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  const focusLast = () => {\n    var _a;\n    if (containerRef.current) {\n      (_a = getLastFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  // Captures focus when `autoFocus` is set, and the component is mounted or\n  // `disabled` changes from true to false.\n  useEffect(() => {\n    if (autoFocus && !disabled) {\n      returnFocusToRef.current = document.activeElement;\n      focusFirst();\n    }\n  }, [autoFocus, disabled]);\n  // Restore focus if `restoreFocus` is set, and `disabled` changes from false\n  // to true.\n  const [previouslyDisabled, setPreviouslyDisabled] = useState(!!disabled);\n  useEffect(() => {\n    var _a;\n    if (previouslyDisabled !== !!disabled) {\n      setPreviouslyDisabled(!!disabled);\n      if (restoreFocus && disabled) {\n        (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        returnFocusToRef.current = null;\n      }\n    }\n  }, [previouslyDisabled, disabled, restoreFocus]);\n  // Restore focus if `restoreFocus` is set and the component is unmounted.\n  // Using a callback ref for this is safer than using useEffect cleanups.\n  const restoreFocusHandler = useCallback(elem => {\n    var _a;\n    if (elem === null && restoreFocus) {\n      (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      returnFocusToRef.current = null;\n    }\n  }, [restoreFocus]);\n  useImperativeHandle(ref, () => ({\n    focusFirst\n  }));\n  const mergedRef = useMergeRefs(containerRef, restoreFocusHandler);\n  return React.createElement(React.Fragment, null, React.createElement(TabTrap, {\n    disabled: disabled,\n    focusNextCallback: focusLast\n  }), React.createElement(\"div\", {\n    className: className,\n    ref: mergedRef\n  }, children), React.createElement(TabTrap, {\n    disabled: disabled,\n    focusNextCallback: focusFirst\n  }));\n}\nexport default React.forwardRef(FocusLock);","map":{"version":3,"names":["React","useCallback","useEffect","useImperativeHandle","useRef","useState","useMergeRefs","TabTrap","getFirstFocusable","getLastFocusable","FocusLock","_ref","ref","className","disabled","autoFocus","restoreFocus","children","returnFocusToRef","containerRef","focusFirst","current","_a","focus","focusLast","document","activeElement","previouslyDisabled","setPreviouslyDisabled","restoreFocusHandler","elem","mergedRef","createElement","Fragment","focusNextCallback","forwardRef"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/focus-lock/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\n\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport TabTrap from '../tab-trap/index';\nimport { getFirstFocusable, getLastFocusable } from './utils';\n\nexport interface FocusLockProps {\n  className?: string;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  restoreFocus?: boolean;\n  children: React.ReactNode;\n}\n\nexport interface FocusLockRef {\n  /**\n   * Focuses the first element in the component.\n   */\n  focusFirst(): void;\n}\n\nfunction FocusLock(\n  { className, disabled, autoFocus, restoreFocus, children }: FocusLockProps,\n  ref: React.Ref<FocusLockRef>\n) {\n  const returnFocusToRef = useRef<HTMLOrSVGElement | null>(null);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  const focusFirst = () => {\n    if (containerRef.current) {\n      getFirstFocusable(containerRef.current)?.focus();\n    }\n  };\n\n  const focusLast = () => {\n    if (containerRef.current) {\n      getLastFocusable(containerRef.current)?.focus();\n    }\n  };\n\n  // Captures focus when `autoFocus` is set, and the component is mounted or\n  // `disabled` changes from true to false.\n  useEffect(() => {\n    if (autoFocus && !disabled) {\n      returnFocusToRef.current = document.activeElement as HTMLOrSVGElement | null;\n      focusFirst();\n    }\n  }, [autoFocus, disabled]);\n\n  // Restore focus if `restoreFocus` is set, and `disabled` changes from false\n  // to true.\n  const [previouslyDisabled, setPreviouslyDisabled] = useState(!!disabled);\n  useEffect(() => {\n    if (previouslyDisabled !== !!disabled) {\n      setPreviouslyDisabled(!!disabled);\n      if (restoreFocus && disabled) {\n        returnFocusToRef.current?.focus();\n        returnFocusToRef.current = null;\n      }\n    }\n  }, [previouslyDisabled, disabled, restoreFocus]);\n\n  // Restore focus if `restoreFocus` is set and the component is unmounted.\n  // Using a callback ref for this is safer than using useEffect cleanups.\n  const restoreFocusHandler = useCallback(\n    (elem: HTMLDivElement | null) => {\n      if (elem === null && restoreFocus) {\n        returnFocusToRef.current?.focus();\n        returnFocusToRef.current = null;\n      }\n    },\n    [restoreFocus]\n  );\n\n  useImperativeHandle(ref, () => ({ focusFirst }));\n  const mergedRef = useMergeRefs(containerRef, restoreFocusHandler);\n\n  return (\n    <>\n      <TabTrap disabled={disabled} focusNextCallback={focusLast} />\n      <div className={className} ref={mergedRef}>\n        {children}\n      </div>\n      <TabTrap disabled={disabled} focusNextCallback={focusFirst} />\n    </>\n  );\n}\n\nexport default React.forwardRef(FocusLock);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}