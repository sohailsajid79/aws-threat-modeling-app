{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { applyDefaults } from './defaults';\nimport { AppLayoutInternal } from './internal';\nimport { useAppLayoutPlacement } from './utils/use-app-layout-placement';\nconst AppLayout = React.forwardRef((_a, ref) => {\n  var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n  var {\n      contentType = 'default',\n      headerSelector = '#b #h',\n      footerSelector = '#b #f',\n      navigationWidth = 280,\n      toolsWidth = 290,\n      maxContentWidth,\n      minContentWidth,\n      navigationOpen: controlledNavigationOpen,\n      onNavigationChange: controlledOnNavigationChange,\n      analyticsMetadata\n    } = _a,\n    rest = __rest(_a, [\"contentType\", \"headerSelector\", \"footerSelector\", \"navigationWidth\", \"toolsWidth\", \"maxContentWidth\", \"minContentWidth\", \"navigationOpen\", \"onNavigationChange\", \"analyticsMetadata\"]);\n  if (isDevelopment) {\n    if (rest.toolsOpen && rest.toolsHide) {\n      warnOnce('AppLayout', `You have enabled both the \\`toolsOpen\\` prop and the \\`toolsHide\\` prop. This is not supported. Set \\`toolsOpen\\` to \\`false\\` when you set \\`toolsHide\\` to \\`true\\`.`);\n    }\n  }\n  const {\n    __internalRootRef\n  } = useBaseComponent('AppLayout', {\n    props: {\n      contentType,\n      disableContentPaddings: rest.disableContentPaddings,\n      disableBodyScroll: rest.disableBodyScroll,\n      navigationWidth,\n      navigationHide: rest.navigationHide,\n      toolsHide: rest.toolsHide,\n      toolsWidth,\n      maxContentWidth,\n      minContentWidth,\n      stickyNotifications: rest.stickyNotifications,\n      disableContentHeaderOverlap: rest.disableContentHeaderOverlap\n    },\n    metadata: {\n      drawersCount: (_c = (_b = rest.drawers) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : null,\n      hasContentHeader: !!rest.contentHeader\n    }\n  }, analyticsMetadata);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n  const i18n = useInternalI18n('app-layout');\n  const ariaLabels = {\n    navigation: i18n('ariaLabels.navigation', (_d = rest.ariaLabels) === null || _d === void 0 ? void 0 : _d.navigation),\n    navigationClose: i18n('ariaLabels.navigationClose', (_e = rest.ariaLabels) === null || _e === void 0 ? void 0 : _e.navigationClose),\n    navigationToggle: i18n('ariaLabels.navigationToggle', (_f = rest.ariaLabels) === null || _f === void 0 ? void 0 : _f.navigationToggle),\n    notifications: i18n('ariaLabels.notifications', (_g = rest.ariaLabels) === null || _g === void 0 ? void 0 : _g.notifications),\n    tools: i18n('ariaLabels.tools', (_h = rest.ariaLabels) === null || _h === void 0 ? void 0 : _h.tools),\n    toolsClose: i18n('ariaLabels.toolsClose', (_j = rest.ariaLabels) === null || _j === void 0 ? void 0 : _j.toolsClose),\n    toolsToggle: i18n('ariaLabels.toolsToggle', (_k = rest.ariaLabels) === null || _k === void 0 ? void 0 : _k.toolsToggle),\n    drawers: i18n('ariaLabels.drawers', (_l = rest.ariaLabels) === null || _l === void 0 ? void 0 : _l.drawers),\n    drawersOverflow: i18n('ariaLabels.drawersOverflow', (_m = rest.ariaLabels) === null || _m === void 0 ? void 0 : _m.drawersOverflow),\n    drawersOverflowWithBadge: i18n('ariaLabels.drawersOverflowWithBadge', (_o = rest.ariaLabels) === null || _o === void 0 ? void 0 : _o.drawersOverflowWithBadge)\n  };\n  const _p = applyDefaults(contentType, {\n      maxContentWidth,\n      minContentWidth\n    }, isRefresh),\n    {\n      navigationOpen: defaultNavigationOpen\n    } = _p,\n    restDefaults = __rest(_p, [\"navigationOpen\"]);\n  const [navigationOpen = false, setNavigationOpen] = useControllable(controlledNavigationOpen, controlledOnNavigationChange, isMobile ? false : defaultNavigationOpen, {\n    componentName: 'AppLayout',\n    controlledProp: 'navigationOpen',\n    changeHandler: 'onNavigationChange'\n  });\n  const onNavigationChange = event => {\n    setNavigationOpen(event.detail.open);\n    controlledOnNavigationChange === null || controlledOnNavigationChange === void 0 ? void 0 : controlledOnNavigationChange(event);\n  };\n  const [rootRef, placement] = useAppLayoutPlacement(headerSelector, footerSelector);\n  // This re-builds the props including the default values\n  const props = Object.assign(Object.assign(Object.assign({\n    contentType,\n    navigationWidth,\n    toolsWidth,\n    navigationOpen,\n    onNavigationChange\n  }, restDefaults), rest), {\n    ariaLabels,\n    placement\n  });\n  const baseProps = getBaseProps(rest);\n  return React.createElement(\"div\", Object.assign({\n    ref: useMergeRefs(__internalRootRef, rootRef)\n  }, baseProps), React.createElement(AppLayoutInternal, Object.assign({\n    ref: ref\n  }, props)));\n});\napplyDisplayName(AppLayout, 'AppLayout');\nexport default AppLayout;","map":{"version":3,"names":["React","warnOnce","useInternalI18n","getBaseProps","useBaseComponent","useControllable","useMergeRefs","useMobile","useVisualRefresh","isDevelopment","applyDisplayName","applyDefaults","AppLayoutInternal","useAppLayoutPlacement","AppLayout","forwardRef","_a","ref","contentType","headerSelector","footerSelector","navigationWidth","toolsWidth","maxContentWidth","minContentWidth","navigationOpen","controlledNavigationOpen","onNavigationChange","controlledOnNavigationChange","analyticsMetadata","rest","__rest","toolsOpen","toolsHide","__internalRootRef","props","disableContentPaddings","disableBodyScroll","navigationHide","stickyNotifications","disableContentHeaderOverlap","metadata","drawersCount","_c","_b","drawers","length","hasContentHeader","contentHeader","isRefresh","isMobile","i18n","ariaLabels","navigation","_d","navigationClose","_e","navigationToggle","_f","notifications","_g","tools","_h","toolsClose","_j","toolsToggle","_k","_l","drawersOverflow","_m","drawersOverflowWithBadge","_o","_p","defaultNavigationOpen","restDefaults","setNavigationOpen","componentName","controlledProp","changeHandler","event","detail","open","rootRef","placement","Object","assign","baseProps","createElement"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component';\nimport { NonCancelableCustomEvent } from '../internal/events';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { applyDefaults } from './defaults';\nimport { AppLayoutProps } from './interfaces';\nimport { AppLayoutInternal } from './internal';\nimport { useAppLayoutPlacement } from './utils/use-app-layout-placement';\n\nexport { AppLayoutProps };\n\nconst AppLayout = React.forwardRef(\n  (\n    {\n      contentType = 'default',\n      headerSelector = '#b #h',\n      footerSelector = '#b #f',\n      navigationWidth = 280,\n      toolsWidth = 290,\n      maxContentWidth,\n      minContentWidth,\n      navigationOpen: controlledNavigationOpen,\n      onNavigationChange: controlledOnNavigationChange,\n      analyticsMetadata,\n      ...rest\n    }: AppLayoutProps,\n    ref: React.Ref<AppLayoutProps.Ref>\n  ) => {\n    if (isDevelopment) {\n      if (rest.toolsOpen && rest.toolsHide) {\n        warnOnce(\n          'AppLayout',\n          `You have enabled both the \\`toolsOpen\\` prop and the \\`toolsHide\\` prop. This is not supported. Set \\`toolsOpen\\` to \\`false\\` when you set \\`toolsHide\\` to \\`true\\`.`\n        );\n      }\n    }\n    const { __internalRootRef } = useBaseComponent<HTMLDivElement>(\n      'AppLayout',\n      {\n        props: {\n          contentType,\n          disableContentPaddings: rest.disableContentPaddings,\n          disableBodyScroll: rest.disableBodyScroll,\n          navigationWidth,\n          navigationHide: rest.navigationHide,\n          toolsHide: rest.toolsHide,\n          toolsWidth,\n          maxContentWidth,\n          minContentWidth,\n          stickyNotifications: rest.stickyNotifications,\n          disableContentHeaderOverlap: rest.disableContentHeaderOverlap,\n        },\n        metadata: {\n          drawersCount: rest.drawers?.length ?? null,\n          hasContentHeader: !!rest.contentHeader,\n        },\n      },\n      analyticsMetadata\n    );\n    const isRefresh = useVisualRefresh();\n    const isMobile = useMobile();\n\n    const i18n = useInternalI18n('app-layout');\n    const ariaLabels = {\n      navigation: i18n('ariaLabels.navigation', rest.ariaLabels?.navigation),\n      navigationClose: i18n('ariaLabels.navigationClose', rest.ariaLabels?.navigationClose),\n      navigationToggle: i18n('ariaLabels.navigationToggle', rest.ariaLabels?.navigationToggle),\n      notifications: i18n('ariaLabels.notifications', rest.ariaLabels?.notifications),\n      tools: i18n('ariaLabels.tools', rest.ariaLabels?.tools),\n      toolsClose: i18n('ariaLabels.toolsClose', rest.ariaLabels?.toolsClose),\n      toolsToggle: i18n('ariaLabels.toolsToggle', rest.ariaLabels?.toolsToggle),\n      drawers: i18n('ariaLabels.drawers', rest.ariaLabels?.drawers),\n      drawersOverflow: i18n('ariaLabels.drawersOverflow', rest.ariaLabels?.drawersOverflow),\n      drawersOverflowWithBadge: i18n('ariaLabels.drawersOverflowWithBadge', rest.ariaLabels?.drawersOverflowWithBadge),\n    };\n    const { navigationOpen: defaultNavigationOpen, ...restDefaults } = applyDefaults(\n      contentType,\n      { maxContentWidth, minContentWidth },\n      isRefresh\n    );\n\n    const [navigationOpen = false, setNavigationOpen] = useControllable(\n      controlledNavigationOpen,\n      controlledOnNavigationChange,\n      isMobile ? false : defaultNavigationOpen,\n      { componentName: 'AppLayout', controlledProp: 'navigationOpen', changeHandler: 'onNavigationChange' }\n    );\n    const onNavigationChange = (event: NonCancelableCustomEvent<AppLayoutProps.ChangeDetail>) => {\n      setNavigationOpen(event.detail.open);\n      controlledOnNavigationChange?.(event);\n    };\n\n    const [rootRef, placement] = useAppLayoutPlacement(headerSelector, footerSelector);\n\n    // This re-builds the props including the default values\n    const props = {\n      contentType,\n      navigationWidth,\n      toolsWidth,\n      navigationOpen,\n      onNavigationChange,\n      ...restDefaults,\n      ...rest,\n      ariaLabels,\n      placement,\n    };\n\n    const baseProps = getBaseProps(rest);\n\n    return (\n      <div ref={useMergeRefs(__internalRootRef, rootRef)} {...baseProps}>\n        <AppLayoutInternal ref={ref} {...props} />\n      </div>\n    );\n  }\n);\n\napplyDisplayName(AppLayout, 'AppLayout');\nexport default AppLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}