{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { InternalButton } from '../button/internal';\nimport InternalButtonDropdown from '../button-dropdown/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireCancelableEvent } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { createWidgetizedComponent } from '../internal/widgets';\nimport { BreadcrumbItem } from './item/item';\nimport { getEventDetail, getItemsDisplayProperties } from './utils';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n/**\n * Provided for backwards compatibility\n */\nconst DEFAULT_EXPAND_ARIA_LABEL = 'Show path';\nconst getDropdownTrigger = _ref => {\n  let {\n    ariaLabel,\n    triggerRef,\n    disabled,\n    testUtilsClass,\n    isOpen,\n    onClick\n  } = _ref;\n  return React.createElement(InternalButton, {\n    ref: triggerRef,\n    className: testUtilsClass,\n    disabled: disabled,\n    onClick: event => {\n      event.preventDefault();\n      onClick();\n    },\n    ariaExpanded: isOpen,\n    \"aria-haspopup\": true,\n    ariaLabel: ariaLabel,\n    variant: \"breadcrumb-group\",\n    formAction: \"none\"\n  }, \"...\");\n};\nconst EllipsisDropdown = _ref2 => {\n  let {\n    ariaLabel,\n    dropdownItems,\n    onDropdownItemClick,\n    onDropdownItemFollow,\n    visible\n  } = _ref2;\n  var _a;\n  const i18n = useInternalI18n('breadcrumb-group');\n  return React.createElement(\"li\", {\n    className: clsx(styles.ellipsis, visible && styles.visible)\n  }, React.createElement(InternalButtonDropdown, {\n    ariaLabel: (_a = i18n('expandAriaLabel', ariaLabel)) !== null && _a !== void 0 ? _a : DEFAULT_EXPAND_ARIA_LABEL,\n    items: dropdownItems,\n    onItemClick: onDropdownItemClick,\n    onItemFollow: onDropdownItemFollow,\n    customTriggerBuilder: getDropdownTrigger,\n    linkStyle: true,\n    analyticsMetadataTransformer: metadata => {\n      var _a, _b;\n      if ((_a = metadata.detail) === null || _a === void 0 ? void 0 : _a.id) {\n        delete metadata.detail.id;\n      }\n      if ((_b = metadata.detail) === null || _b === void 0 ? void 0 : _b.position) {\n        metadata.detail.position = `${parseInt(metadata.detail.position, 10) + 1}`;\n      }\n      return metadata;\n    }\n  }), React.createElement(\"span\", {\n    className: styles.icon\n  }, React.createElement(InternalIcon, {\n    name: \"angle-right\"\n  })));\n};\nconst areArrayEqual = (first, second) => {\n  if (first.length !== second.length) {\n    return false;\n  }\n  return first.every((item, index) => item === second[index]);\n};\nexport function BreadcrumbGroupImplementation(_a) {\n  var {\n      items = [],\n      ariaLabel,\n      expandAriaLabel,\n      onClick,\n      onFollow,\n      __internalRootRef,\n      __injectAnalyticsComponentMetadata\n    } = _a,\n    props = __rest(_a, [\"items\", \"ariaLabel\", \"expandAriaLabel\", \"onClick\", \"onFollow\", \"__internalRootRef\", \"__injectAnalyticsComponentMetadata\"]);\n  for (const item of items) {\n    checkSafeUrl('BreadcrumbGroup', item.href);\n  }\n  const baseProps = getBaseProps(props);\n  const [navWidth, navRef] = useContainerQuery(rect => rect.borderBoxWidth);\n  const mergedRef = useMergeRefs(navRef, __internalRootRef);\n  const itemsRefs = useRef({\n    ghost: {},\n    real: {}\n  });\n  const setBreadcrumb = (type, index, node) => {\n    if (node) {\n      itemsRefs.current[type][index] = node;\n    } else {\n      delete itemsRefs.current[type][index];\n    }\n  };\n  const [itemsWidths, setItemsWidths] = useState({\n    ghost: [],\n    real: []\n  });\n  useEffect(() => {\n    if (itemsRefs.current) {\n      const newItemsWidths = {\n        ghost: [],\n        real: []\n      };\n      for (const node of Object.values(itemsRefs.current.ghost)) {\n        const width = getLogicalBoundingClientRect(node).inlineSize;\n        newItemsWidths.ghost.push(width);\n      }\n      for (const node of Object.values(itemsRefs.current.real)) {\n        const width = getLogicalBoundingClientRect(node).inlineSize;\n        newItemsWidths.real.push(width);\n      }\n      setItemsWidths(oldWidths => {\n        if (!areArrayEqual(newItemsWidths.ghost, oldWidths.ghost) || !areArrayEqual(newItemsWidths.real, oldWidths.real)) {\n          return newItemsWidths;\n        } else {\n          return oldWidths;\n        }\n      });\n    }\n  }, [items, navWidth]);\n  const {\n    shrinkFactors,\n    minWidths,\n    collapsed\n  } = getItemsDisplayProperties(itemsWidths.ghost, navWidth);\n  let breadcrumbItems = items.map((item, index) => {\n    const isLast = index === items.length - 1;\n    const isDisplayed = index === 0 || index > collapsed;\n    const clickAnalyticsMetadata = {\n      action: 'click',\n      detail: {\n        position: `${index + 1}`,\n        label: `.${analyticsSelectors['breadcrumb-item']}`,\n        href: item.href || ''\n      }\n    };\n    return React.createElement(\"li\", Object.assign({\n      className: clsx(styles.item, !isDisplayed && styles.hide),\n      key: index\n    }, isLast ? {} : getAnalyticsMetadataAttribute(clickAnalyticsMetadata), {\n      style: {\n        flexShrink: shrinkFactors[index],\n        minWidth: `${minWidths[index]}px`\n      },\n      ref: node => setBreadcrumb('real', `${index}`, node)\n    }), React.createElement(BreadcrumbItem, {\n      item: item,\n      onClick: onClick,\n      onFollow: onFollow,\n      isLast: isLast,\n      isTruncated: itemsWidths.ghost[index] - itemsWidths.real[index] > 0\n    }));\n  });\n  const hiddenBreadcrumbItems = items.map((item, index) => {\n    const isLast = index === items.length - 1;\n    return React.createElement(\"li\", {\n      className: styles['ghost-item'],\n      key: index,\n      ref: node => setBreadcrumb('ghost', `${index}`, node)\n    }, React.createElement(BreadcrumbItem, {\n      item: item,\n      isLast: isLast,\n      isGhost: true\n    }));\n  });\n  const getEventItem = e => {\n    const {\n      id\n    } = e.detail;\n    return items[parseInt(id)];\n  };\n  // Add ellipsis\n  if (breadcrumbItems.length >= 2) {\n    const dropdownItems = items.slice(1, 1 + collapsed).map((item, index) => ({\n      id: (index + 1).toString(),\n      text: item.text,\n      href: item.href || '#'\n    }));\n    breadcrumbItems = [breadcrumbItems[0], React.createElement(EllipsisDropdown, {\n      key: 'ellipsis',\n      visible: collapsed > 0,\n      ariaLabel: expandAriaLabel,\n      dropdownItems: dropdownItems,\n      onDropdownItemClick: e => fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e),\n      onDropdownItemFollow: e => fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e)\n    }), ...breadcrumbItems.slice(1)];\n  }\n  const componentAnalyticsMetadata = {\n    name: 'awsui.BreadcrumbGroup',\n    label: {\n      root: 'self'\n    }\n  };\n  return React.createElement(\"nav\", Object.assign({}, baseProps, {\n    className: clsx(styles['breadcrumb-group'], baseProps.className),\n    \"aria-label\": ariaLabel || undefined,\n    ref: mergedRef\n  }, __injectAnalyticsComponentMetadata ? Object.assign({}, getAnalyticsMetadataAttribute({\n    component: componentAnalyticsMetadata\n  })) : {}), React.createElement(\"ol\", {\n    className: styles['breadcrumb-group-list']\n  }, breadcrumbItems), React.createElement(\"ol\", {\n    className: clsx(styles['breadcrumb-group-list'], styles.ghost),\n    \"aria-hidden\": true,\n    tabIndex: -1\n  }, hiddenBreadcrumbItems));\n}\nexport const createWidgetizedBreadcrumbGroup = createWidgetizedComponent(BreadcrumbGroupImplementation);","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","useContainerQuery","getLogicalBoundingClientRect","getAnalyticsMetadataAttribute","InternalButton","InternalButtonDropdown","useInternalI18n","InternalIcon","getBaseProps","fireCancelableEvent","useMergeRefs","checkSafeUrl","createWidgetizedComponent","BreadcrumbItem","getEventDetail","getItemsDisplayProperties","analyticsSelectors","styles","DEFAULT_EXPAND_ARIA_LABEL","getDropdownTrigger","_ref","ariaLabel","triggerRef","disabled","testUtilsClass","isOpen","onClick","createElement","ref","className","event","preventDefault","ariaExpanded","variant","formAction","EllipsisDropdown","_ref2","dropdownItems","onDropdownItemClick","onDropdownItemFollow","visible","i18n","ellipsis","_a","items","onItemClick","onItemFollow","customTriggerBuilder","linkStyle","analyticsMetadataTransformer","metadata","detail","id","_b","position","parseInt","icon","name","areArrayEqual","first","second","length","every","item","index","BreadcrumbGroupImplementation","expandAriaLabel","onFollow","__internalRootRef","__injectAnalyticsComponentMetadata","props","__rest","href","baseProps","navWidth","navRef","rect","borderBoxWidth","mergedRef","itemsRefs","ghost","real","setBreadcrumb","type","node","current","itemsWidths","setItemsWidths","newItemsWidths","Object","values","width","inlineSize","push","oldWidths","shrinkFactors","minWidths","collapsed","breadcrumbItems","map","isLast","isDisplayed","clickAnalyticsMetadata","action","label","assign","hide","key","style","flexShrink","minWidth","isTruncated","hiddenBreadcrumbItems","isGhost","getEventItem","e","slice","toString","text","componentAnalyticsMetadata","root","undefined","component","tabIndex","createWidgetizedBreadcrumbGroup"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/breadcrumb-group/implementation.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { getLogicalBoundingClientRect } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalButton } from '../button/internal';\nimport { CustomTriggerProps, LinkItem } from '../button-dropdown/interfaces';\nimport InternalButtonDropdown from '../button-dropdown/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { fireCancelableEvent } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { createWidgetizedComponent } from '../internal/widgets';\nimport {\n  GeneratedAnalyticsMetadataBreadcrumbGroupClick,\n  GeneratedAnalyticsMetadataBreadcrumbGroupComponent,\n} from './analytics-metadata/interfaces';\nimport { BreadcrumbGroupProps, EllipsisDropdownProps, InternalBreadcrumbGroupProps } from './interfaces';\nimport { BreadcrumbItem } from './item/item';\nimport { getEventDetail, getItemsDisplayProperties } from './utils';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\n/**\n * Provided for backwards compatibility\n */\nconst DEFAULT_EXPAND_ARIA_LABEL = 'Show path';\n\nconst getDropdownTrigger = ({\n  ariaLabel,\n  triggerRef,\n  disabled,\n  testUtilsClass,\n  isOpen,\n  onClick,\n}: CustomTriggerProps) => {\n  return (\n    <InternalButton\n      ref={triggerRef}\n      className={testUtilsClass}\n      disabled={disabled}\n      onClick={event => {\n        event.preventDefault();\n        onClick();\n      }}\n      ariaExpanded={isOpen}\n      aria-haspopup={true}\n      ariaLabel={ariaLabel}\n      variant=\"breadcrumb-group\"\n      formAction=\"none\"\n    >\n      ...\n    </InternalButton>\n  );\n};\n\nconst EllipsisDropdown = ({\n  ariaLabel,\n  dropdownItems,\n  onDropdownItemClick,\n  onDropdownItemFollow,\n  visible,\n}: EllipsisDropdownProps) => {\n  const i18n = useInternalI18n('breadcrumb-group');\n\n  return (\n    <li className={clsx(styles.ellipsis, visible && styles.visible)}>\n      <InternalButtonDropdown\n        ariaLabel={i18n('expandAriaLabel', ariaLabel) ?? DEFAULT_EXPAND_ARIA_LABEL}\n        items={dropdownItems}\n        onItemClick={onDropdownItemClick}\n        onItemFollow={onDropdownItemFollow}\n        customTriggerBuilder={getDropdownTrigger}\n        linkStyle={true}\n        analyticsMetadataTransformer={metadata => {\n          if (metadata.detail?.id) {\n            delete metadata.detail.id;\n          }\n          if (metadata.detail?.position) {\n            metadata.detail.position = `${parseInt(metadata.detail.position as string, 10) + 1}`;\n          }\n          return metadata;\n        }}\n      />\n      <span className={styles.icon}>\n        <InternalIcon name=\"angle-right\" />\n      </span>\n    </li>\n  );\n};\n\ninterface ItemsRefsType {\n  ghost: Record<string, HTMLLIElement>;\n  real: Record<string, HTMLLIElement>;\n}\n\ninterface ItemsWidthsType {\n  ghost: Array<number>;\n  real: Array<number>;\n}\n\nconst areArrayEqual = (first: Array<number>, second: Array<number>) => {\n  if (first.length !== second.length) {\n    return false;\n  }\n  return first.every((item, index) => item === second[index]);\n};\n\nexport function BreadcrumbGroupImplementation<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item>({\n  items = [],\n  ariaLabel,\n  expandAriaLabel,\n  onClick,\n  onFollow,\n  __internalRootRef,\n  __injectAnalyticsComponentMetadata,\n  ...props\n}: InternalBreadcrumbGroupProps<T>) {\n  for (const item of items) {\n    checkSafeUrl('BreadcrumbGroup', item.href);\n  }\n  const baseProps = getBaseProps(props);\n  const [navWidth, navRef] = useContainerQuery<number>(rect => rect.borderBoxWidth);\n  const mergedRef = useMergeRefs(navRef, __internalRootRef);\n\n  const itemsRefs = useRef<ItemsRefsType>({ ghost: {}, real: {} });\n  const setBreadcrumb = (type: keyof ItemsRefsType, index: string, node: null | HTMLLIElement) => {\n    if (node) {\n      itemsRefs.current[type][index] = node;\n    } else {\n      delete itemsRefs.current[type][index];\n    }\n  };\n\n  const [itemsWidths, setItemsWidths] = useState<ItemsWidthsType>({ ghost: [], real: [] });\n\n  useEffect(() => {\n    if (itemsRefs.current) {\n      const newItemsWidths: ItemsWidthsType = { ghost: [], real: [] };\n      for (const node of Object.values(itemsRefs.current.ghost)) {\n        const width = getLogicalBoundingClientRect(node).inlineSize;\n        newItemsWidths.ghost.push(width);\n      }\n      for (const node of Object.values(itemsRefs.current.real)) {\n        const width = getLogicalBoundingClientRect(node).inlineSize;\n        newItemsWidths.real.push(width);\n      }\n      setItemsWidths(oldWidths => {\n        if (\n          !areArrayEqual(newItemsWidths.ghost, oldWidths.ghost) ||\n          !areArrayEqual(newItemsWidths.real, oldWidths.real)\n        ) {\n          return newItemsWidths;\n        } else {\n          return oldWidths;\n        }\n      });\n    }\n  }, [items, navWidth]);\n\n  const { shrinkFactors, minWidths, collapsed } = getItemsDisplayProperties(itemsWidths.ghost, navWidth);\n\n  let breadcrumbItems = items.map((item, index) => {\n    const isLast = index === items.length - 1;\n    const isDisplayed = index === 0 || index > collapsed;\n\n    const clickAnalyticsMetadata: GeneratedAnalyticsMetadataBreadcrumbGroupClick = {\n      action: 'click',\n      detail: {\n        position: `${index + 1}`,\n        label: `.${analyticsSelectors['breadcrumb-item']}`,\n        href: item.href || '',\n      },\n    };\n    return (\n      <li\n        className={clsx(styles.item, !isDisplayed && styles.hide)}\n        key={index}\n        {...(isLast ? {} : getAnalyticsMetadataAttribute(clickAnalyticsMetadata))}\n        style={{ flexShrink: shrinkFactors[index], minWidth: `${minWidths[index]}px` }}\n        ref={node => setBreadcrumb('real', `${index}`, node)}\n      >\n        <BreadcrumbItem\n          item={item}\n          onClick={onClick}\n          onFollow={onFollow}\n          isLast={isLast}\n          isTruncated={itemsWidths.ghost[index] - itemsWidths.real[index] > 0}\n        />\n      </li>\n    );\n  });\n\n  const hiddenBreadcrumbItems = items.map((item, index) => {\n    const isLast = index === items.length - 1;\n    return (\n      <li className={styles['ghost-item']} key={index} ref={node => setBreadcrumb('ghost', `${index}`, node)}>\n        <BreadcrumbItem item={item} isLast={isLast} isGhost={true} />\n      </li>\n    );\n  });\n\n  const getEventItem = (e: CustomEvent<{ id: string }>) => {\n    const { id } = e.detail;\n    return items[parseInt(id)];\n  };\n\n  // Add ellipsis\n  if (breadcrumbItems.length >= 2) {\n    const dropdownItems: Array<LinkItem> = items\n      .slice(1, 1 + collapsed)\n      .map((item: BreadcrumbGroupProps.Item, index: number) => ({\n        id: (index + 1).toString(), // the first item doesn't get inside dropdown\n        text: item.text,\n        href: item.href || '#',\n      }));\n\n    breadcrumbItems = [\n      breadcrumbItems[0],\n      <EllipsisDropdown\n        key={'ellipsis'}\n        visible={collapsed > 0}\n        ariaLabel={expandAriaLabel}\n        dropdownItems={dropdownItems}\n        onDropdownItemClick={e => fireCancelableEvent(onClick, getEventDetail(getEventItem(e)), e)}\n        onDropdownItemFollow={e => fireCancelableEvent(onFollow, getEventDetail(getEventItem(e)), e)}\n      />,\n      ...breadcrumbItems.slice(1),\n    ];\n  }\n\n  const componentAnalyticsMetadata: GeneratedAnalyticsMetadataBreadcrumbGroupComponent = {\n    name: 'awsui.BreadcrumbGroup',\n    label: { root: 'self' },\n  };\n\n  return (\n    <nav\n      {...baseProps}\n      className={clsx(styles['breadcrumb-group'], baseProps.className)}\n      aria-label={ariaLabel || undefined}\n      ref={mergedRef}\n      {...(__injectAnalyticsComponentMetadata\n        ? {\n            ...getAnalyticsMetadataAttribute({\n              component: componentAnalyticsMetadata,\n            }),\n          }\n        : {})}\n    >\n      <ol className={styles['breadcrumb-group-list']}>{breadcrumbItems}</ol>\n      <ol className={clsx(styles['breadcrumb-group-list'], styles.ghost)} aria-hidden={true} tabIndex={-1}>\n        {hiddenBreadcrumbItems}\n      </ol>\n    </nav>\n  );\n}\n\nexport const createWidgetizedBreadcrumbGroup = createWidgetizedComponent(BreadcrumbGroupImplementation);\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,4BAA4B,QAAQ,+CAA+C;AAC5F,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,OAAOC,sBAAsB,MAAM,6BAA6B;AAChE,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,yBAAyB,QAAQ,qBAAqB;AAM/D,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,cAAc,EAAEC,yBAAyB,QAAQ,SAAS;AAEnE,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,OAAOC,MAAM,MAAM,iBAAiB;AAEpC;;;AAGA,MAAMC,yBAAyB,GAAG,WAAW;AAE7C,MAAMC,kBAAkB,GAAGC,IAAA,IAOF;EAAA,IAPG;IAC1BC,SAAS;IACTC,UAAU;IACVC,QAAQ;IACRC,cAAc;IACdC,MAAM;IACNC;EAAO,CACY,GAAAN,IAAA;EACnB,OACExB,KAAA,CAAA+B,aAAA,CAACvB,cAAc;IACbwB,GAAG,EAAEN,UAAU;IACfO,SAAS,EAAEL,cAAc;IACzBD,QAAQ,EAAEA,QAAQ;IAClBG,OAAO,EAAEI,KAAK,IAAG;MACfA,KAAK,CAACC,cAAc,EAAE;MACtBL,OAAO,EAAE;IACX,CAAC;IACDM,YAAY,EAAEP,MAAM;IAAA,iBACL,IAAI;IACnBJ,SAAS,EAAEA,SAAS;IACpBY,OAAO,EAAC,kBAAkB;IAC1BC,UAAU,EAAC;EAAM,SAGF;AAErB,CAAC;AAED,MAAMC,gBAAgB,GAAGC,KAAA,IAMG;EAAA,IANF;IACxBf,SAAS;IACTgB,aAAa;IACbC,mBAAmB;IACnBC,oBAAoB;IACpBC;EAAO,CACe,GAAAJ,KAAA;;EACtB,MAAMK,IAAI,GAAGnC,eAAe,CAAC,kBAAkB,CAAC;EAEhD,OACEV,KAAA,CAAA+B,aAAA;IAAIE,SAAS,EAAE7B,IAAI,CAACiB,MAAM,CAACyB,QAAQ,EAAEF,OAAO,IAAIvB,MAAM,CAACuB,OAAO;EAAC,GAC7D5C,KAAA,CAAA+B,aAAA,CAACtB,sBAAsB;IACrBgB,SAAS,EAAE,CAAAsB,EAAA,GAAAF,IAAI,CAAC,iBAAiB,EAAEpB,SAAS,CAAC,cAAAsB,EAAA,cAAAA,EAAA,GAAIzB,yBAAyB;IAC1E0B,KAAK,EAAEP,aAAa;IACpBQ,WAAW,EAAEP,mBAAmB;IAChCQ,YAAY,EAAEP,oBAAoB;IAClCQ,oBAAoB,EAAE5B,kBAAkB;IACxC6B,SAAS,EAAE,IAAI;IACfC,4BAA4B,EAAEC,QAAQ,IAAG;;MACvC,IAAI,CAAAP,EAAA,GAAAO,QAAQ,CAACC,MAAM,cAAAR,EAAA,uBAAAA,EAAA,CAAES,EAAE,EAAE;QACvB,OAAOF,QAAQ,CAACC,MAAM,CAACC,EAAE;;MAE3B,IAAI,CAAAC,EAAA,GAAAH,QAAQ,CAACC,MAAM,cAAAE,EAAA,uBAAAA,EAAA,CAAEC,QAAQ,EAAE;QAC7BJ,QAAQ,CAACC,MAAM,CAACG,QAAQ,GAAG,GAAGC,QAAQ,CAACL,QAAQ,CAACC,MAAM,CAACG,QAAkB,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE;;MAEtF,OAAOJ,QAAQ;IACjB;EAAC,EACD,EACFtD,KAAA,CAAA+B,aAAA;IAAME,SAAS,EAAEZ,MAAM,CAACuC;EAAI,GAC1B5D,KAAA,CAAA+B,aAAA,CAACpB,YAAY;IAACkD,IAAI,EAAC;EAAa,EAAG,CAC9B,CACJ;AAET,CAAC;AAYD,MAAMC,aAAa,GAAGA,CAACC,KAAoB,EAAEC,MAAqB,KAAI;EACpE,IAAID,KAAK,CAACE,MAAM,KAAKD,MAAM,CAACC,MAAM,EAAE;IAClC,OAAO,KAAK;;EAEd,OAAOF,KAAK,CAACG,KAAK,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,KAAKH,MAAM,CAACI,KAAK,CAAC,CAAC;AAC7D,CAAC;AAED,OAAM,SAAUC,6BAA6BA,CAAkEtB,EAS7E;MAT6E;MAC7GC,KAAK,GAAG,EAAE;MACVvB,SAAS;MACT6C,eAAe;MACfxC,OAAO;MACPyC,QAAQ;MACRC,iBAAiB;MACjBC;IAAkC,IAAA1B,EAEF;IAD7B2B,KAAK,GAAAC,MAAA,CAAA5B,EAAA,EARqG,2HAS9G,CADS;EAER,KAAK,MAAMoB,IAAI,IAAInB,KAAK,EAAE;IACxBjC,YAAY,CAAC,iBAAiB,EAAEoD,IAAI,CAACS,IAAI,CAAC;;EAE5C,MAAMC,SAAS,GAAGjE,YAAY,CAAC8D,KAAK,CAAC;EACrC,MAAM,CAACI,QAAQ,EAAEC,MAAM,CAAC,GAAG1E,iBAAiB,CAAS2E,IAAI,IAAIA,IAAI,CAACC,cAAc,CAAC;EACjF,MAAMC,SAAS,GAAGpE,YAAY,CAACiE,MAAM,EAAEP,iBAAiB,CAAC;EAEzD,MAAMW,SAAS,GAAGjF,MAAM,CAAgB;IAAEkF,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAE,CAAE,CAAC;EAChE,MAAMC,aAAa,GAAGA,CAACC,IAAyB,EAAEnB,KAAa,EAAEoB,IAA0B,KAAI;IAC7F,IAAIA,IAAI,EAAE;MACRL,SAAS,CAACM,OAAO,CAACF,IAAI,CAAC,CAACnB,KAAK,CAAC,GAAGoB,IAAI;KACtC,MAAM;MACL,OAAOL,SAAS,CAACM,OAAO,CAACF,IAAI,CAAC,CAACnB,KAAK,CAAC;;EAEzC,CAAC;EAED,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGxF,QAAQ,CAAkB;IAAEiF,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAE,CAAE,CAAC;EAExFpF,SAAS,CAAC,MAAK;IACb,IAAIkF,SAAS,CAACM,OAAO,EAAE;MACrB,MAAMG,cAAc,GAAoB;QAAER,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MAC/D,KAAK,MAAMG,IAAI,IAAIK,MAAM,CAACC,MAAM,CAACX,SAAS,CAACM,OAAO,CAACL,KAAK,CAAC,EAAE;QACzD,MAAMW,KAAK,GAAGzF,4BAA4B,CAACkF,IAAI,CAAC,CAACQ,UAAU;QAC3DJ,cAAc,CAACR,KAAK,CAACa,IAAI,CAACF,KAAK,CAAC;;MAElC,KAAK,MAAMP,IAAI,IAAIK,MAAM,CAACC,MAAM,CAACX,SAAS,CAACM,OAAO,CAACJ,IAAI,CAAC,EAAE;QACxD,MAAMU,KAAK,GAAGzF,4BAA4B,CAACkF,IAAI,CAAC,CAACQ,UAAU;QAC3DJ,cAAc,CAACP,IAAI,CAACY,IAAI,CAACF,KAAK,CAAC;;MAEjCJ,cAAc,CAACO,SAAS,IAAG;QACzB,IACE,CAACpC,aAAa,CAAC8B,cAAc,CAACR,KAAK,EAAEc,SAAS,CAACd,KAAK,CAAC,IACrD,CAACtB,aAAa,CAAC8B,cAAc,CAACP,IAAI,EAAEa,SAAS,CAACb,IAAI,CAAC,EACnD;UACA,OAAOO,cAAc;SACtB,MAAM;UACL,OAAOM,SAAS;;MAEpB,CAAC,CAAC;;EAEN,CAAC,EAAE,CAAClD,KAAK,EAAE8B,QAAQ,CAAC,CAAC;EAErB,MAAM;IAAEqB,aAAa;IAAEC,SAAS;IAAEC;EAAS,CAAE,GAAGlF,yBAAyB,CAACuE,WAAW,CAACN,KAAK,EAAEN,QAAQ,CAAC;EAEtG,IAAIwB,eAAe,GAAGtD,KAAK,CAACuD,GAAG,CAAC,CAACpC,IAAI,EAAEC,KAAK,KAAI;IAC9C,MAAMoC,MAAM,GAAGpC,KAAK,KAAKpB,KAAK,CAACiB,MAAM,GAAG,CAAC;IACzC,MAAMwC,WAAW,GAAGrC,KAAK,KAAK,CAAC,IAAIA,KAAK,GAAGiC,SAAS;IAEpD,MAAMK,sBAAsB,GAAmD;MAC7EC,MAAM,EAAE,OAAO;MACfpD,MAAM,EAAE;QACNG,QAAQ,EAAE,GAAGU,KAAK,GAAG,CAAC,EAAE;QACxBwC,KAAK,EAAE,IAAIxF,kBAAkB,CAAC,iBAAiB,CAAC,EAAE;QAClDwD,IAAI,EAAET,IAAI,CAACS,IAAI,IAAI;;KAEtB;IACD,OACE5E,KAAA,CAAA+B,aAAA,OAAA8D,MAAA,CAAAgB,MAAA;MACE5E,SAAS,EAAE7B,IAAI,CAACiB,MAAM,CAAC8C,IAAI,EAAE,CAACsC,WAAW,IAAIpF,MAAM,CAACyF,IAAI,CAAC;MACzDC,GAAG,EAAE3C;IAAK,GACLoC,MAAM,GAAG,EAAE,GAAGjG,6BAA6B,CAACmG,sBAAsB,CAAC,EAAC;MACzEM,KAAK,EAAE;QAAEC,UAAU,EAAEd,aAAa,CAAC/B,KAAK,CAAC;QAAE8C,QAAQ,EAAE,GAAGd,SAAS,CAAChC,KAAK,CAAC;MAAI,CAAE;MAC9EpC,GAAG,EAAEwD,IAAI,IAAIF,aAAa,CAAC,MAAM,EAAE,GAAGlB,KAAK,EAAE,EAAEoB,IAAI;IAAC,IAEpDxF,KAAA,CAAA+B,aAAA,CAACd,cAAc;MACbkD,IAAI,EAAEA,IAAI;MACVrC,OAAO,EAAEA,OAAO;MAChByC,QAAQ,EAAEA,QAAQ;MAClBiC,MAAM,EAAEA,MAAM;MACdW,WAAW,EAAEzB,WAAW,CAACN,KAAK,CAAChB,KAAK,CAAC,GAAGsB,WAAW,CAACL,IAAI,CAACjB,KAAK,CAAC,GAAG;IAAC,EACnE,CACC;EAET,CAAC,CAAC;EAEF,MAAMgD,qBAAqB,GAAGpE,KAAK,CAACuD,GAAG,CAAC,CAACpC,IAAI,EAAEC,KAAK,KAAI;IACtD,MAAMoC,MAAM,GAAGpC,KAAK,KAAKpB,KAAK,CAACiB,MAAM,GAAG,CAAC;IACzC,OACEjE,KAAA,CAAA+B,aAAA;MAAIE,SAAS,EAAEZ,MAAM,CAAC,YAAY,CAAC;MAAE0F,GAAG,EAAE3C,KAAK;MAAEpC,GAAG,EAAEwD,IAAI,IAAIF,aAAa,CAAC,OAAO,EAAE,GAAGlB,KAAK,EAAE,EAAEoB,IAAI;IAAC,GACpGxF,KAAA,CAAA+B,aAAA,CAACd,cAAc;MAACkD,IAAI,EAAEA,IAAI;MAAEqC,MAAM,EAAEA,MAAM;MAAEa,OAAO,EAAE;IAAI,EAAI,CAC1D;EAET,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAA8B,IAAI;IACtD,MAAM;MAAE/D;IAAE,CAAE,GAAG+D,CAAC,CAAChE,MAAM;IACvB,OAAOP,KAAK,CAACW,QAAQ,CAACH,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED;EACA,IAAI8C,eAAe,CAACrC,MAAM,IAAI,CAAC,EAAE;IAC/B,MAAMxB,aAAa,GAAoBO,KAAK,CACzCwE,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGnB,SAAS,CAAC,CACvBE,GAAG,CAAC,CAACpC,IAA+B,EAAEC,KAAa,MAAM;MACxDZ,EAAE,EAAE,CAACY,KAAK,GAAG,CAAC,EAAEqD,QAAQ,EAAE;MAC1BC,IAAI,EAAEvD,IAAI,CAACuD,IAAI;MACf9C,IAAI,EAAET,IAAI,CAACS,IAAI,IAAI;KACpB,CAAC,CAAC;IAEL0B,eAAe,GAAG,CAChBA,eAAe,CAAC,CAAC,CAAC,EAClBtG,KAAA,CAAA+B,aAAA,CAACQ,gBAAgB;MACfwE,GAAG,EAAE,UAAU;MACfnE,OAAO,EAAEyD,SAAS,GAAG,CAAC;MACtB5E,SAAS,EAAE6C,eAAe;MAC1B7B,aAAa,EAAEA,aAAa;MAC5BC,mBAAmB,EAAE6E,CAAC,IAAI1G,mBAAmB,CAACiB,OAAO,EAAEZ,cAAc,CAACoG,YAAY,CAACC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC;MAC1F5E,oBAAoB,EAAE4E,CAAC,IAAI1G,mBAAmB,CAAC0D,QAAQ,EAAErD,cAAc,CAACoG,YAAY,CAACC,CAAC,CAAC,CAAC,EAAEA,CAAC;IAAC,EAC5F,EACF,GAAGjB,eAAe,CAACkB,KAAK,CAAC,CAAC,CAAC,CAC5B;;EAGH,MAAMG,0BAA0B,GAAuD;IACrF9D,IAAI,EAAE,uBAAuB;IAC7B+C,KAAK,EAAE;MAAEgB,IAAI,EAAE;IAAM;GACtB;EAED,OACE5H,KAAA,CAAA+B,aAAA,QAAA8D,MAAA,CAAAgB,MAAA,KACMhC,SAAS;IACb5C,SAAS,EAAE7B,IAAI,CAACiB,MAAM,CAAC,kBAAkB,CAAC,EAAEwD,SAAS,CAAC5C,SAAS,CAAC;IAAA,cACpDR,SAAS,IAAIoG,SAAS;IAClC7F,GAAG,EAAEkD;EAAS,GACTT,kCAAkC,GACpCoB,MAAA,CAAAgB,MAAA,KACMtG,6BAA6B,CAAC;IAC/BuH,SAAS,EAAEH;GACZ,CAAC,IAEJ,EAAG,GAEP3H,KAAA,CAAA+B,aAAA;IAAIE,SAAS,EAAEZ,MAAM,CAAC,uBAAuB;EAAC,GAAGiF,eAAe,CAAM,EACtEtG,KAAA,CAAA+B,aAAA;IAAIE,SAAS,EAAE7B,IAAI,CAACiB,MAAM,CAAC,uBAAuB,CAAC,EAAEA,MAAM,CAAC+D,KAAK,CAAC;IAAA,eAAe,IAAI;IAAE2C,QAAQ,EAAE,CAAC;EAAC,GAChGX,qBAAqB,CACnB,CACD;AAEV;AAEA,OAAO,MAAMY,+BAA+B,GAAGhH,yBAAyB,CAACqD,6BAA6B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}