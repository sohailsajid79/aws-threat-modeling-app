{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { getAnalyticsMetadataProps } from '../internal/base-component';\nexport function useFunnelChangeEvent(funnelInteractionId, funnelIdentifier, steps) {\n  const listenForStepChanges = useRef(false);\n  useEffect(() => {\n    // We prevent emitting the event before the funnel has stabilised.\n    const handle = setTimeout(() => listenForStepChanges.current = true, 0);\n    return () => {\n      clearTimeout(handle);\n      listenForStepChanges.current = false;\n    };\n  }, [funnelInteractionId]);\n  const stepTitles = steps.map(step => step.title).join();\n  useEffect(() => {\n    if (!funnelInteractionId || !listenForStepChanges.current) {\n      return;\n    }\n    FunnelMetrics.funnelChange({\n      funnelInteractionId,\n      funnelIdentifier,\n      stepConfiguration: getStepConfiguration(steps)\n    });\n    // This dependency array does not include `steps`, because `steps` is not stable across renders.\n    // We use `stepTitles` as a stable proxy.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [funnelInteractionId, stepTitles]);\n}\nexport function getStepConfiguration(steps) {\n  return steps.map((step, index) => {\n    var _a;\n    const stepAnalyticsMetadata = getAnalyticsMetadataProps(step);\n    return {\n      name: step.title,\n      number: index + 1,\n      isOptional: (_a = step.isOptional) !== null && _a !== void 0 ? _a : false,\n      stepIdentifier: stepAnalyticsMetadata === null || stepAnalyticsMetadata === void 0 ? void 0 : stepAnalyticsMetadata.instanceIdentifier\n    };\n  });\n}","map":{"version":3,"names":["useEffect","useRef","FunnelMetrics","getAnalyticsMetadataProps","useFunnelChangeEvent","funnelInteractionId","funnelIdentifier","steps","listenForStepChanges","handle","setTimeout","current","clearTimeout","stepTitles","map","step","title","join","funnelChange","stepConfiguration","getStepConfiguration","index","stepAnalyticsMetadata","name","number","isOptional","_a","stepIdentifier","instanceIdentifier"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/wizard/analytics.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useRef } from 'react';\n\nimport { FunnelMetrics } from '../internal/analytics';\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport { WizardProps } from './interfaces';\n\nexport function useFunnelChangeEvent(\n  funnelInteractionId: string | undefined,\n  funnelIdentifier: string | undefined,\n  steps: WizardProps['steps']\n) {\n  const listenForStepChanges = useRef(false);\n\n  useEffect(() => {\n    // We prevent emitting the event before the funnel has stabilised.\n    const handle = setTimeout(() => (listenForStepChanges.current = true), 0);\n\n    return () => {\n      clearTimeout(handle);\n      listenForStepChanges.current = false;\n    };\n  }, [funnelInteractionId]);\n\n  const stepTitles = steps.map(step => step.title).join();\n  useEffect(() => {\n    if (!funnelInteractionId || !listenForStepChanges.current) {\n      return;\n    }\n\n    FunnelMetrics.funnelChange({\n      funnelInteractionId,\n      funnelIdentifier,\n      stepConfiguration: getStepConfiguration(steps),\n    });\n\n    // This dependency array does not include `steps`, because `steps` is not stable across renders.\n    // We use `stepTitles` as a stable proxy.\n    //\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [funnelInteractionId, stepTitles]);\n}\n\nexport function getStepConfiguration(steps: WizardProps['steps']) {\n  return steps.map((step, index) => {\n    const stepAnalyticsMetadata = getAnalyticsMetadataProps(step as BasePropsWithAnalyticsMetadata);\n\n    return {\n      name: step.title,\n      number: index + 1,\n      isOptional: step.isOptional ?? false,\n      stepIdentifier: stepAnalyticsMetadata?.instanceIdentifier,\n    };\n  });\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAAyCC,yBAAyB,QAAQ,4BAA4B;AAGtG,OAAM,SAAUC,oBAAoBA,CAClCC,mBAAuC,EACvCC,gBAAoC,EACpCC,KAA2B;EAE3B,MAAMC,oBAAoB,GAAGP,MAAM,CAAC,KAAK,CAAC;EAE1CD,SAAS,CAAC,MAAK;IACb;IACA,MAAMS,MAAM,GAAGC,UAAU,CAAC,MAAOF,oBAAoB,CAACG,OAAO,GAAG,IAAK,EAAE,CAAC,CAAC;IAEzE,OAAO,MAAK;MACVC,YAAY,CAACH,MAAM,CAAC;MACpBD,oBAAoB,CAACG,OAAO,GAAG,KAAK;IACtC,CAAC;EACH,CAAC,EAAE,CAACN,mBAAmB,CAAC,CAAC;EAEzB,MAAMQ,UAAU,GAAGN,KAAK,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,EAAE;EACvDjB,SAAS,CAAC,MAAK;IACb,IAAI,CAACK,mBAAmB,IAAI,CAACG,oBAAoB,CAACG,OAAO,EAAE;MACzD;;IAGFT,aAAa,CAACgB,YAAY,CAAC;MACzBb,mBAAmB;MACnBC,gBAAgB;MAChBa,iBAAiB,EAAEC,oBAAoB,CAACb,KAAK;KAC9C,CAAC;IAEF;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACF,mBAAmB,EAAEQ,UAAU,CAAC,CAAC;AACvC;AAEA,OAAM,SAAUO,oBAAoBA,CAACb,KAA2B;EAC9D,OAAOA,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEM,KAAK,KAAI;;IAC/B,MAAMC,qBAAqB,GAAGnB,yBAAyB,CAACY,IAAsC,CAAC;IAE/F,OAAO;MACLQ,IAAI,EAAER,IAAI,CAACC,KAAK;MAChBQ,MAAM,EAAEH,KAAK,GAAG,CAAC;MACjBI,UAAU,EAAE,CAAAC,EAAA,GAAAX,IAAI,CAACU,UAAU,cAAAC,EAAA,cAAAA,EAAA,GAAI,KAAK;MACpCC,cAAc,EAAEL,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEM;KACxC;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}