{"ast":null,"code":"var _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { useCallback } from 'react';\nimport { useWorkspacesContext } from '../../contexts';\nimport { useApplicationInfoContext } from '../../contexts/ApplicationContext';\nimport { useArchitectureInfoContext } from '../../contexts/ArchitectureContext';\nimport { useAssumptionLinksContext } from '../../contexts/AssumptionLinksContext';\nimport { useAssumptionsContext } from '../../contexts/AssumptionsContext';\nimport { useDataflowInfoContext } from '../../contexts/DataflowContext';\nimport { useGlobalSetupContext } from '../../contexts/GlobalSetupContext';\nimport { useMitigationLinksContext } from '../../contexts/MitigationLinksContext';\nimport { useMitigationsContext } from '../../contexts/MitigationsContext';\nimport { useThreatsContext } from '../../contexts/ThreatsContext';\nimport { useFlowContext } from '../../contexts/FlowContext';\nimport { useControlsContext } from '../../contexts/ControlsContext';\nimport { useControlLinksContext } from '../../contexts/ControlLinksContext';\nconst useRemoveData = () => {\n  _s();\n  const {\n    composerMode\n  } = useGlobalSetupContext();\n  const {\n    removeWorkspace,\n    switchWorkspace\n  } = useWorkspacesContext();\n  const {\n    removeApplicationInfo,\n    onDeleteWorkspace: applicationInfoDeleteWorkspace\n  } = useApplicationInfoContext();\n  const {\n    removeArchitectureInfo,\n    onDeleteWorkspace: architectureInfoDeleteWorkspace\n  } = useArchitectureInfoContext();\n  const {\n    removeDataflowInfo,\n    onDeleteWorkspace: dataflowInfoDeleteWorkspace\n  } = useDataflowInfoContext();\n  const {\n    removeAllAssumptions,\n    onDeleteWorkspace: assumptionsDeleteWorkspace\n  } = useAssumptionsContext();\n  const {\n    removeAllMitigations,\n    onDeleteWorkspace: mitigationsDeleteWorkspace\n  } = useMitigationsContext();\n  const {\n    removeAllStatements,\n    onDeleteWorkspace: threatsDeleteWorkspace\n  } = useThreatsContext();\n  const {\n    removeAllAssumptionLinks,\n    onDeleteWorkspace: assumptionLinksDeleteWorkspace\n  } = useAssumptionLinksContext();\n  const {\n    removeAllMitigationLinks,\n    onDeleteWorkspace: mitigationLinksDeleteWorkspace\n  } = useMitigationLinksContext();\n  const {\n    removeFlow,\n    onDeleteWorkspace: flowDeleteWorkspace\n  } = useFlowContext();\n  const {\n    removeAllControls,\n    onDeleteWorkspace: controlsDeleteWorkspace\n  } = useControlsContext();\n  const {\n    removeAllControlLinks,\n    onDeleteWorkspace: controlLinksDeleteWorkspace\n  } = useControlLinksContext();\n  const removeData = useCallback(async () => {\n    if (composerMode === 'Full') {\n      return Promise.all([removeApplicationInfo(), removeArchitectureInfo(), removeDataflowInfo(), removeAllAssumptions(), removeAllMitigations(), removeAllStatements(), removeAllAssumptionLinks(), removeAllMitigationLinks(), removeFlow(), removeAllControls(), removeAllControlLinks()]);\n    }\n    return removeAllStatements();\n  }, [composerMode, removeApplicationInfo, removeArchitectureInfo, removeDataflowInfo, removeAllAssumptions, removeAllMitigations, removeAllStatements, removeAllAssumptionLinks, removeAllMitigationLinks, removeFlow, removeAllControls, removeAllControlLinks]);\n  const deleteCurrentWorkspace = useCallback(async toDeleteWorkspaceId => {\n    if (toDeleteWorkspaceId) {\n      await Promise.all([removeWorkspace(toDeleteWorkspaceId), applicationInfoDeleteWorkspace(toDeleteWorkspaceId), architectureInfoDeleteWorkspace(toDeleteWorkspaceId), threatsDeleteWorkspace(toDeleteWorkspaceId), dataflowInfoDeleteWorkspace(toDeleteWorkspaceId), assumptionsDeleteWorkspace(toDeleteWorkspaceId), mitigationsDeleteWorkspace(toDeleteWorkspaceId), assumptionLinksDeleteWorkspace(toDeleteWorkspaceId), mitigationLinksDeleteWorkspace(toDeleteWorkspaceId), flowDeleteWorkspace(toDeleteWorkspaceId), controlsDeleteWorkspace(toDeleteWorkspaceId), controlLinksDeleteWorkspace(toDeleteWorkspaceId)]);\n      switchWorkspace(null);\n    }\n  }, [switchWorkspace, applicationInfoDeleteWorkspace, architectureInfoDeleteWorkspace, dataflowInfoDeleteWorkspace, threatsDeleteWorkspace, assumptionsDeleteWorkspace, mitigationsDeleteWorkspace, assumptionLinksDeleteWorkspace, mitigationLinksDeleteWorkspace, flowDeleteWorkspace, controlsDeleteWorkspace, controlLinksDeleteWorkspace, removeWorkspace]);\n  return {\n    removeData,\n    deleteCurrentWorkspace\n  };\n};\n_s(useRemoveData, \"2uHo2mxZDUxtfynolM+drv+HYf4=\", false, function () {\n  return [useGlobalSetupContext, useWorkspacesContext, useApplicationInfoContext, useArchitectureInfoContext, useDataflowInfoContext, useAssumptionsContext, useMitigationsContext, useThreatsContext, useAssumptionLinksContext, useMitigationLinksContext, useFlowContext, useControlsContext, useControlLinksContext];\n});\nexport default useRemoveData;","map":{"version":3,"names":["useCallback","useWorkspacesContext","useApplicationInfoContext","useArchitectureInfoContext","useAssumptionLinksContext","useAssumptionsContext","useDataflowInfoContext","useGlobalSetupContext","useMitigationLinksContext","useMitigationsContext","useThreatsContext","useFlowContext","useControlsContext","useControlLinksContext","useRemoveData","_s","composerMode","removeWorkspace","switchWorkspace","removeApplicationInfo","onDeleteWorkspace","applicationInfoDeleteWorkspace","removeArchitectureInfo","architectureInfoDeleteWorkspace","removeDataflowInfo","dataflowInfoDeleteWorkspace","removeAllAssumptions","assumptionsDeleteWorkspace","removeAllMitigations","mitigationsDeleteWorkspace","removeAllStatements","threatsDeleteWorkspace","removeAllAssumptionLinks","assumptionLinksDeleteWorkspace","removeAllMitigationLinks","mitigationLinksDeleteWorkspace","removeFlow","flowDeleteWorkspace","removeAllControls","controlsDeleteWorkspace","removeAllControlLinks","controlLinksDeleteWorkspace","removeData","Promise","all","deleteCurrentWorkspace","toDeleteWorkspaceId"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/hooks/useRemoveData/index.ts"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { useCallback } from 'react';\nimport { useWorkspacesContext } from '../../contexts';\nimport { useApplicationInfoContext } from '../../contexts/ApplicationContext';\nimport { useArchitectureInfoContext } from '../../contexts/ArchitectureContext';\nimport { useAssumptionLinksContext } from '../../contexts/AssumptionLinksContext';\nimport { useAssumptionsContext } from '../../contexts/AssumptionsContext';\nimport { useDataflowInfoContext } from '../../contexts/DataflowContext';\nimport { useGlobalSetupContext } from '../../contexts/GlobalSetupContext';\nimport { useMitigationLinksContext } from '../../contexts/MitigationLinksContext';\nimport { useMitigationsContext } from '../../contexts/MitigationsContext';\nimport { useThreatsContext } from '../../contexts/ThreatsContext';\nimport { useFlowContext } from '../../contexts/FlowContext';\nimport { useControlsContext } from '../../contexts/ControlsContext';\nimport { useControlLinksContext } from '../../contexts/ControlLinksContext';\n\nconst useRemoveData = () => {\n  const { composerMode } = useGlobalSetupContext();\n  const { removeWorkspace, switchWorkspace } = useWorkspacesContext();\n  const { removeApplicationInfo, onDeleteWorkspace: applicationInfoDeleteWorkspace } = useApplicationInfoContext();\n  const { removeArchitectureInfo, onDeleteWorkspace: architectureInfoDeleteWorkspace } = useArchitectureInfoContext();\n  const { removeDataflowInfo, onDeleteWorkspace: dataflowInfoDeleteWorkspace } = useDataflowInfoContext();\n  const { removeAllAssumptions, onDeleteWorkspace: assumptionsDeleteWorkspace } = useAssumptionsContext();\n  const { removeAllMitigations, onDeleteWorkspace: mitigationsDeleteWorkspace } = useMitigationsContext();\n  const { removeAllStatements, onDeleteWorkspace: threatsDeleteWorkspace } = useThreatsContext();\n  const { removeAllAssumptionLinks, onDeleteWorkspace: assumptionLinksDeleteWorkspace } = useAssumptionLinksContext();\n  const { removeAllMitigationLinks, onDeleteWorkspace: mitigationLinksDeleteWorkspace } = useMitigationLinksContext();\n  const { removeFlow, onDeleteWorkspace: flowDeleteWorkspace } = useFlowContext();\n  const { removeAllControls, onDeleteWorkspace: controlsDeleteWorkspace } = useControlsContext();\n  const { removeAllControlLinks, onDeleteWorkspace: controlLinksDeleteWorkspace } = useControlLinksContext();\n\n  const removeData = useCallback(async () => {\n    if (composerMode === 'Full') {\n      return Promise.all([\n        removeApplicationInfo(),\n        removeArchitectureInfo(),\n        removeDataflowInfo(),\n        removeAllAssumptions(),\n        removeAllMitigations(),\n        removeAllStatements(),\n        removeAllAssumptionLinks(),\n        removeAllMitigationLinks(),\n        removeFlow(),\n        removeAllControls(),\n        removeAllControlLinks(),\n      ]);\n    }\n\n    return removeAllStatements();\n  }, [composerMode,\n    removeApplicationInfo, removeArchitectureInfo, removeDataflowInfo,\n    removeAllAssumptions, removeAllMitigations,\n    removeAllStatements, removeAllAssumptionLinks,\n    removeAllMitigationLinks, removeFlow, removeAllControls, removeAllControlLinks]);\n\n  const deleteCurrentWorkspace = useCallback(async (toDeleteWorkspaceId: string) => {\n    if (toDeleteWorkspaceId) {\n      await Promise.all([\n        removeWorkspace(toDeleteWorkspaceId),\n        applicationInfoDeleteWorkspace(toDeleteWorkspaceId),\n        architectureInfoDeleteWorkspace(toDeleteWorkspaceId),\n        threatsDeleteWorkspace(toDeleteWorkspaceId),\n        dataflowInfoDeleteWorkspace(toDeleteWorkspaceId),\n        assumptionsDeleteWorkspace(toDeleteWorkspaceId),\n        mitigationsDeleteWorkspace(toDeleteWorkspaceId),\n        assumptionLinksDeleteWorkspace(toDeleteWorkspaceId),\n        mitigationLinksDeleteWorkspace(toDeleteWorkspaceId),\n        flowDeleteWorkspace(toDeleteWorkspaceId),\n        controlsDeleteWorkspace(toDeleteWorkspaceId),\n        controlLinksDeleteWorkspace(toDeleteWorkspaceId),\n      ]);\n\n      switchWorkspace(null);\n    }\n  }, [\n    switchWorkspace,\n    applicationInfoDeleteWorkspace,\n    architectureInfoDeleteWorkspace,\n    dataflowInfoDeleteWorkspace,\n    threatsDeleteWorkspace,\n    assumptionsDeleteWorkspace,\n    mitigationsDeleteWorkspace,\n    assumptionLinksDeleteWorkspace,\n    mitigationLinksDeleteWorkspace,\n    flowDeleteWorkspace,\n    controlsDeleteWorkspace,\n    controlLinksDeleteWorkspace,\n    removeWorkspace,\n  ]);\n\n  return {\n    removeData,\n    deleteCurrentWorkspace,\n  };\n};\n\nexport default useRemoveData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}