{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\nexport const useOpenState = _ref => {\n  let {\n    onOpen,\n    onClose,\n    defaultOpen = false\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(defaultOpen);\n  const [openedWithKeyboard, setOpenedWithKeyboard] = useState(false);\n  const openDropdown = isKeyboard => {\n    if (!isOpen) {\n      setIsOpen(true);\n      setOpenedWithKeyboard(!!isKeyboard);\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    }\n  };\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  };\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown(false);\n    }\n  };\n  return {\n    isOpen,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown,\n    openedWithKeyboard\n  };\n};","map":{"version":3,"names":["useState","useOpenState","_ref","onOpen","onClose","defaultOpen","isOpen","setIsOpen","openedWithKeyboard","setOpenedWithKeyboard","openDropdown","isKeyboard","closeDropdown","toggleDropdown"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/options-list/utils/use-open-state.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\n\ninterface OpenStateProps {\n  defaultOpen?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const useOpenState = ({ onOpen, onClose, defaultOpen = false }: OpenStateProps) => {\n  const [isOpen, setIsOpen] = useState(defaultOpen);\n  const [openedWithKeyboard, setOpenedWithKeyboard] = useState(false);\n\n  const openDropdown = (isKeyboard: boolean) => {\n    if (!isOpen) {\n      setIsOpen(true);\n      setOpenedWithKeyboard(!!isKeyboard);\n      onOpen?.();\n    }\n  };\n\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose?.();\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown(false);\n    }\n  };\n\n  return { isOpen, openDropdown, closeDropdown, toggleDropdown, openedWithKeyboard };\n};\n"],"mappings":"AAAA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAQhC,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAA6D;EAAA,IAA5D;IAAEC,MAAM;IAAEC,OAAO;IAAEC,WAAW,GAAG;EAAK,CAAkB,GAAAH,IAAA;EACnF,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAACK,WAAW,CAAC;EACjD,MAAM,CAACG,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMU,YAAY,GAAIC,UAAmB,IAAI;IAC3C,IAAI,CAACL,MAAM,EAAE;MACXC,SAAS,CAAC,IAAI,CAAC;MACfE,qBAAqB,CAAC,CAAC,CAACE,UAAU,CAAC;MACnCR,MAAM,aAANA,MAAM,uBAANA,MAAM,EAAI;;EAEd,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAK;IACzB,IAAIN,MAAM,EAAE;MACVC,SAAS,CAAC,KAAK,CAAC;MAChBH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,EAAI;;EAEf,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAK;IAC1B,IAAIP,MAAM,EAAE;MACVM,aAAa,EAAE;KAChB,MAAM;MACLF,YAAY,CAAC,KAAK,CAAC;;EAEvB,CAAC;EAED,OAAO;IAAEJ,MAAM;IAAEI,YAAY;IAAEE,aAAa;IAAEC,cAAc;IAAEL;EAAkB,CAAE;AACpF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}