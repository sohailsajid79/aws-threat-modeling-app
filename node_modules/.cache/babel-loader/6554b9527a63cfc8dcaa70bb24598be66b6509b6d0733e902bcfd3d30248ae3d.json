{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/ThreatLinkView/index.tsx\",\n  _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Autosuggest from '@cloudscape-design/components/autosuggest';\nimport ExpandableSection from '@cloudscape-design/components/expandable-section';\nimport TokenGroup from '@cloudscape-design/components/token-group';\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreatLinkComponent = ({\n  linkedThreatIds,\n  threatList,\n  onAddThreatLink,\n  onRemoveThreatLink\n}) => {\n  _s();\n  const [searchValue, setSearchValue] = React.useState('');\n  const linkedThreats = useMemo(() => {\n    return threatList.filter(al => linkedThreatIds.includes(al.id));\n  }, [linkedThreatIds, threatList]);\n  const filteredThreats = useMemo(() => {\n    const threats = threatList.filter(x => !linkedThreatIds.includes(x.id));\n    if (!searchValue) {\n      return threats;\n    }\n    return threats.filter(x => x.statement && x.statement.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0);\n  }, [searchValue, threatList, linkedThreatIds]);\n  return /*#__PURE__*/_jsxDEV(ExpandableSection, {\n    headerText: `Linked threats (${linkedThreats.length})`,\n    children: [/*#__PURE__*/_jsxDEV(Autosuggest, {\n      onChange: ({\n        detail\n      }) => setSearchValue(detail.value),\n      value: searchValue,\n      options: filteredThreats.map(x => ({\n        value: x.id,\n        label: x.statement\n      })),\n      onSelect: ({\n        detail\n      }) => {\n        onAddThreatLink(detail.value);\n        setSearchValue('');\n      },\n      filteringType: \"manual\",\n      enteredTextLabel: value => `Use: \"${value}\"`,\n      placeholder: \"Search threat\",\n      empty: \"No matches found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(TokenGroup, {\n        items: linkedThreats.map(x => ({\n          label: x.statement,\n          dismissLabel: `Unlink threat ${x.numericId}`\n        })),\n        onDismiss: ({\n          detail: {\n            itemIndex\n          }\n        }) => {\n          onRemoveThreatLink(linkedThreats[itemIndex].id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 11\n  }, this);\n};\n_s(ThreatLinkComponent, \"zpGLt4AGcqBi+3VkHDAeukG3cP8=\");\n_c = ThreatLinkComponent;\nexport default ThreatLinkComponent;\nvar _c;\n$RefreshReg$(_c, \"ThreatLinkComponent\");","map":{"version":3,"names":["Autosuggest","ExpandableSection","TokenGroup","React","useMemo","jsxDEV","_jsxDEV","ThreatLinkComponent","linkedThreatIds","threatList","onAddThreatLink","onRemoveThreatLink","_s","searchValue","setSearchValue","useState","linkedThreats","filter","al","includes","id","filteredThreats","threats","x","statement","toLowerCase","indexOf","headerText","length","children","onChange","detail","value","options","map","label","onSelect","filteringType","enteredTextLabel","placeholder","empty","fileName","_jsxFileName","lineNumber","columnNumber","style","display","items","dismissLabel","numericId","onDismiss","itemIndex","_c","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/ThreatLinkView/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Autosuggest from '@cloudscape-design/components/autosuggest';\nimport ExpandableSection from '@cloudscape-design/components/expandable-section';\nimport TokenGroup from '@cloudscape-design/components/token-group';\nimport React, { FC, useMemo } from 'react';\nimport { TemplateThreatStatement } from '../../../customTypes';\n\nexport interface ThreatLinkProps {\n  linkedThreatIds: string[];\n  threatList: TemplateThreatStatement[];\n  onAddThreatLink: (threatId: string) => void;\n  onRemoveThreatLink: (threatId: string) => void;\n}\n\nconst ThreatLinkComponent: FC<ThreatLinkProps> = ({\n  linkedThreatIds,\n  threatList,\n  onAddThreatLink,\n  onRemoveThreatLink,\n}) => {\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const linkedThreats = useMemo(() => {\n    return threatList.filter(al => linkedThreatIds.includes(al.id));\n  }, [linkedThreatIds, threatList]);\n\n  const filteredThreats = useMemo(() => {\n    const threats = threatList.filter(x => !linkedThreatIds.includes(x.id));\n    if (!searchValue) {\n      return threats;\n    }\n\n    return threats.filter(x => x.statement && x.statement.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0);\n  }, [searchValue, threatList, linkedThreatIds]);\n\n  return (<ExpandableSection headerText={`Linked threats (${linkedThreats.length})`}>\n    <Autosuggest\n      onChange={({ detail }) => setSearchValue(detail.value)}\n      value={searchValue}\n      options={filteredThreats.map(x => ({\n        value: x.id,\n        label: x.statement,\n      }))}\n      onSelect={({ detail }) => {\n        onAddThreatLink(detail.value);\n        setSearchValue('');\n      }}\n      filteringType='manual'\n      enteredTextLabel={value => `Use: \"${value}\"`}\n      placeholder=\"Search threat\"\n      empty=\"No matches found\"\n    />\n    <div\n      style={{\n        display: 'flex',\n      }}\n    >\n      <TokenGroup\n        items={\n          linkedThreats.map(x => ({\n            label: x.statement,\n            dismissLabel: `Unlink threat ${x.numericId}`,\n          }))\n        }\n        onDismiss={({ detail: { itemIndex } }) => {\n          onRemoveThreatLink(linkedThreats[itemIndex].id);\n        }}\n      />\n    </div>\n  </ExpandableSection>);\n};\n\nexport default ThreatLinkComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}