{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport escapeMarkdown from '../../../../../utils/escapeMarkdown';\nimport standardizeNumericId from '../../../../../utils/standardizeNumericId';\nexport const getAssetsContent = async data => {\n  const rows = [];\n  rows.push('## Impacted Assets');\n  rows.push('\\n');\n  rows.push('| Assets Number | Asset | Related Threats |');\n  rows.push('| --- | --- | --- |');\n  if (data.threats) {\n    const assetThreatMap = {};\n    data.threats.forEach(t => {\n      var _t$impactedAssets;\n      return (_t$impactedAssets = t.impactedAssets) === null || _t$impactedAssets === void 0 ? void 0 : _t$impactedAssets.forEach(ia => {\n        if (!assetThreatMap[ia]) {\n          assetThreatMap[ia] = [];\n        }\n        assetThreatMap[ia].push(t);\n      });\n    });\n    const promises = Object.keys(assetThreatMap).map(async (at, index) => {\n      const atId = `AS-${standardizeNumericId(index + 1)}`;\n      const threatsContent = assetThreatMap[at].map(t => {\n        const threatId = `T-${standardizeNumericId(t.numericId)}`;\n        return `[**${threatId}**](#${threatId}): ${escapeMarkdown(t.statement || '')}`;\n      }).join('<br/>');\n      return `| ${atId} | ${escapeMarkdown(at)} | ${threatsContent} |`;\n    });\n    rows.push(...(await Promise.all(promises)));\n  }\n  rows.push('\\n');\n  return rows.join('\\n');\n};","map":{"version":3,"names":["escapeMarkdown","standardizeNumericId","getAssetsContent","data","rows","push","threats","assetThreatMap","forEach","t","_t$impactedAssets","impactedAssets","ia","promises","Object","keys","map","at","index","atId","threatsContent","threatId","numericId","statement","join","Promise","all"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/report/ThreatModel/utils/getAssets/index.ts"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { DataExchangeFormat, TemplateThreatStatement } from '../../../../../customTypes';\nimport escapeMarkdown from '../../../../../utils/escapeMarkdown';\nimport standardizeNumericId from '../../../../../utils/standardizeNumericId';\n\nexport const getAssetsContent = async (\n  data: DataExchangeFormat,\n) => {\n  const rows: string[] = [];\n  rows.push('## Impacted Assets');\n\n  rows.push('\\n');\n\n  rows.push('| Assets Number | Asset | Related Threats |');\n  rows.push('| --- | --- | --- |');\n\n  if (data.threats) {\n    const assetThreatMap: {\n      [assetName: string]: TemplateThreatStatement[];\n    } = {};\n\n    data.threats.forEach(t => t.impactedAssets?.forEach(ia => {\n      if (!assetThreatMap[ia]) {\n        assetThreatMap[ia] = [];\n      }\n\n      assetThreatMap[ia].push(t);\n    }));\n\n    const promises = Object.keys(assetThreatMap).map(async (at, index) => {\n      const atId = `AS-${standardizeNumericId(index + 1)}`;\n\n      const threatsContent = assetThreatMap[at].map(t => {\n        const threatId = `T-${standardizeNumericId(t.numericId)}`;\n        return `[**${threatId}**](#${threatId}): ${escapeMarkdown((t.statement || ''))}`;\n      }).join('<br/>');\n\n      return `| ${atId} | ${escapeMarkdown(at)} | ${threatsContent} |`;\n    });\n\n    rows.push(...(await Promise.all(promises)));\n  }\n\n  rows.push('\\n');\n\n  return rows.join('\\n');\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,cAAc,MAAM,qCAAqC;AAChE,OAAOC,oBAAoB,MAAM,2CAA2C;AAE5E,OAAO,MAAMC,gBAAgB,GAAG,MAC9BC,IAAwB,IACrB;EACH,MAAMC,IAAc,GAAG,EAAE;EACzBA,IAAI,CAACC,IAAI,CAAC,oBAAoB,CAAC;EAE/BD,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;EAEfD,IAAI,CAACC,IAAI,CAAC,6CAA6C,CAAC;EACxDD,IAAI,CAACC,IAAI,CAAC,qBAAqB,CAAC;EAEhC,IAAIF,IAAI,CAACG,OAAO,EAAE;IAChB,MAAMC,cAEL,GAAG,CAAC,CAAC;IAENJ,IAAI,CAACG,OAAO,CAACE,OAAO,CAACC,CAAC;MAAA,IAAAC,iBAAA;MAAA,QAAAA,iBAAA,GAAID,CAAC,CAACE,cAAc,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBF,OAAO,CAACI,EAAE,IAAI;QACxD,IAAI,CAACL,cAAc,CAACK,EAAE,CAAC,EAAE;UACvBL,cAAc,CAACK,EAAE,CAAC,GAAG,EAAE;QACzB;QAEAL,cAAc,CAACK,EAAE,CAAC,CAACP,IAAI,CAACI,CAAC,CAAC;MAC5B,CAAC,CAAC;IAAA,EAAC;IAEH,MAAMI,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACR,cAAc,CAAC,CAACS,GAAG,CAAC,OAAOC,EAAE,EAAEC,KAAK,KAAK;MACpE,MAAMC,IAAI,GAAG,MAAMlB,oBAAoB,CAACiB,KAAK,GAAG,CAAC,CAAC,EAAE;MAEpD,MAAME,cAAc,GAAGb,cAAc,CAACU,EAAE,CAAC,CAACD,GAAG,CAACP,CAAC,IAAI;QACjD,MAAMY,QAAQ,GAAG,KAAKpB,oBAAoB,CAACQ,CAAC,CAACa,SAAS,CAAC,EAAE;QACzD,OAAO,MAAMD,QAAQ,QAAQA,QAAQ,MAAMrB,cAAc,CAAES,CAAC,CAACc,SAAS,IAAI,EAAG,CAAC,EAAE;MAClF,CAAC,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;MAEhB,OAAO,KAAKL,IAAI,MAAMnB,cAAc,CAACiB,EAAE,CAAC,MAAMG,cAAc,IAAI;IAClE,CAAC,CAAC;IAEFhB,IAAI,CAACC,IAAI,CAAC,IAAI,MAAMoB,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC,CAAC,CAAC;EAC7C;EAEAT,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;EAEf,OAAOD,IAAI,CAACoB,IAAI,CAAC,IAAI,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}