{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useInternalI18n } from '../../i18n/context';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { ItemSet } from '../selection/utils';\nexport function useExpandableTableProps({\n  items,\n  expandableRows,\n  trackBy,\n  ariaLabels\n}) {\n  var _a;\n  const i18n = useInternalI18n('table');\n  const isExpandable = !!expandableRows;\n  const expandedSet = new ItemSet(trackBy, (_a = expandableRows === null || expandableRows === void 0 ? void 0 : expandableRows.expandedItems) !== null && _a !== void 0 ? _a : []);\n  let allItems = items;\n  const itemToDetail = new Map();\n  const getItemLevel = item => {\n    var _a, _b;\n    return (_b = (_a = itemToDetail.get(item)) === null || _a === void 0 ? void 0 : _a.level) !== null && _b !== void 0 ? _b : 0;\n  };\n  if (isExpandable) {\n    const visibleItems = new Array();\n    const traverse = (item, detail) => {\n      const children = expandableRows.getItemChildren(item);\n      itemToDetail.set(item, Object.assign(Object.assign({}, detail), {\n        children\n      }));\n      visibleItems.push(item);\n      if (expandedSet.has(item)) {\n        children.forEach((child, index) => traverse(child, {\n          level: detail.level + 1,\n          setSize: children.length,\n          posInSet: index + 1,\n          parent: item\n        }));\n      }\n    };\n    items.forEach((item, index) => traverse(item, {\n      level: 1,\n      setSize: items.length,\n      posInSet: index + 1,\n      parent: null\n    }));\n    for (let index = 0; index < visibleItems.length; index++) {\n      const item = visibleItems[index];\n      if (expandedSet.has(item)) {\n        let insertionIndex = index + 1;\n        for (insertionIndex; insertionIndex < visibleItems.length; insertionIndex++) {\n          const insertionItem = visibleItems[insertionIndex];\n          if (getItemLevel(item) >= getItemLevel(insertionItem)) {\n            break;\n          }\n        }\n        insertionIndex--;\n      }\n    }\n    allItems = visibleItems;\n  }\n  const getExpandableItemProps = item => {\n    var _a, _b, _c, _d;\n    const {\n      level = 1,\n      setSize = 1,\n      posInSet = 1,\n      parent = null,\n      children = []\n    } = (_a = itemToDetail.get(item)) !== null && _a !== void 0 ? _a : {};\n    return {\n      level,\n      setSize,\n      posInSet,\n      isExpandable: (_b = expandableRows === null || expandableRows === void 0 ? void 0 : expandableRows.isItemExpandable(item)) !== null && _b !== void 0 ? _b : true,\n      isExpanded: expandedSet.has(item),\n      onExpandableItemToggle: () => fireNonCancelableEvent(expandableRows === null || expandableRows === void 0 ? void 0 : expandableRows.onExpandableItemToggle, {\n        item,\n        expanded: !expandedSet.has(item)\n      }),\n      expandButtonLabel: i18n('ariaLabels.expandButtonLabel', (_c = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.expandButtonLabel) === null || _c === void 0 ? void 0 : _c.call(ariaLabels, item)),\n      collapseButtonLabel: i18n('ariaLabels.collapseButtonLabel', (_d = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.collapseButtonLabel) === null || _d === void 0 ? void 0 : _d.call(ariaLabels, item)),\n      parent,\n      children\n    };\n  };\n  return {\n    isExpandable,\n    allItems,\n    getExpandableItemProps\n  };\n}","map":{"version":3,"names":["useInternalI18n","fireNonCancelableEvent","ItemSet","useExpandableTableProps","items","expandableRows","trackBy","ariaLabels","i18n","isExpandable","expandedSet","_a","expandedItems","allItems","itemToDetail","Map","getItemLevel","item","_b","get","level","visibleItems","Array","traverse","detail","children","getItemChildren","set","Object","assign","push","has","forEach","child","index","setSize","length","posInSet","parent","insertionIndex","insertionItem","getExpandableItemProps","isItemExpandable","isExpanded","onExpandableItemToggle","expanded","expandButtonLabel","_c","call","collapseButtonLabel","_d"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/expandable-rows/expandable-rows-utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useInternalI18n } from '../../i18n/context';\nimport { fireNonCancelableEvent } from '../../internal/events';\nimport { TableProps } from '../interfaces';\nimport { ItemSet } from '../selection/utils';\n\ninterface ExpandableItemProps<T> extends ExpandableItemDetail<T> {\n  isExpandable: boolean;\n  isExpanded: boolean;\n  onExpandableItemToggle: () => void;\n  expandButtonLabel?: string;\n  collapseButtonLabel?: string;\n}\n\ninterface ExpandableItemDetail<T> {\n  level: number;\n  setSize: number;\n  posInSet: number;\n  parent: null | T;\n  children: readonly T[];\n}\n\nexport function useExpandableTableProps<T>({\n  items,\n  expandableRows,\n  trackBy,\n  ariaLabels,\n}: {\n  items: readonly T[];\n  expandableRows?: TableProps.ExpandableRows<T>;\n  trackBy?: TableProps.TrackBy<T>;\n  ariaLabels?: TableProps.AriaLabels<T>;\n}) {\n  const i18n = useInternalI18n('table');\n  const isExpandable = !!expandableRows;\n\n  const expandedSet = new ItemSet(trackBy, expandableRows?.expandedItems ?? []);\n\n  let allItems = items;\n  const itemToDetail = new Map<T, ExpandableItemDetail<T>>();\n  const getItemLevel = (item: T) => itemToDetail.get(item)?.level ?? 0;\n\n  if (isExpandable) {\n    const visibleItems = new Array<T>();\n\n    const traverse = (item: T, detail: Omit<ExpandableItemDetail<T>, 'children'>) => {\n      const children = expandableRows.getItemChildren(item);\n      itemToDetail.set(item, { ...detail, children });\n\n      visibleItems.push(item);\n      if (expandedSet.has(item)) {\n        children.forEach((child, index) =>\n          traverse(child, { level: detail.level + 1, setSize: children.length, posInSet: index + 1, parent: item })\n        );\n      }\n    };\n    items.forEach((item, index) =>\n      traverse(item, { level: 1, setSize: items.length, posInSet: index + 1, parent: null })\n    );\n\n    for (let index = 0; index < visibleItems.length; index++) {\n      const item = visibleItems[index];\n      if (expandedSet.has(item)) {\n        let insertionIndex = index + 1;\n        for (insertionIndex; insertionIndex < visibleItems.length; insertionIndex++) {\n          const insertionItem = visibleItems[insertionIndex];\n          if (getItemLevel(item) >= getItemLevel(insertionItem)) {\n            break;\n          }\n        }\n        insertionIndex--;\n      }\n    }\n\n    allItems = visibleItems;\n  }\n\n  const getExpandableItemProps = (item: T): ExpandableItemProps<T> => {\n    const { level = 1, setSize = 1, posInSet = 1, parent = null, children = [] } = itemToDetail.get(item) ?? {};\n    return {\n      level,\n      setSize,\n      posInSet,\n      isExpandable: expandableRows?.isItemExpandable(item) ?? true,\n      isExpanded: expandedSet.has(item),\n      onExpandableItemToggle: () =>\n        fireNonCancelableEvent(expandableRows?.onExpandableItemToggle, { item, expanded: !expandedSet.has(item) }),\n      expandButtonLabel: i18n('ariaLabels.expandButtonLabel', ariaLabels?.expandButtonLabel?.(item)),\n      collapseButtonLabel: i18n('ariaLabels.collapseButtonLabel', ariaLabels?.collapseButtonLabel?.(item)),\n      parent,\n      children,\n    };\n  };\n\n  return { isExpandable, allItems, getExpandableItemProps };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}