{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/controls/ControlList/index.tsx\",\n  _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Button from '@cloudscape-design/components/button';\nimport Container from '@cloudscape-design/components/container';\nimport Grid from '@cloudscape-design/components/grid';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useMitigationLinksContext, useControlLinksContext, useApplicationInfoContext } from '../../../contexts';\nimport { useControlsContext } from '../../../contexts/ControlsContext/context';\nimport LinkedEntityFilter, { ALL, WITHOUT_NO_LINKED_ENTITY, WITH_LINKED_ENTITY } from '../../generic/LinkedEntityFilter';\nimport TagSelector from '../../generic/TagSelector';\nimport { OPTIONS as STRIDEOptions } from '../../generic/STRIDESelector';\nimport { LEVEL_NOT_SET } from '../../../configs';\nimport ControlCard from '../ControlCard';\nimport ControlCreationCard from '../ControlCreationCard';\nimport { Link, Multiselect } from '@cloudscape-design/components';\nimport { getControlProfileByName } from '../../../data/controlProfileProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ControlList = () => {\n  _s();\n  const {\n    applicationInfo\n  } = useApplicationInfoContext();\n  const {\n    //controlList,\n    removeControl,\n    saveControl\n  } = useControlsContext();\n  const {\n    addControlLinks,\n    controlLinkList,\n    removeControlLinksByControlId\n  } = useControlLinksContext();\n  const {\n    addMitigationLinks,\n    mitigationLinkList,\n    removeMitigationLinksByLinkedEntityId\n  } = useMitigationLinksContext();\n  const [filteringText, setFilteringText] = useState('');\n  let selectedCategory = applicationInfo.securityCategory == undefined ? 'CCCS Medium' : applicationInfo.securityCategory;\n  const controlList = useMemo(() => {\n    return getControlProfileByName(selectedCategory);\n  }, [selectedCategory]);\n  const allTags = useMemo(() => {\n    return controlList.reduce((all, cur) => {\n      var _cur$tags;\n      return [...all, ...(((_cur$tags = cur.tags) === null || _cur$tags === void 0 ? void 0 : _cur$tags.filter(ia => !all.includes(ia))) || [])];\n    }, []).filter(t => t !== applicationInfo.securityCategory).concat(['Data', 'Storage', 'Application', 'Compute', 'Network']);\n  }, [applicationInfo.securityCategory, controlList]);\n  const [selectedTags, setSelectedTags] = useState(allTags.filter(t => {\n    return t.includes(applicationInfo.securityCategory || '') || t === 'CSP Stacked IaaS' && applicationInfo.useIaaS || t === 'CSP Stacked PaaS' && applicationInfo.usePaaS || t === 'CSP Stacked SaaS' && applicationInfo.useSaaS || t.includes('Data') && applicationInfo.useData || t.includes('Storage') && applicationInfo.useStorage || t.includes('Application') && applicationInfo.useApplication || t.includes('Compute') && applicationInfo.useCompute || t.includes('Network') && applicationInfo.useNetwork;\n  }).concat(['Technical']));\n  const STRIDE_OPTION_NO_VALUE = {\n    label: 'STRIDE Not Set',\n    value: LEVEL_NOT_SET\n  };\n  const STRIDEOptionsWithNoValue = [...STRIDEOptions, STRIDE_OPTION_NO_VALUE];\n  const [selectedSTRIDEs, setSelectedSTRIDEs] = useState([]);\n  const [selectedLinkedThreatsFilter, setSelectedLinkedThreatsFilter] = useState(ALL);\n  const [selectedLinkedMitigationsFilter, setSelectedLinkedMitigationsFilter] = useState(ALL);\n  const handleRemove = useCallback(async controlId => {\n    removeControl(controlId);\n    await removeMitigationLinksByLinkedEntityId(controlId);\n    await removeControlLinksByControlId(controlId);\n  }, [removeMitigationLinksByLinkedEntityId, removeControl, removeControlLinksByControlId]);\n  const hasNoFilter = useMemo(() => {\n    return filteringText === '' && selectedLinkedMitigationsFilter === ALL && selectedLinkedThreatsFilter === ALL && selectedTags.length === 0;\n  }, [filteringText, selectedTags, selectedLinkedThreatsFilter, selectedLinkedMitigationsFilter]);\n  const handleClearFilter = useCallback(() => {\n    setFilteringText('');\n    setSelectedTags([]);\n    setSelectedLinkedMitigationsFilter(ALL);\n    setSelectedLinkedThreatsFilter(ALL);\n  }, []);\n  const handleAddTagToEntity = useCallback((control, tag) => {\n    const updated = {\n      ...control,\n      tags: control.tags ? !control.tags.includes(tag) ? [...control.tags, tag] : control.tags : [tag]\n    };\n    saveControl(updated);\n  }, [saveControl]);\n  const handleRemoveTagFromEntity = useCallback((control, tag) => {\n    var _control$tags;\n    const updated = {\n      ...control,\n      tags: (_control$tags = control.tags) === null || _control$tags === void 0 ? void 0 : _control$tags.filter(t => t !== tag)\n    };\n    saveControl(updated);\n  }, [saveControl]);\n  const filteredList = useMemo(() => {\n    // display only controls that have at least one linked threat\n    let output = controlList; //.filter(c => {return controlLinkList?.some(cl => cl.controlId.toLowerCase() === c.id.toLowerCase());});\n\n    if (filteringText) {\n      output = output.filter(c => c.content && c.content.toLowerCase().indexOf(filteringText.toLowerCase()) >= 0);\n    }\n    if (selectedTags && selectedTags.length > 0) {\n      console.log('selectedTags', selectedTags);\n      output = output.filter(c => {\n        var _c$tags;\n        return (_c$tags = c.tags) === null || _c$tags === void 0 ? void 0 : _c$tags.some(t => selectedTags.includes(t));\n      });\n    }\n    if (selectedSTRIDEs && selectedSTRIDEs.length > 0) {\n      output = output.filter(c => {\n        var _c$metadata;\n        const stride = (_c$metadata = c.metadata) === null || _c$metadata === void 0 ? void 0 : _c$metadata.find(m => m.key === 'STRIDE');\n        const includedNoValue = selectedSTRIDEs.includes(LEVEL_NOT_SET);\n        if (includedNoValue && (!stride || !stride.value || stride.value.length === 0 || stride.value.length === 1 && stride.value[0] === '')) {\n          return true;\n        }\n        return (stride === null || stride === void 0 ? void 0 : stride.value) && stride.value.some(t => selectedSTRIDEs.includes(t));\n      });\n    }\n    if (selectedLinkedThreatsFilter !== ALL) {\n      output = output.filter(c => {\n        return controlLinkList.some(cl => cl.controlId === c.id) ? selectedLinkedThreatsFilter === WITH_LINKED_ENTITY : selectedLinkedThreatsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n    if (selectedLinkedMitigationsFilter !== ALL) {\n      output = output.filter(c => {\n        return mitigationLinkList.some(ml => ml.linkedId === c.id) ? selectedLinkedMitigationsFilter === WITH_LINKED_ENTITY : selectedLinkedMitigationsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n    output = output.sort((op1, op2) => (op2.displayOrder || Number.MAX_VALUE) - (op1.displayOrder || Number.MAX_VALUE));\n    return output;\n  }, [filteringText, controlList, selectedTags, selectedSTRIDEs, mitigationLinkList, controlLinkList, selectedLinkedMitigationsFilter, selectedLinkedThreatsFilter]);\n  const handleSaveNew = useCallback((control, linkedMitigationIds, linkedThreatIds) => {\n    const updated = saveControl(control);\n    const controlLinks = [];\n    linkedThreatIds.forEach(id => {\n      controlLinks.push({\n        linkedId: id,\n        controlId: updated.id\n      });\n    });\n    addControlLinks(controlLinks);\n    const mitigationLinks = [];\n    linkedMitigationIds.forEach(id => {\n      mitigationLinks.push({\n        linkedId: updated.id,\n        mitigationId: id\n      });\n    });\n    addMitigationLinks(mitigationLinks);\n  }, [saveControl, addControlLinks, addMitigationLinks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n      direction: \"vertical\",\n      size: \"s\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        header: /*#__PURE__*/_jsxDEV(Header, {\n          counter: `(${filteredList.length})`,\n          info: /*#__PURE__*/_jsxDEV(Link, {\n            variant: \"info\",\n            children: \"Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this),\n          children: \"Control List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n          direction: \"vertical\",\n          size: \"s\",\n          children: [/*#__PURE__*/_jsxDEV(TextFilter, {\n            filteringText: filteringText,\n            filteringPlaceholder: \"Find controls\",\n            filteringAriaLabel: \"Filter controls\",\n            onChange: ({\n              detail\n            }) => setFilteringText(detail.filteringText)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            gridDefinition: [{\n              colspan: {\n                default: 12,\n                xs: 2\n              }\n            }, {\n              colspan: {\n                default: 12,\n                xs: 3\n              }\n            }, {\n              colspan: {\n                default: 12,\n                xs: 3\n              }\n            }, {\n              colspan: {\n                default: 12,\n                xs: 3\n              }\n            }, {\n              colspan: {\n                default: 1\n              }\n            }],\n            children: [/*#__PURE__*/_jsxDEV(TagSelector, {\n              allTags: allTags,\n              selectedTags: selectedTags,\n              setSelectedTags: setSelectedTags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n              tokenLimit: 3,\n              selectedOptions: [...STRIDEOptions.filter(x => selectedSTRIDEs.includes(x.value)), ...(selectedSTRIDEs.includes(LEVEL_NOT_SET) ? [STRIDE_OPTION_NO_VALUE] : [])],\n              onChange: ({\n                detail\n              }) => {\n                var _detail$selectedOptio;\n                return setSelectedSTRIDEs(((_detail$selectedOptio = detail.selectedOptions) === null || _detail$selectedOptio === void 0 ? void 0 : _detail$selectedOptio.map(o => o.value || '')) || []);\n              },\n              deselectAriaLabel: e => `Remove ${e.label}`,\n              options: STRIDEOptionsWithNoValue,\n              placeholder: \"Filtered by STRIDE\",\n              selectedAriaLabel: \"Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(LinkedEntityFilter, {\n              label: \"Linked threats\",\n              entityDisplayName: \"threats\",\n              callerName: \"controls\",\n              selected: selectedLinkedThreatsFilter,\n              setSelected: setSelectedLinkedThreatsFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(LinkedEntityFilter, {\n              label: \"Linked mitigations\",\n              entityDisplayName: \"mitigations\",\n              callerName: \"controls\",\n              selected: selectedLinkedMitigationsFilter,\n              setSelected: setSelectedLinkedMitigationsFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClearFilter,\n              variant: \"icon\",\n              iconSvg: /*#__PURE__*/_jsxDEV(\"svg\", {\n                focusable: \"false\",\n                \"aria-hidden\": \"true\",\n                viewBox: \"0 0 24 24\",\n                tabIndex: -1,\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 24\n              }, this),\n              ariaLabel: \"Clear filters\",\n              disabled: hasNoFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), filteredList === null || filteredList === void 0 ? void 0 : filteredList.map(entity => /*#__PURE__*/_jsxDEV(ControlCard, {\n        entity: entity,\n        onRemove: handleRemove,\n        onEdit: saveControl,\n        onAddTagToEntity: handleAddTagToEntity,\n        onRemoveTagFromEntity: handleRemoveTagFromEntity,\n        controlList: controlList\n      }, entity.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 37\n      }, this)), /*#__PURE__*/_jsxDEV(ControlCreationCard, {\n        onSave: handleSaveNew,\n        controlList: controlList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 11\n  }, this);\n};\n_s(ControlList, \"FQJgDB46jHdgzpM4tusHE76c8EQ=\", false, function () {\n  return [useApplicationInfoContext, useControlsContext, useControlLinksContext, useMitigationLinksContext];\n});\n_c = ControlList;\nexport default ControlList;\nvar _c;\n$RefreshReg$(_c, \"ControlList\");","map":{"version":3,"names":["Button","Container","Grid","Header","SpaceBetween","TextFilter","useCallback","useMemo","useState","useMitigationLinksContext","useControlLinksContext","useApplicationInfoContext","useControlsContext","LinkedEntityFilter","ALL","WITHOUT_NO_LINKED_ENTITY","WITH_LINKED_ENTITY","TagSelector","OPTIONS","STRIDEOptions","LEVEL_NOT_SET","ControlCard","ControlCreationCard","Link","Multiselect","getControlProfileByName","jsxDEV","_jsxDEV","ControlList","_s","applicationInfo","removeControl","saveControl","addControlLinks","controlLinkList","removeControlLinksByControlId","addMitigationLinks","mitigationLinkList","removeMitigationLinksByLinkedEntityId","filteringText","setFilteringText","selectedCategory","securityCategory","undefined","controlList","allTags","reduce","all","cur","_cur$tags","tags","filter","ia","includes","t","concat","selectedTags","setSelectedTags","useIaaS","usePaaS","useSaaS","useData","useStorage","useApplication","useCompute","useNetwork","STRIDE_OPTION_NO_VALUE","label","value","STRIDEOptionsWithNoValue","selectedSTRIDEs","setSelectedSTRIDEs","selectedLinkedThreatsFilter","setSelectedLinkedThreatsFilter","selectedLinkedMitigationsFilter","setSelectedLinkedMitigationsFilter","handleRemove","controlId","hasNoFilter","length","handleClearFilter","handleAddTagToEntity","control","tag","updated","handleRemoveTagFromEntity","_control$tags","filteredList","output","c","content","toLowerCase","indexOf","console","log","_c$tags","some","_c$metadata","stride","metadata","find","m","key","includedNoValue","cl","id","ml","linkedId","sort","op1","op2","displayOrder","Number","MAX_VALUE","handleSaveNew","linkedMitigationIds","linkedThreatIds","controlLinks","forEach","push","mitigationLinks","mitigationId","children","direction","size","header","counter","info","variant","fileName","_jsxFileName","lineNumber","columnNumber","filteringPlaceholder","filteringAriaLabel","onChange","detail","gridDefinition","colspan","default","xs","tokenLimit","selectedOptions","x","_detail$selectedOptio","map","o","deselectAriaLabel","e","options","placeholder","selectedAriaLabel","entityDisplayName","callerName","selected","setSelected","onClick","iconSvg","focusable","viewBox","tabIndex","d","ariaLabel","disabled","entity","onRemove","onEdit","onAddTagToEntity","onRemoveTagFromEntity","onSave","_c","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/controls/ControlList/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Button from '@cloudscape-design/components/button';\nimport Container from '@cloudscape-design/components/container';\nimport Grid from '@cloudscape-design/components/grid';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport { FC, useCallback, useMemo, useState } from 'react';\nimport { useMitigationLinksContext, useControlLinksContext, useApplicationInfoContext } from '../../../contexts';\nimport { useControlsContext } from '../../../contexts/ControlsContext/context';\nimport { MitigationLink, Control, ControlLink } from '../../../customTypes';\nimport LinkedEntityFilter, { ALL, WITHOUT_NO_LINKED_ENTITY, WITH_LINKED_ENTITY } from '../../generic/LinkedEntityFilter';\nimport TagSelector from '../../generic/TagSelector';\nimport { OPTIONS as STRIDEOptions } from '../../generic/STRIDESelector';\nimport { LEVEL_NOT_SET } from '../../../configs';\nimport ControlCard from '../ControlCard';\nimport ControlCreationCard from '../ControlCreationCard';\nimport { Link, Multiselect } from '@cloudscape-design/components';\nimport { getControlProfileByName } from '../../../data/controlProfileProvider';\n\nconst ControlList: FC = () => {\n  const { applicationInfo } = useApplicationInfoContext();\n  const {\n    //controlList,\n    removeControl,\n    saveControl,\n  } = useControlsContext();\n\n  const {\n    addControlLinks,\n    controlLinkList,\n    removeControlLinksByControlId,\n  } = useControlLinksContext();\n\n  const {\n    addMitigationLinks,\n    mitigationLinkList,\n    removeMitigationLinksByLinkedEntityId,\n  } = useMitigationLinksContext();\n\n  const [filteringText, setFilteringText] = useState('');\n\n  let selectedCategory = (applicationInfo.securityCategory == undefined ? 'CCCS Medium' : applicationInfo.securityCategory);\n  const controlList = useMemo(() => {\n    return getControlProfileByName(selectedCategory) as Control[];\n  }, [selectedCategory]);\n\n  const allTags = useMemo(() => {\n    return controlList\n      .reduce((all: string[], cur) => {\n        return [...all, ...cur.tags?.filter(ia => !all.includes(ia)) || []];\n      }, []).filter(t=>t!==applicationInfo.securityCategory).concat(['Data', 'Storage', 'Application', 'Compute', 'Network']);\n  }, [applicationInfo.securityCategory, controlList]);\n\n  const [\n    selectedTags,\n    setSelectedTags,\n  ] = useState<string[]>(allTags.filter(t => {\n    return (t.includes(applicationInfo.securityCategory||'') ||\n           (t === 'CSP Stacked IaaS' && applicationInfo.useIaaS) ||\n           (t === 'CSP Stacked PaaS' && applicationInfo.usePaaS) ||\n           (t === 'CSP Stacked SaaS' && applicationInfo.useSaaS) ||\n           (t.includes('Data') && applicationInfo.useData) ||\n           (t.includes('Storage') && applicationInfo.useStorage) ||\n           (t.includes('Application') && applicationInfo.useApplication) ||\n           (t.includes('Compute') && applicationInfo.useCompute) ||\n           (t.includes('Network') && applicationInfo.useNetwork)\n    );\n  }).concat(['Technical']));\n\n  const STRIDE_OPTION_NO_VALUE = {\n    label: 'STRIDE Not Set', value: LEVEL_NOT_SET,\n  };\n\n  const STRIDEOptionsWithNoValue = [...STRIDEOptions, STRIDE_OPTION_NO_VALUE];\n\n  const [\n    selectedSTRIDEs,\n    setSelectedSTRIDEs,\n  ] = useState<string[]>([]);\n\n  const [\n    selectedLinkedThreatsFilter,\n    setSelectedLinkedThreatsFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedMitigationsFilter,\n    setSelectedLinkedMitigationsFilter,\n  ] = useState(ALL);\n\n  const handleRemove = useCallback(async (controlId: string) => {\n    removeControl(controlId);\n    await removeMitigationLinksByLinkedEntityId(controlId);\n    await removeControlLinksByControlId(controlId);\n  }, [removeMitigationLinksByLinkedEntityId, removeControl, removeControlLinksByControlId]);\n\n  const hasNoFilter = useMemo(() => {\n    return (filteringText === ''\n      && selectedLinkedMitigationsFilter === ALL\n      && selectedLinkedThreatsFilter === ALL\n      && selectedTags.length === 0);\n  }, [filteringText, selectedTags,\n    selectedLinkedThreatsFilter, selectedLinkedMitigationsFilter]);\n\n  const handleClearFilter = useCallback(() => {\n    setFilteringText('');\n    setSelectedTags([]);\n    setSelectedLinkedMitigationsFilter(ALL);\n    setSelectedLinkedThreatsFilter(ALL);\n  }, []);\n\n  const handleAddTagToEntity = useCallback((control: Control, tag: string) => {\n    const updated: Control = {\n      ...control,\n      tags: control.tags ?\n        (!control.tags.includes(tag) ?\n          [...control.tags, tag] : control.tags) :\n        [tag],\n    };\n    saveControl(updated);\n  }, [saveControl]);\n\n  const handleRemoveTagFromEntity = useCallback((control: Control, tag: string) => {\n    const updated: Control = {\n      ...control,\n      tags: control.tags?.filter(t => t !== tag),\n    };\n    saveControl(updated);\n  }, [saveControl]);\n\n\n  const filteredList = useMemo(() => {\n    // display only controls that have at least one linked threat\n    let output = controlList;//.filter(c => {return controlLinkList?.some(cl => cl.controlId.toLowerCase() === c.id.toLowerCase());});\n\n    if (filteringText) {\n      output = output.filter(c => c.content && c.content.toLowerCase().indexOf(filteringText.toLowerCase()) >= 0);\n    }\n    if (selectedTags && selectedTags.length > 0) {\n      console.log('selectedTags', selectedTags);\n      output = output.filter(c => {\n        return c.tags?.some(t => selectedTags.includes(t));\n      });\n    }\n    if (selectedSTRIDEs && selectedSTRIDEs.length > 0) {\n      output = output.filter(c => {\n        const stride = c.metadata?.find(m => m.key === 'STRIDE');\n        const includedNoValue = selectedSTRIDEs.includes(LEVEL_NOT_SET);\n        if (includedNoValue && (!stride || !stride.value || stride.value.length === 0 || (stride.value.length === 1 && stride.value[0]===''))) {\n          return true;\n        }\n\n        return stride?.value && (stride.value as string[]).some(t => selectedSTRIDEs.includes(t));\n      });\n    }\n\n    if (selectedLinkedThreatsFilter !== ALL) {\n      output = output.filter(c => {\n        return controlLinkList.some(cl => cl. controlId === c.id) ?\n          selectedLinkedThreatsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedThreatsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedMitigationsFilter !== ALL) {\n      output = output.filter(c => {\n        return mitigationLinkList.some(ml => ml.linkedId === c.id) ?\n          selectedLinkedMitigationsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedMitigationsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n    output = output.sort((op1, op2) => (op2.displayOrder || Number.MAX_VALUE) - (op1.displayOrder || Number.MAX_VALUE));\n    return output;\n  }, [filteringText, controlList, selectedTags, selectedSTRIDEs,\n    mitigationLinkList, controlLinkList,\n    selectedLinkedMitigationsFilter, selectedLinkedThreatsFilter]);\n\n\n  const handleSaveNew = useCallback((control: Control,\n    linkedMitigationIds: string[],\n    linkedThreatIds: string[]) => {\n    const updated = saveControl(control);\n\n    const controlLinks: ControlLink[] = [];\n    linkedThreatIds.forEach(id => {\n      controlLinks.push({\n        linkedId: id,\n        controlId: updated.id,\n      });\n    });\n\n    addControlLinks(controlLinks);\n\n    const mitigationLinks: MitigationLink[] = [];\n    linkedMitigationIds.forEach(id => {\n      mitigationLinks.push({\n        linkedId: updated.id,\n        mitigationId: id,\n      });\n    });\n\n    addMitigationLinks(mitigationLinks);\n\n  }, [saveControl, addControlLinks, addMitigationLinks]);\n\n  return (<div>\n    <SpaceBetween direction='vertical' size='s'>\n      <Container header={\n        <Header\n          counter={`(${filteredList.length})`}\n          info={<Link variant=\"info\">Info</Link>}\n        >Control List</Header>\n      }>\n        <SpaceBetween direction='vertical' size='s'>\n          <TextFilter\n            filteringText={filteringText}\n            filteringPlaceholder=\"Find controls\"\n            filteringAriaLabel=\"Filter controls\"\n            onChange={({ detail }) =>\n              setFilteringText(detail.filteringText)\n            }\n          />\n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xs: 2 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 1 } },\n            ]}\n          >\n            <TagSelector\n              allTags={allTags}\n              selectedTags={selectedTags}\n              setSelectedTags={setSelectedTags}\n            />\n            <Multiselect\n              tokenLimit={3}\n              selectedOptions={[...STRIDEOptions.filter(x => selectedSTRIDEs.includes(x.value)),\n                ...selectedSTRIDEs.includes(LEVEL_NOT_SET) ? [STRIDE_OPTION_NO_VALUE] : []]}\n              onChange={({ detail }) =>\n                setSelectedSTRIDEs(detail.selectedOptions?.map(o => o.value || '') || [])\n              }\n              deselectAriaLabel={e => `Remove ${e.label}`}\n              options={STRIDEOptionsWithNoValue}\n              placeholder=\"Filtered by STRIDE\"\n              selectedAriaLabel=\"Selected\"\n            />\n            <LinkedEntityFilter\n              label='Linked threats'\n              entityDisplayName='threats'\n              callerName='controls'\n              selected={selectedLinkedThreatsFilter}\n              setSelected={setSelectedLinkedThreatsFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked mitigations'\n              entityDisplayName='mitigations'\n              callerName='controls'\n              selected={selectedLinkedMitigationsFilter}\n              setSelected={setSelectedLinkedMitigationsFilter}\n            />\n            <Button onClick={handleClearFilter}\n              variant='icon'\n              iconSvg={<svg\n                focusable=\"false\"\n                aria-hidden=\"true\"\n                viewBox=\"0 0 24 24\"\n                tabIndex={-1}\n              >\n                <path d=\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"></path>\n              </svg>}\n              ariaLabel='Clear filters'\n              disabled={hasNoFilter}\n            />\n          </Grid>\n        </SpaceBetween>\n      </Container>\n      {filteredList?.map(entity => (<ControlCard\n        key={entity.id}\n        entity={entity}\n        onRemove={handleRemove}\n        onEdit={saveControl}\n        onAddTagToEntity={handleAddTagToEntity}\n        onRemoveTagFromEntity={handleRemoveTagFromEntity}\n        controlList={controlList}\n      />))}\n      <ControlCreationCard\n        onSave={handleSaveNew}\n        controlList={controlList}\n      />\n    </SpaceBetween>\n  </div>);\n};\n\nexport default ControlList;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,MAAM,MAAM,sCAAsC;AACzD,OAAOC,SAAS,MAAM,yCAAyC;AAC/D,OAAOC,IAAI,MAAM,oCAAoC;AACrD,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,YAAY,MAAM,6CAA6C;AACtE,OAAOC,UAAU,MAAM,2CAA2C;AAClE,SAAaC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,yBAAyB,EAAEC,sBAAsB,EAAEC,yBAAyB,QAAQ,mBAAmB;AAChH,SAASC,kBAAkB,QAAQ,2CAA2C;AAE9E,OAAOC,kBAAkB,IAAIC,GAAG,EAAEC,wBAAwB,EAAEC,kBAAkB,QAAQ,kCAAkC;AACxH,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,OAAO,IAAIC,aAAa,QAAQ,8BAA8B;AACvE,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,mBAAmB,MAAM,wBAAwB;AACxD,SAASC,IAAI,EAAEC,WAAW,QAAQ,+BAA+B;AACjE,SAASC,uBAAuB,QAAQ,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,WAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAgB,CAAC,GAAGnB,yBAAyB,CAAC,CAAC;EACvD,MAAM;IACJ;IACAoB,aAAa;IACbC;EACF,CAAC,GAAGpB,kBAAkB,CAAC,CAAC;EAExB,MAAM;IACJqB,eAAe;IACfC,eAAe;IACfC;EACF,CAAC,GAAGzB,sBAAsB,CAAC,CAAC;EAE5B,MAAM;IACJ0B,kBAAkB;IAClBC,kBAAkB;IAClBC;EACF,CAAC,GAAG7B,yBAAyB,CAAC,CAAC;EAE/B,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAEtD,IAAIiC,gBAAgB,GAAIX,eAAe,CAACY,gBAAgB,IAAIC,SAAS,GAAG,aAAa,GAAGb,eAAe,CAACY,gBAAiB;EACzH,MAAME,WAAW,GAAGrC,OAAO,CAAC,MAAM;IAChC,OAAOkB,uBAAuB,CAACgB,gBAAgB,CAAC;EAClD,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,MAAMI,OAAO,GAAGtC,OAAO,CAAC,MAAM;IAC5B,OAAOqC,WAAW,CACfE,MAAM,CAAC,CAACC,GAAa,EAAEC,GAAG,KAAK;MAAA,IAAAC,SAAA;MAC9B,OAAO,CAAC,GAAGF,GAAG,EAAE,IAAG,EAAAE,SAAA,GAAAD,GAAG,CAACE,IAAI,cAAAD,SAAA,uBAARA,SAAA,CAAUE,MAAM,CAACC,EAAE,IAAI,CAACL,GAAG,CAACM,QAAQ,CAACD,EAAE,CAAC,CAAC,KAAI,EAAE,EAAC;IACrE,CAAC,EAAE,EAAE,CAAC,CAACD,MAAM,CAACG,CAAC,IAAEA,CAAC,KAAGxB,eAAe,CAACY,gBAAgB,CAAC,CAACa,MAAM,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;EAC3H,CAAC,EAAE,CAACzB,eAAe,CAACY,gBAAgB,EAAEE,WAAW,CAAC,CAAC;EAEnD,MAAM,CACJY,YAAY,EACZC,eAAe,CAChB,GAAGjD,QAAQ,CAAWqC,OAAO,CAACM,MAAM,CAACG,CAAC,IAAI;IACzC,OAAQA,CAAC,CAACD,QAAQ,CAACvB,eAAe,CAACY,gBAAgB,IAAE,EAAE,CAAC,IAChDY,CAAC,KAAK,kBAAkB,IAAIxB,eAAe,CAAC4B,OAAQ,IACpDJ,CAAC,KAAK,kBAAkB,IAAIxB,eAAe,CAAC6B,OAAQ,IACpDL,CAAC,KAAK,kBAAkB,IAAIxB,eAAe,CAAC8B,OAAQ,IACpDN,CAAC,CAACD,QAAQ,CAAC,MAAM,CAAC,IAAIvB,eAAe,CAAC+B,OAAQ,IAC9CP,CAAC,CAACD,QAAQ,CAAC,SAAS,CAAC,IAAIvB,eAAe,CAACgC,UAAW,IACpDR,CAAC,CAACD,QAAQ,CAAC,aAAa,CAAC,IAAIvB,eAAe,CAACiC,cAAe,IAC5DT,CAAC,CAACD,QAAQ,CAAC,SAAS,CAAC,IAAIvB,eAAe,CAACkC,UAAW,IACpDV,CAAC,CAACD,QAAQ,CAAC,SAAS,CAAC,IAAIvB,eAAe,CAACmC,UAAW;EAE9D,CAAC,CAAC,CAACV,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;EAEzB,MAAMW,sBAAsB,GAAG;IAC7BC,KAAK,EAAE,gBAAgB;IAAEC,KAAK,EAAEhD;EAClC,CAAC;EAED,MAAMiD,wBAAwB,GAAG,CAAC,GAAGlD,aAAa,EAAE+C,sBAAsB,CAAC;EAE3E,MAAM,CACJI,eAAe,EACfC,kBAAkB,CACnB,GAAG/D,QAAQ,CAAW,EAAE,CAAC;EAE1B,MAAM,CACJgE,2BAA2B,EAC3BC,8BAA8B,CAC/B,GAAGjE,QAAQ,CAACM,GAAG,CAAC;EAEjB,MAAM,CACJ4D,+BAA+B,EAC/BC,kCAAkC,CACnC,GAAGnE,QAAQ,CAACM,GAAG,CAAC;EAEjB,MAAM8D,YAAY,GAAGtE,WAAW,CAAC,MAAOuE,SAAiB,IAAK;IAC5D9C,aAAa,CAAC8C,SAAS,CAAC;IACxB,MAAMvC,qCAAqC,CAACuC,SAAS,CAAC;IACtD,MAAM1C,6BAA6B,CAAC0C,SAAS,CAAC;EAChD,CAAC,EAAE,CAACvC,qCAAqC,EAAEP,aAAa,EAAEI,6BAA6B,CAAC,CAAC;EAEzF,MAAM2C,WAAW,GAAGvE,OAAO,CAAC,MAAM;IAChC,OAAQgC,aAAa,KAAK,EAAE,IACvBmC,+BAA+B,KAAK5D,GAAG,IACvC0D,2BAA2B,KAAK1D,GAAG,IACnC0C,YAAY,CAACuB,MAAM,KAAK,CAAC;EAChC,CAAC,EAAE,CAACxC,aAAa,EAAEiB,YAAY,EAC7BgB,2BAA2B,EAAEE,+BAA+B,CAAC,CAAC;EAEhE,MAAMM,iBAAiB,GAAG1E,WAAW,CAAC,MAAM;IAC1CkC,gBAAgB,CAAC,EAAE,CAAC;IACpBiB,eAAe,CAAC,EAAE,CAAC;IACnBkB,kCAAkC,CAAC7D,GAAG,CAAC;IACvC2D,8BAA8B,CAAC3D,GAAG,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmE,oBAAoB,GAAG3E,WAAW,CAAC,CAAC4E,OAAgB,EAAEC,GAAW,KAAK;IAC1E,MAAMC,OAAgB,GAAG;MACvB,GAAGF,OAAO;MACVhC,IAAI,EAAEgC,OAAO,CAAChC,IAAI,GACf,CAACgC,OAAO,CAAChC,IAAI,CAACG,QAAQ,CAAC8B,GAAG,CAAC,GAC1B,CAAC,GAAGD,OAAO,CAAChC,IAAI,EAAEiC,GAAG,CAAC,GAAGD,OAAO,CAAChC,IAAI,GACvC,CAACiC,GAAG;IACR,CAAC;IACDnD,WAAW,CAACoD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACpD,WAAW,CAAC,CAAC;EAEjB,MAAMqD,yBAAyB,GAAG/E,WAAW,CAAC,CAAC4E,OAAgB,EAAEC,GAAW,KAAK;IAAA,IAAAG,aAAA;IAC/E,MAAMF,OAAgB,GAAG;MACvB,GAAGF,OAAO;MACVhC,IAAI,GAAAoC,aAAA,GAAEJ,OAAO,CAAChC,IAAI,cAAAoC,aAAA,uBAAZA,aAAA,CAAcnC,MAAM,CAACG,CAAC,IAAIA,CAAC,KAAK6B,GAAG;IAC3C,CAAC;IACDnD,WAAW,CAACoD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACpD,WAAW,CAAC,CAAC;EAGjB,MAAMuD,YAAY,GAAGhF,OAAO,CAAC,MAAM;IACjC;IACA,IAAIiF,MAAM,GAAG5C,WAAW,CAAC;;IAEzB,IAAIL,aAAa,EAAE;MACjBiD,MAAM,GAAGA,MAAM,CAACrC,MAAM,CAACsC,CAAC,IAAIA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAACrD,aAAa,CAACoD,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7G;IACA,IAAInC,YAAY,IAAIA,YAAY,CAACuB,MAAM,GAAG,CAAC,EAAE;MAC3Cc,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEtC,YAAY,CAAC;MACzCgC,MAAM,GAAGA,MAAM,CAACrC,MAAM,CAACsC,CAAC,IAAI;QAAA,IAAAM,OAAA;QAC1B,QAAAA,OAAA,GAAON,CAAC,CAACvC,IAAI,cAAA6C,OAAA,uBAANA,OAAA,CAAQC,IAAI,CAAC1C,CAAC,IAAIE,YAAY,CAACH,QAAQ,CAACC,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC;IACJ;IACA,IAAIgB,eAAe,IAAIA,eAAe,CAACS,MAAM,GAAG,CAAC,EAAE;MACjDS,MAAM,GAAGA,MAAM,CAACrC,MAAM,CAACsC,CAAC,IAAI;QAAA,IAAAQ,WAAA;QAC1B,MAAMC,MAAM,IAAAD,WAAA,GAAGR,CAAC,CAACU,QAAQ,cAAAF,WAAA,uBAAVA,WAAA,CAAYG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAK,QAAQ,CAAC;QACxD,MAAMC,eAAe,GAAGjC,eAAe,CAACjB,QAAQ,CAACjC,aAAa,CAAC;QAC/D,IAAImF,eAAe,KAAK,CAACL,MAAM,IAAI,CAACA,MAAM,CAAC9B,KAAK,IAAI8B,MAAM,CAAC9B,KAAK,CAACW,MAAM,KAAK,CAAC,IAAKmB,MAAM,CAAC9B,KAAK,CAACW,MAAM,KAAK,CAAC,IAAImB,MAAM,CAAC9B,KAAK,CAAC,CAAC,CAAC,KAAG,EAAG,CAAC,EAAE;UACrI,OAAO,IAAI;QACb;QAEA,OAAO,CAAA8B,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE9B,KAAK,KAAK8B,MAAM,CAAC9B,KAAK,CAAc4B,IAAI,CAAC1C,CAAC,IAAIgB,eAAe,CAACjB,QAAQ,CAACC,CAAC,CAAC,CAAC;MAC3F,CAAC,CAAC;IACJ;IAEA,IAAIkB,2BAA2B,KAAK1D,GAAG,EAAE;MACvC0E,MAAM,GAAGA,MAAM,CAACrC,MAAM,CAACsC,CAAC,IAAI;QAC1B,OAAOvD,eAAe,CAAC8D,IAAI,CAACQ,EAAE,IAAIA,EAAE,CAAE3B,SAAS,KAAKY,CAAC,CAACgB,EAAE,CAAC,GACvDjC,2BAA2B,KAAKxD,kBAAkB,GAClDwD,2BAA2B,KAAKzD,wBAAwB;MAC5D,CAAC,CAAC;IACJ;IAEA,IAAI2D,+BAA+B,KAAK5D,GAAG,EAAE;MAC3C0E,MAAM,GAAGA,MAAM,CAACrC,MAAM,CAACsC,CAAC,IAAI;QAC1B,OAAOpD,kBAAkB,CAAC2D,IAAI,CAACU,EAAE,IAAIA,EAAE,CAACC,QAAQ,KAAKlB,CAAC,CAACgB,EAAE,CAAC,GACxD/B,+BAA+B,KAAK1D,kBAAkB,GACtD0D,+BAA+B,KAAK3D,wBAAwB;MAChE,CAAC,CAAC;IACJ;IACAyE,MAAM,GAAGA,MAAM,CAACoB,IAAI,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK,CAACA,GAAG,CAACC,YAAY,IAAIC,MAAM,CAACC,SAAS,KAAKJ,GAAG,CAACE,YAAY,IAAIC,MAAM,CAACC,SAAS,CAAC,CAAC;IACnH,OAAOzB,MAAM;EACf,CAAC,EAAE,CAACjD,aAAa,EAAEK,WAAW,EAAEY,YAAY,EAAEc,eAAe,EAC3DjC,kBAAkB,EAAEH,eAAe,EACnCwC,+BAA+B,EAAEF,2BAA2B,CAAC,CAAC;EAGhE,MAAM0C,aAAa,GAAG5G,WAAW,CAAC,CAAC4E,OAAgB,EACjDiC,mBAA6B,EAC7BC,eAAyB,KAAK;IAC9B,MAAMhC,OAAO,GAAGpD,WAAW,CAACkD,OAAO,CAAC;IAEpC,MAAMmC,YAA2B,GAAG,EAAE;IACtCD,eAAe,CAACE,OAAO,CAACb,EAAE,IAAI;MAC5BY,YAAY,CAACE,IAAI,CAAC;QAChBZ,QAAQ,EAAEF,EAAE;QACZ5B,SAAS,EAAEO,OAAO,CAACqB;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFxE,eAAe,CAACoF,YAAY,CAAC;IAE7B,MAAMG,eAAiC,GAAG,EAAE;IAC5CL,mBAAmB,CAACG,OAAO,CAACb,EAAE,IAAI;MAChCe,eAAe,CAACD,IAAI,CAAC;QACnBZ,QAAQ,EAAEvB,OAAO,CAACqB,EAAE;QACpBgB,YAAY,EAAEhB;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFrE,kBAAkB,CAACoF,eAAe,CAAC;EAErC,CAAC,EAAE,CAACxF,WAAW,EAAEC,eAAe,EAAEG,kBAAkB,CAAC,CAAC;EAEtD,oBAAQT,OAAA;IAAA+F,QAAA,eACN/F,OAAA,CAACvB,YAAY;MAACuH,SAAS,EAAC,UAAU;MAACC,IAAI,EAAC,GAAG;MAAAF,QAAA,gBACzC/F,OAAA,CAAC1B,SAAS;QAAC4H,MAAM,eACflG,OAAA,CAACxB,MAAM;UACL2H,OAAO,EAAE,IAAIvC,YAAY,CAACR,MAAM,GAAI;UACpCgD,IAAI,eAAEpG,OAAA,CAACJ,IAAI;YAACyG,OAAO,EAAC,MAAM;YAAAN,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAE;UAAAV,QAAA,EACxC;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACtB;QAAAV,QAAA,eACC/F,OAAA,CAACvB,YAAY;UAACuH,SAAS,EAAC,UAAU;UAACC,IAAI,EAAC,GAAG;UAAAF,QAAA,gBACzC/F,OAAA,CAACtB,UAAU;YACTkC,aAAa,EAAEA,aAAc;YAC7B8F,oBAAoB,EAAC,eAAe;YACpCC,kBAAkB,EAAC,iBAAiB;YACpCC,QAAQ,EAAEA,CAAC;cAAEC;YAAO,CAAC,KACnBhG,gBAAgB,CAACgG,MAAM,CAACjG,aAAa;UACtC;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFzG,OAAA,CAACzB,IAAI;YACHuI,cAAc,EAAE,CACd;cAAEC,OAAO,EAAE;gBAAEC,OAAO,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE;YAAE,CAAC,EACnC;cAAEF,OAAO,EAAE;gBAAEC,OAAO,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE;YAAE,CAAC,EACnC;cAAEF,OAAO,EAAE;gBAAEC,OAAO,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE;YAAE,CAAC,EACnC;cAAEF,OAAO,EAAE;gBAAEC,OAAO,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE;YAAE,CAAC,EACnC;cAAEF,OAAO,EAAE;gBAAEC,OAAO,EAAE;cAAE;YAAE,CAAC,CAC3B;YAAAjB,QAAA,gBAEF/F,OAAA,CAACV,WAAW;cACV4B,OAAO,EAAEA,OAAQ;cACjBW,YAAY,EAAEA,YAAa;cAC3BC,eAAe,EAAEA;YAAgB;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACFzG,OAAA,CAACH,WAAW;cACVqH,UAAU,EAAE,CAAE;cACdC,eAAe,EAAE,CAAC,GAAG3H,aAAa,CAACgC,MAAM,CAAC4F,CAAC,IAAIzE,eAAe,CAACjB,QAAQ,CAAC0F,CAAC,CAAC3E,KAAK,CAAC,CAAC,EAC/E,IAAGE,eAAe,CAACjB,QAAQ,CAACjC,aAAa,CAAC,GAAG,CAAC8C,sBAAsB,CAAC,GAAG,EAAE,EAAE;cAC9EqE,QAAQ,EAAEA,CAAC;gBAAEC;cAAO,CAAC;gBAAA,IAAAQ,qBAAA;gBAAA,OACnBzE,kBAAkB,CAAC,EAAAyE,qBAAA,GAAAR,MAAM,CAACM,eAAe,cAAAE,qBAAA,uBAAtBA,qBAAA,CAAwBC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC9E,KAAK,IAAI,EAAE,CAAC,KAAI,EAAE,CAAC;cAAA,CAC1E;cACD+E,iBAAiB,EAAEC,CAAC,IAAI,UAAUA,CAAC,CAACjF,KAAK,EAAG;cAC5CkF,OAAO,EAAEhF,wBAAyB;cAClCiF,WAAW,EAAC,oBAAoB;cAChCC,iBAAiB,EAAC;YAAU;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACFzG,OAAA,CAACd,kBAAkB;cACjBsD,KAAK,EAAC,gBAAgB;cACtBqF,iBAAiB,EAAC,SAAS;cAC3BC,UAAU,EAAC,UAAU;cACrBC,QAAQ,EAAElF,2BAA4B;cACtCmF,WAAW,EAAElF;YAA+B;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACFzG,OAAA,CAACd,kBAAkB;cACjBsD,KAAK,EAAC,oBAAoB;cAC1BqF,iBAAiB,EAAC,aAAa;cAC/BC,UAAU,EAAC,UAAU;cACrBC,QAAQ,EAAEhF,+BAAgC;cAC1CiF,WAAW,EAAEhF;YAAmC;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC,eACFzG,OAAA,CAAC3B,MAAM;cAAC4J,OAAO,EAAE5E,iBAAkB;cACjCgD,OAAO,EAAC,MAAM;cACd6B,OAAO,eAAElI,OAAA;gBACPmI,SAAS,EAAC,OAAO;gBACjB,eAAY,MAAM;gBAClBC,OAAO,EAAC,WAAW;gBACnBC,QAAQ,EAAE,CAAC,CAAE;gBAAAtC,QAAA,eAEb/F,OAAA;kBAAMsI,CAAC,EAAC;gBAAgK;kBAAAhC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7K,CAAE;cACP8B,SAAS,EAAC,eAAe;cACzBC,QAAQ,EAAErF;YAAY;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACX7C,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE0D,GAAG,CAACmB,MAAM,iBAAKzI,OAAA,CAACN,WAAW;QAExC+I,MAAM,EAAEA,MAAO;QACfC,QAAQ,EAAEzF,YAAa;QACvB0F,MAAM,EAAEtI,WAAY;QACpBuI,gBAAgB,EAAEtF,oBAAqB;QACvCuF,qBAAqB,EAAEnF,yBAA0B;QACjDzC,WAAW,EAAEA;MAAY,GANpBwH,MAAM,CAAC3D,EAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CAAE,CAAC,eACJzG,OAAA,CAACL,mBAAmB;QAClBmJ,MAAM,EAAEvD,aAAc;QACtBtE,WAAW,EAAEA;MAAY;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AACR,CAAC;AAACvG,EAAA,CAlRID,WAAe;EAAA,QACSjB,yBAAyB,EAKjDC,kBAAkB,EAMlBF,sBAAsB,EAMtBD,yBAAyB;AAAA;AAAAiK,EAAA,GAlBzB9I,WAAe;AAoRrB,eAAeA,WAAW;AAAC,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}