{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar ItemsTree = /** @class */function () {\n  function ItemsTree(items, treeProps) {\n    var _this = this;\n    var _a;\n    this.size = 0;\n    this.hasNesting = false;\n    this.roots = new Array();\n    this.idToChildren = new Map();\n    this.filter = function (predicate) {\n      if (!_this.hasNesting) {\n        _this.items = _this.items.filter(predicate);\n        _this.size = _this.items.length;\n      } else {\n        _this.filterTree(predicate);\n      }\n      return _this;\n    };\n    this.sort = function (comparator) {\n      if (!_this.hasNesting) {\n        _this.items = _this.items.slice().sort(comparator);\n      } else {\n        _this.sortTree(comparator);\n      }\n      return _this;\n    };\n    this.getChildren = function (item) {\n      var _a;\n      return (_a = _this.treeProps && _this.idToChildren.get(_this.treeProps.getId(item))) !== null && _a !== void 0 ? _a : [];\n    };\n    this.getItems = function () {\n      if (_this.hasNesting) {\n        return _this.roots;\n      }\n      return _this.items;\n    };\n    this.getSize = function () {\n      return _this.size;\n    };\n    this.filterTree = function (predicate) {\n      var filterNode = function (item) {\n        var children = _this.getChildren(item);\n        var filteredChildren = children.filter(filterNode);\n        _this.size -= children.length - filteredChildren.length;\n        _this.setChildren(item, filteredChildren);\n        return predicate(item) || filteredChildren.length > 0;\n      };\n      var roots = _this.roots;\n      _this.roots = _this.roots.filter(filterNode);\n      _this.size -= roots.length - _this.roots.length;\n    };\n    this.sortTree = function (comparator) {\n      var sortLevel = function (items) {\n        items.sort(comparator);\n        for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n          var item = items_2[_i];\n          sortLevel(_this.getChildren(item));\n        }\n      };\n      sortLevel(_this.roots);\n    };\n    this.size = items.length;\n    this.items = items;\n    this.treeProps = treeProps;\n    if (!treeProps) {\n      return;\n    }\n    // Assign item children.\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var item = items_1[_i];\n      var parentId = treeProps.getParentId(item);\n      if (parentId === null) {\n        this.roots.push(item);\n      } else {\n        var children = (_a = this.idToChildren.get(parentId)) !== null && _a !== void 0 ? _a : [];\n        children.push(item);\n        this.idToChildren.set(parentId, children);\n        this.hasNesting = true;\n      }\n    }\n    // Assign item levels.\n    var traverse = function (item, level) {\n      var _a;\n      if (level === void 0) {\n        level = 1;\n      }\n      for (var _i = 0, _b = (_a = _this.idToChildren.get(treeProps.getId(item))) !== null && _a !== void 0 ? _a : []; _i < _b.length; _i++) {\n        var child = _b[_i];\n        traverse(child, level + 1);\n      }\n    };\n    this.roots.forEach(function (root) {\n      return traverse(root);\n    });\n  }\n  ItemsTree.prototype.setChildren = function (item, children) {\n    if (this.treeProps) {\n      this.idToChildren.set(this.treeProps.getId(item), children);\n    }\n  };\n  return ItemsTree;\n}();\nexport { ItemsTree };","map":{"version":3,"names":["ItemsTree","items","treeProps","_this","_a","size","hasNesting","roots","Array","idToChildren","Map","filter","predicate","length","filterTree","sort","comparator","slice","sortTree","getChildren","item","get","getId","getItems","getSize","filterNode","children","filteredChildren","setChildren","sortLevel","_i","items_2","items_1","parentId","getParentId","push","set","traverse","level","_b","child","forEach","root","prototype"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@cloudscape-design/collection-hooks/mjs/operations/items-tree.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar ItemsTree = /** @class */ (function () {\n    function ItemsTree(items, treeProps) {\n        var _this = this;\n        var _a;\n        this.size = 0;\n        this.hasNesting = false;\n        this.roots = new Array();\n        this.idToChildren = new Map();\n        this.filter = function (predicate) {\n            if (!_this.hasNesting) {\n                _this.items = _this.items.filter(predicate);\n                _this.size = _this.items.length;\n            }\n            else {\n                _this.filterTree(predicate);\n            }\n            return _this;\n        };\n        this.sort = function (comparator) {\n            if (!_this.hasNesting) {\n                _this.items = _this.items.slice().sort(comparator);\n            }\n            else {\n                _this.sortTree(comparator);\n            }\n            return _this;\n        };\n        this.getChildren = function (item) {\n            var _a;\n            return (_a = (_this.treeProps && _this.idToChildren.get(_this.treeProps.getId(item)))) !== null && _a !== void 0 ? _a : [];\n        };\n        this.getItems = function () {\n            if (_this.hasNesting) {\n                return _this.roots;\n            }\n            return _this.items;\n        };\n        this.getSize = function () {\n            return _this.size;\n        };\n        this.filterTree = function (predicate) {\n            var filterNode = function (item) {\n                var children = _this.getChildren(item);\n                var filteredChildren = children.filter(filterNode);\n                _this.size -= children.length - filteredChildren.length;\n                _this.setChildren(item, filteredChildren);\n                return predicate(item) || filteredChildren.length > 0;\n            };\n            var roots = _this.roots;\n            _this.roots = _this.roots.filter(filterNode);\n            _this.size -= roots.length - _this.roots.length;\n        };\n        this.sortTree = function (comparator) {\n            var sortLevel = function (items) {\n                items.sort(comparator);\n                for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n                    var item = items_2[_i];\n                    sortLevel(_this.getChildren(item));\n                }\n            };\n            sortLevel(_this.roots);\n        };\n        this.size = items.length;\n        this.items = items;\n        this.treeProps = treeProps;\n        if (!treeProps) {\n            return;\n        }\n        // Assign item children.\n        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n            var item = items_1[_i];\n            var parentId = treeProps.getParentId(item);\n            if (parentId === null) {\n                this.roots.push(item);\n            }\n            else {\n                var children = (_a = this.idToChildren.get(parentId)) !== null && _a !== void 0 ? _a : [];\n                children.push(item);\n                this.idToChildren.set(parentId, children);\n                this.hasNesting = true;\n            }\n        }\n        // Assign item levels.\n        var traverse = function (item, level) {\n            var _a;\n            if (level === void 0) { level = 1; }\n            for (var _i = 0, _b = (_a = _this.idToChildren.get(treeProps.getId(item))) !== null && _a !== void 0 ? _a : []; _i < _b.length; _i++) {\n                var child = _b[_i];\n                traverse(child, level + 1);\n            }\n        };\n        this.roots.forEach(function (root) { return traverse(root); });\n    }\n    ItemsTree.prototype.setChildren = function (item, children) {\n        if (this.treeProps) {\n            this.idToChildren.set(this.treeProps.getId(item), children);\n        }\n    };\n    return ItemsTree;\n}());\nexport { ItemsTree };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}