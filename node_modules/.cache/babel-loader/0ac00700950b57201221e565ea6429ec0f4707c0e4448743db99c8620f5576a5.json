{"ast":null,"code":"import Validators from '../validators';\nimport { assign } from '../common/helpers'; // user:pass BasicAuth (optional)\n\nvar BASIC_AUTH = '(?:\\\\S+(?::\\\\S*)?@)?'; // IP address dotted notation octets\n\nvar IPV4 = '(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)'; // the IPv6 matching part is from here: https://gist.github.com/syzdek/6086792\n\nvar IPV6 = '((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}|::1|1::'; // eslint-disable-line max-len\n// host & domain names, may end with dot\n\nvar HOST =\n// can be replaced by\n// '(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)+' +\n\"(?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\" +\n// TLD identifier name, may end with dot\n\"(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)\"; // port number (optional)\n\nvar PORT = '(?::\\\\d{2,5})?'; // resource path (optional)\n\nvar PATH = '(?:[/][^\\\\s?#]*)?';\nvar SEARCH = '(?:[?][^\\\\s#]*)?';\nvar HASH = '(?:[#]\\\\S*)?';\nvar DEFAULT_OPTIONS = {\n  emptyProtocol: true,\n  protocolIdentifier: true,\n  basicAuth: true,\n  local: true,\n  ipv4: true,\n  ipv6: true,\n  host: true,\n  port: true,\n  path: true,\n  search: true,\n  hash: true\n};\nvar url = function url(options) {\n  return buildReg(defaultOptions(options), false);\n};\nexport default url;\nfunction defaultOptions(options) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  options.protocols = [].concat(options.protocol || options.protocols || Validators.urlProtocols).join('|');\n  return options;\n}\nfunction group(option, regPart, capture) {\n  return option ? capture ? \"(\".concat(regPart, \")\") : regPart : '';\n}\nfunction buildReg(options, capture) {\n  return new RegExp('^' + group(true, \"(?:(?:(?:\".concat(options.protocols, \"):)\").concat(options.emptyProtocol ? '?' : '', \"\\\\/\\\\/)\").concat(options.protocolIdentifier ? '' : '?'), capture) + group(options.basicAuth, BASIC_AUTH, capture) + \"(?:\".concat([group(options.ipv4, IPV4, capture), group(options.ipv6, IPV6, capture), group(options.host, HOST, capture), group(options.local, 'localhost', capture)].filter(function (g) {\n    return g;\n  }).join('|'), \")\") + group(options.port, PORT, capture) + group(options.path, PATH, capture) + group(options.search, SEARCH, capture) + group(options.hash, HASH, capture) + '$', 'i');\n}","map":{"version":3,"names":["Validators","assign","BASIC_AUTH","IPV4","IPV6","HOST","PORT","PATH","SEARCH","HASH","DEFAULT_OPTIONS","emptyProtocol","protocolIdentifier","basicAuth","local","ipv4","ipv6","host","port","path","search","hash","url","options","buildReg","defaultOptions","protocols","concat","protocol","urlProtocols","join","group","option","regPart","capture","RegExp","filter","g"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@data-driven-forms/react-form-renderer/esm/validators/url-validator.js"],"sourcesContent":["import Validators from '../validators';\nimport { assign } from '../common/helpers'; // user:pass BasicAuth (optional)\n\nvar BASIC_AUTH = '(?:\\\\S+(?::\\\\S*)?@)?'; // IP address dotted notation octets\n\nvar IPV4 = '(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)'; // the IPv6 matching part is from here: https://gist.github.com/syzdek/6086792\n\nvar IPV6 = '((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}|::1|1::'; // eslint-disable-line max-len\n// host & domain names, may end with dot\n\nvar HOST = // can be replaced by\n// '(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)+' +\n\"(?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\" + // TLD identifier name, may end with dot\n\"(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)\"; // port number (optional)\n\nvar PORT = '(?::\\\\d{2,5})?'; // resource path (optional)\n\nvar PATH = '(?:[/][^\\\\s?#]*)?';\nvar SEARCH = '(?:[?][^\\\\s#]*)?';\nvar HASH = '(?:[#]\\\\S*)?';\nvar DEFAULT_OPTIONS = {\n  emptyProtocol: true,\n  protocolIdentifier: true,\n  basicAuth: true,\n  local: true,\n  ipv4: true,\n  ipv6: true,\n  host: true,\n  port: true,\n  path: true,\n  search: true,\n  hash: true\n};\n\nvar url = function url(options) {\n  return buildReg(defaultOptions(options), false);\n};\n\nexport default url;\n\nfunction defaultOptions(options) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  options.protocols = [].concat(options.protocol || options.protocols || Validators.urlProtocols).join('|');\n  return options;\n}\n\nfunction group(option, regPart, capture) {\n  return option ? capture ? \"(\".concat(regPart, \")\") : regPart : '';\n}\n\nfunction buildReg(options, capture) {\n  return new RegExp('^' + group(true, \"(?:(?:(?:\".concat(options.protocols, \"):)\").concat(options.emptyProtocol ? '?' : '', \"\\\\/\\\\/)\").concat(options.protocolIdentifier ? '' : '?'), capture) + group(options.basicAuth, BASIC_AUTH, capture) + \"(?:\".concat([group(options.ipv4, IPV4, capture), group(options.ipv6, IPV6, capture), group(options.host, HOST, capture), group(options.local, 'localhost', capture)].filter(function (g) {\n    return g;\n  }).join('|'), \")\") + group(options.port, PORT, capture) + group(options.path, PATH, capture) + group(options.search, SEARCH, capture) + group(options.hash, HASH, capture) + '$', 'i');\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}