{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/contexts/FlowContext/components/LocalStorageContextProvider/index.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { LOCAL_STORAGE_KEY_FLOW_INFO } from '../../../../configs/localStorageKeys';\nimport removeLocalStorageKey from '../../../../utils/removeLocalStorageKey';\nimport { FLOW_DEFAULT_VALUE } from '../../../constants';\nimport { FlowContext } from '../../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalStorageKey = workspaceId => {\n  if (workspaceId) {\n    return `${LOCAL_STORAGE_KEY_FLOW_INFO}_${workspaceId}`;\n  }\n  return LOCAL_STORAGE_KEY_FLOW_INFO;\n};\nconst FlowLocalStorageContextProvider = ({\n  children,\n  workspaceId: currentWorkspaceId\n}) => {\n  _s();\n  const [flow, setFlow, {\n    removeItem\n  }] = useLocalStorageState(getLocalStorageKey(currentWorkspaceId), {\n    defaultValue: FLOW_DEFAULT_VALUE\n  });\n  const handleRemoveFlow = useCallback(async () => {\n    removeItem();\n  }, [removeItem]);\n  const handleDeleteWorkspace = useCallback(async workspaceId => {\n    window.setTimeout(() => {\n      // to delete after the workspace is switched. Otherwise the default value is set again.\n      removeLocalStorageKey(getLocalStorageKey(workspaceId));\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FlowContext.Provider, {\n    value: {\n      flow,\n      setFlow,\n      removeFlow: handleRemoveFlow,\n      onDeleteWorkspace: handleDeleteWorkspace\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 11\n  }, this);\n};\n_s(FlowLocalStorageContextProvider, \"mtB+tL/8+bLeABORtYEBC440XZw=\", false, function () {\n  return [useLocalStorageState];\n});\n_c = FlowLocalStorageContextProvider;\nexport default FlowLocalStorageContextProvider;\nvar _c;\n$RefreshReg$(_c, \"FlowLocalStorageContextProvider\");","map":{"version":3,"names":["useCallback","useLocalStorageState","LOCAL_STORAGE_KEY_FLOW_INFO","removeLocalStorageKey","FLOW_DEFAULT_VALUE","FlowContext","jsxDEV","_jsxDEV","getLocalStorageKey","workspaceId","FlowLocalStorageContextProvider","children","currentWorkspaceId","_s","flow","setFlow","removeItem","defaultValue","handleRemoveFlow","handleDeleteWorkspace","window","setTimeout","Provider","value","removeFlow","onDeleteWorkspace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/contexts/FlowContext/components/LocalStorageContextProvider/index.tsx"],"sourcesContent":["import { FC, PropsWithChildren, useCallback } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { LOCAL_STORAGE_KEY_FLOW_INFO } from '../../../../configs/localStorageKeys';\nimport { Flow } from '../../../../customTypes';\nimport removeLocalStorageKey from '../../../../utils/removeLocalStorageKey';\nimport { FLOW_DEFAULT_VALUE } from '../../../constants';\nimport { FlowContext } from '../../context';\nimport { FlowContextProviderProps } from '../../types';\n\nconst getLocalStorageKey = (workspaceId: string | null) => {\n  if (workspaceId) {\n    return `${LOCAL_STORAGE_KEY_FLOW_INFO}_${workspaceId}`;\n  }\n\n  return LOCAL_STORAGE_KEY_FLOW_INFO;\n};\n\nconst FlowLocalStorageContextProvider: FC<PropsWithChildren<FlowContextProviderProps>> = ({\n  children,\n  workspaceId: currentWorkspaceId,\n}) => {\n  const [flow, setFlow, { removeItem }] = useLocalStorageState<Flow>(getLocalStorageKey(currentWorkspaceId), {\n    defaultValue: FLOW_DEFAULT_VALUE,\n  });\n\n  const handleRemoveFlow = useCallback(async () => {\n    removeItem();\n  }, [removeItem]);\n\n  const handleDeleteWorkspace = useCallback(async (workspaceId: string) => {\n    window.setTimeout(() => {\n      // to delete after the workspace is switched. Otherwise the default value is set again.\n      removeLocalStorageKey(getLocalStorageKey(workspaceId));\n    }, 1000);\n  }, []);\n\n  return (<FlowContext.Provider value={{\n    flow,\n    setFlow,\n    removeFlow: handleRemoveFlow,\n    onDeleteWorkspace: handleDeleteWorkspace,\n  }}>\n    {children}\n  </FlowContext.Provider>);\n};\n\nexport default FlowLocalStorageContextProvider;\n\n"],"mappings":";;AAAA,SAAgCA,WAAW,QAAQ,OAAO;AAC1D,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,SAASC,2BAA2B,QAAQ,sCAAsC;AAElF,OAAOC,qBAAqB,MAAM,yCAAyC;AAC3E,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,kBAAkB,GAAIC,WAA0B,IAAK;EACzD,IAAIA,WAAW,EAAE;IACf,OAAO,GAAGP,2BAA2B,IAAIO,WAAW,EAAE;EACxD;EAEA,OAAOP,2BAA2B;AACpC,CAAC;AAED,MAAMQ,+BAAgF,GAAGA,CAAC;EACxFC,QAAQ;EACRF,WAAW,EAAEG;AACf,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,IAAI,EAAEC,OAAO,EAAE;IAAEC;EAAW,CAAC,CAAC,GAAGf,oBAAoB,CAAOO,kBAAkB,CAACI,kBAAkB,CAAC,EAAE;IACzGK,YAAY,EAAEb;EAChB,CAAC,CAAC;EAEF,MAAMc,gBAAgB,GAAGlB,WAAW,CAAC,YAAY;IAC/CgB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMG,qBAAqB,GAAGnB,WAAW,CAAC,MAAOS,WAAmB,IAAK;IACvEW,MAAM,CAACC,UAAU,CAAC,MAAM;MACtB;MACAlB,qBAAqB,CAACK,kBAAkB,CAACC,WAAW,CAAC,CAAC;IACxD,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAQF,OAAA,CAACF,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MACnCT,IAAI;MACJC,OAAO;MACPS,UAAU,EAAEN,gBAAgB;MAC5BO,iBAAiB,EAAEN;IACrB,CAAE;IAAAR,QAAA,EACCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AACzB,CAAC;AAAChB,EAAA,CA3BIH,+BAAgF;EAAA,QAI5CT,oBAAoB;AAAA;AAAA6B,EAAA,GAJxDpB,+BAAgF;AA6BtF,eAAeA,+BAA+B;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}