{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { useCurrentMode } from '@cloudscape-design/component-toolkit/internal';\nimport InternalGrid from '../grid/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport customCssProps from '../internal/generated/custom-css-properties';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { highContrastHeaderClassName } from '../internal/utils/content-header-utils';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nconst halfGeckoMaxCssLength = ((1 << 30) - 1) / 120;\n// CSS lengths in Gecko are limited to at most (1<<30)-1 app units (Gecko uses 60 as app unit).\n// Limit the maxContentWidth to the half of the upper boundary (≈4230^2) to be on the safe side.\nexport default function InternalContentLayout(_a) {\n  var {\n      children,\n      disableOverlap,\n      header,\n      headerVariant = 'default',\n      headerBackgroundStyle,\n      __internalRootRef,\n      maxContentWidth = Number.MAX_VALUE,\n      breadcrumbs,\n      notifications,\n      defaultPadding,\n      secondaryHeader\n    } = _a,\n    rest = __rest(_a, [\"children\", \"disableOverlap\", \"header\", \"headerVariant\", \"headerBackgroundStyle\", \"__internalRootRef\", \"maxContentWidth\", \"breadcrumbs\", \"notifications\", \"defaultPadding\", \"secondaryHeader\"]);\n  const mainRef = useRef(null);\n  const mergedRef = useMergeRefs(mainRef, __internalRootRef);\n  const baseProps = getBaseProps(rest);\n  const isVisualRefresh = useVisualRefresh();\n  const mode = useCurrentMode(mainRef);\n  const overlapElement = useDynamicOverlap();\n  const isOverlapDisabled = !children || disableOverlap;\n  const contentHeaderClassName = headerVariant === 'high-contrast' && isVisualRefresh ? highContrastHeaderClassName : '';\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.layout, {\n      [styles['is-overlap-disabled']]: isOverlapDisabled,\n      [styles['is-visual-refresh']]: isVisualRefresh,\n      [styles['has-header']]: !!header,\n      [styles['default-padding']]: !!defaultPadding,\n      [styles['has-notifications']]: !!notifications\n    }),\n    style: {\n      [customCssProps.contentLayoutMaxContentWidth]: maxContentWidth < Number.MAX_VALUE ? `${maxContentWidth}px` : `${halfGeckoMaxCssLength}px`\n    },\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles.background, {\n      [styles['has-default-background']]: !headerBackgroundStyle\n    }, contentHeaderClassName),\n    ref: overlapElement\n  }, headerBackgroundStyle && React.createElement(\"div\", {\n    className: styles['header-background'],\n    style: {\n      background: typeof headerBackgroundStyle === 'function' ? headerBackgroundStyle(mode) : headerBackgroundStyle\n    }\n  })), notifications && React.createElement(\"div\", {\n    className: clsx(styles.notifications, testutilStyles.notifications, contentHeaderClassName)\n  }, notifications), breadcrumbs && React.createElement(\"div\", {\n    className: clsx(styles.breadcrumbs, testutilStyles.breadcrumbs, contentHeaderClassName)\n  }, breadcrumbs), header && !secondaryHeader && React.createElement(\"div\", {\n    className: clsx(styles['header-wrapper'], testutilStyles.header, contentHeaderClassName, {\n      [styles['with-divider']]: headerVariant === 'divider'\n    })\n  }, header), header && secondaryHeader && React.createElement(\"div\", {\n    className: clsx(styles['header-wrapper'], {\n      [styles['with-divider']]: headerVariant === 'divider'\n    })\n  }, React.createElement(InternalGrid, {\n    gridDefinition: [{\n      colspan: {\n        default: 12,\n        xs: 9\n      }\n    }, {\n      colspan: {\n        default: 12,\n        xs: 3\n      }\n    }]\n  }, React.createElement(\"div\", {\n    className: clsx(testutilStyles.header, contentHeaderClassName)\n  }, header), React.createElement(\"div\", {\n    className: testutilStyles['secondary-header']\n  }, secondaryHeader))), React.createElement(\"div\", {\n    className: clsx(styles.content, {\n      [styles['with-divider']]: headerVariant === 'divider'\n    })\n  }, children));\n}","map":{"version":3,"names":["React","useRef","clsx","useCurrentMode","InternalGrid","getBaseProps","customCssProps","useDynamicOverlap","useMergeRefs","useVisualRefresh","highContrastHeaderClassName","styles","testutilStyles","halfGeckoMaxCssLength","InternalContentLayout","_a","children","disableOverlap","header","headerVariant","headerBackgroundStyle","__internalRootRef","maxContentWidth","Number","MAX_VALUE","breadcrumbs","notifications","defaultPadding","secondaryHeader","rest","__rest","mainRef","mergedRef","baseProps","isVisualRefresh","mode","overlapElement","isOverlapDisabled","contentHeaderClassName","createElement","Object","assign","className","layout","style","contentLayoutMaxContentWidth","ref","background","gridDefinition","colspan","default","xs","content"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/content-layout/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useCurrentMode } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalGrid from '../grid/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport customCssProps from '../internal/generated/custom-css-properties';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { highContrastHeaderClassName } from '../internal/utils/content-header-utils';\nimport { ContentLayoutProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\n\ntype InternalContentLayoutProps = ContentLayoutProps & InternalBaseComponentProps;\n\nconst halfGeckoMaxCssLength = ((1 << 30) - 1) / 120;\n// CSS lengths in Gecko are limited to at most (1<<30)-1 app units (Gecko uses 60 as app unit).\n// Limit the maxContentWidth to the half of the upper boundary (≈4230^2) to be on the safe side.\n\nexport default function InternalContentLayout({\n  children,\n  disableOverlap,\n  header,\n  headerVariant = 'default',\n  headerBackgroundStyle,\n  __internalRootRef,\n  maxContentWidth = Number.MAX_VALUE,\n  breadcrumbs,\n  notifications,\n  defaultPadding,\n  secondaryHeader,\n  ...rest\n}: InternalContentLayoutProps) {\n  const mainRef = useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(mainRef, __internalRootRef);\n\n  const baseProps = getBaseProps(rest);\n\n  const isVisualRefresh = useVisualRefresh();\n  const mode = useCurrentMode(mainRef);\n\n  const overlapElement = useDynamicOverlap();\n\n  const isOverlapDisabled = !children || disableOverlap;\n\n  const contentHeaderClassName =\n    headerVariant === 'high-contrast' && isVisualRefresh ? highContrastHeaderClassName : '';\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.layout, {\n        [styles['is-overlap-disabled']]: isOverlapDisabled,\n        [styles['is-visual-refresh']]: isVisualRefresh,\n        [styles['has-header']]: !!header,\n        [styles['default-padding']]: !!defaultPadding,\n        [styles['has-notifications']]: !!notifications,\n      })}\n      style={{\n        [customCssProps.contentLayoutMaxContentWidth]:\n          maxContentWidth < Number.MAX_VALUE ? `${maxContentWidth}px` : `${halfGeckoMaxCssLength}px`,\n      }}\n      ref={mergedRef}\n    >\n      <div\n        className={clsx(\n          styles.background,\n          { [styles['has-default-background']]: !headerBackgroundStyle },\n          contentHeaderClassName\n        )}\n        ref={overlapElement}\n      >\n        {headerBackgroundStyle && (\n          <div\n            className={styles['header-background']}\n            style={{\n              background:\n                typeof headerBackgroundStyle === 'function' ? headerBackgroundStyle(mode) : headerBackgroundStyle,\n            }}\n          />\n        )}\n      </div>\n      {notifications && (\n        <div className={clsx(styles.notifications, testutilStyles.notifications, contentHeaderClassName)}>\n          {notifications}\n        </div>\n      )}\n      {breadcrumbs && (\n        <div className={clsx(styles.breadcrumbs, testutilStyles.breadcrumbs, contentHeaderClassName)}>\n          {breadcrumbs}\n        </div>\n      )}\n      {header && !secondaryHeader && (\n        <div\n          className={clsx(styles['header-wrapper'], testutilStyles.header, contentHeaderClassName, {\n            [styles['with-divider']]: headerVariant === 'divider',\n          })}\n        >\n          {header}\n        </div>\n      )}\n      {header && secondaryHeader && (\n        <div\n          className={clsx(styles['header-wrapper'], {\n            [styles['with-divider']]: headerVariant === 'divider',\n          })}\n        >\n          <InternalGrid gridDefinition={[{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }]}>\n            <div className={clsx(testutilStyles.header, contentHeaderClassName)}>{header}</div>\n            <div className={testutilStyles['secondary-header']}>{secondaryHeader}</div>\n          </InternalGrid>\n        </div>\n      )}\n\n      <div\n        className={clsx(styles.content, {\n          [styles['with-divider']]: headerVariant === 'divider',\n        })}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}