{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalCheckbox from '../../checkbox/internal';\nimport { SingleTabStopNavigationContext } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport RadioButton from '../../radio-group/radio-button';\nimport styles from './styles.css.js';\nexport function SelectionControl(_a) {\n  var {\n      selectionType,\n      indeterminate = false,\n      onShiftToggle,\n      onFocusUp,\n      onFocusDown,\n      name,\n      ariaLabel,\n      focusedComponent,\n      rowIndex,\n      itemKey\n    } = _a,\n    sharedProps = __rest(_a, [\"selectionType\", \"indeterminate\", \"onShiftToggle\", \"onFocusUp\", \"onFocusDown\", \"name\", \"ariaLabel\", \"focusedComponent\", \"rowIndex\", \"itemKey\"]);\n  const controlId = useUniqueId();\n  const isMultiSelection = selectionType === 'multi';\n  const {\n    navigationActive\n  } = useContext(SingleTabStopNavigationContext);\n  const setShiftState = event => {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n  const onMouseDownHandler = event => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      // To overcome an issue\n      // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=559506\n      event.preventDefault();\n    }\n  };\n  // native checkboxes do not have focus move via keyboard, we implement it here programmatically\n  const handleKeyDown = event => {\n    setShiftState(event);\n    if (isMultiSelection && !navigationActive) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n  const handleClick = event => {\n    const target = event.currentTarget;\n    const nativeInput = target.tagName === 'INPUT' ? target : target.querySelector('input');\n    // Clicking on input, does not focus it on Firefox (AWSUI-11345)\n    nativeInput === null || nativeInput === void 0 ? void 0 : nativeInput.focus();\n  };\n  const selector = isMultiSelection ? React.createElement(InternalCheckbox, Object.assign({}, sharedProps, {\n    showOutline: focusedComponent === 'selection-control',\n    controlId: controlId,\n    \"data-focus-id\": \"selection-control\",\n    indeterminate: indeterminate\n  })) : React.createElement(RadioButton, Object.assign({}, sharedProps, {\n    controlId: controlId,\n    name: name,\n    value: '',\n    label: ''\n  }));\n  return React.createElement(React.Fragment, null, React.createElement(\"label\", Object.assign({\n    onKeyDown: handleKeyDown,\n    onKeyUp: setShiftState,\n    onMouseDown: onMouseDownHandler,\n    onMouseUp: setShiftState,\n    onClick: handleClick,\n    htmlFor: controlId,\n    className: clsx(styles.label, styles.root),\n    \"aria-label\": ariaLabel,\n    title: ariaLabel\n  }, rowIndex !== undefined && !sharedProps.disabled ? getAnalyticsMetadataAttribute({\n    detail: {\n      position: `${rowIndex + 1}`,\n      item: itemKey || ''\n    }\n  }) : {}), selector), React.createElement(\"span\", {\n    className: styles.stud,\n    \"aria-hidden\": true\n  }, \"\\u00A0\"));\n}","map":{"version":3,"names":["React","useContext","clsx","getAnalyticsMetadataAttribute","InternalCheckbox","SingleTabStopNavigationContext","useUniqueId","KeyCode","RadioButton","styles","SelectionControl","_a","selectionType","indeterminate","onShiftToggle","onFocusUp","onFocusDown","name","ariaLabel","focusedComponent","rowIndex","itemKey","sharedProps","__rest","controlId","isMultiSelection","navigationActive","setShiftState","event","shiftKey","onMouseDownHandler","preventDefault","handleKeyDown","keyCode","up","down","handleClick","target","currentTarget","nativeInput","tagName","querySelector","focus","selector","createElement","Object","assign","showOutline","value","label","Fragment","onKeyDown","onKeyUp","onMouseDown","onMouseUp","onClick","htmlFor","className","root","title","undefined","disabled","detail","position","item","stud"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/selection/selection-control.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { KeyboardEvent, KeyboardEventHandler, MouseEvent, useContext } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalCheckbox from '../../checkbox/internal';\nimport { SingleTabStopNavigationContext } from '../../internal/context/single-tab-stop-navigation-context';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { KeyCode } from '../../internal/keycode';\nimport RadioButton from '../../radio-group/radio-button';\nimport { GeneratedAnalyticsMetadataTableSelect } from '../analytics-metadata/interfaces';\nimport { SelectionProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport interface SelectionControlProps extends SelectionProps {\n  onShiftToggle?(shiftPressed: boolean): void;\n  onFocusUp?: KeyboardEventHandler;\n  onFocusDown?: KeyboardEventHandler;\n  ariaLabel?: string;\n  tabIndex?: -1;\n  focusedComponent?: null | string;\n  rowIndex?: number;\n  itemKey?: string;\n}\n\nexport function SelectionControl({\n  selectionType,\n  indeterminate = false,\n  onShiftToggle,\n  onFocusUp,\n  onFocusDown,\n  name,\n  ariaLabel,\n  focusedComponent,\n  rowIndex,\n  itemKey,\n  ...sharedProps\n}: SelectionControlProps) {\n  const controlId = useUniqueId();\n  const isMultiSelection = selectionType === 'multi';\n  const { navigationActive } = useContext(SingleTabStopNavigationContext);\n\n  const setShiftState = (event: KeyboardEvent | MouseEvent) => {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n\n  const onMouseDownHandler = (event: MouseEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      // To overcome an issue\n      // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=559506\n      event.preventDefault();\n    }\n  };\n\n  // native checkboxes do not have focus move via keyboard, we implement it here programmatically\n  const handleKeyDown = (event: KeyboardEvent) => {\n    setShiftState(event);\n    if (isMultiSelection && !navigationActive) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n\n  const handleClick = (event: MouseEvent) => {\n    const target = event.currentTarget;\n    const nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input')) as HTMLInputElement;\n    // Clicking on input, does not focus it on Firefox (AWSUI-11345)\n    nativeInput?.focus();\n  };\n\n  const selector = isMultiSelection ? (\n    <InternalCheckbox\n      {...sharedProps}\n      showOutline={focusedComponent === 'selection-control'}\n      controlId={controlId}\n      data-focus-id=\"selection-control\"\n      indeterminate={indeterminate}\n    />\n  ) : (\n    <RadioButton {...sharedProps} controlId={controlId} name={name} value={''} label={''} />\n  );\n\n  return (\n    <>\n      <label\n        onKeyDown={handleKeyDown}\n        onKeyUp={setShiftState}\n        onMouseDown={onMouseDownHandler}\n        onMouseUp={setShiftState}\n        onClick={handleClick}\n        htmlFor={controlId}\n        className={clsx(styles.label, styles.root)}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n        {...(rowIndex !== undefined && !sharedProps.disabled\n          ? getAnalyticsMetadataAttribute({\n              detail: {\n                position: `${rowIndex + 1}`,\n                item: itemKey || '',\n              },\n            } as Partial<GeneratedAnalyticsMetadataTableSelect>)\n          : {})}\n      >\n        {selector}\n      </label>\n      <span className={styles.stud} aria-hidden={true}>\n        &nbsp;\n      </span>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}