{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\nexport class DrawersController {\n  constructor() {\n    this.drawers = [];\n    this.drawersRegistrationListener = null;\n    this.drawerOpenedListener = null;\n    this.drawerClosedListener = null;\n    this.scheduleUpdate = debounce(() => {\n      var _a;\n      (_a = this.drawersRegistrationListener) === null || _a === void 0 ? void 0 : _a.call(this, this.drawers);\n    }, 0);\n    this.registerDrawer = config => {\n      this.drawers = this.drawers.concat(config);\n      this.scheduleUpdate();\n    };\n    this.updateDrawer = config => {\n      var _a;\n      const {\n        id: drawerId,\n        resizable,\n        badge,\n        defaultSize\n      } = config;\n      const drawerIndex = this.drawers.findIndex(({\n        id\n      }) => id === drawerId);\n      const oldDrawerConfig = (_a = this.drawers) === null || _a === void 0 ? void 0 : _a[drawerIndex];\n      if (drawerIndex >= 0 && oldDrawerConfig) {\n        const drawers = this.drawers.slice();\n        const drawerConfig = Object.assign({}, oldDrawerConfig);\n        if (typeof resizable === 'boolean') {\n          drawerConfig.resizable = resizable;\n        }\n        if (typeof badge === 'boolean') {\n          drawerConfig.badge = badge;\n        }\n        if (typeof defaultSize === 'number') {\n          drawerConfig.defaultSize = defaultSize;\n        }\n        drawers[drawerIndex] = drawerConfig;\n        this.drawers = drawers;\n        this.scheduleUpdate();\n      } else {\n        throw new Error(`[AwsUi] [runtime drawers] drawer with id ${drawerId} not found`);\n      }\n    };\n    this.onDrawersRegistered = listener => {\n      if (this.drawersRegistrationListener !== null) {\n        console.warn('[AwsUi] [runtime drawers] multiple app layout instances detected');\n      }\n      this.drawersRegistrationListener = listener;\n      this.scheduleUpdate();\n      return () => {\n        this.drawersRegistrationListener = null;\n      };\n    };\n    this.clearRegisteredDrawers = () => {\n      this.drawers = [];\n    };\n    this.onDrawerOpened = listener => {\n      if (this.drawerOpenedListener !== null) {\n        console.warn('[AwsUi] [runtime drawers] multiple app layout instances detected');\n      }\n      this.drawerOpenedListener = listener;\n      return () => {\n        this.drawerOpenedListener = null;\n      };\n    };\n    this.onDrawerClosed = listener => {\n      if (this.drawerClosedListener !== null) {\n        console.warn('[AwsUi] [runtime drawers] multiple app layout instances detected');\n      }\n      this.drawerClosedListener = listener;\n      return () => {\n        this.drawerClosedListener = null;\n      };\n    };\n    this.openDrawer = drawerId => {\n      var _a;\n      (_a = this.drawerOpenedListener) === null || _a === void 0 ? void 0 : _a.call(this, drawerId);\n    };\n    this.closeDrawer = drawerId => {\n      var _a;\n      (_a = this.drawerClosedListener) === null || _a === void 0 ? void 0 : _a.call(this, drawerId);\n    };\n  }\n  installPublic(api = {}) {\n    var _a, _b, _c, _d;\n    (_a = api.registerDrawer) !== null && _a !== void 0 ? _a : api.registerDrawer = this.registerDrawer;\n    (_b = api.updateDrawer) !== null && _b !== void 0 ? _b : api.updateDrawer = this.updateDrawer;\n    (_c = api.openDrawer) !== null && _c !== void 0 ? _c : api.openDrawer = this.openDrawer;\n    (_d = api.closeDrawer) !== null && _d !== void 0 ? _d : api.closeDrawer = this.closeDrawer;\n    return api;\n  }\n  installInternal(internalApi = {}) {\n    var _a, _b, _c, _d;\n    (_a = internalApi.clearRegisteredDrawers) !== null && _a !== void 0 ? _a : internalApi.clearRegisteredDrawers = this.clearRegisteredDrawers;\n    (_b = internalApi.onDrawersRegistered) !== null && _b !== void 0 ? _b : internalApi.onDrawersRegistered = this.onDrawersRegistered;\n    (_c = internalApi.onDrawerOpened) !== null && _c !== void 0 ? _c : internalApi.onDrawerOpened = this.onDrawerOpened;\n    (_d = internalApi.onDrawerClosed) !== null && _d !== void 0 ? _d : internalApi.onDrawerClosed = this.onDrawerClosed;\n    return internalApi;\n  }\n}","map":{"version":3,"names":["debounce","DrawersController","constructor","drawers","drawersRegistrationListener","drawerOpenedListener","drawerClosedListener","scheduleUpdate","_a","call","registerDrawer","config","concat","updateDrawer","id","drawerId","resizable","badge","defaultSize","drawerIndex","findIndex","oldDrawerConfig","slice","drawerConfig","Object","assign","Error","onDrawersRegistered","listener","console","warn","clearRegisteredDrawers","onDrawerOpened","onDrawerClosed","openDrawer","closeDrawer","installPublic","api","_b","_c","_d","installInternal","internalApi"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/plugins/controllers/drawers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\nimport { NonCancelableEventHandler } from '../../events';\n\nexport type DrawerVisibilityChange = (callback: (isVisible: boolean) => void) => void;\n\nexport interface MountContentContext {\n  onVisibilityChange: DrawerVisibilityChange;\n}\n\nexport interface DrawerConfig {\n  id: string;\n  type?: 'local' | 'global';\n  ariaLabels: {\n    content?: string;\n    closeButton?: string;\n    triggerButton?: string;\n    resizeHandle?: string;\n  };\n  badge?: boolean;\n  resizable?: boolean;\n  defaultSize?: number;\n  onResize?: NonCancelableEventHandler<{ size: number; id: string }>;\n  orderPriority?: number;\n  defaultActive?: boolean;\n  trigger?: {\n    iconSvg: string;\n  };\n  mountContent: (container: HTMLElement, mountContext: MountContentContext) => void;\n  unmountContent: (container: HTMLElement) => void;\n  preserveInactiveContent?: boolean;\n}\n\nexport type UpdateDrawerConfig = Pick<DrawerConfig, 'id' | 'badge' | 'resizable' | 'defaultSize'>;\n\nexport type DrawersRegistrationListener = (drawers: Array<DrawerConfig>) => void;\n\nexport type DrawersToggledListener = (drawerId: string) => void;\n\nexport interface DrawersApiPublic {\n  registerDrawer(config: DrawerConfig): void;\n  updateDrawer(config: UpdateDrawerConfig): void;\n  openDrawer(drawerId: string): void;\n  closeDrawer(drawerId: string): void;\n}\n\nexport interface DrawersApiInternal {\n  clearRegisteredDrawers(): void;\n  onDrawersRegistered(listener: DrawersRegistrationListener): () => void;\n  onDrawerOpened(listener: DrawersToggledListener): () => void;\n  onDrawerClosed(listener: DrawersToggledListener): () => void;\n}\n\nexport class DrawersController {\n  private drawers: Array<DrawerConfig> = [];\n  private drawersRegistrationListener: DrawersRegistrationListener | null = null;\n  private drawerOpenedListener: DrawersToggledListener | null = null;\n  private drawerClosedListener: DrawersToggledListener | null = null;\n\n  scheduleUpdate = debounce(() => {\n    this.drawersRegistrationListener?.(this.drawers);\n  }, 0);\n\n  registerDrawer = (config: DrawerConfig) => {\n    this.drawers = this.drawers.concat(config);\n    this.scheduleUpdate();\n  };\n\n  updateDrawer = (config: UpdateDrawerConfig) => {\n    const { id: drawerId, resizable, badge, defaultSize } = config;\n    const drawerIndex = this.drawers.findIndex(({ id }) => id === drawerId);\n    const oldDrawerConfig = this.drawers?.[drawerIndex];\n    if (drawerIndex >= 0 && oldDrawerConfig) {\n      const drawers = this.drawers.slice();\n      const drawerConfig = { ...oldDrawerConfig };\n      if (typeof resizable === 'boolean') {\n        drawerConfig.resizable = resizable;\n      }\n      if (typeof badge === 'boolean') {\n        drawerConfig.badge = badge;\n      }\n      if (typeof defaultSize === 'number') {\n        drawerConfig.defaultSize = defaultSize;\n      }\n\n      drawers[drawerIndex] = drawerConfig;\n      this.drawers = drawers;\n      this.scheduleUpdate();\n    } else {\n      throw new Error(`[AwsUi] [runtime drawers] drawer with id ${drawerId} not found`);\n    }\n  };\n\n  onDrawersRegistered = (listener: DrawersRegistrationListener) => {\n    if (this.drawersRegistrationListener !== null) {\n      console.warn('[AwsUi] [runtime drawers] multiple app layout instances detected');\n    }\n    this.drawersRegistrationListener = listener;\n    this.scheduleUpdate();\n    return () => {\n      this.drawersRegistrationListener = null;\n    };\n  };\n\n  clearRegisteredDrawers = () => {\n    this.drawers = [];\n  };\n\n  onDrawerOpened = (listener: DrawersToggledListener) => {\n    if (this.drawerOpenedListener !== null) {\n      console.warn('[AwsUi] [runtime drawers] multiple app layout instances detected');\n    }\n\n    this.drawerOpenedListener = listener;\n\n    return () => {\n      this.drawerOpenedListener = null;\n    };\n  };\n\n  onDrawerClosed = (listener: DrawersToggledListener) => {\n    if (this.drawerClosedListener !== null) {\n      console.warn('[AwsUi] [runtime drawers] multiple app layout instances detected');\n    }\n\n    this.drawerClosedListener = listener;\n\n    return () => {\n      this.drawerClosedListener = null;\n    };\n  };\n\n  openDrawer = (drawerId: string) => {\n    this.drawerOpenedListener?.(drawerId);\n  };\n\n  closeDrawer = (drawerId: string) => {\n    this.drawerClosedListener?.(drawerId);\n  };\n\n  installPublic(api: Partial<DrawersApiPublic> = {}): DrawersApiPublic {\n    api.registerDrawer ??= this.registerDrawer;\n    api.updateDrawer ??= this.updateDrawer;\n    api.openDrawer ??= this.openDrawer;\n    api.closeDrawer ??= this.closeDrawer;\n    return api as DrawersApiPublic;\n  }\n\n  installInternal(internalApi: Partial<DrawersApiInternal> = {}): DrawersApiInternal {\n    internalApi.clearRegisteredDrawers ??= this.clearRegisteredDrawers;\n    internalApi.onDrawersRegistered ??= this.onDrawersRegistered;\n    internalApi.onDrawerOpened ??= this.onDrawerOpened;\n    internalApi.onDrawerClosed ??= this.onDrawerClosed;\n    return internalApi as DrawersApiInternal;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,QAAQ,MAAM,gBAAgB;AAoDrC,OAAM,MAAOC,iBAAiB;EAA9BC,YAAA;IACU,KAAAC,OAAO,GAAwB,EAAE;IACjC,KAAAC,2BAA2B,GAAuC,IAAI;IACtE,KAAAC,oBAAoB,GAAkC,IAAI;IAC1D,KAAAC,oBAAoB,GAAkC,IAAI;IAElE,KAAAC,cAAc,GAAGP,QAAQ,CAAC,MAAK;;MAC7B,CAAAQ,EAAA,OAAI,CAACJ,2BAA2B,cAAAI,EAAA,uBAAAA,EAAA,CAAAC,IAAA,OAAG,IAAI,CAACN,OAAO,CAAC;IAClD,CAAC,EAAE,CAAC,CAAC;IAEL,KAAAO,cAAc,GAAIC,MAAoB,IAAI;MACxC,IAAI,CAACR,OAAO,GAAG,IAAI,CAACA,OAAO,CAACS,MAAM,CAACD,MAAM,CAAC;MAC1C,IAAI,CAACJ,cAAc,EAAE;IACvB,CAAC;IAED,KAAAM,YAAY,GAAIF,MAA0B,IAAI;;MAC5C,MAAM;QAAEG,EAAE,EAAEC,QAAQ;QAAEC,SAAS;QAAEC,KAAK;QAAEC;MAAW,CAAE,GAAGP,MAAM;MAC9D,MAAMQ,WAAW,GAAG,IAAI,CAAChB,OAAO,CAACiB,SAAS,CAAC,CAAC;QAAEN;MAAE,CAAE,KAAKA,EAAE,KAAKC,QAAQ,CAAC;MACvE,MAAMM,eAAe,GAAG,CAAAb,EAAA,OAAI,CAACL,OAAO,cAAAK,EAAA,uBAAAA,EAAA,CAAGW,WAAW,CAAC;MACnD,IAAIA,WAAW,IAAI,CAAC,IAAIE,eAAe,EAAE;QACvC,MAAMlB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACmB,KAAK,EAAE;QACpC,MAAMC,YAAY,GAAAC,MAAA,CAAAC,MAAA,KAAQJ,eAAe,CAAE;QAC3C,IAAI,OAAOL,SAAS,KAAK,SAAS,EAAE;UAClCO,YAAY,CAACP,SAAS,GAAGA,SAAS;;QAEpC,IAAI,OAAOC,KAAK,KAAK,SAAS,EAAE;UAC9BM,YAAY,CAACN,KAAK,GAAGA,KAAK;;QAE5B,IAAI,OAAOC,WAAW,KAAK,QAAQ,EAAE;UACnCK,YAAY,CAACL,WAAW,GAAGA,WAAW;;QAGxCf,OAAO,CAACgB,WAAW,CAAC,GAAGI,YAAY;QACnC,IAAI,CAACpB,OAAO,GAAGA,OAAO;QACtB,IAAI,CAACI,cAAc,EAAE;OACtB,MAAM;QACL,MAAM,IAAImB,KAAK,CAAC,4CAA4CX,QAAQ,YAAY,CAAC;;IAErF,CAAC;IAED,KAAAY,mBAAmB,GAAIC,QAAqC,IAAI;MAC9D,IAAI,IAAI,CAACxB,2BAA2B,KAAK,IAAI,EAAE;QAC7CyB,OAAO,CAACC,IAAI,CAAC,kEAAkE,CAAC;;MAElF,IAAI,CAAC1B,2BAA2B,GAAGwB,QAAQ;MAC3C,IAAI,CAACrB,cAAc,EAAE;MACrB,OAAO,MAAK;QACV,IAAI,CAACH,2BAA2B,GAAG,IAAI;MACzC,CAAC;IACH,CAAC;IAED,KAAA2B,sBAAsB,GAAG,MAAK;MAC5B,IAAI,CAAC5B,OAAO,GAAG,EAAE;IACnB,CAAC;IAED,KAAA6B,cAAc,GAAIJ,QAAgC,IAAI;MACpD,IAAI,IAAI,CAACvB,oBAAoB,KAAK,IAAI,EAAE;QACtCwB,OAAO,CAACC,IAAI,CAAC,kEAAkE,CAAC;;MAGlF,IAAI,CAACzB,oBAAoB,GAAGuB,QAAQ;MAEpC,OAAO,MAAK;QACV,IAAI,CAACvB,oBAAoB,GAAG,IAAI;MAClC,CAAC;IACH,CAAC;IAED,KAAA4B,cAAc,GAAIL,QAAgC,IAAI;MACpD,IAAI,IAAI,CAACtB,oBAAoB,KAAK,IAAI,EAAE;QACtCuB,OAAO,CAACC,IAAI,CAAC,kEAAkE,CAAC;;MAGlF,IAAI,CAACxB,oBAAoB,GAAGsB,QAAQ;MAEpC,OAAO,MAAK;QACV,IAAI,CAACtB,oBAAoB,GAAG,IAAI;MAClC,CAAC;IACH,CAAC;IAED,KAAA4B,UAAU,GAAInB,QAAgB,IAAI;;MAChC,CAAAP,EAAA,OAAI,CAACH,oBAAoB,cAAAG,EAAA,uBAAAA,EAAA,CAAAC,IAAA,OAAGM,QAAQ,CAAC;IACvC,CAAC;IAED,KAAAoB,WAAW,GAAIpB,QAAgB,IAAI;;MACjC,CAAAP,EAAA,OAAI,CAACF,oBAAoB,cAAAE,EAAA,uBAAAA,EAAA,CAAAC,IAAA,OAAGM,QAAQ,CAAC;IACvC,CAAC;EAiBH;EAfEqB,aAAaA,CAACC,GAAA,GAAiC,EAAE;;IAC/C,CAAA7B,EAAA,GAAA6B,GAAG,CAAC3B,cAAc,cAAAF,EAAA,cAAAA,EAAA,GAAlB6B,GAAG,CAAC3B,cAAc,GAAK,IAAI,CAACA,cAAc;IAC1C,CAAA4B,EAAA,GAAAD,GAAG,CAACxB,YAAY,cAAAyB,EAAA,cAAAA,EAAA,GAAhBD,GAAG,CAACxB,YAAY,GAAK,IAAI,CAACA,YAAY;IACtC,CAAA0B,EAAA,GAAAF,GAAG,CAACH,UAAU,cAAAK,EAAA,cAAAA,EAAA,GAAdF,GAAG,CAACH,UAAU,GAAK,IAAI,CAACA,UAAU;IAClC,CAAAM,EAAA,GAAAH,GAAG,CAACF,WAAW,cAAAK,EAAA,cAAAA,EAAA,GAAfH,GAAG,CAACF,WAAW,GAAK,IAAI,CAACA,WAAW;IACpC,OAAOE,GAAuB;EAChC;EAEAI,eAAeA,CAACC,WAAA,GAA2C,EAAE;;IAC3D,CAAAlC,EAAA,GAAAkC,WAAW,CAACX,sBAAsB,cAAAvB,EAAA,cAAAA,EAAA,GAAlCkC,WAAW,CAACX,sBAAsB,GAAK,IAAI,CAACA,sBAAsB;IAClE,CAAAO,EAAA,GAAAI,WAAW,CAACf,mBAAmB,cAAAW,EAAA,cAAAA,EAAA,GAA/BI,WAAW,CAACf,mBAAmB,GAAK,IAAI,CAACA,mBAAmB;IAC5D,CAAAY,EAAA,GAAAG,WAAW,CAACV,cAAc,cAAAO,EAAA,cAAAA,EAAA,GAA1BG,WAAW,CAACV,cAAc,GAAK,IAAI,CAACA,cAAc;IAClD,CAAAQ,EAAA,GAAAE,WAAW,CAACT,cAAc,cAAAO,EAAA,cAAAA,EAAA,GAA1BE,WAAW,CAACT,cAAc,GAAK,IAAI,CAACA,cAAc;IAClD,OAAOS,WAAiC;EAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}