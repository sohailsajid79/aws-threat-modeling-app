{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext, useCallback, useEffect, useLayoutEffect, useState } from 'react';\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\nimport * as tokens from '../internal/generated/styles/tokens';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport globalVars from '../internal/styles/global-vars';\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\nexport function computeOffset(_ref) {\n  let {\n    isMobile,\n    __stickyOffset,\n    __mobileStickyOffset,\n    hasInnerOverflowParents,\n    __additionalOffset\n  } = _ref;\n  const localOffset = isMobile ? (__stickyOffset !== null && __stickyOffset !== void 0 ? __stickyOffset : 0) - (__mobileStickyOffset !== null && __mobileStickyOffset !== void 0 ? __mobileStickyOffset : 0) : __stickyOffset !== null && __stickyOffset !== void 0 ? __stickyOffset : 0;\n  if (hasInnerOverflowParents || __stickyOffset !== undefined) {\n    return `${localOffset}px`;\n  }\n  const globalOffset = `var(${globalVars.stickyVerticalTopOffset}, 0px)`;\n  return `calc(${globalOffset} + ${localOffset}px + ${__additionalOffset ? tokens.spaceScaledS : '0px'})`;\n}\nexport const StickyHeaderContext = createContext({\n  isStuck: false\n});\nexport const useStickyHeader = function (rootRef, headerRef, __stickyHeader, __stickyOffset, __mobileStickyOffset, __disableMobile) {\n  let __additionalOffset = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n  const isMobile = useMobile();\n  const disableSticky = isMobile && __disableMobile;\n  const isSticky = !disableSticky && !!__stickyHeader;\n  // If it has overflow parents inside the app layout, we shouldn't apply a sticky offset.\n  const [hasInnerOverflowParents, setHasInnerOverflowParents] = useState(false);\n  const [isStuck, setIsStuck] = useState(false);\n  useLayoutEffect(() => {\n    if (rootRef.current) {\n      const overflowParents = getOverflowParents(rootRef.current);\n      const mainElement = findUpUntil(rootRef.current, elem => elem.tagName === 'MAIN');\n      // In both versions of the app layout, the scrolling element for disableBodyScroll\n      // is the <main>. If the closest overflow parent is also the closest <main> and we have\n      // offset values, it's safe to assume that it's the app layout scroll root and we\n      // should stop there.\n      setHasInnerOverflowParents(overflowParents.length > 0 && overflowParents[0] !== mainElement);\n    }\n  }, [rootRef]);\n  const computedOffset = computeOffset({\n    isMobile,\n    __stickyOffset,\n    __mobileStickyOffset,\n    hasInnerOverflowParents,\n    __additionalOffset\n  });\n  const stickyStyles = isSticky ? {\n    style: {\n      top: computedOffset\n    }\n  } : {};\n  // \"stuck\" state, when the header has moved from its original posititon has a\n  // box-shadow, applied here by a \"header-stuck\" className\n  const checkIfStuck = useCallback(_ref2 => {\n    let {\n      isTrusted,\n      target,\n      type\n    } = _ref2;\n    if (type === 'resize' && target === window && !isTrusted) {\n      // The window size didn't actually change, it was a synthetic event\n      return;\n    }\n    if (rootRef.current && headerRef.current) {\n      const rootTopBorderWidth = parseFloat(getComputedStyle(rootRef.current).borderTopWidth) || 0;\n      const rootTop = rootRef.current.getBoundingClientRect().top + rootTopBorderWidth;\n      const headerTop = headerRef.current.getBoundingClientRect().top;\n      if (rootTop < headerTop) {\n        setIsStuck(true);\n      } else {\n        setIsStuck(false);\n      }\n    }\n  }, [rootRef, headerRef]);\n  useEffect(() => {\n    if (isSticky) {\n      window.addEventListener('scroll', checkIfStuck, true);\n      window.addEventListener('resize', checkIfStuck);\n      return () => {\n        window.removeEventListener('scroll', checkIfStuck, true);\n        window.removeEventListener('resize', checkIfStuck);\n      };\n    }\n  }, [isSticky, checkIfStuck]);\n  return {\n    isSticky,\n    isStuck,\n    stickyStyles\n  };\n};","map":{"version":3,"names":["createContext","useCallback","useEffect","useLayoutEffect","useState","findUpUntil","tokens","useMobile","globalVars","getOverflowParents","computeOffset","_ref","isMobile","__stickyOffset","__mobileStickyOffset","hasInnerOverflowParents","__additionalOffset","localOffset","undefined","globalOffset","stickyVerticalTopOffset","spaceScaledS","StickyHeaderContext","isStuck","useStickyHeader","rootRef","headerRef","__stickyHeader","__disableMobile","arguments","length","disableSticky","isSticky","setHasInnerOverflowParents","setIsStuck","current","overflowParents","mainElement","elem","tagName","computedOffset","stickyStyles","style","top","checkIfStuck","_ref2","isTrusted","target","type","window","rootTopBorderWidth","parseFloat","getComputedStyle","borderTopWidth","rootTop","getBoundingClientRect","headerTop","addEventListener","removeEventListener"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/container/use-sticky-header.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext, RefObject, useCallback, useEffect, useLayoutEffect, useState } from 'react';\n\nimport { findUpUntil } from '@cloudscape-design/component-toolkit/dom';\n\nimport * as tokens from '../internal/generated/styles/tokens';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport globalVars from '../internal/styles/global-vars';\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n\ninterface StickyHeaderContextProps {\n  isStuck: boolean;\n}\n\ninterface ComputeOffsetProps {\n  isMobile: boolean;\n  __stickyOffset?: number;\n  __mobileStickyOffset?: number;\n  hasInnerOverflowParents: boolean;\n  __additionalOffset?: boolean;\n}\n\nexport function computeOffset({\n  isMobile,\n  __stickyOffset,\n  __mobileStickyOffset,\n  hasInnerOverflowParents,\n  __additionalOffset,\n}: ComputeOffsetProps): string {\n  const localOffset = isMobile ? (__stickyOffset ?? 0) - (__mobileStickyOffset ?? 0) : __stickyOffset ?? 0;\n  if (hasInnerOverflowParents || __stickyOffset !== undefined) {\n    return `${localOffset}px`;\n  }\n  const globalOffset = `var(${globalVars.stickyVerticalTopOffset}, 0px)`;\n\n  return `calc(${globalOffset} + ${localOffset}px + ${__additionalOffset ? tokens.spaceScaledS : '0px'})`;\n}\n\nexport const StickyHeaderContext = createContext<StickyHeaderContextProps>({\n  isStuck: false,\n});\n\nexport const useStickyHeader = (\n  rootRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  __stickyHeader?: boolean,\n  __stickyOffset?: number,\n  __mobileStickyOffset?: number,\n  __disableMobile?: boolean,\n  __additionalOffset = false\n) => {\n  const isMobile = useMobile();\n  const disableSticky = isMobile && __disableMobile;\n  const isSticky = !disableSticky && !!__stickyHeader;\n\n  // If it has overflow parents inside the app layout, we shouldn't apply a sticky offset.\n  const [hasInnerOverflowParents, setHasInnerOverflowParents] = useState(false);\n  const [isStuck, setIsStuck] = useState(false);\n  useLayoutEffect(() => {\n    if (rootRef.current) {\n      const overflowParents = getOverflowParents(rootRef.current);\n      const mainElement = findUpUntil(rootRef.current, elem => elem.tagName === 'MAIN');\n      // In both versions of the app layout, the scrolling element for disableBodyScroll\n      // is the <main>. If the closest overflow parent is also the closest <main> and we have\n      // offset values, it's safe to assume that it's the app layout scroll root and we\n      // should stop there.\n      setHasInnerOverflowParents(overflowParents.length > 0 && overflowParents[0] !== mainElement);\n    }\n  }, [rootRef]);\n\n  const computedOffset = computeOffset({\n    isMobile,\n    __stickyOffset,\n    __mobileStickyOffset,\n    hasInnerOverflowParents,\n    __additionalOffset,\n  });\n\n  const stickyStyles = isSticky\n    ? {\n        style: {\n          top: computedOffset,\n        },\n      }\n    : {};\n\n  // \"stuck\" state, when the header has moved from its original posititon has a\n  // box-shadow, applied here by a \"header-stuck\" className\n  const checkIfStuck = useCallback(\n    ({ isTrusted, target, type }) => {\n      if (type === 'resize' && target === window && !isTrusted) {\n        // The window size didn't actually change, it was a synthetic event\n        return;\n      }\n      if (rootRef.current && headerRef.current) {\n        const rootTopBorderWidth = parseFloat(getComputedStyle(rootRef.current).borderTopWidth) || 0;\n        const rootTop = rootRef.current.getBoundingClientRect().top + rootTopBorderWidth;\n        const headerTop = headerRef.current.getBoundingClientRect().top;\n\n        if (rootTop < headerTop) {\n          setIsStuck(true);\n        } else {\n          setIsStuck(false);\n        }\n      }\n    },\n    [rootRef, headerRef]\n  );\n  useEffect(() => {\n    if (isSticky) {\n      window.addEventListener('scroll', checkIfStuck, true);\n      window.addEventListener('resize', checkIfStuck);\n      return () => {\n        window.removeEventListener('scroll', checkIfStuck, true);\n        window.removeEventListener('resize', checkIfStuck);\n      };\n    }\n  }, [isSticky, checkIfStuck]);\n  return {\n    isSticky,\n    isStuck,\n    stickyStyles,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}