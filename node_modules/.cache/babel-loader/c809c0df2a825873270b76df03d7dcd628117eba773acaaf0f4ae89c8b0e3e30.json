{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport FocusLock from '../internal/components/focus-lock';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { KeyCode } from '../internal/keycode';\nimport styles from './styles.css.js';\nexport default function PopoverBody(_ref) {\n  let {\n    dismissButton: showDismissButton,\n    dismissAriaLabel,\n    header,\n    children,\n    onDismiss,\n    variant,\n    overflowVisible,\n    className,\n    ariaLabelledby,\n    closeAnalyticsAction\n  } = _ref;\n  const i18n = useInternalI18n('popover');\n  const labelledById = useUniqueId('awsui-popover-');\n  const dismissButtonFocused = useRef(false);\n  const dismissButtonRef = useRef(null);\n  const onKeyDown = useCallback(event => {\n    if (event.keyCode === KeyCode.escape) {\n      event.stopPropagation();\n      onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n    }\n  }, [onDismiss]);\n  // Implement our own auto-focus rather than using FocusLock's,\n  // because we also want to focus the dismiss button when it\n  // is added dynamically (e.g. in chart popovers)\n  useEffect(() => {\n    var _a;\n    if (showDismissButton && !dismissButtonFocused.current) {\n      (_a = dismissButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n        preventScroll: true\n      });\n    }\n    dismissButtonFocused.current = showDismissButton;\n  }, [showDismissButton]);\n  const dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && React.createElement(\"div\", Object.assign({\n    className: styles.dismiss\n  }, closeAnalyticsAction ? getAnalyticsMetadataAttribute({\n    action: closeAnalyticsAction\n  }) : {}), React.createElement(InternalButton, {\n    variant: \"icon\",\n    formAction: \"none\",\n    iconName: \"close\",\n    className: styles['dismiss-control'],\n    ariaLabel: i18n('dismissAriaLabel', dismissAriaLabel),\n    onClick: () => onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(),\n    ref: dismissButtonRef\n  }));\n  const isDialog = showDismissButton;\n  const shouldTrapFocus = showDismissButton && variant !== 'annotation';\n  const dialogProps = isDialog ? {\n    role: 'dialog',\n    'aria-modal': shouldTrapFocus ? true : undefined,\n    'aria-labelledby': ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : header ? labelledById : undefined\n  } : {};\n  return React.createElement(\"div\", Object.assign({\n    className: clsx(styles.body, className, {\n      [styles['body-overflow-visible']]: overflowVisible === 'both'\n    }),\n    onKeyDown: onKeyDown\n  }, dialogProps), React.createElement(FocusLock, {\n    disabled: !shouldTrapFocus,\n    autoFocus: false\n  }, header && React.createElement(\"div\", {\n    className: clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])\n  }, dismissButton, React.createElement(\"div\", {\n    className: styles.header,\n    id: labelledById\n  }, React.createElement(\"h2\", null, header))), React.createElement(\"div\", {\n    className: !header && showDismissButton ? styles['has-dismiss'] : undefined\n  }, !header && dismissButton, React.createElement(\"div\", {\n    className: clsx(styles.content, {\n      [styles['content-overflow-visible']]: !!overflowVisible\n    })\n  }, children))));\n}","map":{"version":3,"names":["React","useCallback","useEffect","useRef","clsx","getAnalyticsMetadataAttribute","InternalButton","useInternalI18n","FocusLock","useUniqueId","KeyCode","styles","PopoverBody","_ref","dismissButton","showDismissButton","dismissAriaLabel","header","children","onDismiss","variant","overflowVisible","className","ariaLabelledby","closeAnalyticsAction","i18n","labelledById","dismissButtonFocused","dismissButtonRef","onKeyDown","event","keyCode","escape","stopPropagation","current","_a","focus","preventScroll","createElement","Object","assign","dismiss","action","formAction","iconName","ariaLabel","onClick","ref","isDialog","shouldTrapFocus","dialogProps","role","undefined","body","disabled","autoFocus","id","content"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/popover/body.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport FocusLock from '../internal/components/focus-lock';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { KeyCode } from '../internal/keycode';\n\nimport styles from './styles.css.js';\n\nexport interface PopoverBodyProps {\n  dismissButton: boolean;\n  dismissAriaLabel: string | undefined;\n  onDismiss: (() => void) | undefined;\n\n  header: React.ReactNode | undefined;\n  children: React.ReactNode;\n  variant?: 'annotation';\n  overflowVisible?: 'content' | 'both';\n\n  className?: string;\n  ariaLabelledby?: string;\n\n  closeAnalyticsAction?: string;\n}\n\nexport default function PopoverBody({\n  dismissButton: showDismissButton,\n  dismissAriaLabel,\n  header,\n  children,\n  onDismiss,\n  variant,\n  overflowVisible,\n  className,\n  ariaLabelledby,\n  closeAnalyticsAction,\n}: PopoverBodyProps) {\n  const i18n = useInternalI18n('popover');\n  const labelledById = useUniqueId('awsui-popover-');\n  const dismissButtonFocused = useRef(false);\n  const dismissButtonRef = useRef<ButtonProps.Ref>(null);\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.keyCode === KeyCode.escape) {\n        event.stopPropagation();\n        onDismiss?.();\n      }\n    },\n    [onDismiss]\n  );\n\n  // Implement our own auto-focus rather than using FocusLock's,\n  // because we also want to focus the dismiss button when it\n  // is added dynamically (e.g. in chart popovers)\n  useEffect(() => {\n    if (showDismissButton && !dismissButtonFocused.current) {\n      dismissButtonRef.current?.focus({ preventScroll: true });\n    }\n    dismissButtonFocused.current = showDismissButton;\n  }, [showDismissButton]);\n\n  const dismissButton = (showDismissButton ?? null) && (\n    <div\n      className={styles.dismiss}\n      {...(closeAnalyticsAction ? getAnalyticsMetadataAttribute({ action: closeAnalyticsAction }) : {})}\n    >\n      <InternalButton\n        variant=\"icon\"\n        formAction=\"none\"\n        iconName=\"close\"\n        className={styles['dismiss-control']}\n        ariaLabel={i18n('dismissAriaLabel', dismissAriaLabel)}\n        onClick={() => onDismiss?.()}\n        ref={dismissButtonRef}\n      />\n    </div>\n  );\n\n  const isDialog = showDismissButton;\n  const shouldTrapFocus = showDismissButton && variant !== 'annotation';\n\n  const dialogProps = isDialog\n    ? {\n        role: 'dialog',\n        'aria-modal': shouldTrapFocus ? true : undefined,\n        'aria-labelledby': ariaLabelledby ?? (header ? labelledById : undefined),\n      }\n    : {};\n\n  return (\n    <div\n      className={clsx(styles.body, className, {\n        [styles['body-overflow-visible']]: overflowVisible === 'both',\n      })}\n      onKeyDown={onKeyDown}\n      {...dialogProps}\n    >\n      <FocusLock disabled={!shouldTrapFocus} autoFocus={false}>\n        {header && (\n          <div className={clsx(styles['header-row'], showDismissButton && styles['has-dismiss'])}>\n            {dismissButton}\n            <div className={styles.header} id={labelledById}>\n              <h2>{header}</h2>\n            </div>\n          </div>\n        )}\n        <div className={!header && showDismissButton ? styles['has-dismiss'] : undefined}>\n          {!header && dismissButton}\n          <div className={clsx(styles.content, { [styles['content-overflow-visible']]: !!overflowVisible })}>\n            {children}\n          </div>\n        </div>\n      </FocusLock>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}