{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import{useCallback,useEffect}from'react';import useLocalStorageState from'use-local-storage-state';import{v4 as uuidv4}from'uuid';import{WorkspacesContext,useWorkspacesContext}from'./context';import{DEFAULT_WORKSPACE_ID}from'../../configs/constants';import{LOCAL_STORAGE_KEY_CURRENT_WORKSPACE,LOCAL_STORAGE_KEY_WORKSPACE_LIST}from'../../configs/localStorageKeys';import WorkspacesMigration from'../../migrations/WorkspacesMigration';import{jsx as _jsx}from\"react/jsx-runtime\";const WorkspacesContextProvider=_ref=>{let{children,workspaceId,onWorkspaceChanged,...props}=_ref;const[currentWorkspace,setCurrentWorkspace]=useLocalStorageState(LOCAL_STORAGE_KEY_CURRENT_WORKSPACE,{defaultValue:null});const[workspaceList,setWorkspaceList]=useLocalStorageState(LOCAL_STORAGE_KEY_WORKSPACE_LIST,{defaultValue:[]});useEffect(()=>{if(workspaceId){if(workspaceId===DEFAULT_WORKSPACE_ID&&currentWorkspace!==null){setCurrentWorkspace(null);}else if(workspaceId!==(currentWorkspace===null||currentWorkspace===void 0?void 0:currentWorkspace.id)){const foundWorkspace=workspaceList.find(x=>x.id===workspaceId);if(foundWorkspace){setCurrentWorkspace(foundWorkspace);}else{setCurrentWorkspace(null);}}}},[workspaceId,workspaceList,currentWorkspace,setCurrentWorkspace]);const handleSwitchWorkspace=useCallback(workspace=>{setCurrentWorkspace(workspace);onWorkspaceChanged===null||onWorkspaceChanged===void 0?void 0:onWorkspaceChanged((workspace===null||workspace===void 0?void 0:workspace.id)||DEFAULT_WORKSPACE_ID);},[onWorkspaceChanged,setCurrentWorkspace]);const handleAddWorkspace=useCallback(workspaceName=>{const newWorkspace={id:uuidv4(),name:workspaceName};setWorkspaceList(prev=>prev.find(p=>p.name===workspaceName)?[...prev]:[...prev,newWorkspace]);setCurrentWorkspace(newWorkspace);onWorkspaceChanged===null||onWorkspaceChanged===void 0?void 0:onWorkspaceChanged(newWorkspace.id);},[onWorkspaceChanged,setCurrentWorkspace,setWorkspaceList]);const handleRemoveWorkspace=useCallback(async id=>{setWorkspaceList(prev=>prev.filter(p=>p.id!==id));},[setWorkspaceList]);const handleRenameWorkspace=useCallback((id,newWorkspaceName)=>{setWorkspaceList(prev=>{const index=prev.findIndex(w=>w.id===id);const newList=[...prev.slice(0,index-1),{id,name:newWorkspaceName},...prev.slice(index+1)];return newList;});setCurrentWorkspace({id,name:newWorkspaceName});},[setCurrentWorkspace,setWorkspaceList]);return/*#__PURE__*/_jsx(WorkspacesContext.Provider,{value:{workspaceList,setWorkspaceList,currentWorkspace,switchWorkspace:handleSwitchWorkspace,addWorkspace:handleAddWorkspace,removeWorkspace:handleRemoveWorkspace,renameWorkspace:handleRenameWorkspace,...props},children:/*#__PURE__*/_jsx(WorkspacesMigration,{children:children((currentWorkspace===null||currentWorkspace===void 0?void 0:currentWorkspace.id)||null)})});};export default WorkspacesContextProvider;export{useWorkspacesContext};","map":{"version":3,"names":["useCallback","useEffect","useLocalStorageState","v4","uuidv4","WorkspacesContext","useWorkspacesContext","DEFAULT_WORKSPACE_ID","LOCAL_STORAGE_KEY_CURRENT_WORKSPACE","LOCAL_STORAGE_KEY_WORKSPACE_LIST","WorkspacesMigration","jsx","_jsx","WorkspacesContextProvider","_ref","children","workspaceId","onWorkspaceChanged","props","currentWorkspace","setCurrentWorkspace","defaultValue","workspaceList","setWorkspaceList","id","foundWorkspace","find","x","handleSwitchWorkspace","workspace","handleAddWorkspace","workspaceName","newWorkspace","name","prev","p","handleRemoveWorkspace","filter","handleRenameWorkspace","newWorkspaceName","index","findIndex","w","newList","slice","Provider","value","switchWorkspace","addWorkspace","removeWorkspace","renameWorkspace"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/contexts/WorkspacesContext/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { FC, useCallback, ReactElement, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport { v4 as uuidv4 } from 'uuid';\nimport { WorkspacesContext, useWorkspacesContext } from './context';\nimport { DEFAULT_WORKSPACE_ID } from '../../configs/constants';\nimport { LOCAL_STORAGE_KEY_CURRENT_WORKSPACE, LOCAL_STORAGE_KEY_WORKSPACE_LIST } from '../../configs/localStorageKeys';\nimport { ViewNavigationEvent, Workspace } from '../../customTypes';\nimport WorkspacesMigration from '../../migrations/WorkspacesMigration';\n\nexport interface WorkspacesContextProviderProps extends ViewNavigationEvent {\n  workspaceId?: string;\n  onWorkspaceChanged?: (workspaceId: string) => void;\n  children: (workspace: string | null) => ReactElement<{ workspaceId: string | null }>;\n}\n\nconst WorkspacesContextProvider: FC<WorkspacesContextProviderProps> = ({\n  children,\n  workspaceId,\n  onWorkspaceChanged,\n  ...props\n}) => {\n  const [currentWorkspace, setCurrentWorkspace] = useLocalStorageState<Workspace | null>(LOCAL_STORAGE_KEY_CURRENT_WORKSPACE, {\n    defaultValue: null,\n  });\n\n  const [workspaceList, setWorkspaceList] = useLocalStorageState<Workspace[]>(LOCAL_STORAGE_KEY_WORKSPACE_LIST, {\n    defaultValue: [],\n  });\n\n  useEffect(() => {\n    if (workspaceId) {\n      if (workspaceId === DEFAULT_WORKSPACE_ID && currentWorkspace !== null) {\n        setCurrentWorkspace(null);\n      } else if (workspaceId !== currentWorkspace?.id) {\n        const foundWorkspace = workspaceList.find(x => x.id === workspaceId);\n        if (foundWorkspace) {\n          setCurrentWorkspace(foundWorkspace);\n        } else {\n          setCurrentWorkspace(null);\n        }\n      }\n    }\n  }, [workspaceId, workspaceList, currentWorkspace, setCurrentWorkspace]);\n\n  const handleSwitchWorkspace = useCallback((workspace: Workspace | null) => {\n    setCurrentWorkspace(workspace);\n    onWorkspaceChanged?.(workspace?.id || DEFAULT_WORKSPACE_ID);\n  }, [onWorkspaceChanged, setCurrentWorkspace]);\n\n  const handleAddWorkspace = useCallback((workspaceName: string) => {\n    const newWorkspace = {\n      id: uuidv4(),\n      name: workspaceName,\n    };\n    setWorkspaceList(prev => prev.find(p => p.name === workspaceName) ? [...prev] : [...prev, newWorkspace]);\n    setCurrentWorkspace(newWorkspace);\n    onWorkspaceChanged?.(newWorkspace.id);\n\n  }, [onWorkspaceChanged, setCurrentWorkspace, setWorkspaceList]);\n\n  const handleRemoveWorkspace = useCallback(async (id: string) => {\n    setWorkspaceList(prev => prev.filter(p => p.id !== id));\n  }, [setWorkspaceList]);\n\n  const handleRenameWorkspace = useCallback((id: string, newWorkspaceName: string) => {\n    setWorkspaceList(prev => {\n      const index = prev.findIndex(w => w.id === id);\n      const newList = [...prev.slice(0, index - 1), {\n        id,\n        name: newWorkspaceName,\n      }, ...prev.slice(index + 1)];\n      return newList;\n    });\n\n    setCurrentWorkspace({\n      id,\n      name: newWorkspaceName,\n    });\n  }, [setCurrentWorkspace, setWorkspaceList]);\n\n  return (<WorkspacesContext.Provider value={{\n    workspaceList,\n    setWorkspaceList,\n    currentWorkspace,\n    switchWorkspace: handleSwitchWorkspace,\n    addWorkspace: handleAddWorkspace,\n    removeWorkspace: handleRemoveWorkspace,\n    renameWorkspace: handleRenameWorkspace,\n    ...props,\n  }}>\n    <WorkspacesMigration>\n      {children(currentWorkspace?.id || null)}\n    </WorkspacesMigration>\n  </WorkspacesContext.Provider>);\n};\n\nexport default WorkspacesContextProvider;\n\nexport {\n  useWorkspacesContext,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}