{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { useInternalI18n } from '../../i18n/context';\nimport InternalIcon from '../../icon/internal';\nimport InternalLink from '../../link/internal';\nimport { joinObjectPath } from '../utils';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { formatDefault, formatSize } from './column-formats';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\nexport function ObjectsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect\n}) {\n  var _a, _b, _c, _d;\n  const i18n = useInternalI18n('s3-resource-selector');\n  return React.createElement(BasicS3Table, {\n    // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n    key: pathSegments.join('/'),\n    forwardFocusRef: forwardFocusRef,\n    trackBy: \"Key\",\n    fetchData: () => {\n      const [bucketName, ...rest] = pathSegments;\n      return fetchData(bucketName, joinObjectPath(rest));\n    },\n    i18nStrings: Object.assign(Object.assign({}, getSharedI18Strings(i18n, i18nStrings)), {\n      header: i18n('i18nStrings.selectionObjects', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects),\n      loadingText: i18n('i18nStrings.selectionObjectsLoading', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsLoading),\n      filteringAriaLabel: (_a = i18n('i18nStrings.labelFiltering', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering, format => itemsType => format({\n        itemsType\n      }))) === null || _a === void 0 ? void 0 : _a((_b = i18n('i18nStrings.selectionObjects', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects)) !== null && _b !== void 0 ? _b : ''),\n      filteringPlaceholder: i18n('i18nStrings.selectionObjectsSearchPlaceholder', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsSearchPlaceholder),\n      emptyText: i18n('i18nStrings.selectionObjectsNoItems', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsNoItems),\n      selectionLabels: Object.assign(Object.assign({}, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection), {\n        selectionGroupLabel: i18n('i18nStrings.labelsObjectsSelection.selectionGroupLabel', (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection) === null || _c === void 0 ? void 0 : _c.selectionGroupLabel),\n        itemSelectionLabel: i18n('i18nStrings.labelsObjectsSelection.itemSelectionLabel', (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection) === null || _d === void 0 ? void 0 : _d.itemSelectionLabel, format => (data, item) => {\n          var _a;\n          return format({\n            item__Key: (_a = item.Key) !== null && _a !== void 0 ? _a : ''\n          });\n        })\n      })\n    }),\n    isVisualRefresh: isVisualRefresh,\n    visibleColumns: visibleColumns,\n    isItemDisabled: isItemDisabled || (() => !includes(selectableItemsTypes, 'objects')),\n    columnDefinitions: [{\n      id: 'Key',\n      header: i18n('i18nStrings.columnObjectKey', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnObjectKey', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey)),\n      sortingField: 'Key',\n      cell: item => {\n        const isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n        return React.createElement(React.Fragment, null, React.createElement(InternalIcon, {\n          name: item.IsFolder ? 'folder' : 'file'\n        }), ' ', isClickable ? React.createElement(InternalLink, {\n          onFollow: () => item.Key && onDrilldown(item),\n          variant: \"link\"\n        }, item.Key) : item.Key);\n      },\n      minWidth: '250px'\n    }, {\n      id: 'LastModified',\n      header: i18n('i18nStrings.columnObjectLastModified', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnObjectLastModified', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified)),\n      sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n      cell: item => formatDefault(item.LastModified)\n    }, {\n      id: 'Size',\n      header: i18n('i18nStrings.columnObjectSize', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize),\n      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n('i18nStrings.columnObjectSize', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize)),\n      sortingField: 'Size',\n      cell: item => formatSize(item.Size)\n    }],\n    onSelect: item => {\n      var _a;\n      return onSelect((_a = item === null || item === void 0 ? void 0 : item.Key) !== null && _a !== void 0 ? _a : '');\n    }\n  });\n}","map":{"version":3,"names":["React","useInternalI18n","InternalIcon","InternalLink","joinObjectPath","BasicS3Table","getSharedI18Strings","formatDefault","formatSize","compareDates","getColumnAriaLabel","includes","ObjectsTable","forwardFocusRef","pathSegments","i18nStrings","isVisualRefresh","isItemDisabled","selectableItemsTypes","fetchData","visibleColumns","onDrilldown","onSelect","i18n","createElement","key","join","trackBy","bucketName","rest","Object","assign","header","selectionObjects","loadingText","selectionObjectsLoading","filteringAriaLabel","_a","labelFiltering","format","itemsType","_b","filteringPlaceholder","selectionObjectsSearchPlaceholder","emptyText","selectionObjectsNoItems","selectionLabels","labelsObjectsSelection","selectionGroupLabel","_c","itemSelectionLabel","_d","data","item","item__Key","Key","columnDefinitions","id","columnObjectKey","ariaLabel","sortingField","cell","isClickable","IsFolder","Fragment","name","onFollow","variant","minWidth","columnObjectLastModified","sortingComparator","a","b","LastModified","columnObjectSize","Size"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/s3-resource-selector/s3-modal/objects-table.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useInternalI18n } from '../../i18n/context';\nimport InternalIcon from '../../icon/internal';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport InternalLink from '../../link/internal';\nimport { TableProps } from '../../table/interfaces';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { joinObjectPath } from '../utils';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { formatDefault, formatSize } from './column-formats';\nimport { compareDates, getColumnAriaLabel, includes } from './table-utils';\n\ninterface ObjectsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Object> | undefined;\n  selectableItemsTypes: S3ResourceSelectorProps['selectableItemsTypes'];\n  fetchData: S3ResourceSelectorProps['fetchObjects'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onDrilldown: (path: S3ResourceSelectorProps.Object) => void;\n  onSelect: (uri: string) => void;\n}\n\nexport function ObjectsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  selectableItemsTypes,\n  fetchData,\n  visibleColumns,\n  onDrilldown,\n  onSelect,\n}: ObjectsTableProps) {\n  const i18n = useInternalI18n('s3-resource-selector');\n\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Object>\n      // remount fresh component every we change the path to reset the inner state (e.g. selection/filtering)\n      key={pathSegments.join('/')}\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"Key\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18n, i18nStrings),\n        header: i18n('i18nStrings.selectionObjects', i18nStrings?.selectionObjects),\n        loadingText: i18n('i18nStrings.selectionObjectsLoading', i18nStrings?.selectionObjectsLoading),\n        filteringAriaLabel: i18n(\n          'i18nStrings.labelFiltering',\n          i18nStrings?.labelFiltering,\n          format => itemsType => format({ itemsType })\n        )?.(i18n('i18nStrings.selectionObjects', i18nStrings?.selectionObjects) ?? ''),\n        filteringPlaceholder: i18n(\n          'i18nStrings.selectionObjectsSearchPlaceholder',\n          i18nStrings?.selectionObjectsSearchPlaceholder\n        ),\n        emptyText: i18n('i18nStrings.selectionObjectsNoItems', i18nStrings?.selectionObjectsNoItems),\n        selectionLabels: {\n          ...i18nStrings?.labelsObjectsSelection,\n          selectionGroupLabel: i18n(\n            'i18nStrings.labelsObjectsSelection.selectionGroupLabel',\n            i18nStrings?.labelsObjectsSelection?.selectionGroupLabel\n          ),\n          itemSelectionLabel: i18n(\n            'i18nStrings.labelsObjectsSelection.itemSelectionLabel',\n            i18nStrings?.labelsObjectsSelection?.itemSelectionLabel,\n            format => (data, item) => format({ item__Key: item.Key ?? '' })\n          ),\n        },\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled || (() => !includes(selectableItemsTypes, 'objects'))}\n      columnDefinitions={[\n        {\n          id: 'Key',\n          header: i18n('i18nStrings.columnObjectKey', i18nStrings?.columnObjectKey),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnObjectKey', i18nStrings?.columnObjectKey)\n          ),\n          sortingField: 'Key',\n          cell: item => {\n            const isClickable = item.IsFolder || includes(selectableItemsTypes, 'versions');\n            return (\n              <>\n                <InternalIcon name={item.IsFolder ? 'folder' : 'file'} />{' '}\n                {isClickable ? (\n                  <InternalLink onFollow={() => item.Key && onDrilldown(item)} variant=\"link\">\n                    {item.Key}\n                  </InternalLink>\n                ) : (\n                  item.Key\n                )}\n              </>\n            );\n          },\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18n('i18nStrings.columnObjectLastModified', i18nStrings?.columnObjectLastModified),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnObjectLastModified', i18nStrings?.columnObjectLastModified)\n          ),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18n('i18nStrings.columnObjectSize', i18nStrings?.columnObjectSize),\n          ariaLabel: getColumnAriaLabel(\n            i18n,\n            i18nStrings,\n            i18n('i18nStrings.columnObjectSize', i18nStrings?.columnObjectSize)\n          ),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.Key ?? '')}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}