{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createRef, useCallback, useEffect, useRef } from 'react';\nexport function useMultipleFocusControl(restoreFocus, activeDrawersIds) {\n  const refs = useRef({});\n  activeDrawersIds.forEach(drawerId => {\n    if (!refs.current[drawerId]) {\n      refs.current[drawerId] = {\n        toggle: createRef(),\n        close: createRef(),\n        slider: createRef()\n      };\n    }\n  });\n  const doFocus = useCallback(function (drawerId) {\n    let open = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var _a, _b, _c, _d, _e, _f;\n    if (!shouldFocus.current) {\n      return;\n    }\n    const ref = refs.current[drawerId];\n    if (open) {\n      previousFocusedElement.current = document.activeElement !== document.body ? document.activeElement : undefined;\n      if ((_a = ref === null || ref === void 0 ? void 0 : ref.slider) === null || _a === void 0 ? void 0 : _a.current) {\n        (_b = ref.slider.current) === null || _b === void 0 ? void 0 : _b.focus();\n      } else {\n        (_d = (_c = ref === null || ref === void 0 ? void 0 : ref.close) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.focus();\n      }\n    } else {\n      if (restoreFocus && previousFocusedElement.current && document.contains(previousFocusedElement.current)) {\n        previousFocusedElement.current.focus();\n        previousFocusedElement.current = undefined;\n      } else {\n        (_f = (_e = ref === null || ref === void 0 ? void 0 : ref.toggle) === null || _e === void 0 ? void 0 : _e.current) === null || _f === void 0 ? void 0 : _f.focus();\n      }\n    }\n    shouldFocus.current = false;\n  }, [refs, restoreFocus]);\n  const setFocus = params => {\n    const {\n      force = false,\n      drawerId = null,\n      open = true\n    } = params || {};\n    shouldFocus.current = true;\n    if (force && (!drawerId || activeDrawersIds.includes(drawerId))) {\n      doFocus(drawerId, open);\n    }\n  };\n  const loseFocus = useCallback(() => {\n    previousFocusedElement.current = undefined;\n  }, []);\n  const previousFocusedElement = useRef();\n  const shouldFocus = useRef(false);\n  useEffect(() => {\n    doFocus(activeDrawersIds[0]);\n  }, [activeDrawersIds, doFocus]);\n  return {\n    refs: refs.current,\n    setFocus,\n    loseFocus\n  };\n}\nexport function useFocusControl(isOpen) {\n  let restoreFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let activeDrawerId = arguments.length > 2 ? arguments[2] : undefined;\n  const refs = {\n    toggle: useRef(null),\n    close: useRef(null),\n    slider: useRef(null)\n  };\n  const previousFocusedElement = useRef();\n  const shouldFocus = useRef(false);\n  const doFocus = () => {\n    var _a, _b, _c;\n    if (!shouldFocus.current) {\n      return;\n    }\n    if (isOpen) {\n      previousFocusedElement.current = document.activeElement !== document.body ? document.activeElement : undefined;\n      if (refs.slider.current) {\n        (_a = refs.slider.current) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = refs.close.current) === null || _b === void 0 ? void 0 : _b.focus();\n      }\n    } else {\n      if (restoreFocus && previousFocusedElement.current && document.contains(previousFocusedElement.current)) {\n        previousFocusedElement.current.focus();\n        previousFocusedElement.current = undefined;\n      } else {\n        (_c = refs.toggle.current) === null || _c === void 0 ? void 0 : _c.focus();\n      }\n    }\n    shouldFocus.current = false;\n  };\n  const setFocus = force => {\n    shouldFocus.current = true;\n    if (force && isOpen) {\n      doFocus();\n    }\n  };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(doFocus, [isOpen, activeDrawerId]);\n  const loseFocus = useCallback(() => {\n    previousFocusedElement.current = undefined;\n  }, []);\n  return {\n    refs,\n    setFocus,\n    loseFocus\n  };\n}","map":{"version":3,"names":["createRef","useCallback","useEffect","useRef","useMultipleFocusControl","restoreFocus","activeDrawersIds","refs","forEach","drawerId","current","toggle","close","slider","doFocus","open","arguments","length","undefined","shouldFocus","ref","previousFocusedElement","document","activeElement","body","_a","_b","focus","_d","_c","contains","_f","_e","setFocus","params","force","includes","loseFocus","useFocusControl","isOpen","activeDrawerId"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/utils/use-focus-control.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createRef, RefObject, useCallback, useEffect, useRef } from 'react';\n\nexport interface Focusable {\n  focus(): void;\n}\n\nexport interface FocusControlRefs {\n  toggle: RefObject<Focusable>;\n  close: RefObject<Focusable>;\n  slider: RefObject<HTMLDivElement>;\n}\n\nexport interface FocusControlState {\n  refs: FocusControlRefs;\n  setFocus: (force?: boolean) => void;\n  loseFocus: () => void;\n}\n\nexport interface FocusControlMultipleStates {\n  refs: Record<string, FocusControlRefs>;\n  setFocus: (params?: { force?: boolean; drawerId?: string; open?: boolean }) => void;\n  loseFocus: () => void;\n}\n\nexport function useMultipleFocusControl(\n  restoreFocus: boolean,\n  activeDrawersIds: Array<string>\n): FocusControlMultipleStates {\n  const refs = useRef<Record<string, FocusControlRefs>>({});\n\n  activeDrawersIds.forEach(drawerId => {\n    if (!refs.current[drawerId]) {\n      refs.current[drawerId] = {\n        toggle: createRef<Focusable>(),\n        close: createRef<Focusable>(),\n        slider: createRef<HTMLDivElement>(),\n      };\n    }\n  });\n\n  const doFocus = useCallback(\n    (drawerId: string, open = true) => {\n      if (!shouldFocus.current) {\n        return;\n      }\n      const ref = refs.current[drawerId];\n      if (open) {\n        previousFocusedElement.current =\n          document.activeElement !== document.body ? (document.activeElement as HTMLElement) : undefined;\n        if (ref?.slider?.current) {\n          ref.slider.current?.focus();\n        } else {\n          ref?.close?.current?.focus();\n        }\n      } else {\n        if (restoreFocus && previousFocusedElement.current && document.contains(previousFocusedElement.current)) {\n          previousFocusedElement.current.focus();\n          previousFocusedElement.current = undefined;\n        } else {\n          ref?.toggle?.current?.focus();\n        }\n      }\n      shouldFocus.current = false;\n    },\n    [refs, restoreFocus]\n  );\n\n  const setFocus = (params?: { force?: boolean; drawerId?: string; open?: boolean }) => {\n    const { force = false, drawerId = null, open = true } = params || {};\n    shouldFocus.current = true;\n    if (force && (!drawerId || activeDrawersIds.includes(drawerId))) {\n      doFocus(drawerId!, open);\n    }\n  };\n\n  const loseFocus = useCallback(() => {\n    previousFocusedElement.current = undefined;\n  }, []);\n\n  const previousFocusedElement = useRef<HTMLElement>();\n  const shouldFocus = useRef(false);\n\n  useEffect(() => {\n    doFocus(activeDrawersIds[0]);\n  }, [activeDrawersIds, doFocus]);\n\n  return {\n    refs: refs.current,\n    setFocus,\n    loseFocus,\n  };\n}\n\nexport function useFocusControl(\n  isOpen: boolean,\n  restoreFocus = false,\n  activeDrawerId?: string | null\n): FocusControlState {\n  const refs = {\n    toggle: useRef<Focusable>(null),\n    close: useRef<Focusable>(null),\n    slider: useRef<HTMLDivElement>(null),\n  };\n  const previousFocusedElement = useRef<HTMLElement>();\n  const shouldFocus = useRef(false);\n\n  const doFocus = () => {\n    if (!shouldFocus.current) {\n      return;\n    }\n    if (isOpen) {\n      previousFocusedElement.current =\n        document.activeElement !== document.body ? (document.activeElement as HTMLElement) : undefined;\n      if (refs.slider.current) {\n        refs.slider.current?.focus();\n      } else {\n        refs.close.current?.focus();\n      }\n    } else {\n      if (restoreFocus && previousFocusedElement.current && document.contains(previousFocusedElement.current)) {\n        previousFocusedElement.current.focus();\n        previousFocusedElement.current = undefined;\n      } else {\n        refs.toggle.current?.focus();\n      }\n    }\n    shouldFocus.current = false;\n  };\n\n  const setFocus = (force?: boolean) => {\n    shouldFocus.current = true;\n    if (force && isOpen) {\n      doFocus();\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(doFocus, [isOpen, activeDrawerId]);\n\n  const loseFocus = useCallback(() => {\n    previousFocusedElement.current = undefined;\n  }, []);\n\n  return {\n    refs,\n    setFocus,\n    loseFocus,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}