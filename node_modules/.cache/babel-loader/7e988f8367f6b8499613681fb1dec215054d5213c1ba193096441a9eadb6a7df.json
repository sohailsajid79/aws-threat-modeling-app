{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/containers/App/components/Full/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport React, { useMemo, useCallback, useState, useEffect } from 'react';\nimport { Routes, Route, useParams, useSearchParams, useNavigate, Navigate } from 'react-router-dom';\nimport AppLayout from '../../../../components/FullAppLayout';\nimport { ROUTE_APPLICATION_INFO, ROUTE_ARCHITECTURE_INFO, ROUTE_ASSUMPTION_LIST, ROUTE_DIAGRAM_INFO, ROUTE_MITIGATION_LIST, ROUTE_THREAT_EDITOR, ROUTE_THREAT_LIST, ROUTE_VIEW_THREAT_MODEL, ROUTE_WORKSPACE_HOME, ROUTE_CONTROL_LIST } from '../../../../configs/routes';\nimport ContextAggregator from '../../../../contexts/ContextAggregator';\nimport { useWorkspacesContext } from '../../../../contexts/WorkspacesContext';\nimport useNotifications from '../../../../hooks/useNotifications';\nimport routes from '../../../../routes';\nimport generateUrl from '../../../../utils/generateUrl';\nimport ThreatModelReport from '../../../ThreatModelReport';\nimport WorkspaceSelector from '../../../WorkspaceSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TEMP_PREVIEW_DATA_KEY = 'ThreatStatementGenerator.TempPreviewData';\nconst defaultHref = process.env.PUBLIC_URL || '/';\nconst AppInner = ({\n  setWorkspaceId\n}) => {\n  _s();\n  const {\n    currentWorkspace\n  } = useWorkspacesContext();\n  const [searchParms] = useSearchParams();\n  useEffect(() => {\n    setWorkspaceId((currentWorkspace === null || currentWorkspace === void 0 ? void 0 : currentWorkspace.id) || 'default');\n  }, [currentWorkspace, setWorkspaceId]);\n  const workspaceHome = generateUrl(ROUTE_WORKSPACE_HOME, searchParms, (currentWorkspace === null || currentWorkspace === void 0 ? void 0 : currentWorkspace.id) || 'default');\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: workspaceHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), routes.map((r, index) => /*#__PURE__*/_jsxDEV(Route, {\n      ...r\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 51\n    }, this)), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: workspaceHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n};\n_s(AppInner, \"0oLDtkc78XMKO/oXf4rB9Kq8d4E=\", false, function () {\n  return [useWorkspacesContext, useSearchParams];\n});\n_c = AppInner;\nconst Full = () => {\n  _s2();\n  const {\n    workspaceId: initialWorkspaceId\n  } = useParams();\n  const [searchParms] = useSearchParams();\n  const navigate = useNavigate();\n  const [isPreview] = useState(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const previewParams = urlParams.get('preview');\n    return previewParams === 'true';\n  });\n  const [workspaceId, setWorkspaceId] = useState(initialWorkspaceId || 'default');\n  const handleWorkspaceChanged = useCallback(newWorkspaceId => {\n    navigate(generateUrl(ROUTE_WORKSPACE_HOME, searchParms, newWorkspaceId));\n  }, [navigate, searchParms]);\n  const handleNavigationView = useCallback(route => {\n    navigate(generateUrl(route, searchParms, workspaceId));\n  }, [navigate, searchParms, workspaceId]);\n  const handleThreatListView = useCallback(filter => {\n    navigate(generateUrl(ROUTE_THREAT_LIST, searchParms, workspaceId), {\n      state: filter ? {\n        filter\n      } : undefined\n    });\n  }, [navigate, workspaceId, searchParms]);\n  const handleThreatEditorView = useCallback(newThreatId => {\n    navigate(generateUrl(ROUTE_THREAT_EDITOR, searchParms, workspaceId, newThreatId));\n  }, [navigate, workspaceId, searchParms]);\n  const navigationItems = useMemo(() => {\n    return [{\n      text: 'Dashboard',\n      href: generateUrl(ROUTE_WORKSPACE_HOME, searchParms, workspaceId),\n      type: 'link'\n    }, {\n      text: 'Application Info',\n      href: generateUrl(ROUTE_APPLICATION_INFO, searchParms, workspaceId),\n      type: 'link'\n    }, {\n      text: 'Architecture',\n      href: generateUrl(ROUTE_ARCHITECTURE_INFO, searchParms, workspaceId),\n      type: 'link'\n    },\n    /*{\n      text: 'Dataflow',\n      href: generateUrl(ROUTE_DATAFLOW_INFO, searchParms, workspaceId),\n      type: 'link',\n    },*/\n    {\n      text: 'Diagram',\n      href: generateUrl(ROUTE_DIAGRAM_INFO, searchParms, workspaceId),\n      type: 'link'\n    }, {\n      text: 'Assumptions',\n      href: generateUrl(ROUTE_ASSUMPTION_LIST, searchParms, workspaceId),\n      type: 'link'\n    }, {\n      text: 'Threats',\n      href: generateUrl(ROUTE_THREAT_LIST, searchParms, workspaceId),\n      type: 'link'\n    }, {\n      text: 'Security controls',\n      href: generateUrl(ROUTE_CONTROL_LIST, searchParms, workspaceId),\n      type: 'link'\n    }, {\n      text: 'Mitigations',\n      href: generateUrl(ROUTE_MITIGATION_LIST, searchParms, workspaceId),\n      type: 'link'\n    }, {\n      type: 'divider'\n    }, {\n      text: 'Threat model',\n      href: generateUrl(ROUTE_VIEW_THREAT_MODEL, searchParms, workspaceId),\n      type: 'link'\n    }];\n  }, [searchParms, workspaceId]);\n  const handlePreview = useCallback(data => {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set('preview', 'true');\n    window.localStorage.setItem(TEMP_PREVIEW_DATA_KEY, JSON.stringify(data));\n    urlParams.set('dataKey', TEMP_PREVIEW_DATA_KEY);\n    window.open(`${window.location.pathname}?${urlParams.toString()}`, '_blank', 'noopener,noreferrer,resizable');\n  }, []);\n  const handleImported = useCallback(() => {\n    navigate(generateUrl(ROUTE_VIEW_THREAT_MODEL, searchParms, workspaceId));\n  }, [navigate, workspaceId, searchParms]);\n  const handleDefineWorkload = useCallback(() => {\n    navigate(generateUrl(ROUTE_APPLICATION_INFO, searchParms, workspaceId));\n  }, [navigate, workspaceId, searchParms]);\n  const notifications = useNotifications();\n  return /*#__PURE__*/_jsxDEV(ContextAggregator, {\n    composerMode: \"Full\",\n    onWorkspaceChanged: handleWorkspaceChanged,\n    onApplicationInfoView: () => handleNavigationView(ROUTE_APPLICATION_INFO),\n    onArchitectureView: () => handleNavigationView(ROUTE_ARCHITECTURE_INFO)\n    //onDataflowView={() => handleNavigationView(ROUTE_DATAFLOW_INFO)}\n    ,\n    onDiagramView: () => handleNavigationView(ROUTE_DIAGRAM_INFO),\n    onAssumptionListView: () => handleNavigationView(ROUTE_ASSUMPTION_LIST),\n    onMitigationListView: () => handleNavigationView(ROUTE_MITIGATION_LIST),\n    onControlListView: () => handleNavigationView(ROUTE_CONTROL_LIST),\n    onThreatListView: handleThreatListView,\n    onThreatEditorView: handleThreatEditorView,\n    onPreview: handlePreview,\n    onImported: handleImported,\n    onDefineWorkload: handleDefineWorkload,\n    children: isPreview ? /*#__PURE__*/_jsxDEV(ThreatModelReport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AppLayout, {\n      title: \"Threat Modeling\",\n      href: defaultHref,\n      navigationItems: navigationItems,\n      availableRoutes: routes.map(x => x.path || ''),\n      breadcrumbGroup: /*#__PURE__*/_jsxDEV(WorkspaceSelector, {\n        composerMode: \"Full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 26\n      }, this),\n      notifications: notifications,\n      children: /*#__PURE__*/_jsxDEV(AppInner, {\n        setWorkspaceId: setWorkspaceId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s2(Full, \"DJaifC27Kxh0sLS+nAadKWGWWSM=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useNotifications];\n});\n_c2 = Full;\nexport default Full;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppInner\");\n$RefreshReg$(_c2, \"Full\");","map":{"version":3,"names":["React","useMemo","useCallback","useState","useEffect","Routes","Route","useParams","useSearchParams","useNavigate","Navigate","AppLayout","ROUTE_APPLICATION_INFO","ROUTE_ARCHITECTURE_INFO","ROUTE_ASSUMPTION_LIST","ROUTE_DIAGRAM_INFO","ROUTE_MITIGATION_LIST","ROUTE_THREAT_EDITOR","ROUTE_THREAT_LIST","ROUTE_VIEW_THREAT_MODEL","ROUTE_WORKSPACE_HOME","ROUTE_CONTROL_LIST","ContextAggregator","useWorkspacesContext","useNotifications","routes","generateUrl","ThreatModelReport","WorkspaceSelector","jsxDEV","_jsxDEV","TEMP_PREVIEW_DATA_KEY","defaultHref","process","env","PUBLIC_URL","AppInner","setWorkspaceId","_s","currentWorkspace","searchParms","id","workspaceHome","children","path","element","replace","to","fileName","_jsxFileName","lineNumber","columnNumber","map","r","index","_c","Full","_s2","workspaceId","initialWorkspaceId","navigate","isPreview","urlParams","URLSearchParams","window","location","search","previewParams","get","handleWorkspaceChanged","newWorkspaceId","handleNavigationView","route","handleThreatListView","filter","state","undefined","handleThreatEditorView","newThreatId","navigationItems","text","href","type","handlePreview","data","set","localStorage","setItem","JSON","stringify","open","pathname","toString","handleImported","handleDefineWorkload","notifications","composerMode","onWorkspaceChanged","onApplicationInfoView","onArchitectureView","onDiagramView","onAssumptionListView","onMitigationListView","onControlListView","onThreatListView","onThreatEditorView","onPreview","onImported","onDefineWorkload","title","availableRoutes","x","breadcrumbGroup","_c2","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/containers/App/components/Full/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\nimport { SideNavigationProps } from '@cloudscape-design/components/side-navigation';\nimport React, { FC, useMemo, useCallback, useState, useEffect } from 'react';\nimport { Routes, Route, RouteProps, useParams, useSearchParams, useNavigate, Navigate } from 'react-router-dom';\n\nimport AppLayout from '../../../../components/FullAppLayout';\nimport { ROUTE_APPLICATION_INFO, ROUTE_ARCHITECTURE_INFO, ROUTE_ASSUMPTION_LIST, ROUTE_DIAGRAM_INFO, ROUTE_MITIGATION_LIST, ROUTE_THREAT_EDITOR, ROUTE_THREAT_LIST, ROUTE_VIEW_THREAT_MODEL, ROUTE_WORKSPACE_HOME, ROUTE_CONTROL_LIST } from '../../../../configs/routes';\n\nimport ContextAggregator from '../../../../contexts/ContextAggregator';\nimport { useWorkspacesContext } from '../../../../contexts/WorkspacesContext';\n\nimport { DataExchangeFormat, ThreatStatementListFilter } from '../../../../customTypes';\nimport useNotifications from '../../../../hooks/useNotifications';\nimport routes from '../../../../routes';\n\n\nimport generateUrl from '../../../../utils/generateUrl';\nimport ThreatModelReport from '../../../ThreatModelReport';\nimport WorkspaceSelector from '../../../WorkspaceSelector';\n\nconst TEMP_PREVIEW_DATA_KEY = 'ThreatStatementGenerator.TempPreviewData';\n\nconst defaultHref = process.env.PUBLIC_URL || '/';\n\nconst AppInner: FC<{\n  setWorkspaceId: React.Dispatch<React.SetStateAction<string>>;\n}> = ({ setWorkspaceId }) => {\n  const { currentWorkspace } = useWorkspacesContext();\n  const [searchParms] = useSearchParams();\n  useEffect(() => {\n    setWorkspaceId(currentWorkspace?.id || 'default');\n  }, [currentWorkspace, setWorkspaceId]);\n\n  const workspaceHome = generateUrl(ROUTE_WORKSPACE_HOME, searchParms, currentWorkspace?.id || 'default');\n\n  return (<Routes>\n    <Route path='/' element={<Navigate replace to={workspaceHome}/>}/>\n    {routes.map((r: RouteProps, index: number) => <Route key={index} {...r} />)}\n    <Route path='*' element={<Navigate replace to={workspaceHome}/>}/>\n  </Routes>);\n};\n\nconst Full: FC = () => {\n  const { workspaceId: initialWorkspaceId } = useParams();\n  const [searchParms] = useSearchParams();\n  const navigate = useNavigate();\n\n  const [isPreview] = useState(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const previewParams = urlParams.get('preview');\n    return previewParams === 'true';\n  });\n\n  const [workspaceId, setWorkspaceId] = useState(initialWorkspaceId || 'default');\n\n  const handleWorkspaceChanged = useCallback((newWorkspaceId: string) => {\n    navigate(generateUrl(ROUTE_WORKSPACE_HOME, searchParms, newWorkspaceId));\n  }, [navigate, searchParms]);\n\n  const handleNavigationView = useCallback((route: string) => {\n    navigate(generateUrl(route, searchParms, workspaceId));\n  }, [navigate, searchParms, workspaceId]);\n\n  const handleThreatListView = useCallback((filter?: ThreatStatementListFilter) => {\n    navigate(generateUrl(ROUTE_THREAT_LIST, searchParms, workspaceId), {\n      state: filter ? {\n        filter,\n      } : undefined,\n    });\n  }, [navigate, workspaceId, searchParms]);\n\n  const handleThreatEditorView = useCallback((newThreatId?: string) => {\n    navigate(generateUrl(ROUTE_THREAT_EDITOR, searchParms, workspaceId, newThreatId));\n  }, [navigate, workspaceId, searchParms]);\n\n  const navigationItems: SideNavigationProps.Item[] = useMemo(() => {\n    return [\n      {\n        text: 'Dashboard',\n        href: generateUrl(ROUTE_WORKSPACE_HOME, searchParms, workspaceId),\n        type: 'link',\n      },\n      {\n        text: 'Application Info',\n        href: generateUrl(ROUTE_APPLICATION_INFO, searchParms, workspaceId),\n        type: 'link',\n      },\n      {\n        text: 'Architecture',\n        href: generateUrl(ROUTE_ARCHITECTURE_INFO, searchParms, workspaceId),\n        type: 'link',\n      },\n      /*{\n        text: 'Dataflow',\n        href: generateUrl(ROUTE_DATAFLOW_INFO, searchParms, workspaceId),\n        type: 'link',\n      },*/\n      {\n        text: 'Diagram',\n        href: generateUrl(ROUTE_DIAGRAM_INFO, searchParms, workspaceId),\n        type: 'link',\n      },\n      {\n        text: 'Assumptions',\n        href: generateUrl(ROUTE_ASSUMPTION_LIST, searchParms, workspaceId),\n        type: 'link',\n      },\n      {\n        text: 'Threats',\n        href: generateUrl(ROUTE_THREAT_LIST, searchParms, workspaceId),\n        type: 'link',\n      },\n      {\n        text: 'Security controls',\n        href: generateUrl(ROUTE_CONTROL_LIST, searchParms, workspaceId),\n        type: 'link',\n      },\n      {\n        text: 'Mitigations',\n        href: generateUrl(ROUTE_MITIGATION_LIST, searchParms, workspaceId),\n        type: 'link',\n      },\n      { type: 'divider' },\n      {\n        text: 'Threat model',\n        href: generateUrl(ROUTE_VIEW_THREAT_MODEL, searchParms, workspaceId),\n        type: 'link',\n      },\n    ];\n  }, [searchParms, workspaceId]);\n\n  const handlePreview = useCallback((data: DataExchangeFormat) => {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set('preview', 'true');\n    window.localStorage.setItem(TEMP_PREVIEW_DATA_KEY, JSON.stringify(data));\n    urlParams.set('dataKey', TEMP_PREVIEW_DATA_KEY);\n    window.open(`${window.location.pathname}?${urlParams.toString()}`, '_blank', 'noopener,noreferrer,resizable');\n  }, []);\n\n  const handleImported = useCallback(() => {\n    navigate(generateUrl(ROUTE_VIEW_THREAT_MODEL, searchParms, workspaceId));\n  }, [navigate, workspaceId, searchParms]);\n\n  const handleDefineWorkload = useCallback(() => {\n    navigate(generateUrl(ROUTE_APPLICATION_INFO, searchParms, workspaceId));\n  }, [navigate, workspaceId, searchParms]);\n\n  const notifications = useNotifications();\n\n  return (\n    <ContextAggregator\n      composerMode='Full'\n      onWorkspaceChanged={handleWorkspaceChanged}\n      onApplicationInfoView={() => handleNavigationView(ROUTE_APPLICATION_INFO)}\n      onArchitectureView={() => handleNavigationView(ROUTE_ARCHITECTURE_INFO)}\n      //onDataflowView={() => handleNavigationView(ROUTE_DATAFLOW_INFO)}\n      onDiagramView={() => handleNavigationView(ROUTE_DIAGRAM_INFO)}\n      onAssumptionListView={() => handleNavigationView(ROUTE_ASSUMPTION_LIST)}\n      onMitigationListView={() => handleNavigationView(ROUTE_MITIGATION_LIST)}\n      onControlListView={() => handleNavigationView(ROUTE_CONTROL_LIST)}\n      onThreatListView={handleThreatListView}\n      onThreatEditorView={handleThreatEditorView}\n      onPreview={handlePreview}\n      onImported={handleImported}\n      onDefineWorkload={handleDefineWorkload}\n    >\n      {isPreview ? (\n        <ThreatModelReport />\n      ) : (<AppLayout\n        title='Threat Modeling'\n        href={defaultHref}\n        navigationItems={navigationItems}\n        availableRoutes={routes.map(x => x.path || '')}\n        breadcrumbGroup={<WorkspaceSelector composerMode='Full'/>}\n        notifications={notifications}\n      >\n        <AppInner setWorkspaceId={setWorkspaceId} />\n      </AppLayout>)}\n    </ContextAggregator>\n  );\n};\n\nexport default Full;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}