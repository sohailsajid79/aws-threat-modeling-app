{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport FilteringToken from './filtering-token';\nimport { TokenEditor } from './token-editor';\nimport { tokenGroupToTokens } from './utils';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nexport const TokenButton = ({\n  query,\n  onUpdateToken,\n  onUpdateOperation,\n  onRemoveToken,\n  tokenIndex,\n  filteringProperties,\n  filteringOptions,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  freeTextFiltering,\n  expandToViewport,\n  enableTokenGroups\n}) => {\n  var _a, _b, _c, _d;\n  const tokenRef = useRef(null);\n  const hasGroups = query.tokens.some(tokenOrGroup => 'operation' in tokenOrGroup);\n  const first = tokenIndex === 0;\n  const tokenOrGroup = query.tokens[tokenIndex];\n  const tokens = tokenGroupToTokens([tokenOrGroup]).map(t => Object.assign(Object.assign({}, t), {\n    standaloneIndex: undefined\n  }));\n  const operation = query.operation;\n  const groupOperation = 'operation' in tokenOrGroup ? tokenOrGroup.operation : operation === 'and' ? 'or' : 'and';\n  const [tempTokens, setTempTokens] = useState(tokens);\n  const capturedTokenIndices = tempTokens.map(token => token.standaloneIndex).filter(index => index !== undefined);\n  const tokensToCapture = [];\n  for (let index = 0; index < query.tokens.length; index++) {\n    const token = query.tokens[index];\n    if ('operator' in token && token !== tokenOrGroup && !capturedTokenIndices.includes(index)) {\n      tokensToCapture.push(token);\n    }\n  }\n  const [tempReleasedTokens, setTempReleasedTokens] = useState([]);\n  tokensToCapture.push(...tempReleasedTokens);\n  return React.createElement(FilteringToken, Object.assign({\n    ref: tokenRef,\n    tokens: tokens.map(token => {\n      const formattedToken = i18nStrings.formatToken(token);\n      return {\n        content: React.createElement(\"span\", {\n          className: clsx(styles['token-trigger'], analyticsSelectors['token-trigger'])\n        }, React.createElement(TokenTrigger, {\n          token: formattedToken,\n          allProperties: token.property === null\n        })),\n        ariaLabel: formattedToken.formattedText,\n        dismissAriaLabel: i18nStrings.removeTokenButtonAriaLabel(token)\n      };\n    }),\n    showOperation: !first && !hideOperations,\n    operation: operation,\n    andText: (_a = i18nStrings.operationAndText) !== null && _a !== void 0 ? _a : '',\n    orText: (_b = i18nStrings.operationOrText) !== null && _b !== void 0 ? _b : '',\n    operationAriaLabel: (_c = i18nStrings.tokenOperatorAriaLabel) !== null && _c !== void 0 ? _c : '',\n    onChangeOperation: onUpdateOperation,\n    onDismissToken: removeIndex => {\n      if (tokens.length === 1) {\n        onRemoveToken();\n      } else {\n        const newTokens = tokens.filter((_, index) => index !== removeIndex);\n        const updatedToken = newTokens.length === 1 ? newTokens[0] : {\n          operation: groupOperation,\n          tokens: newTokens\n        };\n        onUpdateToken(updatedToken, []);\n      }\n    },\n    disabled: disabled,\n    editorContent: React.createElement(TokenEditor, {\n      supportsGroups: enableTokenGroups,\n      filteringProperties: filteringProperties,\n      filteringOptions: filteringOptions,\n      tempGroup: tempTokens,\n      onChangeTempGroup: setTempTokens,\n      tokensToCapture: tokensToCapture,\n      onTokenCapture: capturedToken => setTempReleasedTokens(prev => prev.filter(token => token !== capturedToken)),\n      onTokenRelease: releasedToken => {\n        if (releasedToken.standaloneIndex === undefined) {\n          setTempReleasedTokens(prev => [...prev, releasedToken]);\n        }\n      },\n      asyncProps: asyncProps,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings,\n      asyncProperties: asyncProperties,\n      customGroupsText: customGroupsText,\n      freeTextFiltering: freeTextFiltering,\n      onDismiss: () => {\n        var _a;\n        (_a = tokenRef.current) === null || _a === void 0 ? void 0 : _a.closeEditor();\n      },\n      onSubmit: () => {\n        var _a;\n        const updatedToken = tempTokens.length === 1 ? tempTokens[0] : {\n          operation: groupOperation,\n          tokens: tempTokens\n        };\n        onUpdateToken(updatedToken, tempReleasedTokens);\n        (_a = tokenRef.current) === null || _a === void 0 ? void 0 : _a.closeEditor();\n      }\n    }),\n    editorHeader: (_d = i18nStrings.editTokenHeader) !== null && _d !== void 0 ? _d : '',\n    editorDismissAriaLabel: i18nStrings.dismissAriaLabel,\n    editorExpandToViewport: !!expandToViewport,\n    onEditorOpen: () => {\n      setTempTokens(tokens);\n      setTempReleasedTokens([]);\n    },\n    groupOperation: groupOperation,\n    onChangeGroupOperation: operation => onUpdateToken({\n      operation,\n      tokens\n    }, []),\n    groupAriaLabel: i18nStrings.groupAriaLabel({\n      operation: groupOperation,\n      tokens\n    }),\n    groupEditAriaLabel: i18nStrings.groupEditAriaLabel({\n      operation: groupOperation,\n      tokens\n    }),\n    hasGroups: hasGroups,\n    popoverSize: enableTokenGroups ? 'content' : 'large'\n  }, getAnalyticsMetadataAttribute({\n    detail: {\n      tokenPosition: `${tokenIndex + 1}`,\n      tokenLabel: `.${analyticsSelectors['token-trigger']}`\n    }\n  })));\n};\nconst TokenTrigger = ({\n  token: {\n    propertyLabel,\n    operator,\n    value\n  },\n  allProperties\n}) => {\n  if (propertyLabel) {\n    propertyLabel += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && allProperties;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return React.createElement(React.Fragment, null, allProperties ? '' : propertyLabel, React.createElement(\"span\", {\n    className: styles['token-operator']\n  }, operatorText), value);\n};","map":{"version":3,"names":["React","useRef","useState","clsx","getAnalyticsMetadataAttribute","FilteringToken","TokenEditor","tokenGroupToTokens","analyticsSelectors","styles","TokenButton","query","onUpdateToken","onUpdateOperation","onRemoveToken","tokenIndex","filteringProperties","filteringOptions","asyncProps","onLoadItems","i18nStrings","asyncProperties","hideOperations","customGroupsText","disabled","freeTextFiltering","expandToViewport","enableTokenGroups","tokenRef","hasGroups","tokens","some","tokenOrGroup","first","map","t","Object","assign","standaloneIndex","undefined","operation","groupOperation","tempTokens","setTempTokens","capturedTokenIndices","token","filter","index","tokensToCapture","length","includes","push","tempReleasedTokens","setTempReleasedTokens","createElement","ref","formattedToken","formatToken","content","className","TokenTrigger","allProperties","property","ariaLabel","formattedText","dismissAriaLabel","removeTokenButtonAriaLabel","showOperation","andText","_a","operationAndText","orText","_b","operationOrText","operationAriaLabel","_c","tokenOperatorAriaLabel","onChangeOperation","onDismissToken","removeIndex","newTokens","_","updatedToken","editorContent","supportsGroups","tempGroup","onChangeTempGroup","onTokenCapture","capturedToken","prev","onTokenRelease","releasedToken","onDismiss","current","closeEditor","onSubmit","editorHeader","_d","editTokenHeader","editorDismissAriaLabel","editorExpandToViewport","onEditorOpen","onChangeGroupOperation","groupAriaLabel","groupEditAriaLabel","popoverSize","detail","tokenPosition","tokenLabel","propertyLabel","operator","value","freeTextContainsToken","operatorText","Fragment"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/property-filter/token.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport FilteringToken, { FilteringTokenRef } from './filtering-token';\nimport { I18nStringsInternal } from './i18n-utils';\nimport {\n  FormattedToken,\n  GroupText,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalFreeTextFiltering,\n  InternalQuery,\n  InternalToken,\n  InternalTokenGroup,\n  JoinOperation,\n  LoadItemsDetail,\n} from './interfaces';\nimport { TokenEditor } from './token-editor';\nimport { tokenGroupToTokens } from './utils';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface TokenProps {\n  query: InternalQuery;\n  tokenIndex: number;\n  onUpdateToken: (updatedToken: InternalToken | InternalTokenGroup, releasedTokens: InternalToken[]) => void;\n  onUpdateOperation: (updatedOperation: JoinOperation) => void;\n  onRemoveToken: () => void;\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  freeTextFiltering: InternalFreeTextFiltering;\n  expandToViewport?: boolean;\n  filteringProperties: readonly InternalFilteringProperty[];\n  filteringOptions: readonly InternalFilteringOption[];\n  hideOperations?: boolean;\n  i18nStrings: I18nStringsInternal;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  enableTokenGroups: boolean;\n}\n\nexport const TokenButton = ({\n  query,\n  onUpdateToken,\n  onUpdateOperation,\n  onRemoveToken,\n  tokenIndex,\n  filteringProperties,\n  filteringOptions,\n  asyncProps,\n  onLoadItems,\n  i18nStrings,\n  asyncProperties,\n  hideOperations,\n  customGroupsText,\n  disabled,\n  freeTextFiltering,\n  expandToViewport,\n  enableTokenGroups,\n}: TokenProps) => {\n  const tokenRef = useRef<FilteringTokenRef>(null);\n\n  const hasGroups = query.tokens.some(tokenOrGroup => 'operation' in tokenOrGroup);\n  const first = tokenIndex === 0;\n\n  const tokenOrGroup = query.tokens[tokenIndex];\n  const tokens = tokenGroupToTokens<InternalToken>([tokenOrGroup]).map(t => ({ ...t, standaloneIndex: undefined }));\n  const operation = query.operation;\n  const groupOperation = 'operation' in tokenOrGroup ? tokenOrGroup.operation : operation === 'and' ? 'or' : 'and';\n\n  const [tempTokens, setTempTokens] = useState<InternalToken[]>(tokens);\n  const capturedTokenIndices = tempTokens.map(token => token.standaloneIndex).filter(index => index !== undefined);\n  const tokensToCapture: InternalToken[] = [];\n  for (let index = 0; index < query.tokens.length; index++) {\n    const token = query.tokens[index];\n    if ('operator' in token && token !== tokenOrGroup && !capturedTokenIndices.includes(index)) {\n      tokensToCapture.push(token);\n    }\n  }\n  const [tempReleasedTokens, setTempReleasedTokens] = useState<InternalToken[]>([]);\n  tokensToCapture.push(...tempReleasedTokens);\n\n  return (\n    <FilteringToken\n      ref={tokenRef}\n      tokens={tokens.map(token => {\n        const formattedToken = i18nStrings.formatToken(token);\n        return {\n          content: (\n            <span className={clsx(styles['token-trigger'], analyticsSelectors['token-trigger'])}>\n              <TokenTrigger token={formattedToken} allProperties={token.property === null} />\n            </span>\n          ),\n          ariaLabel: formattedToken.formattedText,\n          dismissAriaLabel: i18nStrings.removeTokenButtonAriaLabel(token),\n        };\n      })}\n      showOperation={!first && !hideOperations}\n      operation={operation}\n      andText={i18nStrings.operationAndText ?? ''}\n      orText={i18nStrings.operationOrText ?? ''}\n      operationAriaLabel={i18nStrings.tokenOperatorAriaLabel ?? ''}\n      onChangeOperation={onUpdateOperation}\n      onDismissToken={(removeIndex: number) => {\n        if (tokens.length === 1) {\n          onRemoveToken();\n        } else {\n          const newTokens = tokens.filter((_, index) => index !== removeIndex);\n          const updatedToken = newTokens.length === 1 ? newTokens[0] : { operation: groupOperation, tokens: newTokens };\n          onUpdateToken(updatedToken, []);\n        }\n      }}\n      disabled={disabled}\n      editorContent={\n        <TokenEditor\n          supportsGroups={enableTokenGroups}\n          filteringProperties={filteringProperties}\n          filteringOptions={filteringOptions}\n          tempGroup={tempTokens}\n          onChangeTempGroup={setTempTokens}\n          tokensToCapture={tokensToCapture}\n          onTokenCapture={capturedToken => setTempReleasedTokens(prev => prev.filter(token => token !== capturedToken))}\n          onTokenRelease={releasedToken => {\n            if (releasedToken.standaloneIndex === undefined) {\n              setTempReleasedTokens(prev => [...prev, releasedToken]);\n            }\n          }}\n          asyncProps={asyncProps}\n          onLoadItems={onLoadItems}\n          i18nStrings={i18nStrings}\n          asyncProperties={asyncProperties}\n          customGroupsText={customGroupsText}\n          freeTextFiltering={freeTextFiltering}\n          onDismiss={() => {\n            tokenRef.current?.closeEditor();\n          }}\n          onSubmit={() => {\n            const updatedToken =\n              tempTokens.length === 1 ? tempTokens[0] : { operation: groupOperation, tokens: tempTokens };\n            onUpdateToken(updatedToken, tempReleasedTokens);\n            tokenRef.current?.closeEditor();\n          }}\n        />\n      }\n      editorHeader={i18nStrings.editTokenHeader ?? ''}\n      editorDismissAriaLabel={i18nStrings.dismissAriaLabel}\n      editorExpandToViewport={!!expandToViewport}\n      onEditorOpen={() => {\n        setTempTokens(tokens);\n        setTempReleasedTokens([]);\n      }}\n      groupOperation={groupOperation}\n      onChangeGroupOperation={operation => onUpdateToken({ operation, tokens }, [])}\n      groupAriaLabel={i18nStrings.groupAriaLabel({ operation: groupOperation, tokens })}\n      groupEditAriaLabel={i18nStrings.groupEditAriaLabel({ operation: groupOperation, tokens })}\n      hasGroups={hasGroups}\n      popoverSize={enableTokenGroups ? 'content' : 'large'}\n      {...getAnalyticsMetadataAttribute({\n        detail: {\n          tokenPosition: `${tokenIndex + 1}`,\n          tokenLabel: `.${analyticsSelectors['token-trigger']}`,\n        },\n      })}\n    />\n  );\n};\n\nconst TokenTrigger = ({\n  token: { propertyLabel, operator, value },\n  allProperties,\n}: {\n  token: FormattedToken;\n  allProperties: boolean;\n}) => {\n  if (propertyLabel) {\n    propertyLabel += ' ';\n  }\n  const freeTextContainsToken = operator === ':' && allProperties;\n  const operatorText = freeTextContainsToken ? '' : operator + ' ';\n  return (\n    <>\n      {allProperties ? '' : propertyLabel}\n      <span className={styles['token-operator']}>{operatorText}</span>\n      {value}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}