{"ast":null,"code":"function getSorter(sortingField) {\n  if (!sortingField) {\n    return null;\n  }\n  return function (row1, row2) {\n    var _a, _b;\n    // Use empty string as a default value, because it works well to compare with both strings and numbers:\n    // Every number can be casted to a string, but not every string can be casted to a meaningful number,\n    // sometimes it is NaN.\n    var value1 = (_a = row1[sortingField]) !== null && _a !== void 0 ? _a : '';\n    var value2 = (_b = row2[sortingField]) !== null && _b !== void 0 ? _b : '';\n    if (typeof value1 === 'string' && typeof value2 === 'string') {\n      return value1.localeCompare(value2);\n    }\n    // use loose comparison to handle inconsistent data types\n    // eslint-disable-next-line eqeqeq\n    return value1 < value2 ? -1 : value1 == value2 ? 0 : 1;\n  };\n}\nexport function createComparator(sorting, state) {\n  var _a;\n  if (!sorting || !state) {\n    return null;\n  }\n  var direction = state.isDescending ? -1 : 1;\n  var comparator = (_a = state.sortingColumn.sortingComparator) !== null && _a !== void 0 ? _a : getSorter(state.sortingColumn.sortingField);\n  return comparator ? function (a, b) {\n    return comparator(a, b) * direction;\n  } : null;\n}","map":{"version":3,"names":["getSorter","sortingField","row1","row2","_a","_b","value1","value2","localeCompare","createComparator","sorting","state","direction","isDescending","comparator","sortingColumn","sortingComparator","a","b"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@cloudscape-design/collection-hooks/mjs/operations/sort.js"],"sourcesContent":["function getSorter(sortingField) {\n    if (!sortingField) {\n        return null;\n    }\n    return function (row1, row2) {\n        var _a, _b;\n        // Use empty string as a default value, because it works well to compare with both strings and numbers:\n        // Every number can be casted to a string, but not every string can be casted to a meaningful number,\n        // sometimes it is NaN.\n        var value1 = (_a = row1[sortingField]) !== null && _a !== void 0 ? _a : '';\n        var value2 = (_b = row2[sortingField]) !== null && _b !== void 0 ? _b : '';\n        if (typeof value1 === 'string' && typeof value2 === 'string') {\n            return value1.localeCompare(value2);\n        }\n        // use loose comparison to handle inconsistent data types\n        // eslint-disable-next-line eqeqeq\n        return value1 < value2 ? -1 : value1 == value2 ? 0 : 1;\n    };\n}\nexport function createComparator(sorting, state) {\n    var _a;\n    if (!sorting || !state) {\n        return null;\n    }\n    var direction = state.isDescending ? -1 : 1;\n    var comparator = (_a = state.sortingColumn.sortingComparator) !== null && _a !== void 0 ? _a : getSorter(state.sortingColumn.sortingField);\n    return comparator ? function (a, b) { return comparator(a, b) * direction; } : null;\n}\n"],"mappings":"AAAA,SAASA,SAASA,CAACC,YAAY,EAAE;EAC7B,IAAI,CAACA,YAAY,EAAE;IACf,OAAO,IAAI;EACf;EACA,OAAO,UAAUC,IAAI,EAAEC,IAAI,EAAE;IACzB,IAAIC,EAAE,EAAEC,EAAE;IACV;IACA;IACA;IACA,IAAIC,MAAM,GAAG,CAACF,EAAE,GAAGF,IAAI,CAACD,YAAY,CAAC,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;IAC1E,IAAIG,MAAM,GAAG,CAACF,EAAE,GAAGF,IAAI,CAACF,YAAY,CAAC,MAAM,IAAI,IAAII,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;IAC1E,IAAI,OAAOC,MAAM,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAAE;MAC1D,OAAOD,MAAM,CAACE,aAAa,CAACD,MAAM,CAAC;IACvC;IACA;IACA;IACA,OAAOD,MAAM,GAAGC,MAAM,GAAG,CAAC,CAAC,GAAGD,MAAM,IAAIC,MAAM,GAAG,CAAC,GAAG,CAAC;EAC1D,CAAC;AACL;AACA,OAAO,SAASE,gBAAgBA,CAACC,OAAO,EAAEC,KAAK,EAAE;EAC7C,IAAIP,EAAE;EACN,IAAI,CAACM,OAAO,IAAI,CAACC,KAAK,EAAE;IACpB,OAAO,IAAI;EACf;EACA,IAAIC,SAAS,GAAGD,KAAK,CAACE,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC;EAC3C,IAAIC,UAAU,GAAG,CAACV,EAAE,GAAGO,KAAK,CAACI,aAAa,CAACC,iBAAiB,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGJ,SAAS,CAACW,KAAK,CAACI,aAAa,CAACd,YAAY,CAAC;EAC1I,OAAOa,UAAU,GAAG,UAAUG,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOJ,UAAU,CAACG,CAAC,EAAEC,CAAC,CAAC,GAAGN,SAAS;EAAE,CAAC,GAAG,IAAI;AACvF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}