{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/ThreatStatementEditor/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\n/** @jsxImportSource @emotion/react */\nimport Grid from '@cloudscape-design/components/grid';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport * as awsui from '@cloudscape-design/design-tokens';\nimport { css } from '@emotion/react';\nimport React, { useCallback, useMemo, useState, useRef, useEffect } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\nimport { DEFAULT_WORKSPACE_LABEL } from '../../../configs/constants';\nimport { useAssumptionLinksContext } from '../../../contexts/AssumptionLinksContext/context';\nimport { useAssumptionsContext } from '../../../contexts/AssumptionsContext/context';\nimport { useGlobalSetupContext } from '../../../contexts/GlobalSetupContext/context';\nimport { useMitigationLinksContext } from '../../../contexts/MitigationLinksContext/context';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport { useControlLinksContext } from '../../../contexts/ControlLinksContext/context';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport { useWorkspacesContext } from '../../../contexts/WorkspacesContext/context';\nimport threatFieldData from '../../../data/threatFieldData';\nimport threatStatementExamples from '../../../data/threatStatementExamples.json';\nimport threatStatementFormat from '../../../data/threatStatementFormat';\nimport useEditMetadata from '../../../hooks/useEditMetadata';\nimport getRecommendedEditor from '../../../utils/getRecommandedEditor';\nimport renderThreatStatement from '../../../utils/renderThreatStatement';\nimport scrollToTop from '../../../utils/scrollToTop';\nimport AssumptionLinkComponent from '../../assumptions/AssumptionLinkView';\nimport Tooltip from '../../generic/Tooltip';\nimport MitigationLinkComponent from '../../mitigations/MitigationLinkView';\nimport CustomTemplate from '../CustomTemplate';\nimport EditorImpactedAssets from '../EditorImpactedAssets';\nimport EditorImpactedGoal from '../EditorImpactedGoal';\nimport EditorPrerequisites from '../EditorPrerequisites';\nimport EditorThreatAction from '../EditorThreatAction';\nimport EditorThreatImpact from '../EditorThreatImpact';\nimport EditorThreatSource from '../EditorThreatSource';\nimport FieldSelector from '../FieldSelector';\nimport FinalStatement from '../FinalStatement';\nimport FullExamples from '../FullExamples';\nimport Header from '../Header';\nimport MetadataEditor from '../MetadataEditor';\nimport Metrics from '../Metrics';\nimport ControlLookupComponent from '../../controls/ControlLookup';\nimport { getControlProfileByName } from '../../../data/controlProfileProvider';\nimport { useApplicationInfoContext } from '../../../contexts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst styles = {\n  finalStatementSection: css({\n    '&:hover': {\n      backgroundColor: awsui.colorBackgroundDropdownItemHover\n    }\n  }),\n  metadataContainer: css({\n    'h3>span>span': {\n      fontSize: '20px'\n    }\n  })\n};\nconst defaultThreatStatementFormat = threatStatementFormat[63];\nconst editorMapping = {\n  threat_source: EditorThreatSource,\n  prerequisites: EditorPrerequisites,\n  threat_action: EditorThreatAction,\n  threat_impact: EditorThreatImpact,\n  impacted_goal: EditorImpactedGoal,\n  impacted_assets: EditorImpactedAssets\n};\nconst ThreatStatementEditorInner = ({\n  editingStatement\n}) => {\n  _s();\n  const {\n    applicationInfo\n  } = useApplicationInfoContext();\n  const {\n    setEditingStatement,\n    saveStatement,\n    addStatement,\n    onThreatListView\n  } = useThreatsContext();\n  const inputRef = useRef();\n  const fullExamplesRef = useRef();\n  const {\n    currentWorkspace,\n    workspaceList\n  } = useWorkspacesContext();\n  const [editor, setEditor] = useState(getRecommendedEditor(editingStatement));\n  const [suggestions, setSuggestions] = useState([]);\n  const [displayStatement, setDisplayStatement] = useState([]);\n  const [customTemplateEditorVisible, setCustomTemplateEditorVisible] = useState(false);\n  const {\n    addAssumptionLinks,\n    getLinkedAssumptionLinks,\n    removeAssumptionLinks\n  } = useAssumptionLinksContext();\n  const {\n    addMitigationLinks,\n    getLinkedMitigationLinks,\n    removeMitigationLinks\n  } = useMitigationLinksContext();\n  const {\n    addControlLinks,\n    getLinkedControlLinks,\n    removeControlLinks\n  } = useControlLinksContext();\n  const prevLinkedAssumptionIds = useMemo(() => {\n    return getLinkedAssumptionLinks(editingStatement.id).map(la => la.assumptionId);\n  }, [getLinkedAssumptionLinks, editingStatement]);\n  const prevLinkedMitigationIds = useMemo(() => {\n    return getLinkedMitigationLinks(editingStatement.id).map(lm => lm.mitigationId);\n  }, [getLinkedMitigationLinks, editingStatement]);\n  const prevLinkedControlIds = useMemo(() => {\n    return getLinkedControlLinks(editingStatement.id).map(lm => lm.controlId);\n  }, [getLinkedControlLinks, editingStatement]);\n  const [linkedAssumptionIds, setLinkedAssumptionIds] = useState(editingStatement && (editingStatement === null || editingStatement === void 0 ? void 0 : editingStatement.numericId) === -1 ? [] : prevLinkedAssumptionIds);\n  const [linkedMitigationIds, setLinkedMitigationIds] = useState(editingStatement && (editingStatement === null || editingStatement === void 0 ? void 0 : editingStatement.numericId) === -1 ? [] : prevLinkedMitigationIds);\n  const [linkedControlIds, setLinkedControlIds] = useState(editingStatement && (editingStatement === null || editingStatement === void 0 ? void 0 : editingStatement.numericId) === -1 ? [] : prevLinkedControlIds);\n  const {\n    composerMode\n  } = useGlobalSetupContext();\n  const {\n    assumptionList,\n    saveAssumption\n  } = useAssumptionsContext();\n  const {\n    mitigationList,\n    saveMitigation\n  } = useMitigationsContext();\n  let selectedCategory = applicationInfo.securityCategory == undefined ? 'CCCS Medium' : applicationInfo.securityCategory;\n  const controlList = useMemo(() => {\n    return getControlProfileByName(selectedCategory);\n  }, [selectedCategory]);\n  const Component = useMemo(() => {\n    return editor && editorMapping[editor];\n  }, [editor]);\n  const handleCancel = useCallback(() => {\n    setEditingStatement(null);\n    onThreatListView === null || onThreatListView === void 0 ? void 0 : onThreatListView();\n  }, [setEditingStatement, onThreatListView]);\n  useEffect(() => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, [editor]);\n  useEffect(() => {\n    if (editingStatement) {\n      const {\n        statement,\n        suggestions: currentSuggestions,\n        displayedStatement\n      } = renderThreatStatement(editingStatement);\n      if (statement !== editingStatement.statement) {\n        setEditingStatement(prev => prev && {\n          ...prev,\n          statement,\n          displayedStatement\n        });\n      }\n      const displayedHtml = displayedStatement === null || displayedStatement === void 0 ? void 0 : displayedStatement.map((s, index) => typeof s === 'string' ? s : s.type === 'b' ? _jsxDEV(Tooltip, {\n        tooltip: s.tooltip,\n        anchor: composerMode === 'EditorOnly' ? 'bottom' : 'top',\n        children: _jsxDEV(\"b\", {\n          css: styles.finalStatementSection,\n          children: s.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 110\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : s.type === 'span' ? _jsxDEV(Tooltip, {\n        tooltip: s.tooltip,\n        anchor: composerMode === 'EditorOnly' ? 'bottom' : 'top',\n        children: _jsxDEV(\"span\", {\n          css: styles.finalStatementSection,\n          children: s.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 112\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this) : _jsxDEV(_Fragment, {\n        children: s.content\n      }, void 0, false));\n      setDisplayStatement(displayedHtml);\n      setSuggestions(currentSuggestions);\n    } else {\n      setSuggestions([]);\n      setDisplayStatement([]);\n    }\n  }, [editingStatement, composerMode, setEditingStatement]);\n  const handleStartOver = useCallback(() => {\n    var _fullExamplesRef$curr;\n    addStatement();\n    setEditor(undefined);\n    (_fullExamplesRef$curr = fullExamplesRef.current) === null || _fullExamplesRef$curr === void 0 ? void 0 : _fullExamplesRef$curr.collapse();\n  }, [addStatement]);\n  const handleComplete = useCallback(() => {\n    if (editingStatement) {\n      saveStatement(editingStatement);\n      const id = editingStatement.id;\n      if (editingStatement.numericId === -1) {\n        linkedAssumptionIds && linkedAssumptionIds.length > 0 && addAssumptionLinks(linkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat'\n        })));\n        linkedMitigationIds && linkedMitigationIds.length > 0 && addMitigationLinks(linkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id\n        })));\n        linkedControlIds && linkedControlIds.length > 0 && addControlLinks(linkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id\n        })));\n      } else {\n        const toAddlinkedAssumptionIds = linkedAssumptionIds.filter(x => !prevLinkedAssumptionIds.includes(x));\n        const toRemovelinkedAssumptionIds = prevLinkedAssumptionIds.filter(x => !linkedAssumptionIds.includes(x));\n        toAddlinkedAssumptionIds && toAddlinkedAssumptionIds.length > 0 && addAssumptionLinks(toAddlinkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat'\n        })));\n        toRemovelinkedAssumptionIds && toRemovelinkedAssumptionIds.length > 0 && removeAssumptionLinks(toRemovelinkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat'\n        })));\n        const toAddlinkedMitigationIds = linkedMitigationIds.filter(x => !prevLinkedMitigationIds.includes(x));\n        const toRemovelinkedMitigationIds = prevLinkedMitigationIds.filter(x => !linkedMitigationIds.includes(x));\n        toAddlinkedMitigationIds && toAddlinkedMitigationIds.length > 0 && addMitigationLinks(toAddlinkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id\n        })));\n        toRemovelinkedMitigationIds && toRemovelinkedMitigationIds.length > 0 && removeMitigationLinks(toRemovelinkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id\n        })));\n        const toAddlinkedControlIds = linkedControlIds.filter(x => !prevLinkedControlIds.includes(x));\n        const toRemovelinkedControlIds = prevLinkedControlIds.filter(x => !linkedControlIds.includes(x));\n        toAddlinkedControlIds && toAddlinkedControlIds.length > 0 && addControlLinks(toAddlinkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id\n        })));\n        toRemovelinkedControlIds && toRemovelinkedControlIds.length > 0 && removeControlLinks(toRemovelinkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id\n        })));\n      }\n    }\n    setEditingStatement(null);\n    onThreatListView === null || onThreatListView === void 0 ? void 0 : onThreatListView();\n  }, [saveStatement, editingStatement, linkedAssumptionIds, linkedMitigationIds, linkedControlIds, prevLinkedAssumptionIds, prevLinkedMitigationIds, prevLinkedControlIds, onThreatListView, addAssumptionLinks, addMitigationLinks, addControlLinks, removeAssumptionLinks, removeMitigationLinks, removeControlLinks, setEditingStatement]);\n  const handleExampleClicked = useCallback(statement => {\n    var _fullExamplesRef$curr2;\n    setEditingStatement({\n      ...statement,\n      tags: [],\n      metadata: [],\n      displayOrder: -1,\n      numericId: -1,\n      id: uuidV4()\n    });\n    const recommendedEditor = getRecommendedEditor(statement);\n    recommendedEditor && setEditor(recommendedEditor);\n    (_fullExamplesRef$curr2 = fullExamplesRef.current) === null || _fullExamplesRef$curr2 === void 0 ? void 0 : _fullExamplesRef$curr2.collapse();\n  }, [setEditingStatement]);\n  const handleGiveExampleClicked = useCallback(() => {\n    const len = threatStatementExamples.length;\n    const randomNumber = Math.floor(Math.random() * len);\n    const example = threatStatementExamples[randomNumber];\n    const statement = {\n      ...example,\n      tags: [],\n      metadata: [],\n      displayOrder: -1,\n      numericId: -1,\n      id: uuidV4()\n    };\n    setEditingStatement(statement);\n    const recommendedEditor = getRecommendedEditor(statement);\n    recommendedEditor && setEditor(recommendedEditor);\n    scrollToTop();\n  }, [setEditingStatement]);\n  const saveButtonText = useMemo(() => {\n    if (!currentWorkspace && workspaceList.length === 0) {\n      // For most of use cases, if there is only the default workspace, use list to reduce cognitive load.\n      return (editingStatement === null || editingStatement === void 0 ? void 0 : editingStatement.numericId) === -1 ? 'Add to list' : 'Save';\n    }\n    const workspace = (currentWorkspace === null || currentWorkspace === void 0 ? void 0 : currentWorkspace.name) || DEFAULT_WORKSPACE_LABEL;\n    return (editingStatement === null || editingStatement === void 0 ? void 0 : editingStatement.numericId) === -1 ? `Add to workspace ${workspace}` : `Save to workspace ${workspace}`;\n  }, [currentWorkspace, workspaceList, editingStatement]);\n  const handleCustomTemplateConfirm = useCallback(template => {\n    setCustomTemplateEditorVisible(false);\n    if (template !== defaultThreatStatementFormat.template) {\n      setEditingStatement({\n        ...editingStatement,\n        customTemplate: template\n      });\n    } else {\n      setEditingStatement({\n        ...editingStatement,\n        customTemplate: undefined\n      });\n    }\n  }, [editingStatement, setEditingStatement]);\n  const handleAddAssumptionLink = useCallback(assumptionIdOrNewAssumption => {\n    if (assumptionList.find(a => a.id === assumptionIdOrNewAssumption)) {\n      setLinkedAssumptionIds(prev => [...prev, assumptionIdOrNewAssumption]);\n    } else {\n      const newAssumption = saveAssumption({\n        id: 'new',\n        numericId: -1,\n        content: assumptionIdOrNewAssumption\n      });\n      setLinkedAssumptionIds(prev => [...prev, newAssumption.id]);\n    }\n  }, [setLinkedAssumptionIds, assumptionList, saveAssumption]);\n  const handleAddMitigationLink = useCallback(mitigationIdOrNewMitigation => {\n    if (mitigationList.find(a => a.id === mitigationIdOrNewMitigation)) {\n      setLinkedMitigationIds(prev => [...prev, mitigationIdOrNewMitigation]);\n    } else {\n      const newMitigation = saveMitigation({\n        id: 'new',\n        numericId: -1,\n        content: mitigationIdOrNewMitigation\n      });\n      setLinkedMitigationIds(prev => [...prev, newMitigation.id]);\n    }\n  }, [setLinkedMitigationIds, mitigationList, saveMitigation]);\n  const handleAddControlLink = useCallback(controlIdOrNewControl => {\n    if (controlList.find(a => a.id === controlIdOrNewControl)) {\n      setLinkedControlIds(prev => [...prev, controlIdOrNewControl]);\n    }\n  }, [setLinkedControlIds, controlList]);\n  const handleEditMetadata = useEditMetadata(setEditingStatement);\n  if (!editingStatement) {\n    return _jsxDEV(TextContent, {\n      children: \"Not threat statement editing in place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 12\n    }, this);\n  }\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(SpaceBetween, {\n      direction: \"vertical\",\n      size: \"l\",\n      children: [composerMode !== 'EditorOnly' && _jsxDEV(Header, {\n        composerMode: composerMode,\n        statement: editingStatement,\n        saveButtonText: saveButtonText,\n        onCancel: handleCancel,\n        onStartOver: handleStartOver,\n        onComplete: handleComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 43\n      }, this), _jsxDEV(FinalStatement, {\n        statement: editingStatement,\n        displayStatement: displayStatement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), _jsxDEV(FieldSelector, {\n        composerMode: composerMode,\n        onStartOver: handleStartOver,\n        setEditor: setEditor,\n        statement: editingStatement,\n        currentEditor: editor,\n        suggestions: suggestions,\n        onGiveExampleClick: handleGiveExampleClicked,\n        setCustomTemplateEditorVisible: setCustomTemplateEditorVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), Component && editor && _jsxDEV(SpaceBetween, {\n        direction: \"vertical\",\n        size: \"l\",\n        children: [_jsxDEV(Grid, {\n          gridDefinition: [{\n            colspan: {\n              default: 12,\n              xs: 9\n            }\n          }, {\n            colspan: {\n              default: 12,\n              xs: 3\n            }\n          }],\n          children: [_jsxDEV(\"div\", {\n            children: _jsxDEV(Component, {\n              ref: inputRef,\n              statement: editingStatement,\n              setStatement: setEditingStatement,\n              fieldData: threatFieldData[editor]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), _jsxDEV(Metrics, {\n            statement: editingStatement,\n            onClick: token => setEditor(token)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), composerMode === 'Full' && _jsxDEV(\"div\", {\n          css: styles.metadataContainer,\n          children: _jsxDEV(ControlLookupComponent, {\n            variant: \"container\",\n            linkedControlIds: linkedControlIds,\n            controlList: controlList,\n            onAddControlLink: handleAddControlLink,\n            onRemoveControlLink: id => setLinkedControlIds(prev => prev.filter(p => p !== id))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 39\n        }, this), composerMode === 'Full' && _jsxDEV(\"div\", {\n          css: styles.metadataContainer,\n          children: _jsxDEV(MitigationLinkComponent, {\n            variant: \"container\",\n            linkedMitigationIds: linkedMitigationIds,\n            mitigationList: mitigationList,\n            onAddMitigationLink: handleAddMitigationLink,\n            onRemoveMitigationLink: id => setLinkedMitigationIds(prev => prev.filter(p => p !== id))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 39\n        }, this), composerMode === 'Full' && _jsxDEV(\"div\", {\n          css: styles.metadataContainer,\n          children: _jsxDEV(AssumptionLinkComponent, {\n            variant: \"container\",\n            linkedAssumptionIds: linkedAssumptionIds,\n            assumptionList: assumptionList,\n            onAddAssumptionLink: handleAddAssumptionLink,\n            onRemoveAssumptionLink: id => setLinkedAssumptionIds(prev => prev.filter(p => p !== id))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 39\n        }, this), composerMode === 'Full' && _jsxDEV(\"div\", {\n          css: styles.metadataContainer,\n          children: _jsxDEV(MetadataEditor, {\n            variant: \"container\",\n            editingStatement: editingStatement,\n            onEditMetadata: handleEditMetadata\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 33\n      }, this), _jsxDEV(FullExamples, {\n        ref: fullExamplesRef,\n        onClick: handleExampleClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), customTemplateEditorVisible && _jsxDEV(CustomTemplate, {\n      statement: editingStatement,\n      visible: customTemplateEditorVisible,\n      setVisible: setCustomTemplateEditorVisible,\n      onConfirm: handleCustomTemplateConfirm,\n      defaultTemplate: defaultThreatStatementFormat.template\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n};\n_s(ThreatStatementEditorInner, \"B7usxr701j80IzXEgg+Uar22KkE=\", false, function () {\n  return [useApplicationInfoContext, useThreatsContext, useWorkspacesContext, useAssumptionLinksContext, useMitigationLinksContext, useControlLinksContext, useGlobalSetupContext, useAssumptionsContext, useMitigationsContext, useEditMetadata];\n});\n_c = ThreatStatementEditorInner;\nconst ThreatStatementEditor = () => {\n  _s2();\n  const {\n    editingStatement\n  } = useThreatsContext();\n  return editingStatement ? _jsxDEV(ThreatStatementEditorInner, {\n    editingStatement: editingStatement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 29\n  }, this) : null;\n};\n_s2(ThreatStatementEditor, \"tirhsiOvAcjf4oMvHuxrcR07/TY=\", false, function () {\n  return [useThreatsContext];\n});\n_c2 = ThreatStatementEditor;\nexport default ThreatStatementEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"ThreatStatementEditorInner\");\n$RefreshReg$(_c2, \"ThreatStatementEditor\");","map":{"version":3,"names":["Grid","SpaceBetween","TextContent","awsui","css","React","useCallback","useMemo","useState","useRef","useEffect","v4","uuidV4","DEFAULT_WORKSPACE_LABEL","useAssumptionLinksContext","useAssumptionsContext","useGlobalSetupContext","useMitigationLinksContext","useMitigationsContext","useControlLinksContext","useThreatsContext","useWorkspacesContext","threatFieldData","threatStatementExamples","threatStatementFormat","useEditMetadata","getRecommendedEditor","renderThreatStatement","scrollToTop","AssumptionLinkComponent","Tooltip","MitigationLinkComponent","CustomTemplate","EditorImpactedAssets","EditorImpactedGoal","EditorPrerequisites","EditorThreatAction","EditorThreatImpact","EditorThreatSource","FieldSelector","FinalStatement","FullExamples","Header","MetadataEditor","Metrics","ControlLookupComponent","getControlProfileByName","useApplicationInfoContext","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","finalStatementSection","backgroundColor","colorBackgroundDropdownItemHover","metadataContainer","fontSize","defaultThreatStatementFormat","editorMapping","threat_source","prerequisites","threat_action","threat_impact","impacted_goal","impacted_assets","ThreatStatementEditorInner","editingStatement","_s","applicationInfo","setEditingStatement","saveStatement","addStatement","onThreatListView","inputRef","fullExamplesRef","currentWorkspace","workspaceList","editor","setEditor","suggestions","setSuggestions","displayStatement","setDisplayStatement","customTemplateEditorVisible","setCustomTemplateEditorVisible","addAssumptionLinks","getLinkedAssumptionLinks","removeAssumptionLinks","addMitigationLinks","getLinkedMitigationLinks","removeMitigationLinks","addControlLinks","getLinkedControlLinks","removeControlLinks","prevLinkedAssumptionIds","id","map","la","assumptionId","prevLinkedMitigationIds","lm","mitigationId","prevLinkedControlIds","controlId","linkedAssumptionIds","setLinkedAssumptionIds","numericId","linkedMitigationIds","setLinkedMitigationIds","linkedControlIds","setLinkedControlIds","composerMode","assumptionList","saveAssumption","mitigationList","saveMitigation","selectedCategory","securityCategory","undefined","controlList","Component","handleCancel","_inputRef$current","current","focus","statement","currentSuggestions","displayedStatement","prev","displayedHtml","s","index","type","tooltip","anchor","children","content","fileName","_jsxFileName","lineNumber","columnNumber","handleStartOver","_fullExamplesRef$curr","collapse","handleComplete","length","linkedId","toAddlinkedAssumptionIds","filter","x","includes","toRemovelinkedAssumptionIds","toAddlinkedMitigationIds","toRemovelinkedMitigationIds","toAddlinkedControlIds","toRemovelinkedControlIds","handleExampleClicked","_fullExamplesRef$curr2","tags","metadata","displayOrder","recommendedEditor","handleGiveExampleClicked","len","randomNumber","Math","floor","random","example","saveButtonText","workspace","name","handleCustomTemplateConfirm","template","customTemplate","handleAddAssumptionLink","assumptionIdOrNewAssumption","find","a","newAssumption","handleAddMitigationLink","mitigationIdOrNewMitigation","newMitigation","handleAddControlLink","controlIdOrNewControl","handleEditMetadata","direction","size","onCancel","onStartOver","onComplete","currentEditor","onGiveExampleClick","gridDefinition","colspan","default","xs","ref","setStatement","fieldData","onClick","token","variant","onAddControlLink","onRemoveControlLink","p","onAddMitigationLink","onRemoveMitigationLink","onAddAssumptionLink","onRemoveAssumptionLink","onEditMetadata","visible","setVisible","onConfirm","defaultTemplate","_c","ThreatStatementEditor","_s2","_c2","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/ThreatStatementEditor/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\n/** @jsxImportSource @emotion/react */\nimport Grid from '@cloudscape-design/components/grid';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport * as awsui from '@cloudscape-design/design-tokens';\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo, useState, useRef, useEffect, ReactNode } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\nimport { EditorProps } from './types';\nimport { DEFAULT_WORKSPACE_LABEL } from '../../../configs/constants';\nimport { useAssumptionLinksContext } from '../../../contexts/AssumptionLinksContext/context';\nimport { useAssumptionsContext } from '../../../contexts/AssumptionsContext/context';\nimport { useGlobalSetupContext } from '../../../contexts/GlobalSetupContext/context';\nimport { useMitigationLinksContext } from '../../../contexts/MitigationLinksContext/context';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport { useControlLinksContext } from '../../../contexts/ControlLinksContext/context';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport { useWorkspacesContext } from '../../../contexts/WorkspacesContext/context';\nimport { TemplateThreatStatement, Control } from '../../../customTypes';\nimport { ThreatFieldTypes } from '../../../customTypes/threatFieldTypes';\nimport threatFieldData from '../../../data/threatFieldData';\nimport threatStatementExamples from '../../../data/threatStatementExamples.json';\nimport threatStatementFormat from '../../../data/threatStatementFormat';\nimport useEditMetadata from '../../../hooks/useEditMetadata';\nimport getRecommendedEditor from '../../../utils/getRecommandedEditor';\nimport renderThreatStatement from '../../../utils/renderThreatStatement';\nimport scrollToTop from '../../../utils/scrollToTop';\nimport AssumptionLinkComponent from '../../assumptions/AssumptionLinkView';\nimport Tooltip from '../../generic/Tooltip';\nimport MitigationLinkComponent from '../../mitigations/MitigationLinkView';\nimport CustomTemplate from '../CustomTemplate';\nimport EditorImpactedAssets from '../EditorImpactedAssets';\nimport EditorImpactedGoal from '../EditorImpactedGoal';\nimport EditorPrerequisites from '../EditorPrerequisites';\nimport EditorThreatAction from '../EditorThreatAction';\nimport EditorThreatImpact from '../EditorThreatImpact';\nimport EditorThreatSource from '../EditorThreatSource';\nimport FieldSelector from '../FieldSelector';\nimport FinalStatement from '../FinalStatement';\nimport FullExamples from '../FullExamples';\nimport Header from '../Header';\nimport MetadataEditor from '../MetadataEditor';\nimport Metrics from '../Metrics';\nimport ControlLookupComponent from '../../controls/ControlLookup';\nimport { getControlProfileByName } from '../../../data/controlProfileProvider';\nimport { useApplicationInfoContext } from '../../../contexts';\n\nconst styles = {\n  finalStatementSection: css({\n    '&:hover': {\n      backgroundColor: awsui.colorBackgroundDropdownItemHover,\n    },\n  }),\n  metadataContainer: css({\n    'h3>span>span': {\n      fontSize: '20px',\n    },\n  }),\n};\n\nconst defaultThreatStatementFormat = threatStatementFormat[63];\n\nconst editorMapping: { [key in ThreatFieldTypes]: React.ComponentType<EditorProps & { ref?: React.ForwardedRef<any> }> } = {\n  threat_source: EditorThreatSource,\n  prerequisites: EditorPrerequisites,\n  threat_action: EditorThreatAction,\n  threat_impact: EditorThreatImpact,\n  impacted_goal: EditorImpactedGoal,\n  impacted_assets: EditorImpactedAssets,\n};\n\nconst ThreatStatementEditorInner: FC<{ editingStatement: TemplateThreatStatement }> = ({\n  editingStatement,\n}) => {\n  const { applicationInfo } = useApplicationInfoContext();\n  const { setEditingStatement, saveStatement, addStatement, onThreatListView } = useThreatsContext();\n  const inputRef = useRef<{ focus(): void }>();\n  const fullExamplesRef = useRef<{ collapse(): void }>();\n  const { currentWorkspace, workspaceList } = useWorkspacesContext();\n  const [editor, setEditor] = useState<ThreatFieldTypes | undefined>(getRecommendedEditor(editingStatement));\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [displayStatement, setDisplayStatement] = useState<ReactNode[] | undefined>([]);\n  const [customTemplateEditorVisible, setCustomTemplateEditorVisible] = useState(false);\n\n  const { addAssumptionLinks, getLinkedAssumptionLinks, removeAssumptionLinks } = useAssumptionLinksContext();\n  const { addMitigationLinks, getLinkedMitigationLinks, removeMitigationLinks } = useMitigationLinksContext();\n  const { addControlLinks, getLinkedControlLinks, removeControlLinks } = useControlLinksContext();\n\n  const prevLinkedAssumptionIds = useMemo(() => {\n    return getLinkedAssumptionLinks(editingStatement.id).map(la => la.assumptionId);\n  }, [getLinkedAssumptionLinks, editingStatement]);\n\n  const prevLinkedMitigationIds = useMemo(() => {\n    return getLinkedMitigationLinks(editingStatement.id).map(lm => lm.mitigationId);\n  }, [getLinkedMitigationLinks, editingStatement]);\n\n  const prevLinkedControlIds = useMemo(() => {\n    return getLinkedControlLinks(editingStatement.id).map(lm => lm.controlId);\n  }, [getLinkedControlLinks, editingStatement]);\n\n  const [linkedAssumptionIds, setLinkedAssumptionIds] = useState<string[]>(editingStatement\n    && editingStatement?.numericId === -1 ? [] : prevLinkedAssumptionIds);\n  const [linkedMitigationIds, setLinkedMitigationIds] = useState<string[]>(editingStatement\n    && editingStatement?.numericId === -1 ? [] : prevLinkedMitigationIds);\n  const [linkedControlIds, setLinkedControlIds] = useState<string[]>(editingStatement\n      && editingStatement?.numericId === -1 ? [] : prevLinkedControlIds);\n\n  const { composerMode } = useGlobalSetupContext();\n\n  const { assumptionList, saveAssumption } = useAssumptionsContext();\n  const { mitigationList, saveMitigation } = useMitigationsContext();\n\n  let selectedCategory = (applicationInfo.securityCategory == undefined ? 'CCCS Medium' : applicationInfo.securityCategory);\n  const controlList = useMemo(() => {\n    return getControlProfileByName(selectedCategory) as Control[];\n  }, [selectedCategory]);\n\n  const Component = useMemo(() => {\n    return editor && editorMapping[editor];\n  }, [editor]);\n\n  const handleCancel = useCallback(() => {\n    setEditingStatement(null);\n    onThreatListView?.();\n  }, [setEditingStatement, onThreatListView]);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, [editor]);\n\n  useEffect(() => {\n    if (editingStatement) {\n      const { statement, suggestions: currentSuggestions, displayedStatement } = renderThreatStatement(editingStatement);\n      if (statement !== editingStatement.statement) {\n        setEditingStatement(prev => prev && ({\n          ...prev,\n          statement,\n          displayedStatement,\n        }));\n      }\n      const displayedHtml = displayedStatement?.map((s, index) => typeof s === 'string' ?\n        s : s.type === 'b' ?\n          <Tooltip tooltip={s.tooltip} key={index} anchor={composerMode === 'EditorOnly' ? 'bottom' : 'top'}><b css={styles.finalStatementSection}>{s.content}</b></Tooltip> :\n          s.type === 'span' ?\n            <Tooltip tooltip={s.tooltip} key={index} anchor={composerMode === 'EditorOnly' ? 'bottom' : 'top'}><span css={styles.finalStatementSection}>{s.content}</span></Tooltip> :\n            <>{s.content}</>);\n\n      setDisplayStatement(displayedHtml);\n      setSuggestions(currentSuggestions);\n    } else {\n      setSuggestions([]);\n      setDisplayStatement([]);\n    }\n  }, [editingStatement, composerMode, setEditingStatement]);\n\n  const handleStartOver = useCallback(() => {\n    addStatement();\n    setEditor(undefined);\n    fullExamplesRef.current?.collapse();\n  }, [addStatement]);\n\n  const handleComplete = useCallback(() => {\n    if (editingStatement) {\n      saveStatement(editingStatement);\n      const id = editingStatement.id;\n      if (editingStatement.numericId === -1) {\n        linkedAssumptionIds && linkedAssumptionIds.length > 0 && addAssumptionLinks(linkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat',\n        })));\n        linkedMitigationIds && linkedMitigationIds.length > 0 && addMitigationLinks(linkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id,\n        })));\n        linkedControlIds && linkedControlIds.length > 0 && addControlLinks(linkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id,\n        })));\n      } else {\n        const toAddlinkedAssumptionIds = linkedAssumptionIds.filter(x =>\n          !prevLinkedAssumptionIds.includes(x));\n        const toRemovelinkedAssumptionIds = prevLinkedAssumptionIds.filter(x =>\n          !linkedAssumptionIds.includes(x));\n        toAddlinkedAssumptionIds && toAddlinkedAssumptionIds.length > 0 && addAssumptionLinks(toAddlinkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat',\n        })));\n        toRemovelinkedAssumptionIds && toRemovelinkedAssumptionIds.length > 0 && removeAssumptionLinks(toRemovelinkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat',\n        })));\n        const toAddlinkedMitigationIds = linkedMitigationIds.filter(x =>\n          !prevLinkedMitigationIds.includes(x));\n        const toRemovelinkedMitigationIds = prevLinkedMitigationIds.filter(x =>\n          !linkedMitigationIds.includes(x));\n        toAddlinkedMitigationIds && toAddlinkedMitigationIds.length > 0 && addMitigationLinks(toAddlinkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id,\n        })));\n        toRemovelinkedMitigationIds && toRemovelinkedMitigationIds.length > 0 && removeMitigationLinks(toRemovelinkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id,\n        })));\n        const toAddlinkedControlIds = linkedControlIds.filter(x =>\n          !prevLinkedControlIds.includes(x));\n        const toRemovelinkedControlIds = prevLinkedControlIds.filter(x =>\n          !linkedControlIds.includes(x));\n        toAddlinkedControlIds && toAddlinkedControlIds.length > 0 && addControlLinks(toAddlinkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id,\n        })));\n        toRemovelinkedControlIds && toRemovelinkedControlIds.length > 0 && removeControlLinks(toRemovelinkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id,\n        })));\n      }\n    }\n\n    setEditingStatement(null);\n    onThreatListView?.();\n  }, [saveStatement,\n    editingStatement,\n    linkedAssumptionIds,\n    linkedMitigationIds,\n    linkedControlIds,\n    prevLinkedAssumptionIds,\n    prevLinkedMitigationIds,\n    prevLinkedControlIds,\n    onThreatListView,\n    addAssumptionLinks,\n    addMitigationLinks,\n    addControlLinks,\n    removeAssumptionLinks,\n    removeMitigationLinks,\n    removeControlLinks,\n    setEditingStatement]);\n\n  const handleExampleClicked = useCallback((statement: TemplateThreatStatement) => {\n    setEditingStatement({\n      ...statement,\n      tags: [],\n      metadata: [],\n      displayOrder: -1,\n      numericId: -1,\n      id: uuidV4(),\n    });\n    const recommendedEditor = getRecommendedEditor(statement);\n    recommendedEditor && setEditor(recommendedEditor);\n    fullExamplesRef.current?.collapse();\n  }, [setEditingStatement]);\n\n  const handleGiveExampleClicked = useCallback(() => {\n    const len = threatStatementExamples.length;\n    const randomNumber = Math.floor(Math.random() * len);\n    const example = threatStatementExamples[randomNumber] as TemplateThreatStatement;\n    const statement = {\n      ...example,\n      tags: [],\n      metadata: [],\n      displayOrder: -1,\n      numericId: -1,\n      id: uuidV4(),\n    };\n\n    setEditingStatement(statement);\n    const recommendedEditor = getRecommendedEditor(statement);\n    recommendedEditor && setEditor(recommendedEditor);\n    scrollToTop();\n  }, [setEditingStatement]);\n\n  const saveButtonText = useMemo(() => {\n    if (!currentWorkspace && workspaceList.length === 0) {\n      // For most of use cases, if there is only the default workspace, use list to reduce cognitive load.\n      return editingStatement?.numericId === -1 ? 'Add to list' : 'Save';\n    }\n\n    const workspace = currentWorkspace?.name || DEFAULT_WORKSPACE_LABEL;\n    return editingStatement?.numericId === -1 ? `Add to workspace ${workspace}` : `Save to workspace ${workspace}`;\n\n  }, [currentWorkspace, workspaceList, editingStatement]);\n\n  const handleCustomTemplateConfirm = useCallback((template: string) => {\n    setCustomTemplateEditorVisible(false);\n    if (template !== defaultThreatStatementFormat.template) {\n      setEditingStatement({\n        ...editingStatement,\n        customTemplate: template,\n      } as TemplateThreatStatement);\n    } else {\n      setEditingStatement({\n        ...editingStatement,\n        customTemplate: undefined,\n      } as TemplateThreatStatement);\n    }\n  }, [editingStatement, setEditingStatement]);\n\n  const handleAddAssumptionLink = useCallback((assumptionIdOrNewAssumption: string) => {\n    if (assumptionList.find(a => a.id === assumptionIdOrNewAssumption)) {\n      setLinkedAssumptionIds(prev => [...prev, assumptionIdOrNewAssumption]);\n    } else {\n      const newAssumption = saveAssumption({\n        id: 'new',\n        numericId: -1,\n        content: assumptionIdOrNewAssumption,\n      });\n      setLinkedAssumptionIds(prev => [...prev, newAssumption.id]);\n    }\n\n  }, [setLinkedAssumptionIds, assumptionList, saveAssumption]);\n\n  const handleAddMitigationLink = useCallback((mitigationIdOrNewMitigation: string) => {\n    if (mitigationList.find(a => a.id === mitigationIdOrNewMitigation)) {\n      setLinkedMitigationIds(prev => [...prev, mitigationIdOrNewMitigation]);\n    } else {\n      const newMitigation = saveMitigation({\n        id: 'new',\n        numericId: -1,\n        content: mitigationIdOrNewMitigation,\n      });\n      setLinkedMitigationIds(prev => [...prev, newMitigation.id]);\n    }\n\n  }, [setLinkedMitigationIds, mitigationList, saveMitigation]);\n\n  const handleAddControlLink = useCallback((controlIdOrNewControl: string) => {\n    if (controlList.find(a => a.id === controlIdOrNewControl)) {\n      setLinkedControlIds(prev => [...prev, controlIdOrNewControl]);\n    }\n\n  }, [setLinkedControlIds, controlList]);\n\n  const handleEditMetadata = useEditMetadata(setEditingStatement);\n\n  if (!editingStatement) {\n    return <TextContent>Not threat statement editing in place</TextContent>;\n  }\n\n  return (\n    <>\n      <SpaceBetween direction='vertical' size='l'>\n        {composerMode !== 'EditorOnly' && <Header\n          composerMode={composerMode}\n          statement={editingStatement}\n          saveButtonText={saveButtonText}\n          onCancel={handleCancel}\n          onStartOver={handleStartOver}\n          onComplete={handleComplete} />}\n        <FinalStatement statement={editingStatement} displayStatement={displayStatement} />\n        <FieldSelector\n          composerMode={composerMode}\n          onStartOver={handleStartOver}\n          setEditor={setEditor}\n          statement={editingStatement}\n          currentEditor={editor}\n          suggestions={suggestions}\n          onGiveExampleClick={handleGiveExampleClicked}\n          setCustomTemplateEditorVisible={setCustomTemplateEditorVisible}\n        />\n        {Component && editor && <SpaceBetween direction='vertical' size='l'>\n          <Grid\n            gridDefinition={[{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }]}\n          >\n            <div>\n              <Component\n                ref={inputRef}\n                statement={editingStatement}\n                setStatement={setEditingStatement}\n                fieldData={threatFieldData[editor]}\n              />\n            </div>\n            <Metrics statement={editingStatement} onClick={(token) => setEditor(token as ThreatFieldTypes)} />\n          </Grid>\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <ControlLookupComponent\n              variant='container'\n              linkedControlIds={linkedControlIds}\n              controlList={controlList}\n              onAddControlLink={handleAddControlLink}\n              onRemoveControlLink={(id) => setLinkedControlIds(prev => prev.filter(p => p !== id))}\n            />\n          </div>}\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <MitigationLinkComponent\n              variant='container'\n              linkedMitigationIds={linkedMitigationIds}\n              mitigationList={mitigationList}\n              onAddMitigationLink={handleAddMitigationLink}\n              onRemoveMitigationLink={(id) => setLinkedMitigationIds(prev => prev.filter(p => p !== id))}\n            />\n          </div>}\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <AssumptionLinkComponent\n              variant='container'\n              linkedAssumptionIds={linkedAssumptionIds}\n              assumptionList={assumptionList}\n              onAddAssumptionLink={handleAddAssumptionLink}\n              onRemoveAssumptionLink={(id) => setLinkedAssumptionIds(prev => prev.filter(p => p !== id))}\n            />\n          </div>}\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <MetadataEditor\n              variant='container'\n              editingStatement={editingStatement}\n              onEditMetadata={handleEditMetadata}\n            />\n          </div>}\n        </SpaceBetween>}\n        <FullExamples ref={fullExamplesRef} onClick={handleExampleClicked} />\n      </SpaceBetween>\n      {customTemplateEditorVisible && <CustomTemplate\n        statement={editingStatement}\n        visible={customTemplateEditorVisible}\n        setVisible={setCustomTemplateEditorVisible}\n        onConfirm={handleCustomTemplateConfirm}\n        defaultTemplate={defaultThreatStatementFormat.template}\n      />}\n    </>);\n};\n\nconst ThreatStatementEditor: FC = () => {\n  const { editingStatement } = useThreatsContext();\n\n  return editingStatement ? <ThreatStatementEditorInner editingStatement={editingStatement} /> : null;\n};\n\nexport default ThreatStatementEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}