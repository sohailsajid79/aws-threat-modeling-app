{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useMemo } from \"react\";\n/**\n * useMergeRefs merges multiple refs into a single ref callback.\n *\n * For example:\n *  const mergedRef = useMergeRefs(ref1, ref2, ref3)\n *  <div ref={refs}>...</div>\n */\nexport function useMergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return useMemo(() => {\n    if (refs.every(ref => ref === null || ref === undefined)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === \"function\") {\n          ref(value);\n        } else if (ref !== null && ref !== undefined) {\n          ref.current = value;\n        }\n      });\n    };\n    // ESLint expects an array literal which we can not provide here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","map":{"version":3,"names":["useMemo","useMergeRefs","_len","arguments","length","refs","Array","_key","every","ref","undefined","value","forEach","current"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/utils/use-merge-refs.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MutableRefObject, RefCallback, useMemo } from \"react\";\n\n/**\n * useMergeRefs merges multiple refs into a single ref callback.\n *\n * For example:\n *  const mergedRef = useMergeRefs(ref1, ref2, ref3)\n *  <div ref={refs}>...</div>\n */\nexport function useMergeRefs(...refs: Array<RefCallback<any> | MutableRefObject<any> | null | undefined>) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref === null || ref === undefined)) {\n      return null;\n    }\n    return (value: any) => {\n      refs.forEach((ref) => {\n        if (typeof ref === \"function\") {\n          ref(value);\n        } else if (ref !== null && ref !== undefined) {\n          (ref as MutableRefObject<any>).current = value;\n        }\n      });\n    };\n    // ESLint expects an array literal which we can not provide here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n"],"mappings":"AAAA;AACA;AACA,SAAwCA,OAAO,QAAQ,OAAO;AAE9D;;;;;;;AAOA,OAAM,SAAUC,YAAYA,CAAA,EAA4E;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAxEC,IAAwE,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAxEF,IAAwE,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACtG,OAAOP,OAAO,CAAC,MAAK;IAClB,IAAIK,IAAI,CAACG,KAAK,CAAEC,GAAG,IAAKA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,CAAC,EAAE;MAC1D,OAAO,IAAI;;IAEb,OAAQC,KAAU,IAAI;MACpBN,IAAI,CAACO,OAAO,CAAEH,GAAG,IAAI;QACnB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;UAC7BA,GAAG,CAACE,KAAK,CAAC;SACX,MAAM,IAAIF,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,EAAE;UAC3CD,GAA6B,CAACI,OAAO,GAAGF,KAAK;;MAElD,CAAC,CAAC;IACJ,CAAC;IACD;IACA;EACF,CAAC,EAAEN,IAAI,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}