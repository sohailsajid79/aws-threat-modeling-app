{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { convertAutoComplete } from '../input/utils';\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { fireKeyboardEvent, fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport styles from './styles.css.js';\nconst Textarea = React.forwardRef((_a, ref) => {\n  var {\n      value,\n      autoComplete = true,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      disableBrowserSpellcheck,\n      spellcheck,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      rows,\n      placeholder,\n      autoFocus,\n      ariaLabel\n    } = _a,\n    rest = __rest(_a, [\"value\", \"autoComplete\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"disableBrowserSpellcheck\", \"spellcheck\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"rows\", \"placeholder\", \"autoFocus\", \"ariaLabel\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('Textarea', {\n    props: {\n      autoComplete,\n      autoFocus,\n      disableBrowserAutocorrect,\n      disableBrowserSpellcheck,\n      readOnly,\n      spellcheck\n    }\n  });\n  const {\n    ariaLabelledby,\n    ariaDescribedby,\n    controlId,\n    invalid,\n    warning\n  } = useFormFieldContext(rest);\n  const baseProps = getBaseProps(rest);\n  const textareaRef = useRef(null);\n  useForwardFocus(ref, textareaRef);\n  const attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-required': ariaRequired ? 'true' : undefined,\n    'aria-invalid': invalid ? 'true' : undefined,\n    name,\n    placeholder,\n    autoFocus,\n    className: clsx(styles.textarea, {\n      [styles['textarea-readonly']]: readOnly,\n      [styles['textarea-invalid']]: invalid,\n      [styles['textarea-warning']]: warning && !invalid\n    }),\n    autoComplete: convertAutoComplete(autoComplete),\n    spellCheck: spellcheck,\n    disabled,\n    readOnly: readOnly ? true : undefined,\n    rows: rows || 3,\n    onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n    onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n    // We set a default value on the component in order to force it into the controlled mode.\n    value: value || '',\n    onChange: onChange && (event => fireNonCancelableEvent(onChange, {\n      value: event.target.value\n    })),\n    onBlur: onBlur && (() => fireNonCancelableEvent(onBlur)),\n    onFocus: onFocus && (() => fireNonCancelableEvent(onFocus))\n  };\n  if (disableBrowserAutocorrect) {\n    attributes.autoCorrect = 'off';\n    attributes.autoCapitalize = 'off';\n  }\n  if (disableBrowserSpellcheck) {\n    attributes.spellCheck = 'false';\n  }\n  return React.createElement(\"span\", Object.assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    ref: __internalRootRef\n  }), React.createElement(\"textarea\", Object.assign({\n    ref: textareaRef,\n    id: controlId\n  }, attributes)));\n});\napplyDisplayName(Textarea, 'Textarea');\nexport default Textarea;","map":{"version":3,"names":["React","useRef","clsx","convertAutoComplete","getBaseProps","useFormFieldContext","fireKeyboardEvent","fireNonCancelableEvent","useForwardFocus","useBaseComponent","applyDisplayName","styles","Textarea","forwardRef","_a","ref","value","autoComplete","disabled","readOnly","disableBrowserAutocorrect","disableBrowserSpellcheck","spellcheck","onKeyDown","onKeyUp","onChange","onBlur","onFocus","ariaRequired","name","rows","placeholder","autoFocus","ariaLabel","rest","__rest","__internalRootRef","props","ariaLabelledby","ariaDescribedby","controlId","invalid","warning","baseProps","textareaRef","attributes","undefined","className","textarea","spellCheck","event","target","autoCorrect","autoCapitalize","createElement","Object","assign","root","id"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/textarea/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { convertAutoComplete } from '../input/utils';\nimport { getBaseProps } from '../internal/base-component';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { fireKeyboardEvent, fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { TextareaProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport { TextareaProps };\n\nconst Textarea = React.forwardRef(\n  (\n    {\n      value,\n      autoComplete = true,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      disableBrowserSpellcheck,\n      spellcheck,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      rows,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ...rest\n    }: TextareaProps,\n    ref: Ref<TextareaProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('Textarea', {\n      props: { autoComplete, autoFocus, disableBrowserAutocorrect, disableBrowserSpellcheck, readOnly, spellcheck },\n    });\n    const { ariaLabelledby, ariaDescribedby, controlId, invalid, warning } = useFormFieldContext(rest);\n\n    const baseProps = getBaseProps(rest);\n\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n    useForwardFocus(ref, textareaRef);\n\n    const attributes: React.TextareaHTMLAttributes<HTMLTextAreaElement> = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      'aria-describedby': ariaDescribedby,\n      'aria-required': ariaRequired ? 'true' : undefined,\n      'aria-invalid': invalid ? 'true' : undefined,\n      name,\n      placeholder,\n      autoFocus,\n      className: clsx(styles.textarea, {\n        [styles['textarea-readonly']]: readOnly,\n        [styles['textarea-invalid']]: invalid,\n        [styles['textarea-warning']]: warning && !invalid,\n      }),\n      autoComplete: convertAutoComplete(autoComplete),\n      spellCheck: spellcheck,\n      disabled,\n      readOnly: readOnly ? true : undefined,\n      rows: rows || 3,\n      onKeyDown: onKeyDown && (event => fireKeyboardEvent(onKeyDown, event)),\n      onKeyUp: onKeyUp && (event => fireKeyboardEvent(onKeyUp, event)),\n      // We set a default value on the component in order to force it into the controlled mode.\n      value: value || '',\n      onChange: onChange && (event => fireNonCancelableEvent(onChange, { value: event.target.value })),\n      onBlur: onBlur && (() => fireNonCancelableEvent(onBlur)),\n      onFocus: onFocus && (() => fireNonCancelableEvent(onFocus)),\n    };\n\n    if (disableBrowserAutocorrect) {\n      attributes.autoCorrect = 'off';\n      attributes.autoCapitalize = 'off';\n    }\n\n    if (disableBrowserSpellcheck) {\n      attributes.spellCheck = 'false';\n    }\n\n    return (\n      <span {...baseProps} className={clsx(styles.root, baseProps.className)} ref={__internalRootRef}>\n        <textarea ref={textareaRef} id={controlId} {...attributes} />\n      </span>\n    );\n  }\n);\n\napplyDisplayName(Textarea, 'Textarea');\nexport default Textarea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}