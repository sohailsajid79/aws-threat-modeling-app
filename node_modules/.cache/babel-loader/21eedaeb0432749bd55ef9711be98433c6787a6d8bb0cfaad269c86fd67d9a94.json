{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport { highContrastHeaderClassName } from '../../internal/utils/content-header-utils';\nimport { useAppLayoutInternals } from './context';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nexport default function Notifications() {\n  const {\n    notifications\n  } = useAppLayoutInternals();\n  if (!notifications) {\n    return null;\n  }\n  return React.createElement(NotificationsImplementation, null);\n}\nfunction NotificationsImplementation() {\n  var _a;\n  const {\n    ariaLabels,\n    hasDrawerViewportOverlay,\n    notifications,\n    setNotificationsHeight,\n    stickyNotifications,\n    headerVariant,\n    hasNotificationsContent\n  } = useAppLayoutInternals();\n  const ref = useRef(null);\n  useResizeObserver(ref, entry => setNotificationsHeight(entry.contentBoxHeight));\n  useEffect(() => {\n    return () => {\n      setNotificationsHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  /**\n   * The notificationsElement ref is assigned to an inner div to prevent internal bottom margin\n   * from affecting the calculated height, which is used for sticky elements below.\n   */\n  return React.createElement(\"div\", {\n    role: \"region\",\n    \"aria-label\": (_a = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.notifications) !== null && _a !== void 0 ? _a : undefined,\n    className: clsx(styles.notifications, {\n      [styles['sticky-notifications']]: stickyNotifications,\n      [styles['has-notification-content']]: hasNotificationsContent,\n      [styles.unfocusable]: hasDrawerViewportOverlay,\n      [highContrastHeaderClassName]: headerVariant === 'high-contrast',\n      [styles['high-contrast']]: headerVariant === 'high-contrast'\n    }, testutilStyles.notifications)\n  }, React.createElement(\"div\", {\n    ref: ref\n  }, notifications));\n}","map":{"version":3,"names":["React","useEffect","useRef","clsx","useResizeObserver","highContrastHeaderClassName","useAppLayoutInternals","testutilStyles","styles","Notifications","notifications","createElement","NotificationsImplementation","ariaLabels","hasDrawerViewportOverlay","setNotificationsHeight","stickyNotifications","headerVariant","hasNotificationsContent","ref","entry","contentBoxHeight","role","_a","undefined","className","unfocusable"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/visual-refresh/notifications.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { highContrastHeaderClassName } from '../../internal/utils/content-header-utils';\nimport { useAppLayoutInternals } from './context';\n\nimport testutilStyles from '../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nexport default function Notifications() {\n  const { notifications } = useAppLayoutInternals();\n  if (!notifications) {\n    return null;\n  }\n  return <NotificationsImplementation />;\n}\n\nfunction NotificationsImplementation() {\n  const {\n    ariaLabels,\n    hasDrawerViewportOverlay,\n    notifications,\n    setNotificationsHeight,\n    stickyNotifications,\n    headerVariant,\n    hasNotificationsContent,\n  } = useAppLayoutInternals();\n  const ref = useRef<HTMLDivElement>(null);\n\n  useResizeObserver(ref, entry => setNotificationsHeight(entry.contentBoxHeight));\n  useEffect(() => {\n    return () => {\n      setNotificationsHeight(0);\n    };\n    // unmount effect only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * The notificationsElement ref is assigned to an inner div to prevent internal bottom margin\n   * from affecting the calculated height, which is used for sticky elements below.\n   */\n  return (\n    <div\n      role=\"region\"\n      aria-label={ariaLabels?.notifications ?? undefined}\n      className={clsx(\n        styles.notifications,\n        {\n          [styles['sticky-notifications']]: stickyNotifications,\n          [styles['has-notification-content']]: hasNotificationsContent,\n          [styles.unfocusable]: hasDrawerViewportOverlay,\n          [highContrastHeaderClassName]: headerVariant === 'high-contrast',\n          [styles['high-contrast']]: headerVariant === 'high-contrast',\n        },\n        testutilStyles.notifications\n      )}\n    >\n      <div ref={ref}>{notifications}</div>\n    </div>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,iBAAiB,QAAQ,+CAA+C;AAEjF,SAASC,2BAA2B,QAAQ,2CAA2C;AACvF,SAASC,qBAAqB,QAAQ,WAAW;AAEjD,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,eAAc,SAAUC,aAAaA,CAAA;EACnC,MAAM;IAAEC;EAAa,CAAE,GAAGJ,qBAAqB,EAAE;EACjD,IAAI,CAACI,aAAa,EAAE;IAClB,OAAO,IAAI;;EAEb,OAAOV,KAAA,CAAAW,aAAA,CAACC,2BAA2B,OAAG;AACxC;AAEA,SAASA,2BAA2BA,CAAA;;EAClC,MAAM;IACJC,UAAU;IACVC,wBAAwB;IACxBJ,aAAa;IACbK,sBAAsB;IACtBC,mBAAmB;IACnBC,aAAa;IACbC;EAAuB,CACxB,GAAGZ,qBAAqB,EAAE;EAC3B,MAAMa,GAAG,GAAGjB,MAAM,CAAiB,IAAI,CAAC;EAExCE,iBAAiB,CAACe,GAAG,EAAEC,KAAK,IAAIL,sBAAsB,CAACK,KAAK,CAACC,gBAAgB,CAAC,CAAC;EAC/EpB,SAAS,CAAC,MAAK;IACb,OAAO,MAAK;MACVc,sBAAsB,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN;;;;EAIA,OACEf,KAAA,CAAAW,aAAA;IACEW,IAAI,EAAC,QAAQ;IAAA,cACD,CAAAC,EAAA,GAAAV,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEH,aAAa,cAAAa,EAAA,cAAAA,EAAA,GAAIC,SAAS;IAClDC,SAAS,EAAEtB,IAAI,CACbK,MAAM,CAACE,aAAa,EACpB;MACE,CAACF,MAAM,CAAC,sBAAsB,CAAC,GAAGQ,mBAAmB;MACrD,CAACR,MAAM,CAAC,0BAA0B,CAAC,GAAGU,uBAAuB;MAC7D,CAACV,MAAM,CAACkB,WAAW,GAAGZ,wBAAwB;MAC9C,CAACT,2BAA2B,GAAGY,aAAa,KAAK,eAAe;MAChE,CAACT,MAAM,CAAC,eAAe,CAAC,GAAGS,aAAa,KAAK;KAC9C,EACDV,cAAc,CAACG,aAAa;EAC7B,GAEDV,KAAA,CAAAW,aAAA;IAAKQ,GAAG,EAAEA;EAAG,GAAGT,aAAa,CAAO,CAChC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}