{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef } from 'react';\n/**\n * A callback that stays stable between renders even as the dependencies change.\n * Not a recommended React pattern, so it should be used sparingly and only if\n * the callback is used asynchronously (i.e. not used during rendering) and causing\n * clear performance issues.\n *\n * @remarks\n *\n * The implementation ensures the callback cannot be called synchronously. All synchronous calls\n * (during rendering) are ignored.\n *\n * @example\n * Use stable onMouseMove handler\n * ```\n * function Demo({ args }) {\n *   const stableOnMouseMove = useStableCallback((event) => makeAction(event, args))\n *   return <Container onMouseMove={stableOnMouseMove} />\n * }\n * ```\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n *\n * @typeParam Callback The callback to be made stable\n * @returns Stable callback\n */\nexport function useStableCallback(fn) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = fn;\n  });\n  return useCallback((...args) => {\n    var _a;\n    return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(undefined, args);\n  }, []);\n}","map":{"version":3,"names":["useCallback","useEffect","useRef","useStableCallback","fn","ref","current","args","_a","apply","undefined"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@cloudscape-design/component-toolkit/internal/stable-callback/index.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef } from 'react';\n/**\n * A callback that stays stable between renders even as the dependencies change.\n * Not a recommended React pattern, so it should be used sparingly and only if\n * the callback is used asynchronously (i.e. not used during rendering) and causing\n * clear performance issues.\n *\n * @remarks\n *\n * The implementation ensures the callback cannot be called synchronously. All synchronous calls\n * (during rendering) are ignored.\n *\n * @example\n * Use stable onMouseMove handler\n * ```\n * function Demo({ args }) {\n *   const stableOnMouseMove = useStableCallback((event) => makeAction(event, args))\n *   return <Container onMouseMove={stableOnMouseMove} />\n * }\n * ```\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n *\n * @typeParam Callback The callback to be made stable\n * @returns Stable callback\n */\nexport function useStableCallback(fn) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = fn;\n    });\n    return useCallback((...args) => { var _a; return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(undefined, args); }, []);\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,EAAE,EAAE;EAClC,MAAMC,GAAG,GAAGH,MAAM,CAAC,CAAC;EACpBD,SAAS,CAAC,MAAM;IACZI,GAAG,CAACC,OAAO,GAAGF,EAAE;EACpB,CAAC,CAAC;EACF,OAAOJ,WAAW,CAAC,CAAC,GAAGO,IAAI,KAAK;IAAE,IAAIC,EAAE;IAAE,OAAO,CAACA,EAAE,GAAGH,GAAG,CAACC,OAAO,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,KAAK,CAACC,SAAS,EAAEH,IAAI,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC;AAC9I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}