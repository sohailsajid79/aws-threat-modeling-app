{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar _AlertFlashContentController_listeners, _AlertFlashContentController_cleanups, _AlertFlashContentController_provider, _AlertFlashContentController_scheduleUpdate;\nimport { __classPrivateFieldGet, __classPrivateFieldSet } from \"tslib\";\nimport debounce from '../../debounce';\nexport class AlertFlashContentController {\n  constructor() {\n    _AlertFlashContentController_listeners.set(this, []);\n    _AlertFlashContentController_cleanups.set(this, new Map());\n    _AlertFlashContentController_provider.set(this, void 0);\n    _AlertFlashContentController_scheduleUpdate.set(this, debounce(() => __classPrivateFieldGet(this, _AlertFlashContentController_listeners, \"f\").forEach(listener => {\n      if (__classPrivateFieldGet(this, _AlertFlashContentController_provider, \"f\")) {\n        const cleanup = listener(__classPrivateFieldGet(this, _AlertFlashContentController_provider, \"f\"));\n        __classPrivateFieldGet(this, _AlertFlashContentController_cleanups, \"f\").set(listener, cleanup);\n      }\n    }), 0));\n    this.registerContentReplacer = content => {\n      if (__classPrivateFieldGet(this, _AlertFlashContentController_provider, \"f\")) {\n        console.warn(`Cannot call \\`registerContentReplacer\\` with new provider: provider with id \"${__classPrivateFieldGet(this, _AlertFlashContentController_provider, \"f\").id}\" already registered.`);\n        return;\n      }\n      __classPrivateFieldSet(this, _AlertFlashContentController_provider, content, \"f\");\n      // Notify existing components if registration happens after the components are rendered.\n      __classPrivateFieldGet(this, _AlertFlashContentController_scheduleUpdate, \"f\").call(this);\n    };\n    this.clearRegisteredReplacer = () => {\n      __classPrivateFieldSet(this, _AlertFlashContentController_provider, undefined, \"f\");\n    };\n    this.onContentRegistered = listener => {\n      if (__classPrivateFieldGet(this, _AlertFlashContentController_provider, \"f\")) {\n        const cleanup = listener(__classPrivateFieldGet(this, _AlertFlashContentController_provider, \"f\"));\n        __classPrivateFieldGet(this, _AlertFlashContentController_listeners, \"f\").push(listener);\n        __classPrivateFieldGet(this, _AlertFlashContentController_cleanups, \"f\").set(listener, cleanup);\n      } else {\n        __classPrivateFieldGet(this, _AlertFlashContentController_listeners, \"f\").push(listener);\n      }\n      return () => {\n        var _a;\n        (_a = __classPrivateFieldGet(this, _AlertFlashContentController_cleanups, \"f\").get(listener)) === null || _a === void 0 ? void 0 : _a();\n        __classPrivateFieldSet(this, _AlertFlashContentController_listeners, __classPrivateFieldGet(this, _AlertFlashContentController_listeners, \"f\").filter(item => item !== listener), \"f\");\n        __classPrivateFieldGet(this, _AlertFlashContentController_cleanups, \"f\").delete(listener);\n      };\n    };\n  }\n  installPublic(api = {}) {\n    var _a;\n    (_a = api.registerContentReplacer) !== null && _a !== void 0 ? _a : api.registerContentReplacer = this.registerContentReplacer;\n    return api;\n  }\n  installInternal(internalApi = {}) {\n    var _a, _b;\n    (_a = internalApi.clearRegisteredReplacer) !== null && _a !== void 0 ? _a : internalApi.clearRegisteredReplacer = this.clearRegisteredReplacer;\n    (_b = internalApi.onContentRegistered) !== null && _b !== void 0 ? _b : internalApi.onContentRegistered = this.onContentRegistered;\n    return internalApi;\n  }\n}\n_AlertFlashContentController_listeners = new WeakMap(), _AlertFlashContentController_cleanups = new WeakMap(), _AlertFlashContentController_provider = new WeakMap(), _AlertFlashContentController_scheduleUpdate = new WeakMap();","map":{"version":3,"names":["debounce","AlertFlashContentController","constructor","_AlertFlashContentController_listeners","set","_AlertFlashContentController_cleanups","Map","_AlertFlashContentController_provider","_AlertFlashContentController_scheduleUpdate","__classPrivateFieldGet","forEach","listener","cleanup","registerContentReplacer","content","console","warn","id","__classPrivateFieldSet","call","clearRegisteredReplacer","undefined","onContentRegistered","push","_a","get","filter","item","delete","installPublic","api","installInternal","internalApi","_b"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/plugins/controllers/alert-flash-content.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport debounce from '../../debounce';\n\n// this code should not depend on React typings, because it is portable between major versions\ninterface RefShim<T> {\n  current: T | null;\n}\n\nexport interface AlertFlashContentContext {\n  type: string;\n  headerRef: RefShim<HTMLElement>;\n  contentRef: RefShim<HTMLElement>;\n}\n\nexport type ReplacementType = 'original' | 'remove' | 'replaced';\n\nexport interface ReplacementApi {\n  hideHeader(): void;\n  restoreHeader(): void;\n  replaceHeader(replacer: (container: HTMLElement) => void): void;\n  hideContent(): void;\n  restoreContent(): void;\n  replaceContent(replacer: (container: HTMLElement) => void): void;\n}\n\nexport interface AlertFlashContentResult {\n  update: () => void;\n  unmount: (containers: { replacementHeaderContainer: HTMLElement; replacementContentContainer: HTMLElement }) => void;\n}\n\nexport interface AlertFlashContentConfig {\n  id: string;\n  runReplacer: (context: AlertFlashContentContext, replacementApi: ReplacementApi) => AlertFlashContentResult;\n}\n\nexport type AlertFlashContentRegistrationListener = (provider: AlertFlashContentConfig) => () => void;\n\nexport interface AlertFlashContentApiPublic {\n  registerContentReplacer(config: AlertFlashContentConfig): void;\n}\n\nexport interface AlertFlashContentApiInternal {\n  clearRegisteredReplacer(): void;\n  onContentRegistered(listener: AlertFlashContentRegistrationListener): () => void;\n}\n\nexport class AlertFlashContentController {\n  #listeners: Array<AlertFlashContentRegistrationListener> = [];\n  #cleanups = new Map<AlertFlashContentRegistrationListener, () => void>();\n  #provider?: AlertFlashContentConfig;\n\n  #scheduleUpdate = debounce(\n    () =>\n      this.#listeners.forEach(listener => {\n        if (this.#provider) {\n          const cleanup = listener(this.#provider);\n          this.#cleanups.set(listener, cleanup);\n        }\n      }),\n    0\n  );\n\n  registerContentReplacer = (content: AlertFlashContentConfig) => {\n    if (this.#provider) {\n      console.warn(\n        `Cannot call \\`registerContentReplacer\\` with new provider: provider with id \"${this.#provider.id}\" already registered.`\n      );\n      return;\n    }\n    this.#provider = content;\n\n    // Notify existing components if registration happens after the components are rendered.\n    this.#scheduleUpdate();\n  };\n\n  clearRegisteredReplacer = () => {\n    this.#provider = undefined;\n  };\n\n  onContentRegistered = (listener: AlertFlashContentRegistrationListener) => {\n    if (this.#provider) {\n      const cleanup = listener(this.#provider);\n      this.#listeners.push(listener);\n      this.#cleanups.set(listener, cleanup);\n    } else {\n      this.#listeners.push(listener);\n    }\n    return () => {\n      this.#cleanups.get(listener)?.();\n      this.#listeners = this.#listeners.filter(item => item !== listener);\n      this.#cleanups.delete(listener);\n    };\n  };\n\n  installPublic(api: Partial<AlertFlashContentApiPublic> = {}): AlertFlashContentApiPublic {\n    api.registerContentReplacer ??= this.registerContentReplacer;\n    return api as AlertFlashContentApiPublic;\n  }\n\n  installInternal(internalApi: Partial<AlertFlashContentApiInternal> = {}): AlertFlashContentApiInternal {\n    internalApi.clearRegisteredReplacer ??= this.clearRegisteredReplacer;\n    internalApi.onContentRegistered ??= this.onContentRegistered;\n    return internalApi as AlertFlashContentApiInternal;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}