{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component/index.js';\nimport { fireCancelableEvent, fireNonCancelableEvent, isPlainLeftClick } from '../internal/events/index';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport useScrollSpy from './use-scroll-spy.js';\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\nexport default function InternalAnchorNavigation(_a) {\n  var {\n      anchors,\n      ariaLabelledby,\n      onFollow,\n      onActiveHrefChange,\n      activeHref = '',\n      __internalRootRef = null,\n      scrollSpyOffset = 0\n    } = _a,\n    props = __rest(_a, [\"anchors\", \"ariaLabelledby\", \"onFollow\", \"onActiveHrefChange\", \"activeHref\", \"__internalRootRef\", \"scrollSpyOffset\"]);\n  const baseProps = getBaseProps(props);\n  const hrefs = useMemo(() => anchors.map(anchor => anchor.href), [anchors]);\n  const onFollowHandler = useCallback((anchor, sourceEvent) => {\n    fireCancelableEvent(onFollow, anchor, sourceEvent);\n  }, [onFollow]);\n  const currentActiveHref = useScrollSpy({\n    hrefs,\n    scrollSpyOffset,\n    activeHref\n  });\n  useEffect(() => {\n    if (currentActiveHref) {\n      const newActiveAnchor = anchors.find(anchor => anchor.href === currentActiveHref);\n      fireNonCancelableEvent(onActiveHrefChange, newActiveAnchor);\n    }\n  }, [onActiveHrefChange, anchors, currentActiveHref]);\n  return React.createElement(\"nav\", Object.assign({}, baseProps, {\n    ref: __internalRootRef,\n    \"aria-labelledby\": ariaLabelledby,\n    className: clsx(baseProps.className, styles.root, testUtilsStyles.root)\n  }), React.createElement(\"ol\", {\n    className: clsx(styles['anchor-list'], testUtilsStyles['anchor-list'])\n  }, anchors.map((anchor, index) => {\n    return React.createElement(Anchor, {\n      onFollow: onFollowHandler,\n      isActive: anchor.href === currentActiveHref,\n      key: index,\n      index: index,\n      anchor: anchor\n    });\n  })));\n}\nconst Anchor = _ref => {\n  let {\n    anchor,\n    onFollow,\n    isActive,\n    index\n  } = _ref;\n  checkSafeUrl('AnchorNavigation', anchor.href);\n  const onClick = useCallback(event => {\n    if (isPlainLeftClick(event)) {\n      onFollow(anchor, event);\n    }\n  }, [onFollow, anchor]);\n  const activeItemClasses = clsx(styles['anchor-item--active'], testUtilsStyles['anchor-item--active']);\n  return React.createElement(\"li\", {\n    \"data-itemid\": `anchor-item-${index + 1}`,\n    className: clsx(styles['anchor-item'], isActive && activeItemClasses)\n  }, React.createElement(\"a\", Object.assign({\n    onClick: onClick,\n    className: clsx(styles['anchor-link'], testUtilsStyles['anchor-link'], isActive && styles['anchor-link--active'])\n  }, isActive ? {\n    'aria-current': true\n  } : {}, {\n    href: anchor.href\n  }), React.createElement(\"span\", {\n    className: clsx(styles['anchor-link-text'], testUtilsStyles['anchor-link-text']),\n    style: {\n      paddingInlineStart: `${anchor.level * 16 + 2}px`\n    }\n  }, anchor.text), anchor.info && React.createElement(\"span\", {\n    className: clsx(styles['anchor-link-info'], testUtilsStyles['anchor-link-info'])\n  }, anchor.info)));\n};","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","clsx","getBaseProps","fireCancelableEvent","fireNonCancelableEvent","isPlainLeftClick","checkSafeUrl","useScrollSpy","styles","testUtilsStyles","InternalAnchorNavigation","_a","anchors","ariaLabelledby","onFollow","onActiveHrefChange","activeHref","__internalRootRef","scrollSpyOffset","props","__rest","baseProps","hrefs","map","anchor","href","onFollowHandler","sourceEvent","currentActiveHref","newActiveAnchor","find","createElement","Object","assign","ref","className","root","index","Anchor","isActive","key","_ref","onClick","event","activeItemClasses","style","paddingInlineStart","level","text","info"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/anchor-navigation/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component/index.js';\nimport { fireCancelableEvent, fireNonCancelableEvent, isPlainLeftClick } from '../internal/events/index';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component/index.js';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { AnchorNavigationProps } from './interfaces';\nimport useScrollSpy from './use-scroll-spy.js';\n\nimport styles from './styles.css.js';\nimport testUtilsStyles from './test-classes/styles.css.js';\n\nexport default function InternalAnchorNavigation({\n  anchors,\n  ariaLabelledby,\n  onFollow,\n  onActiveHrefChange,\n  activeHref = '',\n  __internalRootRef = null,\n  scrollSpyOffset = 0,\n  ...props\n}: AnchorNavigationProps & InternalBaseComponentProps) {\n  const baseProps = getBaseProps(props);\n\n  const hrefs = useMemo(() => anchors.map(anchor => anchor.href), [anchors]);\n\n  const onFollowHandler = useCallback(\n    (anchor: AnchorNavigationProps.Anchor, sourceEvent: React.SyntheticEvent | Event) => {\n      fireCancelableEvent(onFollow, anchor, sourceEvent);\n    },\n    [onFollow]\n  );\n\n  const currentActiveHref = useScrollSpy({\n    hrefs,\n    scrollSpyOffset,\n    activeHref,\n  });\n\n  useEffect(() => {\n    if (currentActiveHref) {\n      const newActiveAnchor = anchors.find(anchor => anchor.href === currentActiveHref);\n      fireNonCancelableEvent(onActiveHrefChange, newActiveAnchor);\n    }\n  }, [onActiveHrefChange, anchors, currentActiveHref]);\n\n  return (\n    <nav\n      {...baseProps}\n      ref={__internalRootRef}\n      aria-labelledby={ariaLabelledby}\n      className={clsx(baseProps.className, styles.root, testUtilsStyles.root)}\n    >\n      <ol className={clsx(styles['anchor-list'], testUtilsStyles['anchor-list'])}>\n        {anchors.map((anchor, index) => {\n          return (\n            <Anchor\n              onFollow={onFollowHandler}\n              isActive={anchor.href === currentActiveHref}\n              key={index}\n              index={index}\n              anchor={anchor}\n            />\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\ninterface AnchorProps {\n  anchor: AnchorNavigationProps.Anchor;\n  onFollow: (anchor: AnchorNavigationProps.Anchor, event: React.SyntheticEvent | Event) => void;\n  isActive: boolean;\n  index: number;\n}\n\nconst Anchor = ({ anchor, onFollow, isActive, index }: AnchorProps) => {\n  checkSafeUrl('AnchorNavigation', anchor.href);\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      if (isPlainLeftClick(event)) {\n        onFollow(anchor, event);\n      }\n    },\n    [onFollow, anchor]\n  );\n\n  const activeItemClasses = clsx(styles['anchor-item--active'], testUtilsStyles['anchor-item--active']);\n\n  return (\n    <li data-itemid={`anchor-item-${index + 1}`} className={clsx(styles['anchor-item'], isActive && activeItemClasses)}>\n      <a\n        onClick={onClick}\n        className={clsx(\n          styles['anchor-link'],\n          testUtilsStyles['anchor-link'],\n          isActive && styles['anchor-link--active']\n        )}\n        {...(isActive ? { 'aria-current': true } : {})}\n        href={anchor.href}\n      >\n        <span\n          className={clsx(styles['anchor-link-text'], testUtilsStyles['anchor-link-text'])}\n          style={{ paddingInlineStart: `${anchor.level * 16 + 2}px` }}\n        >\n          {anchor.text}\n        </span>\n        {anchor.info && (\n          <span className={clsx(styles['anchor-link-info'], testUtilsStyles['anchor-link-info'])}>{anchor.info}</span>\n        )}\n      </a>\n    </li>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}