{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nexport const applyTrackBy = (trackBy, item) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return item[trackBy];\n};\nexport const getItemKey = (trackBy, item, index) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\nexport const getTrackableValue = (trackBy, item) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\nexport const getColumnKey = (column, index) => {\n  return column.id || index;\n};\nexport const toContainerVariant = variant => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\nexport function checkSortingState(columnDefinitions, sortingComparator) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce('Table', 'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.');\n  }\n}\nexport function getVisibleColumnDefinitions(_ref) {\n  let {\n    columnDisplay,\n    visibleColumns,\n    columnDefinitions\n  } = _ref;\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({\n      columnDisplay,\n      columnDefinitions\n    });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({\n      visibleColumns,\n      columnDefinitions\n    });\n  } else {\n    return columnDefinitions;\n  }\n}\nfunction getVisibleColumnDefinitionsFromColumnDisplay(_ref2) {\n  let {\n    columnDisplay,\n    columnDefinitions\n  } = _ref2;\n  const columnDefinitionsById = columnDefinitions.reduce((accumulator, item) => item.id === undefined ? accumulator : Object.assign(Object.assign({}, accumulator), {\n    [item.id]: item\n  }), {});\n  return columnDisplay.filter(item => item.visible).map(item => columnDefinitionsById[item.id]).filter(Boolean);\n}\nfunction getVisibleColumnDefinitionsFromVisibleColumns(_ref3) {\n  let {\n    visibleColumns,\n    columnDefinitions\n  } = _ref3;\n  const ids = new Set(visibleColumns);\n  return columnDefinitions.filter(_ref4 => {\n    let {\n      id\n    } = _ref4;\n    return id !== undefined && ids.has(id);\n  });\n}\nexport function getStickyClassNames(styles, props) {\n  return {\n    [styles['sticky-cell']]: !!props,\n    [styles['sticky-cell-pad-inline-start']]: !!(props === null || props === void 0 ? void 0 : props.padInlineStart),\n    [styles['sticky-cell-last-inline-start']]: !!(props === null || props === void 0 ? void 0 : props.lastInsetInlineStart),\n    [styles['sticky-cell-last-inline-end']]: !!(props === null || props === void 0 ? void 0 : props.lastInsetInlineEnd)\n  };\n}","map":{"version":3,"names":["warnOnce","applyTrackBy","trackBy","item","getItemKey","index","getTrackableValue","getColumnKey","column","id","toContainerVariant","variant","isDefaultVariant","checkSortingState","columnDefinitions","sortingComparator","matchedColumn","filter","getVisibleColumnDefinitions","_ref","columnDisplay","visibleColumns","getVisibleColumnDefinitionsFromColumnDisplay","getVisibleColumnDefinitionsFromVisibleColumns","_ref2","columnDefinitionsById","reduce","accumulator","undefined","Object","assign","visible","map","Boolean","_ref3","ids","Set","_ref4","has","getStickyClassNames","styles","props","padInlineStart","lastInsetInlineStart","lastInsetInlineEnd"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { InternalContainerProps } from '../container/internal';\nimport { TableProps } from './interfaces';\nimport { StickyColumnsCellState } from './sticky-columns';\n\nexport const applyTrackBy = <T>(trackBy: TableProps.TrackBy<T>, item: T) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return (item as any)[trackBy];\n};\n\nexport const getItemKey = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T, index: number) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getTrackableValue = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getColumnKey = <T>(column: TableProps.ColumnDefinition<T>, index: number) => {\n  return column.id || index;\n};\n\nexport const toContainerVariant = (variant: TableProps.Variant | undefined): InternalContainerProps['variant'] => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\n\nexport function checkSortingState<T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>,\n  sortingComparator: TableProps.SortingColumn<T>['sortingComparator']\n) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce(\n      'Table',\n      'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.'\n    );\n  }\n}\n\nexport function getVisibleColumnDefinitions<T>({\n  columnDisplay,\n  visibleColumns,\n  columnDefinitions,\n}: {\n  columnDisplay?: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  visibleColumns?: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({ columnDisplay, columnDefinitions });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({ visibleColumns, columnDefinitions });\n  } else {\n    return columnDefinitions;\n  }\n}\n\nfunction getVisibleColumnDefinitionsFromColumnDisplay<T>({\n  columnDisplay,\n  columnDefinitions,\n}: {\n  columnDisplay: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const columnDefinitionsById: Record<string, TableProps.ColumnDefinition<T>> = columnDefinitions.reduce(\n    (accumulator, item) => (item.id === undefined ? accumulator : { ...accumulator, [item.id]: item }),\n    {}\n  );\n  return columnDisplay\n    .filter(item => item.visible)\n    .map(item => columnDefinitionsById[item.id])\n    .filter(Boolean);\n}\n\nfunction getVisibleColumnDefinitionsFromVisibleColumns<T>({\n  visibleColumns,\n  columnDefinitions,\n}: {\n  visibleColumns: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const ids = new Set(visibleColumns);\n  return columnDefinitions.filter(({ id }) => id !== undefined && ids.has(id));\n}\n\nexport function getStickyClassNames(styles: Record<string, string>, props: StickyColumnsCellState | null) {\n  return {\n    [styles['sticky-cell']]: !!props,\n    [styles['sticky-cell-pad-inline-start']]: !!props?.padInlineStart,\n    [styles['sticky-cell-last-inline-start']]: !!props?.lastInsetInlineStart,\n    [styles['sticky-cell-last-inline-end']]: !!props?.lastInsetInlineEnd,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}