{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { mergeLocales } from './merge-locales';\nexport function normalizeLocale(component, locale) {\n  var _a;\n  locale = checkLocale(component, locale);\n  const browserLocale = getBrowserLocale();\n  if (locale) {\n    return mergeLocales(locale, browserLocale);\n  }\n  const htmlLocale = checkLocale(component, (_a = getHtmlElement()) === null || _a === void 0 ? void 0 : _a.getAttribute('lang'));\n  if (htmlLocale) {\n    return mergeLocales(htmlLocale, browserLocale);\n  }\n  return browserLocale;\n}\nfunction checkLocale(component, locale) {\n  if (!locale || locale === '') {\n    return '';\n  }\n  // Support underscore-delimited locales\n  locale = locale && locale.replace(/^([a-z]{2})_/, '$1-');\n  // Check that the value matches aa-BB pattern\n  // TODO: support full BCP 47 spec?\n  if (locale && !locale.match(/^[a-z]{2}(-[A-Z]{2})?$/)) {\n    warnOnce(component, `Invalid locale provided: ${locale}. Falling back to default`);\n    locale = '';\n  }\n  return locale;\n}\nfunction getHtmlElement() {\n  return typeof document !== 'undefined' ? document.querySelector('html') : null;\n}\nfunction getBrowserLocale() {\n  return new Intl.DateTimeFormat().resolvedOptions().locale;\n}","map":{"version":3,"names":["warnOnce","mergeLocales","normalizeLocale","component","locale","checkLocale","browserLocale","getBrowserLocale","htmlLocale","_a","getHtmlElement","getAttribute","replace","match","document","querySelector","Intl","DateTimeFormat","resolvedOptions"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/utils/locale/normalize-locale.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { mergeLocales } from './merge-locales';\n\nexport function normalizeLocale(component: string, locale: string | null): string {\n  locale = checkLocale(component, locale);\n  const browserLocale = getBrowserLocale();\n  if (locale) {\n    return mergeLocales(locale, browserLocale);\n  }\n  const htmlLocale = checkLocale(component, getHtmlElement()?.getAttribute('lang'));\n  if (htmlLocale) {\n    return mergeLocales(htmlLocale, browserLocale);\n  }\n  return browserLocale;\n}\n\nfunction checkLocale(component: string, locale: string | null | undefined): string {\n  if (!locale || locale === '') {\n    return '';\n  }\n\n  // Support underscore-delimited locales\n  locale = locale && locale.replace(/^([a-z]{2})_/, '$1-');\n  // Check that the value matches aa-BB pattern\n  // TODO: support full BCP 47 spec?\n  if (locale && !locale.match(/^[a-z]{2}(-[A-Z]{2})?$/)) {\n    warnOnce(component, `Invalid locale provided: ${locale}. Falling back to default`);\n    locale = '';\n  }\n  return locale;\n}\n\nfunction getHtmlElement() {\n  return typeof document !== 'undefined' ? document.querySelector('html') : null;\n}\n\nfunction getBrowserLocale() {\n  return new Intl.DateTimeFormat().resolvedOptions().locale;\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,QAAQ,QAAQ,+CAA+C;AAExE,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,OAAM,SAAUC,eAAeA,CAACC,SAAiB,EAAEC,MAAqB;;EACtEA,MAAM,GAAGC,WAAW,CAACF,SAAS,EAAEC,MAAM,CAAC;EACvC,MAAME,aAAa,GAAGC,gBAAgB,EAAE;EACxC,IAAIH,MAAM,EAAE;IACV,OAAOH,YAAY,CAACG,MAAM,EAAEE,aAAa,CAAC;;EAE5C,MAAME,UAAU,GAAGH,WAAW,CAACF,SAAS,EAAE,CAAAM,EAAA,GAAAC,cAAc,EAAE,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,YAAY,CAAC,MAAM,CAAC,CAAC;EACjF,IAAIH,UAAU,EAAE;IACd,OAAOP,YAAY,CAACO,UAAU,EAAEF,aAAa,CAAC;;EAEhD,OAAOA,aAAa;AACtB;AAEA,SAASD,WAAWA,CAACF,SAAiB,EAAEC,MAAiC;EACvE,IAAI,CAACA,MAAM,IAAIA,MAAM,KAAK,EAAE,EAAE;IAC5B,OAAO,EAAE;;EAGX;EACAA,MAAM,GAAGA,MAAM,IAAIA,MAAM,CAACQ,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC;EACxD;EACA;EACA,IAAIR,MAAM,IAAI,CAACA,MAAM,CAACS,KAAK,CAAC,wBAAwB,CAAC,EAAE;IACrDb,QAAQ,CAACG,SAAS,EAAE,4BAA4BC,MAAM,2BAA2B,CAAC;IAClFA,MAAM,GAAG,EAAE;;EAEb,OAAOA,MAAM;AACf;AAEA,SAASM,cAAcA,CAAA;EACrB,OAAO,OAAOI,QAAQ,KAAK,WAAW,GAAGA,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,GAAG,IAAI;AAChF;AAEA,SAASR,gBAAgBA,CAAA;EACvB,OAAO,IAAIS,IAAI,CAACC,cAAc,EAAE,CAACC,eAAe,EAAE,CAACd,MAAM;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}