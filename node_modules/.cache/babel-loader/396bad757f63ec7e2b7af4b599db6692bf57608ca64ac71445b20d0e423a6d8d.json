{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport formatDateIso from './format-date-iso';\nimport formatDateLocalized from './format-date-localized';\nimport { isIsoDateOnly } from './is-iso-date-only';\nexport function formatDateRange(_ref) {\n  let {\n    startDate,\n    endDate,\n    timeOffset,\n    hideTimeOffset,\n    format,\n    locale\n  } = _ref;\n  const isDateOnly = isIsoDateOnly(startDate) && isIsoDateOnly(endDate);\n  return formatDate({\n    date: startDate,\n    format,\n    hideTimeOffset,\n    isDateOnly,\n    timeOffset: timeOffset.startDate,\n    locale\n  }) + ' — ' + formatDate({\n    date: endDate,\n    format,\n    hideTimeOffset,\n    isDateOnly,\n    timeOffset: timeOffset.endDate,\n    locale\n  });\n}\nfunction formatDate(_ref2) {\n  let {\n    date,\n    format,\n    hideTimeOffset,\n    isDateOnly,\n    timeOffset,\n    locale\n  } = _ref2;\n  switch (format) {\n    case 'long-localized':\n      {\n        return formatDateLocalized({\n          date,\n          hideTimeOffset,\n          isDateOnly,\n          locale,\n          timeOffset\n        });\n      }\n    default:\n      {\n        return formatDateIso({\n          date,\n          hideTimeOffset,\n          isDateOnly,\n          timeOffset\n        });\n      }\n  }\n}","map":{"version":3,"names":["formatDateIso","formatDateLocalized","isIsoDateOnly","formatDateRange","_ref","startDate","endDate","timeOffset","hideTimeOffset","format","locale","isDateOnly","formatDate","date","_ref2"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/utils/date-time/format-date-range.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { DateRangePickerProps } from '../../../date-range-picker/interfaces';\nimport formatDateIso from './format-date-iso';\nimport formatDateLocalized from './format-date-localized';\nimport { isIsoDateOnly } from './is-iso-date-only';\n\nexport function formatDateRange({\n  startDate,\n  endDate,\n  timeOffset,\n  hideTimeOffset,\n  format,\n  locale,\n}: {\n  startDate: string;\n  endDate: string;\n  hideTimeOffset?: boolean;\n  timeOffset: { startDate?: number; endDate?: number };\n  format: DateRangePickerProps.AbsoluteFormat;\n  locale?: string;\n}): string {\n  const isDateOnly = isIsoDateOnly(startDate) && isIsoDateOnly(endDate);\n  return (\n    formatDate({\n      date: startDate,\n      format,\n      hideTimeOffset,\n      isDateOnly,\n      timeOffset: timeOffset.startDate,\n      locale,\n    }) +\n    ' — ' +\n    formatDate({\n      date: endDate,\n      format,\n      hideTimeOffset,\n      isDateOnly,\n      timeOffset: timeOffset.endDate,\n      locale,\n    })\n  );\n}\n\nfunction formatDate({\n  date,\n  format,\n  hideTimeOffset,\n  isDateOnly,\n  timeOffset,\n  locale,\n}: {\n  date: string;\n  format: DateRangePickerProps.AbsoluteFormat;\n  hideTimeOffset?: boolean;\n  isDateOnly: boolean;\n  timeOffset?: number;\n  locale?: string;\n}) {\n  switch (format) {\n    case 'long-localized': {\n      return formatDateLocalized({ date, hideTimeOffset, isDateOnly, locale, timeOffset });\n    }\n    default: {\n      return formatDateIso({ date, hideTimeOffset, isDateOnly, timeOffset });\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AAGA,OAAOA,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,mBAAmB,MAAM,yBAAyB;AACzD,SAASC,aAAa,QAAQ,oBAAoB;AAElD,OAAM,SAAUC,eAAeA,CAAAC,IAAA,EAc9B;EAAA,IAd+B;IAC9BC,SAAS;IACTC,OAAO;IACPC,UAAU;IACVC,cAAc;IACdC,MAAM;IACNC;EAAM,CAQP,GAAAN,IAAA;EACC,MAAMO,UAAU,GAAGT,aAAa,CAACG,SAAS,CAAC,IAAIH,aAAa,CAACI,OAAO,CAAC;EACrE,OACEM,UAAU,CAAC;IACTC,IAAI,EAAER,SAAS;IACfI,MAAM;IACND,cAAc;IACdG,UAAU;IACVJ,UAAU,EAAEA,UAAU,CAACF,SAAS;IAChCK;GACD,CAAC,GACF,KAAK,GACLE,UAAU,CAAC;IACTC,IAAI,EAAEP,OAAO;IACbG,MAAM;IACND,cAAc;IACdG,UAAU;IACVJ,UAAU,EAAEA,UAAU,CAACD,OAAO;IAC9BI;GACD,CAAC;AAEN;AAEA,SAASE,UAAUA,CAAAE,KAAA,EAclB;EAAA,IAdmB;IAClBD,IAAI;IACJJ,MAAM;IACND,cAAc;IACdG,UAAU;IACVJ,UAAU;IACVG;EAAM,CAQP,GAAAI,KAAA;EACC,QAAQL,MAAM;IACZ,KAAK,gBAAgB;MAAE;QACrB,OAAOR,mBAAmB,CAAC;UAAEY,IAAI;UAAEL,cAAc;UAAEG,UAAU;UAAED,MAAM;UAAEH;QAAU,CAAE,CAAC;;IAEtF;MAAS;QACP,OAAOP,aAAa,CAAC;UAAEa,IAAI;UAAEL,cAAc;UAAEG,UAAU;UAAEJ;QAAU,CAAE,CAAC;;;AAG5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}