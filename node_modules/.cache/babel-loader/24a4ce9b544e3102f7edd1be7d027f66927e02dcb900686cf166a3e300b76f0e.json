{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport InternalCopyToClipboard from './internal';\nexport default function CopyToClipboard(_a) {\n  var {\n      variant = 'button',\n      popoverRenderWithPortal = false\n    } = _a,\n    restProps = __rest(_a, [\"variant\", \"popoverRenderWithPortal\"]);\n  const baseProps = useBaseComponent('CopyToClipboard', {\n    props: {\n      variant\n    }\n  });\n  const filteredProps = getExternalProps(restProps);\n  return React.createElement(InternalCopyToClipboard, Object.assign({\n    variant: variant,\n    popoverRenderWithPortal: popoverRenderWithPortal\n  }, baseProps, filteredProps));\n}\napplyDisplayName(CopyToClipboard, 'CopyToClipboard');","map":{"version":3,"names":["React","useBaseComponent","applyDisplayName","getExternalProps","InternalCopyToClipboard","CopyToClipboard","_a","variant","popoverRenderWithPortal","restProps","__rest","baseProps","props","filteredProps","createElement","Object","assign"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/copy-to-clipboard/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { CopyToClipboardProps } from './interfaces';\nimport InternalCopyToClipboard from './internal';\n\nexport { CopyToClipboardProps };\n\nexport default function CopyToClipboard({\n  variant = 'button',\n  popoverRenderWithPortal = false,\n  ...restProps\n}: CopyToClipboardProps) {\n  const baseProps = useBaseComponent('CopyToClipboard', {\n    props: { variant },\n  });\n  const filteredProps = getExternalProps(restProps);\n\n  return (\n    <InternalCopyToClipboard\n      variant={variant}\n      popoverRenderWithPortal={popoverRenderWithPortal}\n      {...baseProps}\n      {...filteredProps}\n    />\n  );\n}\n\napplyDisplayName(CopyToClipboard, 'CopyToClipboard');\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,gBAAgB,QAAQ,kCAAkC;AAEnE,OAAOC,uBAAuB,MAAM,YAAY;AAIhD,eAAc,SAAUC,eAAeA,CAACC,EAIjB;MAJiB;MACtCC,OAAO,GAAG,QAAQ;MAClBC,uBAAuB,GAAG;IAAK,IAAAF,EAEV;IADlBG,SAAS,GAAAC,MAAA,CAAAJ,EAAA,EAH0B,sCAIvC,CADa;EAEZ,MAAMK,SAAS,GAAGV,gBAAgB,CAAC,iBAAiB,EAAE;IACpDW,KAAK,EAAE;MAAEL;IAAO;GACjB,CAAC;EACF,MAAMM,aAAa,GAAGV,gBAAgB,CAACM,SAAS,CAAC;EAEjD,OACET,KAAA,CAAAc,aAAA,CAACV,uBAAuB,EAAAW,MAAA,CAAAC,MAAA;IACtBT,OAAO,EAAEA,OAAO;IAChBC,uBAAuB,EAAEA;EAAuB,GAC5CG,SAAS,EACTE,aAAa,EACjB;AAEN;AAEAX,gBAAgB,CAACG,eAAe,EAAE,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}