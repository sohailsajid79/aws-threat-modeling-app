{"ast":null,"code":"export const getEventDetail = item => ({\n  item,\n  text: item.text,\n  href: item.href\n});\nconst defaultMinBreadcrumbWidth = 150;\nconst ellipsisWidth = 50;\nexport const getItemsDisplayProperties = (itemsWidths, navWidth) => {\n  const minBreadcrumbWidth = optimizeMinWidth(itemsWidths, navWidth);\n  const shrinkFactors = itemsWidths.map(width => width <= minBreadcrumbWidth ? 0 : Math.round(width));\n  const minWidths = itemsWidths.map(width => width <= minBreadcrumbWidth ? 0 : minBreadcrumbWidth);\n  const collapsedWidths = itemsWidths.map(width => Math.min(width, minBreadcrumbWidth));\n  return {\n    shrinkFactors,\n    minWidths,\n    collapsed: computeNumberOfCollapsedItems(collapsedWidths, navWidth)\n  };\n};\nconst computeNumberOfCollapsedItems = (collapsedWidths, navWidth) => {\n  if (!navWidth) {\n    return 0;\n  }\n  let collapsed = 0;\n  const itemsCount = collapsedWidths.length;\n  if (itemsCount > 2) {\n    collapsed = itemsCount - 2;\n    let remainingWidth = navWidth - collapsedWidths[0] - collapsedWidths[itemsCount - 1] - ellipsisWidth;\n    let j = 1;\n    while (remainingWidth > 0 && j < itemsCount - 1) {\n      remainingWidth -= collapsedWidths[itemsCount - 1 - j];\n      j++;\n      if (remainingWidth >= 0) {\n        collapsed--;\n      }\n    }\n  }\n  return collapsed;\n};\nconst optimizeMinWidth = (itemsWidths, navWidth) => {\n  const collapsedWidths = itemsWidths.map(width => Math.min(width, defaultMinBreadcrumbWidth));\n  if (!navWidth) {\n    return defaultMinBreadcrumbWidth;\n  }\n  const itemsCount = collapsedWidths.length;\n  if (itemsCount > 2) {\n    const minCollapsedWidth = collapsedWidths[0] + ellipsisWidth + collapsedWidths[collapsedWidths.length - 1];\n    if (minCollapsedWidth > navWidth) {\n      return (navWidth - ellipsisWidth) / 2;\n    }\n  }\n  if (itemsCount === 2) {\n    const minCollapsedWidth = collapsedWidths[0] + collapsedWidths[1];\n    if (minCollapsedWidth > navWidth) {\n      return navWidth / 2;\n    }\n  }\n  if (itemsCount === 1) {\n    return Math.min(navWidth, collapsedWidths[0]);\n  }\n  return defaultMinBreadcrumbWidth;\n};","map":{"version":3,"names":["getEventDetail","item","text","href","defaultMinBreadcrumbWidth","ellipsisWidth","getItemsDisplayProperties","itemsWidths","navWidth","minBreadcrumbWidth","optimizeMinWidth","shrinkFactors","map","width","Math","round","minWidths","collapsedWidths","min","collapsed","computeNumberOfCollapsedItems","itemsCount","length","remainingWidth","j","minCollapsedWidth"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/breadcrumb-group/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BreadcrumbGroupProps } from './interfaces';\n\nexport const getEventDetail = <T extends BreadcrumbGroupProps.Item>(item: T) => ({\n  item,\n  text: item.text,\n  href: item.href,\n});\n\nconst defaultMinBreadcrumbWidth = 150;\nconst ellipsisWidth = 50;\n\nexport const getItemsDisplayProperties = (itemsWidths: Array<number>, navWidth: number | null) => {\n  const minBreadcrumbWidth = optimizeMinWidth(itemsWidths, navWidth);\n  const shrinkFactors = itemsWidths.map(width => (width <= minBreadcrumbWidth ? 0 : Math.round(width)));\n  const minWidths = itemsWidths.map(width => (width <= minBreadcrumbWidth ? 0 : minBreadcrumbWidth));\n  const collapsedWidths = itemsWidths.map(width => Math.min(width, minBreadcrumbWidth));\n\n  return {\n    shrinkFactors,\n    minWidths,\n    collapsed: computeNumberOfCollapsedItems(collapsedWidths, navWidth),\n  };\n};\n\nconst computeNumberOfCollapsedItems = (collapsedWidths: Array<number>, navWidth: number | null): number => {\n  if (!navWidth) {\n    return 0;\n  }\n  let collapsed = 0;\n  const itemsCount = collapsedWidths.length;\n  if (itemsCount > 2) {\n    collapsed = itemsCount - 2;\n    let remainingWidth = navWidth - collapsedWidths[0] - collapsedWidths[itemsCount - 1] - ellipsisWidth;\n    let j = 1;\n    while (remainingWidth > 0 && j < itemsCount - 1) {\n      remainingWidth -= collapsedWidths[itemsCount - 1 - j];\n      j++;\n      if (remainingWidth >= 0) {\n        collapsed--;\n      }\n    }\n  }\n  return collapsed;\n};\n\nconst optimizeMinWidth = (itemsWidths: Array<number>, navWidth: number | null): number => {\n  const collapsedWidths = itemsWidths.map(width => Math.min(width, defaultMinBreadcrumbWidth));\n  if (!navWidth) {\n    return defaultMinBreadcrumbWidth;\n  }\n  const itemsCount = collapsedWidths.length;\n  if (itemsCount > 2) {\n    const minCollapsedWidth = collapsedWidths[0] + ellipsisWidth + collapsedWidths[collapsedWidths.length - 1];\n    if (minCollapsedWidth > navWidth) {\n      return (navWidth - ellipsisWidth) / 2;\n    }\n  }\n  if (itemsCount === 2) {\n    const minCollapsedWidth = collapsedWidths[0] + collapsedWidths[1];\n    if (minCollapsedWidth > navWidth) {\n      return navWidth / 2;\n    }\n  }\n  if (itemsCount === 1) {\n    return Math.min(navWidth, collapsedWidths[0]);\n  }\n  return defaultMinBreadcrumbWidth;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}