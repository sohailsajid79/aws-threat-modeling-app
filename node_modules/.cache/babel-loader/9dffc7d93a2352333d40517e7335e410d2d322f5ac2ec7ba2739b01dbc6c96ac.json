{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MFASelectionView from '../MFASelectionView';\nimport { useCallback } from 'react';\nconst MFASelection = _ref => {\n  let {\n    cognitoUser,\n    resetView,\n    challengeName,\n    challengeParams,\n    onMFARequired\n  } = _ref;\n  const handleMFASetup = useCallback(async data => {\n    return new Promise((resolve, reject) => {\n      cognitoUser.sendMFASelectionAnswer(data.mfaMethod, {\n        onSuccess() {\n          resolve({});\n          resetView();\n        },\n        onFailure(err) {\n          console.error('Cognito sendMFASelectionAnswer Failure', err);\n          reject(err);\n        },\n        mfaRequired(challengeName, challengeParams) {\n          onMFARequired(cognitoUser, challengeName, challengeParams);\n          resolve({});\n        },\n        totpRequired(challengeName, challengeParams) {\n          onMFARequired(cognitoUser, challengeName, challengeParams);\n          resolve({});\n        }\n      });\n    });\n  }, [cognitoUser, onMFARequired, resetView]);\n  return _jsx(MFASelectionView, {\n    challengeName: challengeName,\n    challengeParams: challengeParams,\n    onConfirm: handleMFASetup,\n    onBackToSignIn: resetView\n  });\n};\nexport default MFASelection;","map":{"version":3,"names":["jsx","_jsx","MFASelectionView","useCallback","MFASelection","_ref","cognitoUser","resetView","challengeName","challengeParams","onMFARequired","handleMFASetup","data","Promise","resolve","reject","sendMFASelectionAnswer","mfaMethod","onSuccess","onFailure","err","console","error","mfaRequired","totpRequired","onConfirm","onBackToSignIn"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/MFASelection/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MFASelectionView from '../MFASelectionView';\nimport { useCallback } from 'react';\nconst MFASelection = ({ cognitoUser, resetView, challengeName, challengeParams, onMFARequired, }) => {\n    const handleMFASetup = useCallback(async (data) => {\n        return new Promise((resolve, reject) => {\n            cognitoUser.sendMFASelectionAnswer(data.mfaMethod, {\n                onSuccess() {\n                    resolve({});\n                    resetView();\n                },\n                onFailure(err) {\n                    console.error('Cognito sendMFASelectionAnswer Failure', err);\n                    reject(err);\n                },\n                mfaRequired(challengeName, challengeParams) {\n                    onMFARequired(cognitoUser, challengeName, challengeParams);\n                    resolve({});\n                },\n                totpRequired(challengeName, challengeParams) {\n                    onMFARequired(cognitoUser, challengeName, challengeParams);\n                    resolve({});\n                },\n            });\n        });\n    }, [cognitoUser, onMFARequired, resetView]);\n    return (_jsx(MFASelectionView, { challengeName: challengeName, challengeParams: challengeParams, onConfirm: handleMFASetup, onBackToSignIn: resetView }));\n};\nexport default MFASelection;\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD,SAASC,WAAW,QAAQ,OAAO;AACnC,MAAMC,YAAY,GAAGC,IAAA,IAAgF;EAAA,IAA/E;IAAEC,WAAW;IAAEC,SAAS;IAAEC,aAAa;IAAEC,eAAe;IAAEC;EAAe,CAAC,GAAAL,IAAA;EAC5F,MAAMM,cAAc,GAAGR,WAAW,CAAC,MAAOS,IAAI,IAAK;IAC/C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCT,WAAW,CAACU,sBAAsB,CAACJ,IAAI,CAACK,SAAS,EAAE;QAC/CC,SAASA,CAAA,EAAG;UACRJ,OAAO,CAAC,CAAC,CAAC,CAAC;UACXP,SAAS,CAAC,CAAC;QACf,CAAC;QACDY,SAASA,CAACC,GAAG,EAAE;UACXC,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEF,GAAG,CAAC;UAC5DL,MAAM,CAACK,GAAG,CAAC;QACf,CAAC;QACDG,WAAWA,CAACf,aAAa,EAAEC,eAAe,EAAE;UACxCC,aAAa,CAACJ,WAAW,EAAEE,aAAa,EAAEC,eAAe,CAAC;UAC1DK,OAAO,CAAC,CAAC,CAAC,CAAC;QACf,CAAC;QACDU,YAAYA,CAAChB,aAAa,EAAEC,eAAe,EAAE;UACzCC,aAAa,CAACJ,WAAW,EAAEE,aAAa,EAAEC,eAAe,CAAC;UAC1DK,OAAO,CAAC,CAAC,CAAC,CAAC;QACf;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,WAAW,EAAEI,aAAa,EAAEH,SAAS,CAAC,CAAC;EAC3C,OAAQN,IAAI,CAACC,gBAAgB,EAAE;IAAEM,aAAa,EAAEA,aAAa;IAAEC,eAAe,EAAEA,eAAe;IAAEgB,SAAS,EAAEd,cAAc;IAAEe,cAAc,EAAEnB;EAAU,CAAC,CAAC;AAC5J,CAAC;AACD,eAAeH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}