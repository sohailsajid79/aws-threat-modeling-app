{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport Button from '@cloudscape-design/components/button';\nimport FormRenderer, { componentTypes } from '../../../FormRenderer';\nimport useSubmitCallback from '../../hooks/useSubmitCallback';\nconst SignUpVerificationView = _ref => {\n  let {\n    onConfirm,\n    onResendCode,\n    signUpResult\n  } = _ref;\n  const {\n    handleSubmit,\n    isSubmitting,\n    errorMessage\n  } = useSubmitCallback(onConfirm);\n  const {\n    handleSubmit: handleResendCode,\n    isSubmitting: isResendingCode,\n    errorMessage: resendCodeErrorMessage\n  } = useSubmitCallback(onResendCode);\n  const CustomComponent = useMemo(() => {\n    return () => {\n      return _jsx(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'end',\n          height: '100%'\n        },\n        children: _jsx(\"div\", {\n          children: _jsx(Button, {\n            loading: isResendingCode,\n            onClick: handleResendCode,\n            children: \"Resend\"\n          })\n        })\n      });\n    };\n  }, [handleResendCode, isResendingCode]);\n  const schema = useMemo(() => {\n    return {\n      header: 'Confirm Registration',\n      headerVariant: 'h2',\n      variant: 'embedded',\n      canCancel: false,\n      submitLabel: 'Confirm',\n      fields: [...(signUpResult ? [{\n        component: componentTypes.PLAIN_TEXT,\n        name: 'description',\n        label: `A code has been sent to ${signUpResult?.codeDeliveryDetails?.DeliveryMedium} ${signUpResult?.codeDeliveryDetails?.Destination}`\n      }] : []), {\n        component: componentTypes.CUSTOM_LAYOUT,\n        name: 'layout',\n        gridDefinition: [{\n          colspan: {\n            default: 12,\n            xxs: 9\n          }\n        }, {\n          colspan: {\n            default: 12,\n            xxs: 3\n          }\n        }],\n        fields: [{\n          component: componentTypes.TEXT_FIELD,\n          isRequired: true,\n          label: 'Code',\n          name: 'verificationCode',\n          placeholder: 'Code',\n          validate: [{\n            type: 'required'\n          }]\n        }, {\n          component: componentTypes.CUSTOM,\n          CustomComponent: CustomComponent,\n          name: 'btnResendCode'\n        }]\n      }]\n    };\n  }, [CustomComponent, signUpResult]);\n  return _jsx(FormRenderer, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    errorText: errorMessage || resendCodeErrorMessage,\n    isSubmitting: isSubmitting\n  });\n};\nexport default SignUpVerificationView;","map":{"version":3,"names":["jsx","_jsx","useMemo","Button","FormRenderer","componentTypes","useSubmitCallback","SignUpVerificationView","_ref","onConfirm","onResendCode","signUpResult","handleSubmit","isSubmitting","errorMessage","handleResendCode","isResendingCode","resendCodeErrorMessage","CustomComponent","style","display","alignItems","height","children","loading","onClick","schema","header","headerVariant","variant","canCancel","submitLabel","fields","component","PLAIN_TEXT","name","label","codeDeliveryDetails","DeliveryMedium","Destination","CUSTOM_LAYOUT","gridDefinition","colspan","default","xxs","TEXT_FIELD","isRequired","placeholder","validate","type","CUSTOM","onSubmit","errorText"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/SignUpVerificationView/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport Button from '@cloudscape-design/components/button';\nimport FormRenderer, { componentTypes } from '../../../FormRenderer';\nimport useSubmitCallback from '../../hooks/useSubmitCallback';\nconst SignUpVerificationView = ({ onConfirm, onResendCode, signUpResult }) => {\n    const { handleSubmit, isSubmitting, errorMessage } = useSubmitCallback(onConfirm);\n    const { handleSubmit: handleResendCode, isSubmitting: isResendingCode, errorMessage: resendCodeErrorMessage, } = useSubmitCallback(onResendCode);\n    const CustomComponent = useMemo(() => {\n        return () => {\n            return (_jsx(\"div\", { style: {\n                    display: 'flex',\n                    alignItems: 'end',\n                    height: '100%',\n                }, children: _jsx(\"div\", { children: _jsx(Button, { loading: isResendingCode, onClick: handleResendCode, children: \"Resend\" }) }) }));\n        };\n    }, [handleResendCode, isResendingCode]);\n    const schema = useMemo(() => {\n        return {\n            header: 'Confirm Registration',\n            headerVariant: 'h2',\n            variant: 'embedded',\n            canCancel: false,\n            submitLabel: 'Confirm',\n            fields: [\n                ...(signUpResult\n                    ? [\n                        {\n                            component: componentTypes.PLAIN_TEXT,\n                            name: 'description',\n                            label: `A code has been sent to ${signUpResult?.codeDeliveryDetails?.DeliveryMedium} ${signUpResult?.codeDeliveryDetails?.Destination}`,\n                        },\n                    ]\n                    : []),\n                {\n                    component: componentTypes.CUSTOM_LAYOUT,\n                    name: 'layout',\n                    gridDefinition: [\n                        {\n                            colspan: {\n                                default: 12,\n                                xxs: 9,\n                            },\n                        },\n                        {\n                            colspan: {\n                                default: 12,\n                                xxs: 3,\n                            },\n                        },\n                    ],\n                    fields: [\n                        {\n                            component: componentTypes.TEXT_FIELD,\n                            isRequired: true,\n                            label: 'Code',\n                            name: 'verificationCode',\n                            placeholder: 'Code',\n                            validate: [\n                                {\n                                    type: 'required',\n                                },\n                            ],\n                        },\n                        {\n                            component: componentTypes.CUSTOM,\n                            CustomComponent: CustomComponent,\n                            name: 'btnResendCode',\n                        },\n                    ],\n                },\n            ],\n        };\n    }, [CustomComponent, signUpResult]);\n    return (_jsx(FormRenderer, { schema: schema, onSubmit: handleSubmit, errorText: errorMessage || resendCodeErrorMessage, isSubmitting: isSubmitting }));\n};\nexport default SignUpVerificationView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}