{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import FormField from'@cloudscape-design/components/form-field';import TextareaComponent from'@cloudscape-design/components/textarea';import React,{useCallback}from'react';import useContentValidation from'../../../hooks/useContentValidation';import{jsx as _jsx}from\"react/jsx-runtime\";const Textarea=/*#__PURE__*/React.forwardRef((_ref,ref)=>{let{value,onChange,validateData,singleLine,...props}=_ref;const{tempValue,errorText,handleChange}=useContentValidation(value,onChange,validateData);const handleValueChange=useCallback(event=>singleLine?handleChange({...event,detail:{...event.detail,value:event.detail.value.replace(/\\n|\\r/i,' ')}}):handleChange(event),[singleLine,handleChange]);return/*#__PURE__*/_jsx(FormField,{...props,errorText:errorText,children:/*#__PURE__*/_jsx(TextareaComponent,{...props,ref:ref,value:tempValue,onChange:handleValueChange})});});export default Textarea;","map":{"version":3,"names":["FormField","TextareaComponent","React","useCallback","useContentValidation","jsx","_jsx","Textarea","forwardRef","_ref","ref","value","onChange","validateData","singleLine","props","tempValue","errorText","handleChange","handleValueChange","event","detail","replace","children"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/generic/Textarea/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport FormField, { FormFieldProps } from '@cloudscape-design/components/form-field';\nimport { BaseChangeDetail } from '@cloudscape-design/components/input/interfaces';\nimport { NonCancelableEventHandler } from '@cloudscape-design/components/internal/events';\nimport TextareaComponent, { TextareaProps as TextareaComponetProps } from '@cloudscape-design/components/textarea';\nimport React, { FC, useCallback } from 'react';\nimport { z } from 'zod';\nimport useContentValidation from '../../../hooks/useContentValidation';\n\nexport interface TextAreaProps extends FormFieldProps, TextareaComponetProps {\n  ref?: React.ForwardedRef<any>;\n  validateData?: (newValue: string) => z.SafeParseReturnType<string | undefined, string | undefined>;\n  singleLine?: boolean;\n}\n\nconst Textarea: FC<TextAreaProps> = React.forwardRef<TextareaComponetProps.Ref, TextAreaProps>(({\n  value,\n  onChange,\n  validateData,\n  singleLine,\n  ...props\n}, ref) => {\n  const { tempValue, errorText, handleChange } = useContentValidation(value, onChange, validateData);\n\n  const handleValueChange: NonCancelableEventHandler<BaseChangeDetail> = useCallback(event =>\n    singleLine ? handleChange({\n      ...event,\n      detail: {\n        ...event.detail,\n        value: event.detail.value.replace(/\\n|\\r/i, ' '),\n      },\n    }) : handleChange(event), [singleLine, handleChange]);\n\n  return (\n    <FormField\n      {...props}\n      errorText={errorText}\n    >\n      <TextareaComponent\n        {...props}\n        ref={ref}\n        value={tempValue}\n        onChange={handleValueChange}\n      />\n    </FormField>);\n});\n\nexport default Textarea;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAEA,MAAO,CAAAA,SAAS,KAA0B,0CAA0C,CAGpF,MAAO,CAAAC,iBAAiB,KAAkD,wCAAwC,CAClH,MAAO,CAAAC,KAAK,EAAQC,WAAW,KAAQ,OAAO,CAE9C,MAAO,CAAAC,oBAAoB,KAAM,qCAAqC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAQvE,KAAM,CAAAC,QAA2B,cAAGL,KAAK,CAACM,UAAU,CAA2C,CAAAC,IAAA,CAM5FC,GAAG,GAAK,IANqF,CAC9FC,KAAK,CACLC,QAAQ,CACRC,YAAY,CACZC,UAAU,CACV,GAAGC,KACL,CAAC,CAAAN,IAAA,CACC,KAAM,CAAEO,SAAS,CAAEC,SAAS,CAAEC,YAAa,CAAC,CAAGd,oBAAoB,CAACO,KAAK,CAAEC,QAAQ,CAAEC,YAAY,CAAC,CAElG,KAAM,CAAAM,iBAA8D,CAAGhB,WAAW,CAACiB,KAAK,EACtFN,UAAU,CAAGI,YAAY,CAAC,CACxB,GAAGE,KAAK,CACRC,MAAM,CAAE,CACN,GAAGD,KAAK,CAACC,MAAM,CACfV,KAAK,CAAES,KAAK,CAACC,MAAM,CAACV,KAAK,CAACW,OAAO,CAAC,QAAQ,CAAE,GAAG,CACjD,CACF,CAAC,CAAC,CAAGJ,YAAY,CAACE,KAAK,CAAC,CAAE,CAACN,UAAU,CAAEI,YAAY,CAAC,CAAC,CAEvD,mBACEZ,IAAA,CAACN,SAAS,KACJe,KAAK,CACTE,SAAS,CAAEA,SAAU,CAAAM,QAAA,cAErBjB,IAAA,CAACL,iBAAiB,KACZc,KAAK,CACTL,GAAG,CAAEA,GAAI,CACTC,KAAK,CAAEK,SAAU,CACjBJ,QAAQ,CAAEO,iBAAkB,CAC7B,CAAC,CACO,CAAC,CAChB,CAAC,CAAC,CAEF,cAAe,CAAAZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}