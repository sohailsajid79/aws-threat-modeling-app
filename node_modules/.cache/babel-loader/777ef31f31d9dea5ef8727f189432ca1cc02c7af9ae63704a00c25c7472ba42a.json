{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport FormField from '@cloudscape-design/components/form-field';\nimport Button from '@cloudscape-design/components/button';\nimport TokenGroup from '@cloudscape-design/components/token-group';\nimport StatusIndicator from '@cloudscape-design/components/status-indicator';\nimport { useCallback, useRef, useMemo, useState } from 'react';\nimport useUniqueId from '../../hooks/useUniqueId';\nimport FileTokenLabel from './components/FileTokenLabel';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport getDisplaySize from './utils/getDisplaySize';\nimport getDisplayLastModified from './utils/getDisplayLastModified';\n/**\n * File upload is a form element that enables users to select one or multiple local files to upload.\n * The file(s) can then be uploaded upon form submission or processed further in the browser.\n */\nconst FileUpload = _ref => {\n  let {\n    controlId,\n    multi,\n    label,\n    description,\n    constraintText,\n    secondaryControl,\n    errorText,\n    info,\n    buttonText,\n    name,\n    accept,\n    onChange,\n    files,\n    ...props\n  } = _ref;\n  const [selectedFiles, setSelectedFiles] = useState(files || []);\n  const id = useUniqueId(controlId);\n  const inputElement = useRef(null);\n  const displayedButtonText = useMemo(() => {\n    return buttonText || `Choose ${multi ? 'files' : 'file'}`;\n  }, [buttonText, multi]);\n  const testId = props['data-testid'] || 'file-upload';\n  const handleFileSelectionDismiss = useCallback(_ref2 => {\n    let {\n      detail: {\n        itemIndex\n      }\n    } = _ref2;\n    const newFiles = selectedFiles.filter((_, index) => index !== itemIndex);\n    setSelectedFiles(newFiles);\n    onChange?.(newFiles);\n  }, [selectedFiles, setSelectedFiles, onChange]);\n  const footer = useMemo(() => {\n    if (!selectedFiles || selectedFiles.length === 0) {\n      return null;\n    }\n    if (!multi) {\n      return _jsx(FileTokenLabel, {\n        name: selectedFiles[0].name,\n        size: selectedFiles[0].size,\n        lastModified: selectedFiles[0].lastModified\n      });\n    }\n    const items = selectedFiles.map(file => ({\n      label: file.name,\n      description: getDisplaySize(file.size),\n      tags: file.lastModified ? [getDisplayLastModified(file.lastModified)] : [],\n      iconSvg: _jsx(StatusIndicator, {\n        type: \"success\"\n      })\n    }));\n    return _jsx(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: _jsx(TokenGroup, {\n        items: items,\n        onDismiss: handleFileSelectionDismiss,\n        alignment: \"vertical\"\n      })\n    });\n  }, [selectedFiles, multi, handleFileSelectionDismiss]);\n  const handleFileSelectionButtonClick = useCallback(() => {\n    inputElement.current?.click();\n  }, []);\n  const handleFileSelectionChange = useCallback(event => {\n    const {\n      files\n    } = event.target;\n    const newSelectedFiles = files ? Array.from(files).filter(file => file) : [];\n    const newFiles = multi ? [...selectedFiles, ...newSelectedFiles] : newSelectedFiles;\n    setSelectedFiles(newFiles);\n    onChange?.(newFiles);\n  }, [selectedFiles, setSelectedFiles, onChange, multi]);\n  return _jsxs(SpaceBetween, {\n    direction: \"vertical\",\n    size: \"m\",\n    children: [_jsxs(FormField, {\n      ...props,\n      controlId: id,\n      label: label,\n      info: info,\n      description: description,\n      constraintText: constraintText,\n      secondaryControl: secondaryControl,\n      errorText: errorText,\n      \"data-testid\": testId,\n      children: [_jsx(\"input\", {\n        ref: inputElement,\n        id: id,\n        name: name,\n        style: {\n          display: 'none'\n        },\n        type: \"file\",\n        multiple: multi,\n        accept: accept,\n        onChange: handleFileSelectionChange,\n        \"data-testid\": `${testId}-input`\n      }), _jsx(Button, {\n        \"data-testid\": `${testId}-button`,\n        iconName: \"upload\",\n        onClick: handleFileSelectionButtonClick,\n        children: displayedButtonText\n      })]\n    }), footer]\n  });\n};\nexport default FileUpload;\nexport * from './types';","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","FormField","Button","TokenGroup","StatusIndicator","useCallback","useRef","useMemo","useState","useUniqueId","FileTokenLabel","SpaceBetween","getDisplaySize","getDisplayLastModified","FileUpload","_ref","controlId","multi","label","description","constraintText","secondaryControl","errorText","info","buttonText","name","accept","onChange","files","props","selectedFiles","setSelectedFiles","id","inputElement","displayedButtonText","testId","handleFileSelectionDismiss","_ref2","detail","itemIndex","newFiles","filter","_","index","footer","length","size","lastModified","items","map","file","tags","iconSvg","type","style","display","children","onDismiss","alignment","handleFileSelectionButtonClick","current","click","handleFileSelectionChange","event","target","newSelectedFiles","Array","from","direction","ref","multiple","iconName","onClick"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/FileUpload/index.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport FormField from '@cloudscape-design/components/form-field';\nimport Button from '@cloudscape-design/components/button';\nimport TokenGroup from '@cloudscape-design/components/token-group';\nimport StatusIndicator from '@cloudscape-design/components/status-indicator';\nimport { useCallback, useRef, useMemo, useState } from 'react';\nimport useUniqueId from '../../hooks/useUniqueId';\nimport FileTokenLabel from './components/FileTokenLabel';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport getDisplaySize from './utils/getDisplaySize';\nimport getDisplayLastModified from './utils/getDisplayLastModified';\n/**\n * File upload is a form element that enables users to select one or multiple local files to upload.\n * The file(s) can then be uploaded upon form submission or processed further in the browser.\n */\nconst FileUpload = ({ controlId, multi, label, description, constraintText, secondaryControl, errorText, info, buttonText, name, accept, onChange, files, ...props }) => {\n    const [selectedFiles, setSelectedFiles] = useState(files || []);\n    const id = useUniqueId(controlId);\n    const inputElement = useRef(null);\n    const displayedButtonText = useMemo(() => {\n        return buttonText || `Choose ${multi ? 'files' : 'file'}`;\n    }, [buttonText, multi]);\n    const testId = props['data-testid'] || 'file-upload';\n    const handleFileSelectionDismiss = useCallback(({ detail: { itemIndex } }) => {\n        const newFiles = selectedFiles.filter((_, index) => index !== itemIndex);\n        setSelectedFiles(newFiles);\n        onChange?.(newFiles);\n    }, [selectedFiles, setSelectedFiles, onChange]);\n    const footer = useMemo(() => {\n        if (!selectedFiles || selectedFiles.length === 0) {\n            return null;\n        }\n        if (!multi) {\n            return (_jsx(FileTokenLabel, { name: selectedFiles[0].name, size: selectedFiles[0].size, lastModified: selectedFiles[0].lastModified }));\n        }\n        const items = selectedFiles.map((file) => ({\n            label: file.name,\n            description: getDisplaySize(file.size),\n            tags: file.lastModified ? [getDisplayLastModified(file.lastModified)] : [],\n            iconSvg: _jsx(StatusIndicator, { type: \"success\" }),\n        }));\n        return (_jsx(\"div\", { style: {\n                display: 'flex',\n            }, children: _jsx(TokenGroup, { items: items, onDismiss: handleFileSelectionDismiss, alignment: \"vertical\" }) }));\n    }, [selectedFiles, multi, handleFileSelectionDismiss]);\n    const handleFileSelectionButtonClick = useCallback(() => {\n        inputElement.current?.click();\n    }, []);\n    const handleFileSelectionChange = useCallback((event) => {\n        const { files } = event.target;\n        const newSelectedFiles = files ? Array.from(files).filter((file) => file) : [];\n        const newFiles = multi ? [...selectedFiles, ...newSelectedFiles] : newSelectedFiles;\n        setSelectedFiles(newFiles);\n        onChange?.(newFiles);\n    }, [selectedFiles, setSelectedFiles, onChange, multi]);\n    return (_jsxs(SpaceBetween, { direction: \"vertical\", size: \"m\", children: [_jsxs(FormField, { ...props, controlId: id, label: label, info: info, description: description, constraintText: constraintText, secondaryControl: secondaryControl, errorText: errorText, \"data-testid\": testId, children: [_jsx(\"input\", { ref: inputElement, id: id, name: name, style: { display: 'none' }, type: \"file\", multiple: multi, accept: accept, onChange: handleFileSelectionChange, \"data-testid\": `${testId}-input` }), _jsx(Button, { \"data-testid\": `${testId}-button`, iconName: \"upload\", onClick: handleFileSelectionButtonClick, children: displayedButtonText })] }), footer] }));\n};\nexport default FileUpload;\nexport * from './types';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}