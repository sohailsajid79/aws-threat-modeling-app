{"ast":null,"code":"/**\n * @typedef {import('./lib/to-matters.js').Info} Info\n * @typedef {import('./lib/to-matters.js').Matter} Matter\n * @typedef {import('./lib/to-matters.js').Options} Options\n * @typedef {import('./lib/to-matters.js').Preset} Preset\n */\n\nexport { frontmatter } from './lib/syntax.js';\nexport { frontmatterHtml } from './lib/html.js';\nexport { toMatters } from './lib/to-matters.js';\n\n// Note: we don’t have an `index.d.ts` in this extension because all token\n// types are dynamic in JS","map":{"version":3,"names":["frontmatter","frontmatterHtml","toMatters"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/mdast-util-frontmatter/node_modules/micromark-extension-frontmatter/dev/index.js"],"sourcesContent":["/**\n * @typedef {import('./lib/to-matters.js').Info} Info\n * @typedef {import('./lib/to-matters.js').Matter} Matter\n * @typedef {import('./lib/to-matters.js').Options} Options\n * @typedef {import('./lib/to-matters.js').Preset} Preset\n */\n\nexport {frontmatter} from './lib/syntax.js'\nexport {frontmatterHtml} from './lib/html.js'\nexport {toMatters} from './lib/to-matters.js'\n\n// Note: we don’t have an `index.d.ts` in this extension because all token\n// types are dynamic in JS\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,WAAW,QAAO,iBAAiB;AAC3C,SAAQC,eAAe,QAAO,eAAe;AAC7C,SAAQC,SAAS,QAAO,qBAAqB;;AAE7C;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}