{"ast":null,"code":"class CustomEventStub {\n  constructor() {\n    let cancelable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this.cancelable = cancelable;\n    this.detail = detail;\n    this.defaultPrevented = false;\n    this.cancelBubble = false;\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n    this.cancelBubble = true;\n  }\n}\nexport function createCustomEvent(_ref) {\n  let {\n    cancelable,\n    detail\n  } = _ref;\n  return new CustomEventStub(cancelable, detail);\n}\nexport function fireNonCancelableEvent(handler, detail) {\n  if (!handler) {\n    return;\n  }\n  const event = createCustomEvent({\n    cancelable: false,\n    detail\n  });\n  handler(event);\n}\nexport function fireCancelableEvent(handler, detail, sourceEvent) {\n  if (!handler) {\n    return false;\n  }\n  const event = createCustomEvent({\n    cancelable: true,\n    detail\n  });\n  handler(event);\n  if (event.defaultPrevented && sourceEvent) {\n    sourceEvent.preventDefault();\n  }\n  if (event.cancelBubble && sourceEvent) {\n    sourceEvent.stopPropagation();\n  }\n  return event.defaultPrevented;\n}\nexport function fireKeyboardEvent(handler, reactEvent) {\n  return fireCancelableEvent(handler, {\n    keyCode: reactEvent.keyCode,\n    key: reactEvent.key,\n    ctrlKey: reactEvent.ctrlKey,\n    shiftKey: reactEvent.shiftKey,\n    altKey: reactEvent.altKey,\n    metaKey: reactEvent.metaKey\n  }, reactEvent);\n}\nconst isMouseEvent = e => {\n  return e.button !== undefined;\n};\nexport function hasModifierKeys(event) {\n  return event.ctrlKey || event.altKey || event.shiftKey || event.metaKey;\n}\nexport function isPlainLeftClick(event) {\n  return event && (!isMouseEvent(event) || event.button === 0) && !hasModifierKeys(event);\n}","map":{"version":3,"names":["CustomEventStub","constructor","cancelable","arguments","length","undefined","detail","defaultPrevented","cancelBubble","preventDefault","stopPropagation","createCustomEvent","_ref","fireNonCancelableEvent","handler","event","fireCancelableEvent","sourceEvent","fireKeyboardEvent","reactEvent","keyCode","key","ctrlKey","shiftKey","altKey","metaKey","isMouseEvent","e","button","hasModifierKeys","isPlainLeftClick"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/events/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\n// This is a part of our public types API. We cannot change this in the current major version\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type NonCancelableEventHandler<Detail = {}> = (event: NonCancelableCustomEvent<Detail>) => void;\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type CancelableEventHandler<Detail = {}> = (event: CustomEvent<Detail>) => void;\n\nexport type NonCancelableCustomEvent<DetailType> = Omit<CustomEvent<DetailType>, 'preventDefault'>;\n\nclass CustomEventStub<T> {\n  defaultPrevented = false;\n  cancelBubble = false;\n  constructor(\n    public cancelable: boolean = false,\n    public detail: T | null = null\n  ) {}\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  stopPropagation() {\n    this.cancelBubble = true;\n  }\n}\n\nexport interface BaseKeyDetail {\n  keyCode: number;\n  key: string;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\nexport interface ClickDetail {\n  button: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\nexport interface BaseNavigationDetail {\n  href: string | undefined;\n  external?: boolean;\n  target?: string;\n}\n\nexport function createCustomEvent<T>({ cancelable, detail }: CustomEventInit<T>): CustomEvent<T> {\n  return new CustomEventStub(cancelable, detail) as CustomEvent;\n}\n\nexport function fireNonCancelableEvent<T = null>(handler: NonCancelableEventHandler<T> | undefined, detail?: T) {\n  if (!handler) {\n    return;\n  }\n  const event = createCustomEvent({ cancelable: false, detail });\n  handler(event);\n}\n\nexport function fireCancelableEvent<T>(\n  handler: CancelableEventHandler<T> | undefined,\n  detail: T,\n  sourceEvent?: React.SyntheticEvent | Event\n) {\n  if (!handler) {\n    return false;\n  }\n  const event = createCustomEvent({ cancelable: true, detail });\n  handler(event);\n  if (event.defaultPrevented && sourceEvent) {\n    sourceEvent.preventDefault();\n  }\n  if (event.cancelBubble && sourceEvent) {\n    sourceEvent.stopPropagation();\n  }\n  return event.defaultPrevented;\n}\n\nexport function fireKeyboardEvent(handler: CancelableEventHandler<BaseKeyDetail>, reactEvent: React.KeyboardEvent) {\n  return fireCancelableEvent(\n    handler,\n    {\n      keyCode: reactEvent.keyCode,\n      key: reactEvent.key,\n      ctrlKey: reactEvent.ctrlKey,\n      shiftKey: reactEvent.shiftKey,\n      altKey: reactEvent.altKey,\n      metaKey: reactEvent.metaKey,\n    },\n    reactEvent\n  );\n}\n\nconst isMouseEvent = (e: React.MouseEvent | React.KeyboardEvent): e is React.MouseEvent => {\n  return (e as React.MouseEvent).button !== undefined;\n};\n\nexport function hasModifierKeys(event: React.MouseEvent | React.KeyboardEvent) {\n  return event.ctrlKey || event.altKey || event.shiftKey || event.metaKey;\n}\n\nexport function isPlainLeftClick(event: React.MouseEvent | React.KeyboardEvent) {\n  return event && (!isMouseEvent(event) || event.button === 0) && !hasModifierKeys(event);\n}\n"],"mappings":"AAYA,MAAMA,eAAe;EAGnBC,YAAA,EAEgC;IAAA,IADvBC,UAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAsB,KAAK;IAAA,IAC3BG,MAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAmB,IAAI;IADvB,KAAAD,UAAU,GAAVA,UAAU;IACV,KAAAI,MAAM,GAANA,MAAM;IAJf,KAAAC,gBAAgB,GAAG,KAAK;IACxB,KAAAC,YAAY,GAAG,KAAK;EAIjB;EAEHC,cAAcA,CAAA;IACZ,IAAI,CAACF,gBAAgB,GAAG,IAAI;EAC9B;EAEAG,eAAeA,CAAA;IACb,IAAI,CAACF,YAAY,GAAG,IAAI;EAC1B;;AA0BF,OAAM,SAAUG,iBAAiBA,CAAAC,IAAA,EAA8C;EAAA,IAA1C;IAAEV,UAAU;IAAEI;EAAM,CAAsB,GAAAM,IAAA;EAC7E,OAAO,IAAIZ,eAAe,CAACE,UAAU,EAAEI,MAAM,CAAgB;AAC/D;AAEA,OAAM,SAAUO,sBAAsBA,CAAWC,OAAiD,EAAER,MAAU;EAC5G,IAAI,CAACQ,OAAO,EAAE;IACZ;;EAEF,MAAMC,KAAK,GAAGJ,iBAAiB,CAAC;IAAET,UAAU,EAAE,KAAK;IAAEI;EAAM,CAAE,CAAC;EAC9DQ,OAAO,CAACC,KAAK,CAAC;AAChB;AAEA,OAAM,SAAUC,mBAAmBA,CACjCF,OAA8C,EAC9CR,MAAS,EACTW,WAA0C;EAE1C,IAAI,CAACH,OAAO,EAAE;IACZ,OAAO,KAAK;;EAEd,MAAMC,KAAK,GAAGJ,iBAAiB,CAAC;IAAET,UAAU,EAAE,IAAI;IAAEI;EAAM,CAAE,CAAC;EAC7DQ,OAAO,CAACC,KAAK,CAAC;EACd,IAAIA,KAAK,CAACR,gBAAgB,IAAIU,WAAW,EAAE;IACzCA,WAAW,CAACR,cAAc,EAAE;;EAE9B,IAAIM,KAAK,CAACP,YAAY,IAAIS,WAAW,EAAE;IACrCA,WAAW,CAACP,eAAe,EAAE;;EAE/B,OAAOK,KAAK,CAACR,gBAAgB;AAC/B;AAEA,OAAM,SAAUW,iBAAiBA,CAACJ,OAA8C,EAAEK,UAA+B;EAC/G,OAAOH,mBAAmB,CACxBF,OAAO,EACP;IACEM,OAAO,EAAED,UAAU,CAACC,OAAO;IAC3BC,GAAG,EAAEF,UAAU,CAACE,GAAG;IACnBC,OAAO,EAAEH,UAAU,CAACG,OAAO;IAC3BC,QAAQ,EAAEJ,UAAU,CAACI,QAAQ;IAC7BC,MAAM,EAAEL,UAAU,CAACK,MAAM;IACzBC,OAAO,EAAEN,UAAU,CAACM;GACrB,EACDN,UAAU,CACX;AACH;AAEA,MAAMO,YAAY,GAAIC,CAAyC,IAA2B;EACxF,OAAQA,CAAsB,CAACC,MAAM,KAAKvB,SAAS;AACrD,CAAC;AAED,OAAM,SAAUwB,eAAeA,CAACd,KAA6C;EAC3E,OAAOA,KAAK,CAACO,OAAO,IAAIP,KAAK,CAACS,MAAM,IAAIT,KAAK,CAACQ,QAAQ,IAAIR,KAAK,CAACU,OAAO;AACzE;AAEA,OAAM,SAAUK,gBAAgBA,CAACf,KAA6C;EAC5E,OAAOA,KAAK,KAAK,CAACW,YAAY,CAACX,KAAK,CAAC,IAAIA,KAAK,CAACa,MAAM,KAAK,CAAC,CAAC,IAAI,CAACC,eAAe,CAACd,KAAK,CAAC;AACzF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}