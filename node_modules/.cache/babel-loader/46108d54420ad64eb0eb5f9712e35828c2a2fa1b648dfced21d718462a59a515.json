{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nexport const Label = _ref => {\n  let {\n    label,\n    prefix,\n    highlightText,\n    triggerVariant\n  } = _ref;\n  return React.createElement(\"span\", {\n    className: clsx(styles.label, analyticsSelectors.label, triggerVariant && styles['trigger-variant'])\n  }, prefix && React.createElement(\"span\", {\n    className: clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])\n  }, prefix, \" \"), React.createElement(HighlightMatch, {\n    str: label,\n    highlightText: highlightText\n  }));\n};\nexport const LabelTag = _ref2 => {\n  let {\n    labelTag,\n    highlightText,\n    triggerVariant\n  } = _ref2;\n  return labelTag ? React.createElement(\"span\", {\n    className: clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])\n  }, React.createElement(HighlightMatch, {\n    str: labelTag,\n    highlightText: highlightText\n  })) : null;\n};\nexport const Description = _ref3 => {\n  let {\n    description,\n    highlightedOption,\n    highlightText,\n    selectedOption,\n    triggerVariant\n  } = _ref3;\n  return description ? React.createElement(\"span\", {\n    className: clsx(styles.description, {\n      [styles['trigger-variant']]: triggerVariant,\n      [styles.highlighted]: highlightedOption,\n      [styles.selected]: selectedOption\n    })\n  }, React.createElement(HighlightMatch, {\n    str: description,\n    highlightText: highlightText\n  })) : null;\n};\nexport const Tags = _ref4 => {\n  let {\n    tags,\n    highlightedOption,\n    highlightText,\n    selectedOption,\n    triggerVariant\n  } = _ref4;\n  return tags ? React.createElement(\"span\", {\n    className: clsx(styles.tags, {\n      [styles.highlighted]: highlightedOption,\n      [styles.selected]: selectedOption\n    })\n  }, tags.map((tag, idx) => React.createElement(\"span\", {\n    key: idx,\n    className: clsx(styles.tag, triggerVariant && styles['trigger-variant'])\n  }, React.createElement(HighlightMatch, {\n    str: tag,\n    highlightText: highlightText\n  })))) : null;\n};\nexport const FilteringTags = _ref5 => {\n  let {\n    filteringTags,\n    highlightedOption,\n    highlightText,\n    selectedOption,\n    triggerVariant\n  } = _ref5;\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n  const searchElement = highlightText.toLowerCase();\n  return React.createElement(\"span\", {\n    className: clsx(styles.tags, {\n      [styles.highlighted]: highlightedOption,\n      [styles.selected]: selectedOption\n    })\n  }, filteringTags.map((filteringTag, key) => {\n    const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n    if (match) {\n      return React.createElement(\"span\", {\n        className: clsx(styles.tag, triggerVariant && styles['trigger-variant']),\n        key: key,\n        \"aria-disabled\": true\n      }, React.createElement(HighlightMatch, {\n        str: filteringTag,\n        highlightText: highlightText\n      }));\n    }\n    return null;\n  }));\n};\nexport const OptionIcon = props => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n  return React.createElement(\"span\", {\n    className: clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])\n  }, React.createElement(InternalIcon, Object.assign({}, props)));\n};","map":{"version":3,"names":["React","clsx","InternalIcon","HighlightMatch","analyticsSelectors","styles","Label","_ref","label","prefix","highlightText","triggerVariant","createElement","className","str","LabelTag","_ref2","labelTag","Description","_ref3","description","highlightedOption","selectedOption","highlighted","selected","Tags","_ref4","tags","map","tag","idx","key","FilteringTags","_ref5","filteringTags","searchElement","toLowerCase","filteringTag","match","indexOf","OptionIcon","props","name","url","svg","icon","size","Object","assign"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/option/option-parts.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface LabelProps {\n  label?: string;\n  prefix?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const Label = ({ label, prefix, highlightText, triggerVariant }: LabelProps) => (\n  <span className={clsx(styles.label, analyticsSelectors.label, triggerVariant && styles['trigger-variant'])}>\n    {prefix && (\n      <span className={clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])}>{prefix} </span>\n    )}\n    <HighlightMatch str={label} highlightText={highlightText} />\n  </span>\n);\n\ninterface LabelTagProps {\n  labelTag?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const LabelTag = ({ labelTag, highlightText, triggerVariant }: LabelTagProps) =>\n  labelTag ? (\n    <span className={clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])}>\n      <HighlightMatch str={labelTag} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface DescriptionProps {\n  description?: string;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Description = ({\n  description,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: DescriptionProps) =>\n  description ? (\n    <span\n      className={clsx(styles.description, {\n        [styles['trigger-variant']]: triggerVariant,\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      <HighlightMatch str={description} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface TagsProps {\n  tags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Tags = ({ tags, highlightedOption, highlightText, selectedOption, triggerVariant }: TagsProps) =>\n  tags ? (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {tags.map((tag, idx) => (\n        <span key={idx} className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}>\n          <HighlightMatch str={tag} highlightText={highlightText} />\n        </span>\n      ))}\n    </span>\n  ) : null;\n\ninterface FilteringTagProps {\n  filteringTags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const FilteringTags = ({\n  filteringTags,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: FilteringTagProps) => {\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n\n  const searchElement = highlightText.toLowerCase();\n\n  return (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {filteringTags.map((filteringTag, key) => {\n        const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n        if (match) {\n          return (\n            <span\n              className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}\n              key={key}\n              aria-disabled={true}\n            >\n              <HighlightMatch str={filteringTag} highlightText={highlightText} />\n            </span>\n          );\n        }\n        return null;\n      })}\n    </span>\n  );\n};\n\nexport const OptionIcon = (props: IconProps) => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n\n  return (\n    <span className={clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])}>\n      <InternalIcon {...props} />\n    </span>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}