{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../button/internal';\nimport { isLinkItem } from '../../button-dropdown/utils/utils';\nimport InternalIcon from '../../icon/internal';\nimport MenuDropdown from '../../internal/components/menu-dropdown';\nimport { fireCancelableEvent } from '../../internal/events';\nimport { checkSafeUrl } from '../../internal/utils/check-safe-url';\nimport { joinStrings } from '../../internal/utils/strings';\nimport InternalLink from '../../link/internal';\nimport styles from '../styles.css.js';\nexport default function Utility({\n  hideText,\n  definition,\n  offsetRight\n}) {\n  var _a;\n  const hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;\n  const shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;\n  let ariaLabel = (_a = definition.ariaLabel) !== null && _a !== void 0 ? _a : definition.text;\n  if (definition.type === 'button') {\n    ariaLabel = definition.ariaLabel ? definition.ariaLabel : joinStrings(definition.text, definition.externalIconAriaLabel);\n    checkSafeUrl('TopNavigation', definition.href);\n    if (definition.variant === 'primary-button') {\n      return React.createElement(\"span\", {\n        className: styles[`offset-right-${offsetRight}`]\n      }, React.createElement(InternalButton, {\n        variant: \"primary\",\n        href: definition.href,\n        target: definition.external ? '_blank' : undefined,\n        onClick: definition.onClick,\n        onFollow: definition.onFollow,\n        ariaLabel: ariaLabel,\n        iconName: definition.iconName,\n        iconUrl: definition.iconUrl,\n        iconAlt: definition.iconAlt,\n        iconSvg: definition.iconSvg\n      }, shouldHideText ? null : React.createElement(React.Fragment, null, definition.text, definition.external && React.createElement(React.Fragment, null, ' ', React.createElement(\"span\", {\n        className: clsx(styles['utility-button-external-icon'], styles[`offset-right-${offsetRight}`]),\n        \"aria-label\": definition.externalIconAriaLabel,\n        role: definition.externalIconAriaLabel ? 'img' : undefined\n      }, React.createElement(InternalIcon, {\n        name: \"external\"\n      }))))));\n    } else {\n      // Link\n      return React.createElement(\"span\", {\n        className: styles[`offset-right-${offsetRight}`]\n      }, React.createElement(InternalLink, {\n        variant: \"top-navigation\",\n        href: definition.href,\n        target: definition.target,\n        rel: definition.rel,\n        external: definition.external,\n        onFollow: evt => {\n          fireCancelableEvent(definition.onFollow, {\n            href: definition.href,\n            target: definition.target,\n            external: definition.external\n          }, evt);\n          fireCancelableEvent(definition.onClick, {\n            href: definition.href,\n            target: definition.target,\n            external: definition.external\n          }, evt);\n        },\n        ariaLabel: ariaLabel\n      }, hasIcon && React.createElement(InternalIcon, {\n        name: definition.iconName,\n        url: definition.iconUrl,\n        alt: definition.iconAlt,\n        svg: definition.iconSvg,\n        badge: definition.badge\n      }), !shouldHideText && definition.text && React.createElement(\"span\", {\n        className: hasIcon ? styles['utility-link-icon'] : undefined\n      }, definition.text)));\n    }\n  } else if (definition.type === 'menu-dropdown') {\n    const title = definition.title || definition.text;\n    const shouldShowTitle = shouldHideText || !definition.text;\n    const items = excludeCheckboxes(definition.items);\n    checkSafeUrlRecursively(definition.items);\n    return React.createElement(MenuDropdown, Object.assign({}, definition, {\n      items: items,\n      title: shouldShowTitle ? title : '',\n      ariaLabel: ariaLabel,\n      offsetRight: offsetRight\n    }), !shouldHideText && definition.text);\n  }\n  return null;\n}\nfunction checkSafeUrlRecursively(itemOrGroup) {\n  for (const item of itemOrGroup) {\n    if (isLinkItem(item)) {\n      checkSafeUrl('TopNavigation', item.href);\n    }\n    if ('items' in item) {\n      checkSafeUrlRecursively(item.items);\n    }\n  }\n}\nfunction excludeCheckboxes(items) {\n  return items.map(item => {\n    if (item.itemType === 'checkbox') {\n      return null;\n    }\n    if ('items' in item) {\n      return Object.assign(Object.assign({}, item), {\n        items: excludeCheckboxes(item.items)\n      });\n    }\n    return item;\n  }).filter(item => item !== null);\n}","map":{"version":3,"names":["React","clsx","InternalButton","isLinkItem","InternalIcon","MenuDropdown","fireCancelableEvent","checkSafeUrl","joinStrings","InternalLink","styles","Utility","hideText","definition","offsetRight","hasIcon","iconName","iconUrl","iconAlt","iconSvg","shouldHideText","disableTextCollapse","ariaLabel","_a","text","type","externalIconAriaLabel","href","variant","createElement","className","target","external","undefined","onClick","onFollow","Fragment","role","name","rel","evt","url","alt","svg","badge","title","shouldShowTitle","items","excludeCheckboxes","checkSafeUrlRecursively","Object","assign","itemOrGroup","item","map","itemType","filter"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/top-navigation/parts/utility.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { InternalButton } from '../../button/internal';\nimport { isLinkItem } from '../../button-dropdown/utils/utils';\nimport InternalIcon from '../../icon/internal';\nimport MenuDropdown, { MenuDropdownProps } from '../../internal/components/menu-dropdown';\nimport { fireCancelableEvent } from '../../internal/events';\nimport { checkSafeUrl } from '../../internal/utils/check-safe-url';\nimport { joinStrings } from '../../internal/utils/strings';\nimport InternalLink from '../../link/internal';\nimport { TopNavigationProps } from '../interfaces';\n\nimport styles from '../styles.css.js';\n\nexport interface UtilityProps {\n  hideText: boolean;\n  definition: TopNavigationProps.Utility;\n  offsetRight?: MenuDropdownProps['offsetRight'];\n}\n\nexport default function Utility({ hideText, definition, offsetRight }: UtilityProps) {\n  const hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;\n  const shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;\n  let ariaLabel = definition.ariaLabel ?? definition.text;\n\n  if (definition.type === 'button') {\n    ariaLabel = definition.ariaLabel\n      ? definition.ariaLabel\n      : joinStrings(definition.text, definition.externalIconAriaLabel);\n    checkSafeUrl('TopNavigation', definition.href);\n    if (definition.variant === 'primary-button') {\n      return (\n        <span className={styles[`offset-right-${offsetRight}`]}>\n          <InternalButton\n            variant=\"primary\"\n            href={definition.href}\n            target={definition.external ? '_blank' : undefined}\n            onClick={definition.onClick}\n            onFollow={definition.onFollow}\n            ariaLabel={ariaLabel}\n            iconName={definition.iconName}\n            iconUrl={definition.iconUrl}\n            iconAlt={definition.iconAlt}\n            iconSvg={definition.iconSvg}\n          >\n            {shouldHideText ? null : (\n              <>\n                {definition.text}\n                {definition.external && (\n                  <>\n                    {' '}\n                    <span\n                      className={clsx(styles['utility-button-external-icon'], styles[`offset-right-${offsetRight}`])}\n                      aria-label={definition.externalIconAriaLabel}\n                      role={definition.externalIconAriaLabel ? 'img' : undefined}\n                    >\n                      <InternalIcon name=\"external\" />\n                    </span>\n                  </>\n                )}\n              </>\n            )}\n          </InternalButton>\n        </span>\n      );\n    } else {\n      // Link\n      return (\n        <span className={styles[`offset-right-${offsetRight}`]}>\n          <InternalLink\n            variant=\"top-navigation\"\n            href={definition.href}\n            target={definition.target}\n            rel={definition.rel}\n            external={definition.external}\n            onFollow={evt => {\n              fireCancelableEvent(\n                definition.onFollow,\n                { href: definition.href, target: definition.target, external: definition.external },\n                evt\n              );\n              fireCancelableEvent(\n                definition.onClick,\n                { href: definition.href, target: definition.target, external: definition.external },\n                evt\n              );\n            }}\n            ariaLabel={ariaLabel}\n          >\n            {hasIcon && (\n              <InternalIcon\n                name={definition.iconName}\n                url={definition.iconUrl}\n                alt={definition.iconAlt}\n                svg={definition.iconSvg}\n                badge={definition.badge}\n              />\n            )}\n            {!shouldHideText && definition.text && (\n              <span className={hasIcon ? styles['utility-link-icon'] : undefined}>{definition.text}</span>\n            )}\n          </InternalLink>\n        </span>\n      );\n    }\n  } else if (definition.type === 'menu-dropdown') {\n    const title = definition.title || definition.text;\n    const shouldShowTitle = shouldHideText || !definition.text;\n\n    const items = excludeCheckboxes(definition.items);\n\n    checkSafeUrlRecursively(definition.items);\n\n    return (\n      <MenuDropdown\n        {...definition}\n        items={items}\n        title={shouldShowTitle ? title : ''}\n        ariaLabel={ariaLabel}\n        offsetRight={offsetRight}\n      >\n        {!shouldHideText && definition.text}\n      </MenuDropdown>\n    );\n  }\n\n  return null;\n}\n\nfunction checkSafeUrlRecursively(itemOrGroup: MenuDropdownProps['items']) {\n  for (const item of itemOrGroup) {\n    if (isLinkItem(item)) {\n      checkSafeUrl('TopNavigation', item.href);\n    }\n\n    if ('items' in item) {\n      checkSafeUrlRecursively(item.items);\n    }\n  }\n}\n\nfunction excludeCheckboxes(items: MenuDropdownProps['items']): MenuDropdownProps['items'] {\n  return items\n    .map(item => {\n      if (item.itemType === 'checkbox') {\n        return null;\n      }\n      if ('items' in item) {\n        return {\n          ...item,\n          items: excludeCheckboxes(item.items),\n        };\n      }\n      return item;\n    })\n    .filter(item => item !== null) as MenuDropdownProps['items'];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}