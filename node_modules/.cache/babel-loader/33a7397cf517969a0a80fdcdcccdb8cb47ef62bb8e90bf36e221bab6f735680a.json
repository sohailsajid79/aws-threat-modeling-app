{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport { componentTypes } from '../../../FormRenderer';\nimport validatePasswords from '../../utils/validatePasswords';\nimport AttributeMapping from '../../attributeMapping';\nimport GenericView from '../GenericView';\nconst NewPasswordView = ({\n  requiredAttributes,\n  onChangePassword,\n  onBackToSignIn\n}) => {\n  const schema = useMemo(() => {\n    const formSchema = {\n      header: 'Change Password',\n      headerVariant: 'h2',\n      variant: 'embedded',\n      canCancel: false,\n      submitLabel: 'Confirm',\n      fields: [{\n        component: componentTypes.TEXT_FIELD,\n        isRequired: true,\n        label: 'New Password',\n        name: 'password',\n        type: 'password',\n        placeholder: 'Enter your Password',\n        validate: [{\n          type: 'required'\n        }]\n      }, {\n        component: componentTypes.TEXT_FIELD,\n        isRequired: true,\n        label: 'Confirm New Password',\n        name: 'confirmPassword',\n        type: 'password',\n        placeholder: 'Confirm your Password',\n        validate: [{\n          type: 'required'\n        }]\n      }]\n    };\n    requiredAttributes && formSchema.fields.push(...requiredAttributes.map(attr => ({\n      component: componentTypes.TEXT_FIELD,\n      isRequired: true,\n      label: AttributeMapping[attr]?.displayName || attr,\n      placeholder: `Enter ${AttributeMapping[attr].displayName || attr}`,\n      name: `attributes[${attr}]`,\n      ...AttributeMapping[attr]?.componentSettingsOverride,\n      validate: [{\n        type: 'required'\n      }, ...(AttributeMapping[attr]?.componentSettingsOverride?.validate || [])]\n    })));\n    return formSchema;\n  }, [requiredAttributes]);\n  return _jsx(GenericView, {\n    schema: schema,\n    validate: validatePasswords,\n    onSubmit: onChangePassword,\n    onBackToSignIn: onBackToSignIn\n  });\n};\nexport default NewPasswordView;","map":{"version":3,"names":["jsx","_jsx","useMemo","componentTypes","validatePasswords","AttributeMapping","GenericView","NewPasswordView","requiredAttributes","onChangePassword","onBackToSignIn","schema","formSchema","header","headerVariant","variant","canCancel","submitLabel","fields","component","TEXT_FIELD","isRequired","label","name","type","placeholder","validate","push","map","attr","displayName","componentSettingsOverride","onSubmit"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/NewPasswordView/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { useMemo } from 'react';\nimport { componentTypes } from '../../../FormRenderer';\nimport validatePasswords from '../../utils/validatePasswords';\nimport AttributeMapping from '../../attributeMapping';\nimport GenericView from '../GenericView';\nconst NewPasswordView = ({ requiredAttributes, onChangePassword, onBackToSignIn }) => {\n    const schema = useMemo(() => {\n        const formSchema = {\n            header: 'Change Password',\n            headerVariant: 'h2',\n            variant: 'embedded',\n            canCancel: false,\n            submitLabel: 'Confirm',\n            fields: [\n                {\n                    component: componentTypes.TEXT_FIELD,\n                    isRequired: true,\n                    label: 'New Password',\n                    name: 'password',\n                    type: 'password',\n                    placeholder: 'Enter your Password',\n                    validate: [\n                        {\n                            type: 'required',\n                        },\n                    ],\n                },\n                {\n                    component: componentTypes.TEXT_FIELD,\n                    isRequired: true,\n                    label: 'Confirm New Password',\n                    name: 'confirmPassword',\n                    type: 'password',\n                    placeholder: 'Confirm your Password',\n                    validate: [\n                        {\n                            type: 'required',\n                        },\n                    ],\n                },\n            ],\n        };\n        requiredAttributes &&\n            formSchema.fields.push(...requiredAttributes.map((attr) => ({\n                component: componentTypes.TEXT_FIELD,\n                isRequired: true,\n                label: AttributeMapping[attr]?.displayName || attr,\n                placeholder: `Enter ${AttributeMapping[attr].displayName || attr}`,\n                name: `attributes[${attr}]`,\n                ...AttributeMapping[attr]?.componentSettingsOverride,\n                validate: [\n                    {\n                        type: 'required',\n                    },\n                    ...(AttributeMapping[attr]?.componentSettingsOverride?.validate || []),\n                ],\n            })));\n        return formSchema;\n    }, [requiredAttributes]);\n    return (_jsx(GenericView, { schema: schema, validate: validatePasswords, onSubmit: onChangePassword, onBackToSignIn: onBackToSignIn }));\n};\nexport default NewPasswordView;\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,MAAMC,eAAe,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,gBAAgB;EAAEC;AAAe,CAAC,KAAK;EAClF,MAAMC,MAAM,GAAGT,OAAO,CAAC,MAAM;IACzB,MAAMU,UAAU,GAAG;MACfC,MAAM,EAAE,iBAAiB;MACzBC,aAAa,EAAE,IAAI;MACnBC,OAAO,EAAE,UAAU;MACnBC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,CACJ;QACIC,SAAS,EAAEhB,cAAc,CAACiB,UAAU;QACpCC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE,cAAc;QACrBC,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAE,qBAAqB;QAClCC,QAAQ,EAAE,CACN;UACIF,IAAI,EAAE;QACV,CAAC;MAET,CAAC,EACD;QACIL,SAAS,EAAEhB,cAAc,CAACiB,UAAU;QACpCC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE,sBAAsB;QAC7BC,IAAI,EAAE,iBAAiB;QACvBC,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAE,uBAAuB;QACpCC,QAAQ,EAAE,CACN;UACIF,IAAI,EAAE;QACV,CAAC;MAET,CAAC;IAET,CAAC;IACDhB,kBAAkB,IACdI,UAAU,CAACM,MAAM,CAACS,IAAI,CAAC,GAAGnB,kBAAkB,CAACoB,GAAG,CAAEC,IAAI,KAAM;MACxDV,SAAS,EAAEhB,cAAc,CAACiB,UAAU;MACpCC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAEjB,gBAAgB,CAACwB,IAAI,CAAC,EAAEC,WAAW,IAAID,IAAI;MAClDJ,WAAW,EAAE,SAASpB,gBAAgB,CAACwB,IAAI,CAAC,CAACC,WAAW,IAAID,IAAI,EAAE;MAClEN,IAAI,EAAE,cAAcM,IAAI,GAAG;MAC3B,GAAGxB,gBAAgB,CAACwB,IAAI,CAAC,EAAEE,yBAAyB;MACpDL,QAAQ,EAAE,CACN;QACIF,IAAI,EAAE;MACV,CAAC,EACD,IAAInB,gBAAgB,CAACwB,IAAI,CAAC,EAAEE,yBAAyB,EAAEL,QAAQ,IAAI,EAAE,CAAC;IAE9E,CAAC,CAAC,CAAC,CAAC;IACR,OAAOd,UAAU;EACrB,CAAC,EAAE,CAACJ,kBAAkB,CAAC,CAAC;EACxB,OAAQP,IAAI,CAACK,WAAW,EAAE;IAAEK,MAAM,EAAEA,MAAM;IAAEe,QAAQ,EAAEtB,iBAAiB;IAAE4B,QAAQ,EAAEvB,gBAAgB;IAAEC,cAAc,EAAEA;EAAe,CAAC,CAAC;AAC1I,CAAC;AACD,eAAeH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}