{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useRef } from 'react';\nimport clsx from 'clsx';\nimport InternalBox from '../../../box/internal';\nimport { useInternalI18n } from '../../../i18n/context';\nimport { KeyCode } from '../../keycode';\nimport handleKey from '../../utils/handle-key';\nimport SeriesMarker from '../chart-series-marker';\nimport styles from './styles.css.js';\nexport default memo(ChartLegend);\nfunction ChartLegend(_ref) {\n  let {\n    series,\n    onHighlightChange,\n    highlightedSeries,\n    legendTitle,\n    ariaLabel,\n    plotContainerRef\n  } = _ref;\n  const i18n = useInternalI18n('[charts]');\n  const containerRef = useRef(null);\n  const segmentsRef = useRef([]);\n  const highlightedSeriesIndex = findSeriesIndex(series, highlightedSeries);\n  const highlightInlineStart = () => {\n    var _a;\n    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;\n    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  const highlightInlineEnd = () => {\n    var _a;\n    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;\n    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  const handleKeyPress = event => {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n      handleKey(event, {\n        onInlineStart: () => highlightInlineStart(),\n        onInlineEnd: () => highlightInlineEnd()\n      });\n    }\n  };\n  const handleSelection = index => {\n    if (series[index].datum !== highlightedSeries) {\n      onHighlightChange(series[index].datum);\n    }\n  };\n  const handleBlur = event => {\n    var _a;\n    // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n    if (event.relatedTarget === null || containerRef.current && !containerRef.current.contains(event.relatedTarget) && !((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {\n      onHighlightChange(null);\n    }\n  };\n  const handleMouseOver = s => {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n  const handleMouseLeave = () => {\n    onHighlightChange(null);\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: containerRef,\n    role: \"toolbar\",\n    \"aria-label\": legendTitle || i18n('i18nStrings.legendAriaLabel', ariaLabel),\n    className: styles.root,\n    onKeyDown: handleKeyPress,\n    onBlur: handleBlur\n  }, legendTitle && React.createElement(InternalBox, {\n    fontWeight: \"bold\",\n    className: styles.title\n  }, legendTitle), React.createElement(\"div\", {\n    className: styles.list\n  }, series.map((s, index) => {\n    const someHighlighted = highlightedSeries !== null;\n    const isHighlighted = highlightedSeries === s.datum;\n    const isDimmed = someHighlighted && !isHighlighted;\n    return React.createElement(\"div\", {\n      role: \"button\",\n      key: index,\n      \"aria-pressed\": isHighlighted,\n      className: clsx(styles.marker, {\n        [styles['marker--dimmed']]: isDimmed,\n        [styles['marker--highlighted']]: isHighlighted\n      }),\n      ref: elem => {\n        if (elem) {\n          segmentsRef.current[index] = elem;\n        } else {\n          delete segmentsRef.current[index];\n        }\n      },\n      tabIndex: index === highlightedSeriesIndex || highlightedSeriesIndex === undefined && index === 0 ? 0 : -1,\n      onFocus: () => handleSelection(index),\n      onClick: () => handleSelection(index),\n      onMouseOver: () => handleMouseOver(s.datum),\n      onMouseLeave: handleMouseLeave\n    }, React.createElement(SeriesMarker, {\n      color: s.color,\n      type: s.type\n    }), \" \", s.label);\n  }))));\n}\nfunction findSeriesIndex(series, targetSeries) {\n  for (let index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n  return undefined;\n}","map":{"version":3,"names":["React","memo","useRef","clsx","InternalBox","useInternalI18n","KeyCode","handleKey","SeriesMarker","styles","ChartLegend","_ref","series","onHighlightChange","highlightedSeries","legendTitle","ariaLabel","plotContainerRef","i18n","containerRef","segmentsRef","highlightedSeriesIndex","findSeriesIndex","highlightInlineStart","currentIndex","nextIndex","length","_a","current","focus","highlightInlineEnd","handleKeyPress","event","keyCode","right","left","preventDefault","onInlineStart","onInlineEnd","handleSelection","index","datum","handleBlur","relatedTarget","contains","handleMouseOver","s","handleMouseLeave","createElement","Fragment","ref","role","className","root","onKeyDown","onBlur","fontWeight","title","list","map","someHighlighted","isHighlighted","isDimmed","key","marker","elem","tabIndex","undefined","onFocus","onClick","onMouseOver","onMouseLeave","color","type","label","targetSeries"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/chart-legend/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport InternalBox from '../../../box/internal';\nimport { useInternalI18n } from '../../../i18n/context';\nimport { KeyCode } from '../../keycode';\nimport handleKey from '../../utils/handle-key';\nimport SeriesMarker, { ChartSeriesMarkerType } from '../chart-series-marker';\n\nimport styles from './styles.css.js';\n\nexport interface ChartLegendItem<T> {\n  label: string;\n  color: string;\n  type: ChartSeriesMarkerType;\n  datum: T;\n}\n\nexport interface ChartLegendProps<T> {\n  series: ReadonlyArray<ChartLegendItem<T>>;\n  highlightedSeries: T | null;\n  legendTitle?: string;\n  ariaLabel?: string;\n  plotContainerRef?: React.RefObject<HTMLDivElement>;\n  onHighlightChange: (series: T | null) => void;\n}\n\nexport default memo(ChartLegend) as typeof ChartLegend;\n\nfunction ChartLegend<T>({\n  series,\n  onHighlightChange,\n  highlightedSeries,\n  legendTitle,\n  ariaLabel,\n  plotContainerRef,\n}: ChartLegendProps<T>) {\n  const i18n = useInternalI18n('[charts]');\n  const containerRef = useRef<HTMLDivElement>(null);\n  const segmentsRef = useRef<Record<number, HTMLElement>>([]);\n\n  const highlightedSeriesIndex = findSeriesIndex(series, highlightedSeries);\n\n  const highlightInlineStart = () => {\n    const currentIndex = highlightedSeriesIndex ?? 0;\n    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;\n    segmentsRef.current[nextIndex]?.focus();\n  };\n\n  const highlightInlineEnd = () => {\n    const currentIndex = highlightedSeriesIndex ?? 0;\n    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;\n    segmentsRef.current[nextIndex]?.focus();\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n\n      handleKey(event, {\n        onInlineStart: () => highlightInlineStart(),\n        onInlineEnd: () => highlightInlineEnd(),\n      });\n    }\n  };\n\n  const handleSelection = (index: number) => {\n    if (series[index].datum !== highlightedSeries) {\n      onHighlightChange(series[index].datum);\n    }\n  };\n\n  const handleBlur = (event: React.FocusEvent<Element>) => {\n    // We need to check if the next element to be focused inside the plot container or not\n    // so we don't clear the selected legend in case we are still focusing elements ( legend elements )\n    // inside the plot container\n    if (\n      event.relatedTarget === null ||\n      (containerRef.current &&\n        !containerRef.current.contains(event.relatedTarget) &&\n        !plotContainerRef?.current?.contains(event.relatedTarget))\n    ) {\n      onHighlightChange(null);\n    }\n  };\n\n  const handleMouseOver = (s: T) => {\n    if (s !== highlightedSeries) {\n      onHighlightChange(s);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    onHighlightChange(null);\n  };\n\n  return (\n    <>\n      <div\n        ref={containerRef}\n        role=\"toolbar\"\n        aria-label={legendTitle || i18n('i18nStrings.legendAriaLabel', ariaLabel)}\n        className={styles.root}\n        onKeyDown={handleKeyPress}\n        onBlur={handleBlur}\n      >\n        {legendTitle && (\n          <InternalBox fontWeight=\"bold\" className={styles.title}>\n            {legendTitle}\n          </InternalBox>\n        )}\n\n        <div className={styles.list}>\n          {series.map((s, index) => {\n            const someHighlighted = highlightedSeries !== null;\n            const isHighlighted = highlightedSeries === s.datum;\n            const isDimmed = someHighlighted && !isHighlighted;\n            return (\n              <div\n                role=\"button\"\n                key={index}\n                aria-pressed={isHighlighted}\n                className={clsx(styles.marker, {\n                  [styles['marker--dimmed']]: isDimmed,\n                  [styles['marker--highlighted']]: isHighlighted,\n                })}\n                ref={elem => {\n                  if (elem) {\n                    segmentsRef.current[index] = elem;\n                  } else {\n                    delete segmentsRef.current[index];\n                  }\n                }}\n                tabIndex={\n                  index === highlightedSeriesIndex || (highlightedSeriesIndex === undefined && index === 0) ? 0 : -1\n                }\n                onFocus={() => handleSelection(index)}\n                onClick={() => handleSelection(index)}\n                onMouseOver={() => handleMouseOver(s.datum)}\n                onMouseLeave={handleMouseLeave}\n              >\n                <SeriesMarker color={s.color} type={s.type} /> {s.label}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction findSeriesIndex<T>(series: ReadonlyArray<ChartLegendItem<T>>, targetSeries: null | T): undefined | number {\n  for (let index = 0; index < series.length; index++) {\n    if (series[index].datum === targetSeries) {\n      return index;\n    }\n  }\n  return undefined;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}