{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/Suggestions/index.tsx\",\n  _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\n/** @jsxImportSource @emotion/react */\nimport Button from '@cloudscape-design/components/button';\nimport ExpandableSection from '@cloudscape-design/components/expandable-section';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport { css } from '@emotion/react';\nimport { useMemo, useCallback, useState } from 'react';\nimport threatFieldData from '../../../data/threatFieldData';\nimport getMobileMediaQuery from '../../../utils/getMobileMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst styles = {\n  suggestionGroups: css({\n    display: 'table'\n  }),\n  suggestionGroup: css({\n    display: 'table-row'\n  }),\n  suggestionButtonWrapper: css({\n    'display': 'table-cell',\n    '& > button > span': {\n      whiteSpace: 'nowrap'\n    },\n    [getMobileMediaQuery()]: {\n      display: 'block'\n    }\n  }),\n  suggestion: css({\n    display: 'table-cell',\n    alignSelf: 'center',\n    [getMobileMediaQuery()]: {\n      display: 'block'\n    }\n  })\n};\nconst Suggestions = ({\n  suggestions,\n  setEditor\n}) => {\n  _s();\n  const [showMoresuggestions, setShowMoresuggestions] = useState(suggestions && (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) > 2);\n  const suggestionGroups = useMemo(() => {\n    return suggestions === null || suggestions === void 0 ? void 0 : suggestions.reduce((group, suggestion) => {\n      if (suggestion.indexOf('[') === 0) {\n        const endIndex = suggestion.indexOf(']');\n        const token = suggestion.slice(1, endIndex);\n        const content = suggestion.slice(endIndex + 1).trim();\n        return {\n          ...group,\n          [token]: group[token] ? [...group[token], content] : [content]\n        };\n      }\n      return {\n        ...group,\n        GENERAL: group.GENERAL ? [...group.GENERAL, suggestion] : [suggestion]\n      };\n    }, {});\n  }, [suggestions]);\n  const renderSuggestionGroup = useCallback((groups, token) => {\n    var _threatFieldData$toke;\n    const group = groups[token];\n    return _jsxDEV(\"div\", {\n      css: styles.suggestionGroup,\n      children: [_jsxDEV(\"div\", {\n        css: styles.suggestionButtonWrapper,\n        children: _jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => setEditor(token),\n          children: token !== 'GENERAL' && group && ((_threatFieldData$toke = threatFieldData[token]) === null || _threatFieldData$toke === void 0 ? void 0 : _threatFieldData$toke.displayTitle)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), _jsxDEV(\"div\", {\n        css: styles.suggestion,\n        children: _jsxDEV(SpaceBetween, {\n          direction: \"vertical\",\n          size: \"xxxs\",\n          children: group.map((r, index) => _jsxDEV(\"div\", {\n            children: [\"- \", r]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, token, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }, [setEditor]);\n  if (suggestions && suggestions.length > 0 && suggestionGroups) {\n    return _jsxDEV(ExpandableSection, {\n      headerText: `Suggestions (${suggestions.length})`,\n      defaultExpanded: true,\n      children: _jsxDEV(TextContent, {\n        children: [_jsxDEV(\"div\", {\n          css: styles.suggestionGroups,\n          children: Object.keys(suggestionGroups).slice(0, showMoresuggestions ? Object.keys(suggestionGroups).length : 2).map(token => renderSuggestionGroup(suggestionGroups, token))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), Object.keys(suggestionGroups).length > 2 && _jsxDEV(Button, {\n          iconName: showMoresuggestions ? 'treeview-collapse' : 'treeview-expand',\n          onClick: () => setShowMoresuggestions(prev => !prev),\n          variant: \"link\",\n          children: showMoresuggestions ? 'Show less suggestions' : 'Show more suggestions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n  return null;\n};\n_s(Suggestions, \"sOjFfSAXVHF69o+CfbcMiXMfge8=\");\n_c = Suggestions;\nexport default Suggestions;\nvar _c;\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"names":["Button","ExpandableSection","SpaceBetween","TextContent","css","useMemo","useCallback","useState","threatFieldData","getMobileMediaQuery","jsxDEV","_jsxDEV","styles","suggestionGroups","display","suggestionGroup","suggestionButtonWrapper","whiteSpace","suggestion","alignSelf","Suggestions","suggestions","setEditor","_s","showMoresuggestions","setShowMoresuggestions","length","reduce","group","indexOf","endIndex","token","slice","content","trim","GENERAL","renderSuggestionGroup","groups","_threatFieldData$toke","children","variant","onClick","displayTitle","fileName","_jsxFileName","lineNumber","columnNumber","direction","size","map","r","index","headerText","defaultExpanded","Object","keys","iconName","prev","_c","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/Suggestions/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\n/** @jsxImportSource @emotion/react */\nimport Button from '@cloudscape-design/components/button';\nimport ExpandableSection from '@cloudscape-design/components/expandable-section';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport { css } from '@emotion/react';\nimport { FC, useMemo, useCallback, useState } from 'react';\nimport { ThreatFieldTypes } from '../../../customTypes/threatFieldTypes';\nimport threatFieldData from '../../../data/threatFieldData';\nimport getMobileMediaQuery from '../../../utils/getMobileMediaQuery';\n\nconst styles = {\n  suggestionGroups: css({\n    display: 'table',\n  }),\n  suggestionGroup: css({\n    display: 'table-row',\n  }),\n  suggestionButtonWrapper: css({\n    'display': 'table-cell',\n    '& > button > span': {\n      whiteSpace: 'nowrap',\n    },\n    [getMobileMediaQuery()]: {\n      display: 'block',\n    },\n  }),\n  suggestion: css({\n    display: 'table-cell',\n    alignSelf: 'center',\n    [getMobileMediaQuery()]: {\n      display: 'block',\n    },\n  }),\n};\nexport interface SuggestionsProps {\n  suggestions?: string[];\n  setEditor: (type: ThreatFieldTypes) => void;\n}\n\nconst Suggestions: FC<SuggestionsProps> = ({ suggestions, setEditor }) => {\n  const [showMoresuggestions, setShowMoresuggestions] = useState(suggestions && suggestions?.length > 2);\n\n  const suggestionGroups = useMemo(() => {\n    return suggestions?.reduce((group: { [groupName: string]: string[] }, suggestion: string) => {\n      if (suggestion.indexOf('[') === 0) {\n        const endIndex = suggestion.indexOf(']');\n        const token = suggestion.slice(1, endIndex);\n        const content = suggestion.slice(endIndex + 1).trim();\n        return {\n          ...group,\n          [token]: group[token] ? [...group[token], content] : [content],\n        };\n      }\n\n      return {\n        ...group,\n        GENERAL: group.GENERAL ? [...group.GENERAL, suggestion] : [suggestion],\n      };\n    }, {});\n  }, [suggestions]);\n\n  const renderSuggestionGroup = useCallback((groups: { [groupName: string]: string[] }, token: string) => {\n    const group = groups[token];\n    return (<div key={token} css={styles.suggestionGroup}>\n      <div css={styles.suggestionButtonWrapper}>\n        <Button variant='link' onClick={() => setEditor(token as ThreatFieldTypes)}>\n          {token !== 'GENERAL' && group && threatFieldData[token]?.displayTitle}\n        </Button>\n      </div>\n      <div css={styles.suggestion}>\n        <SpaceBetween direction='vertical' size='xxxs'>\n          {group.map((r, index) => <div key={index}>- {r}</div>)}\n        </SpaceBetween>\n      </div>\n    </div>);\n  }, [setEditor]);\n\n  if (suggestions && suggestions.length > 0 && suggestionGroups) {\n    return (<ExpandableSection headerText={`Suggestions (${suggestions.length})`} defaultExpanded={true}>\n      <TextContent>\n        <div css={styles.suggestionGroups}>\n          {Object.keys(suggestionGroups)\n            .slice(0, showMoresuggestions ? Object.keys(suggestionGroups).length : 2)\n            .map((token) => renderSuggestionGroup(suggestionGroups, token))}\n        </div>\n        {Object.keys(suggestionGroups).length > 2 && (\n          <Button\n            iconName={showMoresuggestions ? 'treeview-collapse' : 'treeview-expand'}\n            onClick={() => setShowMoresuggestions(prev => !prev)}\n            variant='link'>\n            {showMoresuggestions ? 'Show less suggestions' : 'Show more suggestions'}\n          </Button>)}\n      </TextContent>\n    </ExpandableSection>);\n  }\n\n  return null;\n};\n\nexport default Suggestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}