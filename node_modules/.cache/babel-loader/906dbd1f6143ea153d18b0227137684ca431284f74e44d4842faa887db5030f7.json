{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component/index.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context.js';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index.js';\nimport SliderLabels from './slider-labels.js';\nimport SliderTickMarks from './tick-marks.js';\nimport { findLowerAndHigherValues, getPercent, getStepArray, THUMB_READONLY_SIZE, THUMB_SIZE, valuesAreValid } from './utils.js';\nimport styles from './styles.css.js';\nexport default function InternalSlider(_a) {\n  var {\n      value,\n      min,\n      max,\n      onChange,\n      step,\n      disabled,\n      readOnly,\n      ariaLabel,\n      ariaDescription,\n      referenceValues,\n      tickMarks,\n      hideFillLine,\n      valueFormatter,\n      i18nStrings,\n      __internalRootRef = null\n    } = _a,\n    rest = __rest(_a, [\"value\", \"min\", \"max\", \"onChange\", \"step\", \"disabled\", \"readOnly\", \"ariaLabel\", \"ariaDescription\", \"referenceValues\", \"tickMarks\", \"hideFillLine\", \"valueFormatter\", \"i18nStrings\", \"__internalRootRef\"]);\n  const baseProps = getBaseProps(rest);\n  const i18n = useInternalI18n('slider');\n  const handleRef = useRef(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const labelsId = useUniqueId('labels');\n  const {\n    ariaLabelledby,\n    ariaDescribedby,\n    controlId,\n    invalid,\n    warning\n  } = useFormFieldContext(rest);\n  const showWarning = warning && !invalid;\n  if (referenceValues && valuesAreValid(referenceValues) === false) {\n    warnOnce('Slider', 'All reference values must be integers. Non-integer values will not be displayed.');\n  }\n  if (min >= max) {\n    warnOnce('Slider', 'The min value cannot be greater than the max value.');\n  }\n  if (step && step > max - min) {\n    warnOnce('Slider', 'The step value cannot be greater than the difference between the min and max.');\n  }\n  if (step && value !== undefined && (value - min) % step !== 0) {\n    warnOnce('Slider', 'Slider value must be a multiple of the step. The value will round to the nearest step value.');\n  }\n  const getValue = () => {\n    const stepIsValid = step && step < max - min && step > min;\n    if (value === undefined) {\n      // this is the default html input's fallback value\n      return max < min ? min : min + (max - min) / 2;\n    }\n    if (!step) {\n      return value;\n    }\n    // if the value is not a multiple of the step, then find the closest step\n    // and make that the value (this is also the native input behavior)\n    if (step && stepIsValid && (value - min) % step !== 0) {\n      const closest = getStepArray(step, [min, max]).reduce(function (prev, curr) {\n        return Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev;\n      });\n      return closest;\n    }\n    return value;\n  };\n  const sliderValue = getValue();\n  const percent = getPercent(Math.max(Math.min(sliderValue, max), min), [min, max]);\n  const getAriaValueText = () => {\n    if (valueFormatter && valueFormatter(sliderValue)) {\n      return valueFormatter(sliderValue);\n    }\n    if (valueFormatter && !valueFormatter(sliderValue)) {\n      const middleValues = referenceValues ? referenceValues : [];\n      const valueArray = [min, ...middleValues, sliderValue, max];\n      const prevAndNext = findLowerAndHigherValues(valueArray, sliderValue);\n      const previousValue = prevAndNext.lower ? valueFormatter(prevAndNext.lower) : valueFormatter(min);\n      const nextValue = prevAndNext.higher ? valueFormatter(prevAndNext.higher) : valueFormatter(max);\n      const value = sliderValue;\n      return i18n('i18nStrings.valueTextRange', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.valueTextRange(previousValue, value, nextValue), format => format({\n        value,\n        previousValue,\n        nextValue\n      }));\n    }\n    return undefined;\n  };\n  const thumbSize = readOnly ? THUMB_READONLY_SIZE : THUMB_SIZE;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: __internalRootRef,\n    className: clsx(baseProps.className, styles.root)\n  }), showTooltip && React.createElement(Tooltip, {\n    value: valueFormatter ? valueFormatter(sliderValue) : sliderValue,\n    trackRef: handleRef\n  }), React.createElement(\"div\", {\n    ref: handleRef,\n    className: clsx(styles['tooltip-thumb'], {\n      [styles.readonly]: readOnly\n    }),\n    style: {\n      [customCssProps.sliderTooltipPosition]: `calc(${percent}% - ${thumbSize}px)`\n    }\n  }), React.createElement(\"div\", {\n    className: styles.slider\n  }, React.createElement(\"div\", {\n    className: clsx(styles['slider-track'], {\n      [styles.disabled]: disabled,\n      [styles.readonly]: readOnly\n    })\n  }), !hideFillLine && React.createElement(\"div\", {\n    className: clsx(styles['slider-range'], {\n      [styles.error]: invalid,\n      [styles.warning]: showWarning,\n      [styles.active]: isActive,\n      [styles['error-active']]: invalid && isActive,\n      [styles['warning-active']]: showWarning && isActive,\n      [styles.disabled]: disabled,\n      [styles.readonly]: readOnly\n    }),\n    style: {\n      [customCssProps.sliderRangeInlineSize]: `${percent}%`\n    }\n  })), !!step && tickMarks && React.createElement(SliderTickMarks, {\n    hideFillLine: hideFillLine,\n    disabled: disabled,\n    readOnly: readOnly,\n    invalid: invalid,\n    warning: warning,\n    isActive: isActive,\n    step: step,\n    min: min,\n    max: max,\n    value: sliderValue\n  }), React.createElement(\"input\", {\n    // we need to add this because input[type=range] isn't natively focusable in Safari.\n    tabIndex: 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabel && !rest.ariaLabelledby ? undefined : ariaLabelledby,\n    \"aria-describedby\": valueFormatter ? ariaDescribedby ? `${labelsId} ${ariaDescribedby}` : labelsId : ariaDescribedby,\n    \"aria-valuetext\": getAriaValueText(),\n    \"aria-invalid\": invalid ? 'true' : undefined,\n    \"aria-disabled\": readOnly && !disabled ? 'true' : undefined,\n    id: controlId,\n    type: \"range\",\n    min: min,\n    max: max,\n    disabled: disabled,\n    onFocus: () => {\n      setShowTooltip(true);\n      setIsActive(true);\n    },\n    onBlur: () => {\n      setShowTooltip(false);\n      setIsActive(false);\n    },\n    onMouseEnter: () => {\n      setShowTooltip(true);\n    },\n    onMouseLeave: () => {\n      setShowTooltip(false);\n    },\n    onTouchStart: () => {\n      setShowTooltip(true);\n      setIsActive(true);\n    },\n    onTouchEnd: () => {\n      setShowTooltip(false);\n      setIsActive(false);\n    },\n    step: step,\n    value: sliderValue,\n    onChange: event => {\n      if (readOnly) {\n        return;\n      }\n      onChange && fireNonCancelableEvent(onChange, {\n        value: Number(event.target.value)\n      });\n    },\n    className: clsx(styles.thumb, {\n      [styles.error]: invalid,\n      [styles.warning]: showWarning,\n      [styles.disabled]: disabled,\n      [styles.readonly]: readOnly,\n      [styles.min]: sliderValue <= min || max < min,\n      [styles.max]: sliderValue >= max && min < max\n    })\n  }), React.createElement(SliderLabels, {\n    min: min,\n    max: max,\n    referenceValues: referenceValues,\n    valueFormatter: valueFormatter,\n    labelsId: labelsId,\n    ariaDescription: ariaDescription\n  }));\n}","map":{"version":3,"names":["React","useRef","useState","clsx","warnOnce","useInternalI18n","getBaseProps","Tooltip","useFormFieldContext","fireNonCancelableEvent","customCssProps","useUniqueId","SliderLabels","SliderTickMarks","findLowerAndHigherValues","getPercent","getStepArray","THUMB_READONLY_SIZE","THUMB_SIZE","valuesAreValid","styles","InternalSlider","_a","value","min","max","onChange","step","disabled","readOnly","ariaLabel","ariaDescription","referenceValues","tickMarks","hideFillLine","valueFormatter","i18nStrings","__internalRootRef","rest","__rest","baseProps","i18n","handleRef","showTooltip","setShowTooltip","isActive","setIsActive","labelsId","ariaLabelledby","ariaDescribedby","controlId","invalid","warning","showWarning","undefined","getValue","stepIsValid","closest","reduce","prev","curr","Math","abs","sliderValue","percent","getAriaValueText","middleValues","valueArray","prevAndNext","previousValue","lower","nextValue","higher","valueTextRange","format","thumbSize","createElement","Object","assign","ref","className","root","trackRef","readonly","style","sliderTooltipPosition","slider","error","active","sliderRangeInlineSize","tabIndex","id","type","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","event","Number","target","thumb"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/slider/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useInternalI18n } from '../i18n/context';\nimport { getBaseProps } from '../internal/base-component/index.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { useFormFieldContext } from '../internal/context/form-field-context.js';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index.js';\nimport { SliderProps } from './interfaces.js';\nimport SliderLabels from './slider-labels.js';\nimport SliderTickMarks from './tick-marks.js';\nimport {\n  findLowerAndHigherValues,\n  getPercent,\n  getStepArray,\n  THUMB_READONLY_SIZE,\n  THUMB_SIZE,\n  valuesAreValid,\n} from './utils.js';\n\nimport styles from './styles.css.js';\n\nexport interface InternalSliderProps extends SliderProps, InternalBaseComponentProps {}\n\nexport default function InternalSlider({\n  value,\n  min,\n  max,\n  onChange,\n  step,\n  disabled,\n  readOnly,\n  ariaLabel,\n  ariaDescription,\n  referenceValues,\n  tickMarks,\n  hideFillLine,\n  valueFormatter,\n  i18nStrings,\n  __internalRootRef = null,\n  ...rest\n}: InternalSliderProps) {\n  const baseProps = getBaseProps(rest);\n  const i18n = useInternalI18n('slider');\n\n  const handleRef = useRef<HTMLDivElement>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const labelsId = useUniqueId('labels');\n  const { ariaLabelledby, ariaDescribedby, controlId, invalid, warning } = useFormFieldContext(rest);\n\n  const showWarning = warning && !invalid;\n\n  if (referenceValues && valuesAreValid(referenceValues) === false) {\n    warnOnce('Slider', 'All reference values must be integers. Non-integer values will not be displayed.');\n  }\n\n  if (min >= max) {\n    warnOnce('Slider', 'The min value cannot be greater than the max value.');\n  }\n\n  if (step && step > max - min) {\n    warnOnce('Slider', 'The step value cannot be greater than the difference between the min and max.');\n  }\n\n  if (step && value !== undefined && (value - min) % step !== 0) {\n    warnOnce('Slider', 'Slider value must be a multiple of the step. The value will round to the nearest step value.');\n  }\n\n  const getValue = () => {\n    const stepIsValid = step && step < max - min && step > min;\n\n    if (value === undefined) {\n      // this is the default html input's fallback value\n      return max < min ? min : min + (max - min) / 2;\n    }\n\n    if (!step) {\n      return value;\n    }\n\n    // if the value is not a multiple of the step, then find the closest step\n    // and make that the value (this is also the native input behavior)\n    if (step && stepIsValid && (value - min) % step !== 0) {\n      const closest = getStepArray(step, [min, max]).reduce(function (prev, curr) {\n        return Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev;\n      });\n\n      return closest;\n    }\n\n    return value;\n  };\n\n  const sliderValue = getValue();\n  const percent = getPercent(Math.max(Math.min(sliderValue, max), min), [min, max]);\n\n  const getAriaValueText = () => {\n    if (valueFormatter && valueFormatter(sliderValue)) {\n      return valueFormatter(sliderValue);\n    }\n\n    if (valueFormatter && !valueFormatter(sliderValue)) {\n      const middleValues = referenceValues ? referenceValues : [];\n      const valueArray = [min, ...middleValues, sliderValue, max];\n      const prevAndNext = findLowerAndHigherValues(valueArray, sliderValue);\n      const previousValue = prevAndNext.lower ? valueFormatter(prevAndNext.lower) : valueFormatter(min);\n      const nextValue = prevAndNext.higher ? valueFormatter(prevAndNext.higher) : valueFormatter(max);\n      const value = sliderValue;\n\n      return i18n('i18nStrings.valueTextRange', i18nStrings?.valueTextRange(previousValue, value, nextValue), format =>\n        format({ value, previousValue, nextValue })\n      );\n    }\n\n    return undefined;\n  };\n\n  const thumbSize = readOnly ? THUMB_READONLY_SIZE : THUMB_SIZE;\n\n  return (\n    <div {...baseProps} ref={__internalRootRef} className={clsx(baseProps.className, styles.root)}>\n      {showTooltip && (\n        <Tooltip value={valueFormatter ? valueFormatter(sliderValue) : sliderValue} trackRef={handleRef} />\n      )}\n      <div\n        ref={handleRef}\n        className={clsx(styles['tooltip-thumb'], {\n          [styles.readonly]: readOnly,\n        })}\n        style={{\n          [customCssProps.sliderTooltipPosition]: `calc(${percent}% - ${thumbSize}px)`,\n        }}\n      />\n      <div className={styles.slider}>\n        <div\n          className={clsx(styles['slider-track'], {\n            [styles.disabled]: disabled,\n            [styles.readonly]: readOnly,\n          })}\n        />\n\n        {!hideFillLine && (\n          <div\n            className={clsx(styles['slider-range'], {\n              [styles.error]: invalid,\n              [styles.warning]: showWarning,\n              [styles.active]: isActive,\n              [styles['error-active']]: invalid && isActive,\n              [styles['warning-active']]: showWarning && isActive,\n              [styles.disabled]: disabled,\n              [styles.readonly]: readOnly,\n            })}\n            style={{ [customCssProps.sliderRangeInlineSize]: `${percent}%` }}\n          />\n        )}\n      </div>\n      {!!step && tickMarks && (\n        <SliderTickMarks\n          hideFillLine={hideFillLine}\n          disabled={disabled}\n          readOnly={readOnly}\n          invalid={invalid}\n          warning={warning}\n          isActive={isActive}\n          step={step}\n          min={min}\n          max={max}\n          value={sliderValue}\n        />\n      )}\n\n      <input\n        // we need to add this because input[type=range] isn't natively focusable in Safari.\n        tabIndex={0}\n        aria-label={ariaLabel}\n        // aria-labelledby has precedence over aria-label in accessible name calculation.\n        // When aria-label is provided for Input, it should override aria-labelledBy from form-field context.\n        // If both aria-label and aria-labelledby come from Input props, aria-labelledby will be used in accessible name\n        aria-labelledby={ariaLabel && !rest.ariaLabelledby ? undefined : ariaLabelledby}\n        // Slider labels, if present and something other than numbers, should be associated to the input with aria-describedby\n        aria-describedby={\n          valueFormatter ? (ariaDescribedby ? `${labelsId} ${ariaDescribedby}` : labelsId) : ariaDescribedby\n        }\n        aria-valuetext={getAriaValueText()}\n        aria-invalid={invalid ? 'true' : undefined}\n        aria-disabled={readOnly && !disabled ? 'true' : undefined}\n        id={controlId}\n        type=\"range\"\n        min={min}\n        max={max}\n        disabled={disabled}\n        onFocus={() => {\n          setShowTooltip(true);\n          setIsActive(true);\n        }}\n        onBlur={() => {\n          setShowTooltip(false);\n          setIsActive(false);\n        }}\n        onMouseEnter={() => {\n          setShowTooltip(true);\n        }}\n        onMouseLeave={() => {\n          setShowTooltip(false);\n        }}\n        onTouchStart={() => {\n          setShowTooltip(true);\n          setIsActive(true);\n        }}\n        onTouchEnd={() => {\n          setShowTooltip(false);\n          setIsActive(false);\n        }}\n        step={step}\n        value={sliderValue}\n        onChange={event => {\n          if (readOnly) {\n            return;\n          }\n\n          onChange && fireNonCancelableEvent(onChange, { value: Number(event.target.value) });\n        }}\n        className={clsx(styles.thumb, {\n          [styles.error]: invalid,\n          [styles.warning]: showWarning,\n          [styles.disabled]: disabled,\n          [styles.readonly]: readOnly,\n          [styles.min]: sliderValue <= min || max < min,\n          [styles.max]: sliderValue >= max && min < max,\n        })}\n      />\n\n      <SliderLabels\n        min={min}\n        max={max}\n        referenceValues={referenceValues}\n        valueFormatter={valueFormatter}\n        labelsId={labelsId}\n        ariaDescription={ariaDescription}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}