{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MFAView from '../MFAView';\nimport { useCallback } from 'react';\nconst MFA = _ref => {\n  let {\n    cognitoUser,\n    resetView,\n    challengeName,\n    challengeParams\n  } = _ref;\n  const handleMFA = useCallback(async data => {\n    return new Promise((resolve, reject) => {\n      cognitoUser.sendMFACode(data.confirmationCode, {\n        onSuccess(result) {\n          resolve(result);\n          resetView();\n        },\n        onFailure(err) {\n          console.error('Cognito sendMFACode Failure', err);\n          reject(err);\n        }\n      }, challengeName);\n    });\n  }, [resetView, cognitoUser, challengeName]);\n  return _jsx(MFAView, {\n    challengeName: challengeName,\n    challengeParams: challengeParams,\n    onConfirm: handleMFA,\n    onBackToSignIn: resetView\n  });\n};\nexport default MFA;","map":{"version":3,"names":["jsx","_jsx","MFAView","useCallback","MFA","_ref","cognitoUser","resetView","challengeName","challengeParams","handleMFA","data","Promise","resolve","reject","sendMFACode","confirmationCode","onSuccess","result","onFailure","err","console","error","onConfirm","onBackToSignIn"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/MFA/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MFAView from '../MFAView';\nimport { useCallback } from 'react';\nconst MFA = ({ cognitoUser, resetView, challengeName, challengeParams }) => {\n    const handleMFA = useCallback(async (data) => {\n        return new Promise((resolve, reject) => {\n            cognitoUser.sendMFACode(data.confirmationCode, {\n                onSuccess(result) {\n                    resolve(result);\n                    resetView();\n                },\n                onFailure(err) {\n                    console.error('Cognito sendMFACode Failure', err);\n                    reject(err);\n                },\n            }, challengeName);\n        });\n    }, [resetView, cognitoUser, challengeName]);\n    return (_jsx(MFAView, { challengeName: challengeName, challengeParams: challengeParams, onConfirm: handleMFA, onBackToSignIn: resetView }));\n};\nexport default MFA;\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,WAAW,QAAQ,OAAO;AACnC,MAAMC,GAAG,GAAGC,IAAA,IAAgE;EAAA,IAA/D;IAAEC,WAAW;IAAEC,SAAS;IAAEC,aAAa;IAAEC;EAAgB,CAAC,GAAAJ,IAAA;EACnE,MAAMK,SAAS,GAAGP,WAAW,CAAC,MAAOQ,IAAI,IAAK;IAC1C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCR,WAAW,CAACS,WAAW,CAACJ,IAAI,CAACK,gBAAgB,EAAE;QAC3CC,SAASA,CAACC,MAAM,EAAE;UACdL,OAAO,CAACK,MAAM,CAAC;UACfX,SAAS,CAAC,CAAC;QACf,CAAC;QACDY,SAASA,CAACC,GAAG,EAAE;UACXC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;UACjDN,MAAM,CAACM,GAAG,CAAC;QACf;MACJ,CAAC,EAAEZ,aAAa,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACD,SAAS,EAAED,WAAW,EAAEE,aAAa,CAAC,CAAC;EAC3C,OAAQP,IAAI,CAACC,OAAO,EAAE;IAAEM,aAAa,EAAEA,aAAa;IAAEC,eAAe,EAAEA,eAAe;IAAEc,SAAS,EAAEb,SAAS;IAAEc,cAAc,EAAEjB;EAAU,CAAC,CAAC;AAC9I,CAAC;AACD,eAAeH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}