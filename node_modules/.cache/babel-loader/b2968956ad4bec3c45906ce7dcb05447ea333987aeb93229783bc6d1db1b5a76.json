{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsLabelAttribute, getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { DATA_ATTR_FUNNEL_VALUE, getFunnelValueSelector, getSubStepAllSelector, getTextFromSelector } from '../internal/analytics/selectors';\nimport LiveRegion from '../internal/components/live-region';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { useButtonContext } from '../internal/context/button-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { LeftIcon, RightIcon } from './icon-helper';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\nexport const InternalButton = React.forwardRef((_a, ref) => {\n  var {\n      children,\n      iconName,\n      __iconClass,\n      onClick,\n      onFollow,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      ariaExpanded,\n      ariaControls,\n      fullWidth,\n      badge,\n      __nativeAttributes,\n      __internalRootRef = null,\n      __focusable = false,\n      __injectAnalyticsComponentMetadata = false,\n      __title,\n      __emitPerformanceMarks = true,\n      analyticsAction = 'click'\n    } = _a,\n    props = __rest(_a, [\"children\", \"iconName\", \"__iconClass\", \"onClick\", \"onFollow\", \"iconAlign\", \"iconUrl\", \"iconSvg\", \"iconAlt\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"disabledReason\", \"wrapText\", \"href\", \"target\", \"rel\", \"download\", \"formAction\", \"ariaLabel\", \"ariaDescribedby\", \"ariaExpanded\", \"ariaControls\", \"fullWidth\", \"badge\", \"__nativeAttributes\", \"__internalRootRef\", \"__focusable\", \"__injectAnalyticsComponentMetadata\", \"__title\", \"__emitPerformanceMarks\", \"analyticsAction\"]);\n  const [showTooltip, setShowTooltip] = useState(false);\n  checkSafeUrl('Button', href);\n  const isAnchor = Boolean(href);\n  const isNotInteractive = loading || disabled;\n  const isDisabledWithReason = (variant === 'normal' || variant === 'primary') && !!disabledReason && disabled;\n  const hasAriaDisabled = loading && !disabled || disabled && __focusable || isDisabledWithReason;\n  const shouldHaveContent = children && ['icon', 'inline-icon', 'flashbar-icon', 'modal-dismiss'].indexOf(variant) === -1;\n  const buttonRef = useRef(null);\n  useForwardFocus(ref, buttonRef);\n  const buttonContext = useButtonContext();\n  const uniqueId = useUniqueId('button');\n  const {\n    funnelInteractionId\n  } = useFunnel();\n  const {\n    stepNumber,\n    stepNameSelector\n  } = useFunnelStep();\n  const {\n    subStepSelector,\n    subStepNameSelector\n  } = useFunnelSubStep();\n  const performanceMarkAttributes = usePerformanceMarks('primaryButton', variant === 'primary' && __emitPerformanceMarks, buttonRef, () => {\n    var _a;\n    return {\n      loading,\n      disabled,\n      text: (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.innerText\n    };\n  }, [loading, disabled]);\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(disabledReason);\n  const handleClick = event => {\n    if (isNotInteractive) {\n      return event.preventDefault();\n    }\n    if (isAnchor && isPlainLeftClick(event)) {\n      fireCancelableEvent(onFollow, {\n        href,\n        target\n      }, event);\n      if ((iconName === 'external' || target === '_blank') && funnelInteractionId) {\n        const stepName = getTextFromSelector(stepNameSelector);\n        const subStepName = getTextFromSelector(subStepNameSelector);\n        FunnelMetrics.externalLinkInteracted({\n          funnelInteractionId,\n          stepNumber,\n          stepName,\n          stepNameSelector,\n          subStepSelector,\n          subStepName,\n          subStepNameSelector,\n          elementSelector: getFunnelValueSelector(uniqueId),\n          subStepAllSelector: getSubStepAllSelector()\n        });\n      }\n    }\n    const {\n      altKey,\n      button,\n      ctrlKey,\n      metaKey,\n      shiftKey\n    } = event;\n    fireCancelableEvent(onClick, {\n      altKey,\n      button,\n      ctrlKey,\n      metaKey,\n      shiftKey\n    }, event);\n    buttonContext.onClick({\n      variant\n    });\n  };\n  const buttonClass = clsx(props.className, styles.button, styles[`variant-${variant}`], {\n    [styles.disabled]: isNotInteractive,\n    [styles['button-no-wrap']]: !wrapText,\n    [styles['button-no-text']]: !shouldHaveContent,\n    [styles['full-width']]: shouldHaveContent && fullWidth,\n    [styles.link]: isAnchor\n  });\n  const explicitTabIndex = __nativeAttributes && 'tabIndex' in __nativeAttributes ? __nativeAttributes.tabIndex : undefined;\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(buttonRef, {\n    tabIndex: isAnchor && isNotInteractive ? -1 : explicitTabIndex\n  });\n  const analyticsMetadata = disabled ? {} : {\n    action: analyticsAction,\n    detail: {\n      label: {\n        root: 'self'\n      }\n    }\n  };\n  if (__injectAnalyticsComponentMetadata) {\n    analyticsMetadata.component = {\n      name: 'awsui.Button',\n      label: {\n        root: 'self'\n      },\n      properties: {\n        variant,\n        disabled: `${disabled}`\n      }\n    };\n  }\n  const buttonProps = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, props), __nativeAttributes), performanceMarkAttributes), {\n    tabIndex,\n    // https://github.com/microsoft/TypeScript/issues/36659\n    ref: useMergeRefs(buttonRef, __internalRootRef),\n    'aria-label': ariaLabel,\n    'aria-describedby': ariaDescribedby,\n    'aria-expanded': ariaExpanded,\n    'aria-controls': ariaControls,\n    // add ariaLabel as `title` as visible hint text\n    title: __title !== null && __title !== void 0 ? __title : ariaLabel,\n    className: buttonClass,\n    onClick: handleClick,\n    [DATA_ATTR_FUNNEL_VALUE]: uniqueId\n  }), getAnalyticsMetadataAttribute(analyticsMetadata)), getAnalyticsLabelAttribute(children ? `.${analyticsSelectors.label}` : ''));\n  const iconProps = {\n    loading,\n    iconName,\n    iconAlign,\n    iconUrl,\n    iconSvg,\n    iconAlt,\n    variant,\n    badge,\n    iconClass: __iconClass,\n    iconSize: variant === 'modal-dismiss' ? 'medium' : 'normal'\n  };\n  const buttonContent = React.createElement(React.Fragment, null, React.createElement(LeftIcon, Object.assign({}, iconProps)), shouldHaveContent && React.createElement(\"span\", {\n    className: clsx(styles.content, analyticsSelectors.label)\n  }, children), React.createElement(RightIcon, Object.assign({}, iconProps)));\n  const {\n    loadingButtonCount\n  } = useFunnel();\n  useEffect(() => {\n    if (loading) {\n      loadingButtonCount.current++;\n      return () => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        loadingButtonCount.current--;\n      };\n    }\n  }, [loading, loadingButtonCount]);\n  if (isAnchor) {\n    return (\n      // https://github.com/yannickcr/eslint-plugin-react/issues/2962\n      // eslint-disable-next-line react/jsx-no-target-blank\n      React.createElement(React.Fragment, null, React.createElement(\"a\", Object.assign({}, buttonProps, {\n        href: href,\n        target: target,\n        // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target\n        rel: rel !== null && rel !== void 0 ? rel : target === '_blank' ? 'noopener noreferrer' : undefined,\n        \"aria-disabled\": isNotInteractive ? true : undefined,\n        download: download\n      }), buttonContent), loading && loadingText && React.createElement(LiveRegion, null, loadingText))\n    );\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", Object.assign({}, buttonProps, {\n    type: formAction === 'none' ? 'button' : 'submit',\n    disabled: disabled && !__focusable && !isDisabledWithReason,\n    \"aria-disabled\": hasAriaDisabled ? true : undefined,\n    onFocus: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n    onBlur: isDisabledWithReason ? () => setShowTooltip(false) : undefined,\n    onMouseEnter: isDisabledWithReason ? () => setShowTooltip(true) : undefined,\n    onMouseLeave: isDisabledWithReason ? () => setShowTooltip(false) : undefined\n  }, isDisabledWithReason ? targetProps : {}), buttonContent, isDisabledWithReason && React.createElement(React.Fragment, null, descriptionEl, showTooltip && React.createElement(Tooltip, {\n    className: testUtilStyles['disabled-reason-tooltip'],\n    trackRef: buttonRef,\n    value: disabledReason\n  }))), loading && loadingText && React.createElement(LiveRegion, null, loadingText));\n});\nexport default InternalButton;","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","getAnalyticsLabelAttribute","getAnalyticsMetadataAttribute","FunnelMetrics","useFunnel","useFunnelStep","useFunnelSubStep","DATA_ATTR_FUNNEL_VALUE","getFunnelValueSelector","getSubStepAllSelector","getTextFromSelector","LiveRegion","Tooltip","useButtonContext","useSingleTabStopNavigation","fireCancelableEvent","isPlainLeftClick","useForwardFocus","useHiddenDescription","useMergeRefs","usePerformanceMarks","useUniqueId","checkSafeUrl","LeftIcon","RightIcon","analyticsSelectors","styles","testUtilStyles","InternalButton","forwardRef","_a","ref","children","iconName","__iconClass","onClick","onFollow","iconAlign","iconUrl","iconSvg","iconAlt","variant","loading","loadingText","disabled","disabledReason","wrapText","href","target","rel","download","formAction","ariaLabel","ariaDescribedby","ariaExpanded","ariaControls","fullWidth","badge","__nativeAttributes","__internalRootRef","__focusable","__injectAnalyticsComponentMetadata","__title","__emitPerformanceMarks","analyticsAction","props","__rest","showTooltip","setShowTooltip","isAnchor","Boolean","isNotInteractive","isDisabledWithReason","hasAriaDisabled","shouldHaveContent","indexOf","buttonRef","buttonContext","uniqueId","funnelInteractionId","stepNumber","stepNameSelector","subStepSelector","subStepNameSelector","performanceMarkAttributes","text","current","innerText","targetProps","descriptionEl","handleClick","event","preventDefault","stepName","subStepName","externalLinkInteracted","elementSelector","subStepAllSelector","altKey","button","ctrlKey","metaKey","shiftKey","buttonClass","className","link","explicitTabIndex","tabIndex","undefined","analyticsMetadata","action","detail","label","root","component","name","properties","buttonProps","Object","assign","title","iconProps","iconClass","iconSize","buttonContent","createElement","Fragment","content","loadingButtonCount","type","onFocus","onBlur","onMouseEnter","onMouseLeave","trackRef","value"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/button/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  getAnalyticsLabelAttribute,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { FunnelMetrics } from '../internal/analytics';\nimport { useFunnel, useFunnelStep, useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport {\n  DATA_ATTR_FUNNEL_VALUE,\n  getFunnelValueSelector,\n  getSubStepAllSelector,\n  getTextFromSelector,\n} from '../internal/analytics/selectors';\nimport LiveRegion from '../internal/components/live-region';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { useButtonContext } from '../internal/context/button-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireCancelableEvent, isPlainLeftClick } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { GeneratedAnalyticsMetadataButtonFragment } from './analytics-metadata/interfaces';\nimport { ButtonIconProps, LeftIcon, RightIcon } from './icon-helper';\nimport { ButtonProps } from './interfaces';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\n\nexport type InternalButtonProps = Omit<ButtonProps, 'variant'> & {\n  variant?: ButtonProps['variant'] | 'flashbar-icon' | 'breadcrumb-group' | 'menu-trigger' | 'modal-dismiss';\n  badge?: boolean;\n  analyticsAction?: string;\n  __nativeAttributes?:\n    | (React.HTMLAttributes<HTMLAnchorElement> & React.HTMLAttributes<HTMLButtonElement>)\n    | Record<`data-${string}`, string>;\n  __iconClass?: string;\n  __focusable?: boolean;\n  __injectAnalyticsComponentMetadata?: boolean;\n  __title?: string;\n  __emitPerformanceMarks?: boolean;\n} & InternalBaseComponentProps<HTMLAnchorElement | HTMLButtonElement>;\n\nexport const InternalButton = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      __iconClass,\n      onClick,\n      onFollow,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      ariaExpanded,\n      ariaControls,\n      fullWidth,\n      badge,\n      __nativeAttributes,\n      __internalRootRef = null,\n      __focusable = false,\n      __injectAnalyticsComponentMetadata = false,\n      __title,\n      __emitPerformanceMarks = true,\n      analyticsAction = 'click',\n      ...props\n    }: InternalButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    checkSafeUrl('Button', href);\n    const isAnchor = Boolean(href);\n    const isNotInteractive = loading || disabled;\n    const isDisabledWithReason = (variant === 'normal' || variant === 'primary') && !!disabledReason && disabled;\n    const hasAriaDisabled = (loading && !disabled) || (disabled && __focusable) || isDisabledWithReason;\n    const shouldHaveContent =\n      children && ['icon', 'inline-icon', 'flashbar-icon', 'modal-dismiss'].indexOf(variant) === -1;\n\n    const buttonRef = useRef<HTMLElement>(null);\n    useForwardFocus(ref, buttonRef);\n\n    const buttonContext = useButtonContext();\n\n    const uniqueId = useUniqueId('button');\n    const { funnelInteractionId } = useFunnel();\n    const { stepNumber, stepNameSelector } = useFunnelStep();\n    const { subStepSelector, subStepNameSelector } = useFunnelSubStep();\n\n    const performanceMarkAttributes = usePerformanceMarks(\n      'primaryButton',\n      variant === 'primary' && __emitPerformanceMarks,\n      buttonRef,\n      () => ({\n        loading,\n        disabled,\n        text: buttonRef.current?.innerText,\n      }),\n      [loading, disabled]\n    );\n\n    const { targetProps, descriptionEl } = useHiddenDescription(disabledReason);\n\n    const handleClick = (event: React.MouseEvent) => {\n      if (isNotInteractive) {\n        return event.preventDefault();\n      }\n\n      if (isAnchor && isPlainLeftClick(event)) {\n        fireCancelableEvent(onFollow, { href, target }, event);\n\n        if ((iconName === 'external' || target === '_blank') && funnelInteractionId) {\n          const stepName = getTextFromSelector(stepNameSelector);\n          const subStepName = getTextFromSelector(subStepNameSelector);\n\n          FunnelMetrics.externalLinkInteracted({\n            funnelInteractionId,\n            stepNumber,\n            stepName,\n            stepNameSelector,\n            subStepSelector,\n            subStepName,\n            subStepNameSelector,\n            elementSelector: getFunnelValueSelector(uniqueId),\n            subStepAllSelector: getSubStepAllSelector(),\n          });\n        }\n      }\n\n      const { altKey, button, ctrlKey, metaKey, shiftKey } = event;\n      fireCancelableEvent(onClick, { altKey, button, ctrlKey, metaKey, shiftKey }, event);\n      buttonContext.onClick({ variant });\n    };\n\n    const buttonClass = clsx(props.className, styles.button, styles[`variant-${variant}`], {\n      [styles.disabled]: isNotInteractive,\n      [styles['button-no-wrap']]: !wrapText,\n      [styles['button-no-text']]: !shouldHaveContent,\n      [styles['full-width']]: shouldHaveContent && fullWidth,\n      [styles.link]: isAnchor,\n    });\n\n    const explicitTabIndex =\n      __nativeAttributes && 'tabIndex' in __nativeAttributes ? __nativeAttributes.tabIndex : undefined;\n    const { tabIndex } = useSingleTabStopNavigation(buttonRef, {\n      tabIndex: isAnchor && isNotInteractive ? -1 : explicitTabIndex,\n    });\n\n    const analyticsMetadata: GeneratedAnalyticsMetadataButtonFragment = disabled\n      ? {}\n      : {\n          action: analyticsAction,\n          detail: { label: { root: 'self' } },\n        };\n    if (__injectAnalyticsComponentMetadata) {\n      analyticsMetadata.component = {\n        name: 'awsui.Button',\n        label: { root: 'self' },\n        properties: { variant, disabled: `${disabled}` },\n      };\n    }\n\n    const buttonProps = {\n      ...props,\n      ...__nativeAttributes,\n      ...performanceMarkAttributes,\n      tabIndex,\n      // https://github.com/microsoft/TypeScript/issues/36659\n      ref: useMergeRefs(buttonRef, __internalRootRef),\n      'aria-label': ariaLabel,\n      'aria-describedby': ariaDescribedby,\n      'aria-expanded': ariaExpanded,\n      'aria-controls': ariaControls,\n      // add ariaLabel as `title` as visible hint text\n      title: __title ?? ariaLabel,\n      className: buttonClass,\n      onClick: handleClick,\n      [DATA_ATTR_FUNNEL_VALUE]: uniqueId,\n      ...getAnalyticsMetadataAttribute(analyticsMetadata),\n      ...getAnalyticsLabelAttribute(children ? `.${analyticsSelectors.label}` : ''),\n    } as const;\n\n    const iconProps: ButtonIconProps = {\n      loading,\n      iconName,\n      iconAlign,\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant,\n      badge,\n      iconClass: __iconClass,\n      iconSize: variant === 'modal-dismiss' ? 'medium' : 'normal',\n    };\n    const buttonContent = (\n      <>\n        <LeftIcon {...iconProps} />\n        {shouldHaveContent && <span className={clsx(styles.content, analyticsSelectors.label)}>{children}</span>}\n        <RightIcon {...iconProps} />\n      </>\n    );\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    if (isAnchor) {\n      return (\n        // https://github.com/yannickcr/eslint-plugin-react/issues/2962\n        // eslint-disable-next-line react/jsx-no-target-blank\n        <>\n          <a\n            {...buttonProps}\n            href={href}\n            target={target}\n            // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target\n            rel={rel ?? (target === '_blank' ? 'noopener noreferrer' : undefined)}\n            aria-disabled={isNotInteractive ? true : undefined}\n            download={download}\n          >\n            {buttonContent}\n          </a>\n          {loading && loadingText && <LiveRegion>{loadingText}</LiveRegion>}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <button\n          {...buttonProps}\n          type={formAction === 'none' ? 'button' : 'submit'}\n          disabled={disabled && !__focusable && !isDisabledWithReason}\n          aria-disabled={hasAriaDisabled ? true : undefined}\n          onFocus={isDisabledWithReason ? () => setShowTooltip(true) : undefined}\n          onBlur={isDisabledWithReason ? () => setShowTooltip(false) : undefined}\n          onMouseEnter={isDisabledWithReason ? () => setShowTooltip(true) : undefined}\n          onMouseLeave={isDisabledWithReason ? () => setShowTooltip(false) : undefined}\n          {...(isDisabledWithReason ? targetProps : {})}\n        >\n          {buttonContent}\n          {isDisabledWithReason && (\n            <>\n              {descriptionEl}\n              {showTooltip && (\n                <Tooltip\n                  className={testUtilStyles['disabled-reason-tooltip']}\n                  trackRef={buttonRef}\n                  value={disabledReason!}\n                />\n              )}\n            </>\n          )}\n        </button>\n        {loading && loadingText && <LiveRegion>{loadingText}</LiveRegion>}\n      </>\n    );\n  }\n);\n\nexport default InternalButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}