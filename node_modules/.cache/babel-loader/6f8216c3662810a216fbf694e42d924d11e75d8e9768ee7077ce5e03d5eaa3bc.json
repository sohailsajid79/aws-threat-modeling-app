{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useInternalI18n } from '../i18n/context.js';\nimport { getDateLabel, renderMonthAndYear } from './utils/intl';\nexport default function useCalendarLabels({\n  granularity,\n  locale,\n  i18nStrings,\n  previousMonthAriaLabel,\n  nextMonthAriaLabel,\n  todayAriaLabel\n}) {\n  var _a, _b, _c;\n  const i18n = useInternalI18n('calendar');\n  const isMonthPicker = granularity === 'month';\n  const previousButtonLabel = isMonthPicker ? i18n('i18nStrings.previousYearAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.previousYearAriaLabel) : i18n('previousMonthAriaLabel', (_a = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.previousMonthAriaLabel) !== null && _a !== void 0 ? _a : previousMonthAriaLabel);\n  const nextButtonLabel = isMonthPicker ? i18n('i18nStrings.nextYearAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.nextYearAriaLabel) : i18n('nextMonthAriaLabel', (_b = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.nextMonthAriaLabel) !== null && _b !== void 0 ? _b : nextMonthAriaLabel);\n  const currentDateLabel = isMonthPicker ? i18n('i18nStrings.currentMonthAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.currentMonthAriaLabel) : i18n('todayAriaLabel', (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.todayAriaLabel) !== null && _c !== void 0 ? _c : todayAriaLabel);\n  const renderDate = date => isMonthPicker ? date.toLocaleString(locale, {\n    month: 'short'\n  }) : date.getDate().toString();\n  const renderDateAnnouncement = (date, isCurrentDate) => {\n    const formattedDate = isMonthPicker ? renderMonthAndYear(locale, date) : getDateLabel(locale, date, 'short');\n    if (isCurrentDate && currentDateLabel) {\n      return formattedDate + '. ' + currentDateLabel;\n    }\n    return formattedDate;\n  };\n  const renderHeaderText = date => isMonthPicker ? date.getFullYear().toString() : renderMonthAndYear(locale, date);\n  return {\n    previousButtonLabel,\n    nextButtonLabel,\n    renderDate,\n    renderDateAnnouncement,\n    renderHeaderText\n  };\n}","map":{"version":3,"names":["useInternalI18n","getDateLabel","renderMonthAndYear","useCalendarLabels","granularity","locale","i18nStrings","previousMonthAriaLabel","nextMonthAriaLabel","todayAriaLabel","i18n","isMonthPicker","previousButtonLabel","previousYearAriaLabel","_a","nextButtonLabel","nextYearAriaLabel","_b","currentDateLabel","currentMonthAriaLabel","_c","renderDate","date","toLocaleString","month","getDate","toString","renderDateAnnouncement","isCurrentDate","formattedDate","renderHeaderText","getFullYear"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/calendar/use-calendar-labels.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useInternalI18n } from '../i18n/context.js';\nimport { CalendarProps } from './interfaces';\nimport { getDateLabel, renderMonthAndYear } from './utils/intl';\n\nexport default function useCalendarLabels({\n  granularity,\n  locale,\n  i18nStrings,\n  previousMonthAriaLabel,\n  nextMonthAriaLabel,\n  todayAriaLabel,\n}: {\n  granularity: CalendarProps.Granularity;\n  locale: string;\n  i18nStrings?: CalendarProps.I18nStrings;\n  previousMonthAriaLabel?: string;\n  nextMonthAriaLabel?: string;\n  previousYearAriaLabel?: string;\n  todayAriaLabel?: string;\n}) {\n  const i18n = useInternalI18n('calendar');\n\n  const isMonthPicker = granularity === 'month';\n  const previousButtonLabel = isMonthPicker\n    ? i18n('i18nStrings.previousYearAriaLabel', i18nStrings?.previousYearAriaLabel)\n    : i18n('previousMonthAriaLabel', i18nStrings?.previousMonthAriaLabel ?? previousMonthAriaLabel);\n\n  const nextButtonLabel = isMonthPicker\n    ? i18n('i18nStrings.nextYearAriaLabel', i18nStrings?.nextYearAriaLabel)\n    : i18n('nextMonthAriaLabel', i18nStrings?.nextMonthAriaLabel ?? nextMonthAriaLabel);\n\n  const currentDateLabel = isMonthPicker\n    ? i18n('i18nStrings.currentMonthAriaLabel', i18nStrings?.currentMonthAriaLabel)\n    : i18n('todayAriaLabel', i18nStrings?.todayAriaLabel ?? todayAriaLabel);\n\n  const renderDate = (date: Date) =>\n    isMonthPicker ? date.toLocaleString(locale, { month: 'short' }) : date.getDate().toString();\n\n  const renderDateAnnouncement = (date: Date, isCurrentDate: boolean) => {\n    const formattedDate = isMonthPicker ? renderMonthAndYear(locale, date) : getDateLabel(locale, date, 'short');\n    if (isCurrentDate && currentDateLabel) {\n      return formattedDate + '. ' + currentDateLabel;\n    }\n    return formattedDate;\n  };\n\n  const renderHeaderText = (date: Date) =>\n    isMonthPicker ? date.getFullYear().toString() : renderMonthAndYear(locale, date);\n\n  return {\n    previousButtonLabel,\n    nextButtonLabel,\n    renderDate,\n    renderDateAnnouncement,\n    renderHeaderText,\n  };\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,eAAe,QAAQ,oBAAoB;AAEpD,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,cAAc;AAE/D,eAAc,SAAUC,iBAAiBA,CAAC;EACxCC,WAAW;EACXC,MAAM;EACNC,WAAW;EACXC,sBAAsB;EACtBC,kBAAkB;EAClBC;AAAc,CASf;;EACC,MAAMC,IAAI,GAAGV,eAAe,CAAC,UAAU,CAAC;EAExC,MAAMW,aAAa,GAAGP,WAAW,KAAK,OAAO;EAC7C,MAAMQ,mBAAmB,GAAGD,aAAa,GACrCD,IAAI,CAAC,mCAAmC,EAAEJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,qBAAqB,CAAC,GAC7EH,IAAI,CAAC,wBAAwB,EAAE,CAAAI,EAAA,GAAAR,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEC,sBAAsB,cAAAO,EAAA,cAAAA,EAAA,GAAIP,sBAAsB,CAAC;EAEjG,MAAMQ,eAAe,GAAGJ,aAAa,GACjCD,IAAI,CAAC,+BAA+B,EAAEJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEU,iBAAiB,CAAC,GACrEN,IAAI,CAAC,oBAAoB,EAAE,CAAAO,EAAA,GAAAX,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,kBAAkB,cAAAS,EAAA,cAAAA,EAAA,GAAIT,kBAAkB,CAAC;EAErF,MAAMU,gBAAgB,GAAGP,aAAa,GAClCD,IAAI,CAAC,mCAAmC,EAAEJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEa,qBAAqB,CAAC,GAC7ET,IAAI,CAAC,gBAAgB,EAAE,CAAAU,EAAA,GAAAd,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,cAAc,cAAAW,EAAA,cAAAA,EAAA,GAAIX,cAAc,CAAC;EAEzE,MAAMY,UAAU,GAAIC,IAAU,IAC5BX,aAAa,GAAGW,IAAI,CAACC,cAAc,CAAClB,MAAM,EAAE;IAAEmB,KAAK,EAAE;EAAO,CAAE,CAAC,GAAGF,IAAI,CAACG,OAAO,EAAE,CAACC,QAAQ,EAAE;EAE7F,MAAMC,sBAAsB,GAAGA,CAACL,IAAU,EAAEM,aAAsB,KAAI;IACpE,MAAMC,aAAa,GAAGlB,aAAa,GAAGT,kBAAkB,CAACG,MAAM,EAAEiB,IAAI,CAAC,GAAGrB,YAAY,CAACI,MAAM,EAAEiB,IAAI,EAAE,OAAO,CAAC;IAC5G,IAAIM,aAAa,IAAIV,gBAAgB,EAAE;MACrC,OAAOW,aAAa,GAAG,IAAI,GAAGX,gBAAgB;;IAEhD,OAAOW,aAAa;EACtB,CAAC;EAED,MAAMC,gBAAgB,GAAIR,IAAU,IAClCX,aAAa,GAAGW,IAAI,CAACS,WAAW,EAAE,CAACL,QAAQ,EAAE,GAAGxB,kBAAkB,CAACG,MAAM,EAAEiB,IAAI,CAAC;EAElF,OAAO;IACLV,mBAAmB;IACnBG,eAAe;IACfM,UAAU;IACVM,sBAAsB;IACtBG;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}