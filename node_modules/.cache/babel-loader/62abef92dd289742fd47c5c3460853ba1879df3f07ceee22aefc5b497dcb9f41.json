{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { SplitPanelProvider } from '../../split-panel';\nimport styles from './styles.css.js';\nexport function AppLayoutSplitPanelDrawerSideImplementation(_ref) {\n  let {\n    children,\n    appLayoutInternals,\n    splitPanelInternals\n  } = _ref;\n  var _a;\n  const {\n    splitPanelControlId,\n    placement,\n    verticalOffsets\n  } = appLayoutInternals;\n  const drawerTopOffset = (_a = verticalOffsets.drawers) !== null && _a !== void 0 ? _a : placement.insetBlockStart;\n  return React.createElement(SplitPanelProvider, Object.assign({}, splitPanelInternals), React.createElement(\"section\", {\n    id: splitPanelControlId,\n    className: styles['split-panel-side'],\n    style: {\n      blockSize: `calc(100vh - ${drawerTopOffset}px - ${placement.insetBlockEnd}px)`,\n      insetBlockStart: drawerTopOffset\n    }\n  }, children));\n}\nexport function AppLayoutSplitPanelDrawerBottomImplementation(_ref2) {\n  let {\n    children,\n    splitPanelInternals\n  } = _ref2;\n  return React.createElement(SplitPanelProvider, Object.assign({}, splitPanelInternals), children);\n}\nexport const createWidgetizedAppLayoutSplitPanelDrawerSide = createWidgetizedComponent(AppLayoutSplitPanelDrawerSideImplementation);\nexport const createWidgetizedAppLayoutSplitPanelDrawerBottom = createWidgetizedComponent(AppLayoutSplitPanelDrawerBottomImplementation);","map":{"version":3,"names":["React","createWidgetizedComponent","SplitPanelProvider","styles","AppLayoutSplitPanelDrawerSideImplementation","_ref","children","appLayoutInternals","splitPanelInternals","splitPanelControlId","placement","verticalOffsets","drawerTopOffset","_a","drawers","insetBlockStart","createElement","Object","assign","id","className","style","blockSize","insetBlockEnd","AppLayoutSplitPanelDrawerBottomImplementation","_ref2","createWidgetizedAppLayoutSplitPanelDrawerSide","createWidgetizedAppLayoutSplitPanelDrawerBottom"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/visual-refresh-toolbar/split-panel/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { createWidgetizedComponent } from '../../../internal/widgets';\nimport { SplitPanelProvider, SplitPanelProviderProps } from '../../split-panel';\nimport { AppLayoutInternals } from '../interfaces';\n\nimport styles from './styles.css.js';\n\ninterface AppLayoutSplitPanelDrawerSideImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n  splitPanelInternals: SplitPanelProviderProps;\n  children: React.ReactNode;\n}\n\nexport function AppLayoutSplitPanelDrawerSideImplementation({\n  children,\n  appLayoutInternals,\n  splitPanelInternals,\n}: AppLayoutSplitPanelDrawerSideImplementationProps) {\n  const { splitPanelControlId, placement, verticalOffsets } = appLayoutInternals;\n  const drawerTopOffset = verticalOffsets.drawers ?? placement.insetBlockStart;\n  return (\n    <SplitPanelProvider {...splitPanelInternals}>\n      <section\n        id={splitPanelControlId}\n        className={styles['split-panel-side']}\n        style={{\n          blockSize: `calc(100vh - ${drawerTopOffset}px - ${placement.insetBlockEnd}px)`,\n          insetBlockStart: drawerTopOffset,\n        }}\n      >\n        {children}\n      </section>\n    </SplitPanelProvider>\n  );\n}\n\nexport interface AppLayoutSplitPanelDrawerBottomImplementationProps {\n  appLayoutInternals: AppLayoutInternals;\n  splitPanelInternals: SplitPanelProviderProps;\n  children: React.ReactNode;\n}\n\nexport function AppLayoutSplitPanelDrawerBottomImplementation({\n  children,\n  splitPanelInternals,\n}: AppLayoutSplitPanelDrawerBottomImplementationProps) {\n  return <SplitPanelProvider {...splitPanelInternals}>{children}</SplitPanelProvider>;\n}\n\nexport const createWidgetizedAppLayoutSplitPanelDrawerSide = createWidgetizedComponent(\n  AppLayoutSplitPanelDrawerSideImplementation\n);\n\nexport const createWidgetizedAppLayoutSplitPanelDrawerBottom = createWidgetizedComponent(\n  AppLayoutSplitPanelDrawerBottomImplementation\n);\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,yBAAyB,QAAQ,2BAA2B;AACrE,SAASC,kBAAkB,QAAiC,mBAAmB;AAG/E,OAAOC,MAAM,MAAM,iBAAiB;AAQpC,OAAM,SAAUC,2CAA2CA,CAAAC,IAAA,EAIR;EAAA,IAJS;IAC1DC,QAAQ;IACRC,kBAAkB;IAClBC;EAAmB,CAC8B,GAAAH,IAAA;;EACjD,MAAM;IAAEI,mBAAmB;IAAEC,SAAS;IAAEC;EAAe,CAAE,GAAGJ,kBAAkB;EAC9E,MAAMK,eAAe,GAAG,CAAAC,EAAA,GAAAF,eAAe,CAACG,OAAO,cAAAD,EAAA,cAAAA,EAAA,GAAIH,SAAS,CAACK,eAAe;EAC5E,OACEf,KAAA,CAAAgB,aAAA,CAACd,kBAAkB,EAAAe,MAAA,CAAAC,MAAA,KAAKV,mBAAmB,GACzCR,KAAA,CAAAgB,aAAA;IACEG,EAAE,EAAEV,mBAAmB;IACvBW,SAAS,EAAEjB,MAAM,CAAC,kBAAkB,CAAC;IACrCkB,KAAK,EAAE;MACLC,SAAS,EAAE,gBAAgBV,eAAe,QAAQF,SAAS,CAACa,aAAa,KAAK;MAC9ER,eAAe,EAAEH;;EAClB,GAEAN,QAAQ,CACD,CACS;AAEzB;AAQA,OAAM,SAAUkB,6CAA6CA,CAAAC,KAAA,EAGR;EAAA,IAHS;IAC5DnB,QAAQ;IACRE;EAAmB,CACgC,GAAAiB,KAAA;EACnD,OAAOzB,KAAA,CAAAgB,aAAA,CAACd,kBAAkB,EAAAe,MAAA,CAAAC,MAAA,KAAKV,mBAAmB,GAAGF,QAAQ,CAAsB;AACrF;AAEA,OAAO,MAAMoB,6CAA6C,GAAGzB,yBAAyB,CACpFG,2CAA2C,CAC5C;AAED,OAAO,MAAMuB,+CAA+C,GAAG1B,yBAAyB,CACtFuB,6CAA6C,CAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}