{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\nimport PopoverBody from '../../../popover/body';\nimport PopoverContainer from '../../../popover/container';\nimport { getBaseProps } from '../../base-component';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport { nodeBelongs } from '../../utils/node-belongs';\nimport popoverStyles from '../../../popover/styles.css.js';\nimport styles from './styles.css.js';\nexport default React.forwardRef(ChartPopover);\nfunction ChartPopover(_a, ref) {\n  var {\n      position = 'right',\n      size = 'medium',\n      fixedWidth = false,\n      dismissButton = false,\n      dismissAriaLabel,\n      children,\n      title,\n      trackRef,\n      trackKey,\n      onDismiss,\n      container,\n      onMouseEnter,\n      onMouseLeave,\n      onBlur\n    } = _a,\n    restProps = __rest(_a, [\"position\", \"size\", \"fixedWidth\", \"dismissButton\", \"dismissAriaLabel\", \"children\", \"title\", \"trackRef\", \"trackKey\", \"onDismiss\", \"container\", \"onMouseEnter\", \"onMouseLeave\", \"onBlur\"]);\n  const baseProps = getBaseProps(restProps);\n  const popoverObjectRef = useRef(null);\n  const popoverRef = useMergeRefs(popoverObjectRef, ref);\n  useEffect(() => {\n    const onDocumentClick = event => {\n      if (event.target && !nodeBelongs(popoverObjectRef.current, event.target) &&\n      // click not in popover\n      !nodeContains(container, event.target) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n    document.addEventListener('mousedown', onDocumentClick, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick, {\n        capture: true\n      });\n    };\n  }, [container, onDismiss]);\n  // In chart popovers, dismiss button is present when they are pinned, so both values are equivalent.\n  const isPinned = dismissButton;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(popoverStyles.root, styles.root, baseProps.className),\n    ref: popoverRef,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onBlur: onBlur,\n    // The tabIndex makes it so that clicking inside popover assigns this element as blur target.\n    // That is necessary in charts to ensure the blur target is within the chart and no cleanup is needed.\n    tabIndex: -1\n  }), React.createElement(PopoverContainer, {\n    size: size,\n    fixedWidth: fixedWidth,\n    position: position,\n    trackRef: trackRef,\n    trackKey: trackKey,\n    arrow: position => React.createElement(\"div\", {\n      className: clsx(popoverStyles.arrow, popoverStyles[`arrow-position-${position}`])\n    }, React.createElement(\"div\", {\n      className: popoverStyles['arrow-outer']\n    }), React.createElement(\"div\", {\n      className: popoverStyles['arrow-inner']\n    })),\n    keepPosition: true,\n    allowVerticalOverflow: true,\n    allowScrollToFit: isPinned\n  }, React.createElement(\"div\", {\n    className: styles['hover-area']\n  }, React.createElement(PopoverBody, {\n    dismissButton: dismissButton,\n    dismissAriaLabel: dismissAriaLabel,\n    header: title,\n    onDismiss: onDismiss,\n    overflowVisible: \"content\",\n    className: styles['popover-body']\n  }, children))));\n}","map":{"version":3,"names":["React","useEffect","useRef","clsx","nodeContains","PopoverBody","PopoverContainer","getBaseProps","useMergeRefs","nodeBelongs","popoverStyles","styles","forwardRef","ChartPopover","_a","ref","position","size","fixedWidth","dismissButton","dismissAriaLabel","children","title","trackRef","trackKey","onDismiss","container","onMouseEnter","onMouseLeave","onBlur","restProps","__rest","baseProps","popoverObjectRef","popoverRef","onDocumentClick","event","target","current","document","addEventListener","capture","removeEventListener","isPinned","createElement","Object","assign","className","root","tabIndex","arrow","keepPosition","allowVerticalOverflow","allowScrollToFit","header","overflowVisible"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/chart-popover/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { nodeContains } from '@cloudscape-design/component-toolkit/dom';\n\nimport PopoverBody from '../../../popover/body';\nimport PopoverContainer from '../../../popover/container';\nimport { PopoverProps } from '../../../popover/interfaces';\nimport { getBaseProps } from '../../base-component';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport { nodeBelongs } from '../../utils/node-belongs';\n\nimport popoverStyles from '../../../popover/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface ChartPopoverProps extends PopoverProps {\n  /** Title of the popover */\n  title?: React.ReactNode;\n\n  /** References the element the container is positioned against. */\n  trackRef: React.RefObject<HTMLElement | SVGElement>;\n  /**\n    Used to update the container position in case track or track position changes:\n    \n    const trackRef = useRef<Element>(null)\n    return (<>\n      <Track style={getPosition(selectedItemId)} ref={trackRef} />\n      <PopoverContainer trackRef={trackRef} trackKey={selectedItemId} .../>\n    </>)\n  */\n  trackKey?: string | number;\n\n  /** Optional container element that prevents any clicks in there from dismissing the popover */\n  container: Element | null;\n\n  /** Event that is fired when the popover is dismissed */\n  onDismiss: (outsideClick?: boolean) => void;\n\n  /** Fired when the pointer enters the hoverable area around the popover */\n  onMouseEnter?: (event: React.MouseEvent) => void;\n\n  /** Fired when the pointer leaves the hoverable area around the popover */\n  onMouseLeave?: (event: React.MouseEvent) => void;\n\n  onBlur?: (event: React.FocusEvent) => void;\n\n  /** Popover content */\n  children?: React.ReactNode;\n}\n\nexport default React.forwardRef(ChartPopover);\n\nfunction ChartPopover(\n  {\n    position = 'right',\n    size = 'medium',\n    fixedWidth = false,\n    dismissButton = false,\n    dismissAriaLabel,\n\n    children,\n\n    title,\n    trackRef,\n    trackKey,\n    onDismiss,\n    container,\n\n    onMouseEnter,\n    onMouseLeave,\n    onBlur,\n\n    ...restProps\n  }: ChartPopoverProps,\n  ref: React.Ref<HTMLElement>\n) {\n  const baseProps = getBaseProps(restProps);\n  const popoverObjectRef = useRef<HTMLDivElement | null>(null);\n\n  const popoverRef = useMergeRefs(popoverObjectRef, ref);\n\n  useEffect(() => {\n    const onDocumentClick = (event: MouseEvent) => {\n      if (\n        event.target &&\n        !nodeBelongs(popoverObjectRef.current, event.target as Element) && // click not in popover\n        !nodeContains(container, event.target as Element) // click not in segment\n      ) {\n        onDismiss(true);\n      }\n    };\n\n    document.addEventListener('mousedown', onDocumentClick, { capture: true });\n    return () => {\n      document.removeEventListener('mousedown', onDocumentClick, { capture: true });\n    };\n  }, [container, onDismiss]);\n\n  // In chart popovers, dismiss button is present when they are pinned, so both values are equivalent.\n  const isPinned = dismissButton;\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(popoverStyles.root, styles.root, baseProps.className)}\n      ref={popoverRef}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onBlur={onBlur}\n      // The tabIndex makes it so that clicking inside popover assigns this element as blur target.\n      // That is necessary in charts to ensure the blur target is within the chart and no cleanup is needed.\n      tabIndex={-1}\n    >\n      <PopoverContainer\n        size={size}\n        fixedWidth={fixedWidth}\n        position={position}\n        trackRef={trackRef}\n        trackKey={trackKey}\n        arrow={position => (\n          <div className={clsx(popoverStyles.arrow, popoverStyles[`arrow-position-${position}`])}>\n            <div className={popoverStyles['arrow-outer']} />\n            <div className={popoverStyles['arrow-inner']} />\n          </div>\n        )}\n        keepPosition={true}\n        allowVerticalOverflow={true}\n        allowScrollToFit={isPinned}\n      >\n        <div className={styles['hover-area']}>\n          <PopoverBody\n            dismissButton={dismissButton}\n            dismissAriaLabel={dismissAriaLabel}\n            header={title}\n            onDismiss={onDismiss}\n            overflowVisible=\"content\"\n            className={styles['popover-body']}\n          >\n            {children}\n          </PopoverBody>\n        </div>\n      </PopoverContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}