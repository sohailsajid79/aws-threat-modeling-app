{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { ComponentMetrics } from '../../analytics';\nimport { useRandomId } from '../use-unique-id';\nfunction useTaskInteractionAttribute(elementRef, value) {\n  const attributeName = 'data-analytics-task-interaction-id';\n  const attributeValueRef = useRef();\n  useEffect(() => {\n    var _a;\n    // With this effect, we apply the attribute only on the client, to avoid hydration errors.\n    attributeValueRef.current = value;\n    (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.setAttribute(attributeName, value);\n  }, [value, elementRef]);\n  return {\n    [attributeName]: attributeValueRef.current\n  };\n}\nexport function useComponentAnalytics(componentName, elementRef, getDetails) {\n  const taskInteractionId = useRandomId();\n  const attributes = useTaskInteractionAttribute(elementRef, taskInteractionId);\n  useEffect(() => {\n    ComponentMetrics.componentMounted({\n      taskInteractionId,\n      componentName,\n      details: getDetails()\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [taskInteractionId]);\n  return {\n    taskInteractionId,\n    attributes\n  };\n}","map":{"version":3,"names":["useEffect","useRef","ComponentMetrics","useRandomId","useTaskInteractionAttribute","elementRef","value","attributeName","attributeValueRef","current","_a","setAttribute","useComponentAnalytics","componentName","getDetails","taskInteractionId","attributes","componentMounted","details"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/hooks/use-component-analytics/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useEffect, useRef } from 'react';\n\nimport { ComponentMetrics } from '../../analytics';\nimport { useRandomId } from '../use-unique-id';\n\nfunction useTaskInteractionAttribute(elementRef: React.RefObject<HTMLElement>, value: string) {\n  const attributeName = 'data-analytics-task-interaction-id';\n\n  const attributeValueRef = useRef<string | undefined>();\n\n  useEffect(() => {\n    // With this effect, we apply the attribute only on the client, to avoid hydration errors.\n    attributeValueRef.current = value;\n    elementRef.current?.setAttribute(attributeName, value);\n  }, [value, elementRef]);\n\n  return {\n    [attributeName]: attributeValueRef.current,\n  };\n}\n\nexport function useComponentAnalytics(\n  componentName: string,\n  elementRef: React.RefObject<HTMLElement>,\n  getDetails: () => Record<string, string | boolean | number | undefined>\n) {\n  const taskInteractionId = useRandomId();\n  const attributes = useTaskInteractionAttribute(elementRef, taskInteractionId);\n\n  useEffect(() => {\n    ComponentMetrics.componentMounted({ taskInteractionId, componentName, details: getDetails() });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [taskInteractionId]);\n\n  return { taskInteractionId, attributes };\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,2BAA2BA,CAACC,UAAwC,EAAEC,KAAa;EAC1F,MAAMC,aAAa,GAAG,oCAAoC;EAE1D,MAAMC,iBAAiB,GAAGP,MAAM,EAAsB;EAEtDD,SAAS,CAAC,MAAK;;IACb;IACAQ,iBAAiB,CAACC,OAAO,GAAGH,KAAK;IACjC,CAAAI,EAAA,GAAAL,UAAU,CAACI,OAAO,cAAAC,EAAA,uBAAAA,EAAA,CAAEC,YAAY,CAACJ,aAAa,EAAED,KAAK,CAAC;EACxD,CAAC,EAAE,CAACA,KAAK,EAAED,UAAU,CAAC,CAAC;EAEvB,OAAO;IACL,CAACE,aAAa,GAAGC,iBAAiB,CAACC;GACpC;AACH;AAEA,OAAM,SAAUG,qBAAqBA,CACnCC,aAAqB,EACrBR,UAAwC,EACxCS,UAAuE;EAEvE,MAAMC,iBAAiB,GAAGZ,WAAW,EAAE;EACvC,MAAMa,UAAU,GAAGZ,2BAA2B,CAACC,UAAU,EAAEU,iBAAiB,CAAC;EAE7Ef,SAAS,CAAC,MAAK;IACbE,gBAAgB,CAACe,gBAAgB,CAAC;MAAEF,iBAAiB;MAAEF,aAAa;MAAEK,OAAO,EAAEJ,UAAU;IAAE,CAAE,CAAC;IAC9F;EACF,CAAC,EAAE,CAACC,iBAAiB,CAAC,CAAC;EAEvB,OAAO;IAAEA,iBAAiB;IAAEC;EAAU,CAAE;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}