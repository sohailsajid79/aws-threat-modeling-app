{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalTokenGroup from './internal';\nexport default function TokenGroup(_a) {\n  var {\n      items = [],\n      alignment = 'horizontal'\n    } = _a,\n    props = __rest(_a, [\"items\", \"alignment\"]);\n  const baseComponentProps = useBaseComponent('TokenGroup', {\n    props: {\n      alignment,\n      disableOuterPadding: props.disableOuterPadding,\n      limit: props.limit,\n      readOnly: props.readOnly\n    }\n  });\n  const componentAnalyticsMetadata = {\n    name: 'awsui.TokenGroup',\n    label: 'invalid',\n    properties: {\n      itemsCount: `${items.length}`\n    }\n  };\n  return React.createElement(InternalTokenGroup, Object.assign({\n    items: items,\n    alignment: alignment\n  }, props, baseComponentProps, getAnalyticsMetadataAttribute({\n    component: componentAnalyticsMetadata\n  })));\n}\napplyDisplayName(TokenGroup, 'TokenGroup');","map":{"version":3,"names":["React","getAnalyticsMetadataAttribute","useBaseComponent","applyDisplayName","InternalTokenGroup","TokenGroup","_a","items","alignment","props","__rest","baseComponentProps","disableOuterPadding","limit","readOnly","componentAnalyticsMetadata","name","label","properties","itemsCount","length","createElement","Object","assign","component"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/token-group/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataTokenGroupComponent } from './analytics-metadata/interfaces';\nimport { TokenGroupProps } from './interfaces';\nimport InternalTokenGroup from './internal';\n\nexport { TokenGroupProps };\n\nexport default function TokenGroup({ items = [], alignment = 'horizontal', ...props }: TokenGroupProps) {\n  const baseComponentProps = useBaseComponent('TokenGroup', {\n    props: { alignment, disableOuterPadding: props.disableOuterPadding, limit: props.limit, readOnly: props.readOnly },\n  });\n\n  const componentAnalyticsMetadata: GeneratedAnalyticsMetadataTokenGroupComponent = {\n    name: 'awsui.TokenGroup',\n    label: 'invalid',\n    properties: {\n      itemsCount: `${items.length}`,\n    },\n  };\n\n  return (\n    <InternalTokenGroup\n      items={items}\n      alignment={alignment}\n      {...props}\n      {...baseComponentProps}\n      {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n    />\n  );\n}\n\napplyDisplayName(TokenGroup, 'TokenGroup');\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAGvE,OAAOC,kBAAkB,MAAM,YAAY;AAI3C,eAAc,SAAUC,UAAUA,CAACC,EAAmE;MAAnE;MAAEC,KAAK,GAAG,EAAE;MAAEC,SAAS,GAAG;IAAY,IAAAF,EAA6B;IAAxBG,KAAK,GAAAC,MAAA,CAAAJ,EAAA,EAAhD,sBAAkD,CAAF;EACjF,MAAMK,kBAAkB,GAAGT,gBAAgB,CAAC,YAAY,EAAE;IACxDO,KAAK,EAAE;MAAED,SAAS;MAAEI,mBAAmB,EAAEH,KAAK,CAACG,mBAAmB;MAAEC,KAAK,EAAEJ,KAAK,CAACI,KAAK;MAAEC,QAAQ,EAAEL,KAAK,CAACK;IAAQ;GACjH,CAAC;EAEF,MAAMC,0BAA0B,GAAkD;IAChFC,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE;MACVC,UAAU,EAAE,GAAGZ,KAAK,CAACa,MAAM;;GAE9B;EAED,OACEpB,KAAA,CAAAqB,aAAA,CAACjB,kBAAkB,EAAAkB,MAAA,CAAAC,MAAA;IACjBhB,KAAK,EAAEA,KAAK;IACZC,SAAS,EAAEA;EAAS,GAChBC,KAAK,EACLE,kBAAkB,EAClBV,6BAA6B,CAAC;IAAEuB,SAAS,EAAET;EAA0B,CAAE,CAAC,EAC5E;AAEN;AAEAZ,gBAAgB,CAACE,UAAU,EAAE,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}