{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { padLeftZeros } from '../strings';\nexport function formatTimeOffsetISO(isoDate, offsetInMinutes) {\n  offsetInMinutes = defaultToLocal(isoDate, offsetInMinutes);\n  const {\n    hours,\n    minutes\n  } = getMinutesAndHours(offsetInMinutes);\n  const sign = offsetInMinutes < 0 ? '-' : '+';\n  const formattedOffset = `${sign}${formatISO2Digits(hours)}:${formatISO2Digits(minutes)}`;\n  return formattedOffset;\n}\nexport function formatTimeOffsetLocalized(isoDate, offsetInMinutes) {\n  offsetInMinutes = defaultToLocal(isoDate, offsetInMinutes);\n  if (offsetInMinutes === 0) {\n    return '(UTC)';\n  }\n  const {\n    hours,\n    minutes\n  } = getMinutesAndHours(offsetInMinutes);\n  const sign = offsetInMinutes < 0 ? '-' : '+';\n  const formattedMinutes = minutes === 0 ? '' : `:${minutes}`;\n  const formattedOffset = `(UTC${sign}${hours}${formattedMinutes})`;\n  return formattedOffset;\n}\nfunction defaultToLocal(isoDate, offsetInMinutes) {\n  return offsetInMinutes !== null && offsetInMinutes !== void 0 ? offsetInMinutes : 0 - new Date(isoDate).getTimezoneOffset();\n}\nfunction getMinutesAndHours(minutes) {\n  return {\n    hours: Math.floor(Math.abs(minutes) / 60),\n    minutes: Math.abs(minutes % 60)\n  };\n}\nfunction formatISO2Digits(n) {\n  return padLeftZeros(n.toFixed(0), 2);\n}","map":{"version":3,"names":["padLeftZeros","formatTimeOffsetISO","isoDate","offsetInMinutes","defaultToLocal","hours","minutes","getMinutesAndHours","sign","formattedOffset","formatISO2Digits","formatTimeOffsetLocalized","formattedMinutes","Date","getTimezoneOffset","Math","floor","abs","n","toFixed"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/utils/date-time/format-time-offset.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { padLeftZeros } from '../strings';\n\nexport function formatTimeOffsetISO(isoDate: string, offsetInMinutes?: number) {\n  offsetInMinutes = defaultToLocal(isoDate, offsetInMinutes);\n  const { hours, minutes } = getMinutesAndHours(offsetInMinutes);\n\n  const sign = offsetInMinutes < 0 ? '-' : '+';\n  const formattedOffset = `${sign}${formatISO2Digits(hours)}:${formatISO2Digits(minutes)}`;\n\n  return formattedOffset;\n}\n\nexport function formatTimeOffsetLocalized(isoDate: string, offsetInMinutes?: number) {\n  offsetInMinutes = defaultToLocal(isoDate, offsetInMinutes);\n  if (offsetInMinutes === 0) {\n    return '(UTC)';\n  }\n  const { hours, minutes } = getMinutesAndHours(offsetInMinutes);\n\n  const sign = offsetInMinutes < 0 ? '-' : '+';\n  const formattedMinutes = minutes === 0 ? '' : `:${minutes}`;\n  const formattedOffset = `(UTC${sign}${hours}${formattedMinutes})`;\n\n  return formattedOffset;\n}\n\nfunction defaultToLocal(isoDate: string, offsetInMinutes?: number) {\n  return offsetInMinutes ?? 0 - new Date(isoDate).getTimezoneOffset();\n}\n\nfunction getMinutesAndHours(minutes: number) {\n  return { hours: Math.floor(Math.abs(minutes) / 60), minutes: Math.abs(minutes % 60) };\n}\n\nfunction formatISO2Digits(n: number) {\n  return padLeftZeros(n.toFixed(0), 2);\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,YAAY,QAAQ,YAAY;AAEzC,OAAM,SAAUC,mBAAmBA,CAACC,OAAe,EAAEC,eAAwB;EAC3EA,eAAe,GAAGC,cAAc,CAACF,OAAO,EAAEC,eAAe,CAAC;EAC1D,MAAM;IAAEE,KAAK;IAAEC;EAAO,CAAE,GAAGC,kBAAkB,CAACJ,eAAe,CAAC;EAE9D,MAAMK,IAAI,GAAGL,eAAe,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAC5C,MAAMM,eAAe,GAAG,GAAGD,IAAI,GAAGE,gBAAgB,CAACL,KAAK,CAAC,IAAIK,gBAAgB,CAACJ,OAAO,CAAC,EAAE;EAExF,OAAOG,eAAe;AACxB;AAEA,OAAM,SAAUE,yBAAyBA,CAACT,OAAe,EAAEC,eAAwB;EACjFA,eAAe,GAAGC,cAAc,CAACF,OAAO,EAAEC,eAAe,CAAC;EAC1D,IAAIA,eAAe,KAAK,CAAC,EAAE;IACzB,OAAO,OAAO;;EAEhB,MAAM;IAAEE,KAAK;IAAEC;EAAO,CAAE,GAAGC,kBAAkB,CAACJ,eAAe,CAAC;EAE9D,MAAMK,IAAI,GAAGL,eAAe,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAC5C,MAAMS,gBAAgB,GAAGN,OAAO,KAAK,CAAC,GAAG,EAAE,GAAG,IAAIA,OAAO,EAAE;EAC3D,MAAMG,eAAe,GAAG,OAAOD,IAAI,GAAGH,KAAK,GAAGO,gBAAgB,GAAG;EAEjE,OAAOH,eAAe;AACxB;AAEA,SAASL,cAAcA,CAACF,OAAe,EAAEC,eAAwB;EAC/D,OAAOA,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI,CAAC,GAAG,IAAIU,IAAI,CAACX,OAAO,CAAC,CAACY,iBAAiB,EAAE;AACrE;AAEA,SAASP,kBAAkBA,CAACD,OAAe;EACzC,OAAO;IAAED,KAAK,EAAEU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACX,OAAO,CAAC,GAAG,EAAE,CAAC;IAAEA,OAAO,EAAES,IAAI,CAACE,GAAG,CAACX,OAAO,GAAG,EAAE;EAAC,CAAE;AACvF;AAEA,SAASI,gBAAgBA,CAACQ,CAAS;EACjC,OAAOlB,YAAY,CAACkB,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}