{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalRadioGroup from './internal';\nconst RadioGroup = React.forwardRef((props, ref) => {\n  const baseComponentProps = useBaseComponent('RadioGroup', {\n    props: {\n      readOnly: props.readOnly\n    }\n  });\n  return React.createElement(InternalRadioGroup, Object.assign({\n    ref: ref\n  }, props, baseComponentProps, getAnalyticsMetadataAttribute({\n    component: {\n      name: 'awsui.RadioGroup',\n      label: {\n        root: 'self'\n      }\n    }\n  })));\n});\napplyDisplayName(RadioGroup, 'RadioGroup');\nexport default RadioGroup;","map":{"version":3,"names":["React","getAnalyticsMetadataAttribute","useBaseComponent","applyDisplayName","InternalRadioGroup","RadioGroup","forwardRef","props","ref","baseComponentProps","readOnly","createElement","Object","assign","component","name","label","root"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/radio-group/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataRadioGroupComponent } from './analytics-metadata/interfaces';\nimport { RadioGroupProps } from './interfaces';\nimport InternalRadioGroup from './internal';\n\nexport { RadioGroupProps };\n\nconst RadioGroup = React.forwardRef((props: RadioGroupProps, ref: React.Ref<RadioGroupProps.Ref>) => {\n  const baseComponentProps = useBaseComponent('RadioGroup', { props: { readOnly: props.readOnly } });\n  return (\n    <InternalRadioGroup\n      ref={ref}\n      {...props}\n      {...baseComponentProps}\n      {...getAnalyticsMetadataAttribute({\n        component: {\n          name: 'awsui.RadioGroup',\n          label: { root: 'self' },\n        } as GeneratedAnalyticsMetadataRadioGroupComponent,\n      })}\n    />\n  );\n});\n\napplyDisplayName(RadioGroup, 'RadioGroup');\nexport default RadioGroup;\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAGvE,OAAOC,kBAAkB,MAAM,YAAY;AAI3C,MAAMC,UAAU,GAAGL,KAAK,CAACM,UAAU,CAAC,CAACC,KAAsB,EAAEC,GAAmC,KAAI;EAClG,MAAMC,kBAAkB,GAAGP,gBAAgB,CAAC,YAAY,EAAE;IAAEK,KAAK,EAAE;MAAEG,QAAQ,EAAEH,KAAK,CAACG;IAAQ;EAAE,CAAE,CAAC;EAClG,OACEV,KAAA,CAAAW,aAAA,CAACP,kBAAkB,EAAAQ,MAAA,CAAAC,MAAA;IACjBL,GAAG,EAAEA;EAAG,GACJD,KAAK,EACLE,kBAAkB,EAClBR,6BAA6B,CAAC;IAChCa,SAAS,EAAE;MACTC,IAAI,EAAE,kBAAkB;MACxBC,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAM;;GAExB,CAAC,EACF;AAEN,CAAC,CAAC;AAEFd,gBAAgB,CAACE,UAAU,EAAE,YAAY,CAAC;AAC1C,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}