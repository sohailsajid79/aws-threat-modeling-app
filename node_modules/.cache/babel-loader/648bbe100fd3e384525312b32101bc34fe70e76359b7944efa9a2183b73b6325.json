{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import{useCallback,useEffect,useState}from'react';import{useMitigationLinksContext}from'../../../contexts/MitigationLinksContext/context';import{useMitigationsContext}from'../../../contexts/MitigationsContext/context';import MitigationLinkView from'../MitigationLinkView';import{jsx as _jsx}from\"react/jsx-runtime\";const MitigationLinkComponent=_ref=>{let{linkedEntityId}=_ref;const{mitigationList,saveMitigation}=useMitigationsContext();const[mitigationLinks,setMitigationLinks]=useState([]);const{getLinkedMitigationLinks}=useMitigationLinksContext();useEffect(()=>{const _mitigationLinks=getLinkedMitigationLinks(linkedEntityId);setMitigationLinks(_mitigationLinks||[]);},[getLinkedMitigationLinks,linkedEntityId]);const{addMitigationLink,removeMitigationLink}=useMitigationLinksContext();const handleAddMitigationLink=useCallback(mitigationIdOrNewMitigation=>{if(mitigationList.find(m=>m.id===mitigationIdOrNewMitigation)){addMitigationLink({linkedId:linkedEntityId,mitigationId:mitigationIdOrNewMitigation});}else{const newMitigation=saveMitigation({numericId:-1,content:mitigationIdOrNewMitigation,id:'new'});addMitigationLink({linkedId:linkedEntityId,mitigationId:newMitigation.id});}},[linkedEntityId,mitigationList,addMitigationLink,saveMitigation]);return/*#__PURE__*/_jsx(MitigationLinkView,{mitigationList:mitigationList,linkedMitigationIds:mitigationLinks.map(ml=>ml.mitigationId),onAddMitigationLink:handleAddMitigationLink,onRemoveMitigationLink:mitigationId=>removeMitigationLink(mitigationId,linkedEntityId)});};export default MitigationLinkComponent;","map":{"version":3,"names":["useCallback","useEffect","useState","useMitigationLinksContext","useMitigationsContext","MitigationLinkView","jsx","_jsx","MitigationLinkComponent","_ref","linkedEntityId","mitigationList","saveMitigation","mitigationLinks","setMitigationLinks","getLinkedMitigationLinks","_mitigationLinks","addMitigationLink","removeMitigationLink","handleAddMitigationLink","mitigationIdOrNewMitigation","find","m","id","linkedId","mitigationId","newMitigation","numericId","content","linkedMitigationIds","map","ml","onAddMitigationLink","onRemoveMitigationLink"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/mitigations/MitigationLink/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { useMitigationLinksContext } from '../../../contexts/MitigationLinksContext/context';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport { MitigationLink } from '../../../customTypes';\nimport MitigationLinkView from '../MitigationLinkView';\n\nexport interface MitigationLinkProps {\n  linkedEntityId: string;\n}\n\nconst MitigationLinkComponent: FC<MitigationLinkProps> = ({\n  linkedEntityId,\n}) => {\n  const { mitigationList, saveMitigation } = useMitigationsContext();\n  const [mitigationLinks, setMitigationLinks] = useState<MitigationLink[]>([]);\n\n  const { getLinkedMitigationLinks } = useMitigationLinksContext();\n\n  useEffect(() => {\n    const _mitigationLinks = getLinkedMitigationLinks(linkedEntityId);\n    setMitigationLinks(_mitigationLinks || []);\n  }, [getLinkedMitigationLinks, linkedEntityId]);\n\n  const {\n    addMitigationLink,\n    removeMitigationLink,\n  } = useMitigationLinksContext();\n\n  const handleAddMitigationLink = useCallback((mitigationIdOrNewMitigation: string) => {\n    if (mitigationList.find(m => m.id === mitigationIdOrNewMitigation)) {\n      addMitigationLink({\n        linkedId: linkedEntityId,\n        mitigationId: mitigationIdOrNewMitigation,\n      });\n    } else {\n      const newMitigation = saveMitigation({\n        numericId: -1,\n        content: mitigationIdOrNewMitigation,\n        id: 'new',\n      });\n      addMitigationLink({\n        linkedId: linkedEntityId,\n        mitigationId: newMitigation.id,\n      });\n    }\n  }, [linkedEntityId, mitigationList, addMitigationLink, saveMitigation]);\n\n  return (<MitigationLinkView\n    mitigationList={mitigationList}\n    linkedMitigationIds={mitigationLinks.map(ml => ml.mitigationId)}\n    onAddMitigationLink={handleAddMitigationLink}\n    onRemoveMitigationLink={(mitigationId) => removeMitigationLink(mitigationId, linkedEntityId)}\n  />);\n};\n\nexport default MitigationLinkComponent;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAEA,OAAaA,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC5D,OAASC,yBAAyB,KAAQ,kDAAkD,CAC5F,OAASC,qBAAqB,KAAQ,8CAA8C,CAEpF,MAAO,CAAAC,kBAAkB,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAMvD,KAAM,CAAAC,uBAAgD,CAAGC,IAAA,EAEnD,IAFoD,CACxDC,cACF,CAAC,CAAAD,IAAA,CACC,KAAM,CAAEE,cAAc,CAAEC,cAAe,CAAC,CAAGR,qBAAqB,CAAC,CAAC,CAClE,KAAM,CAACS,eAAe,CAAEC,kBAAkB,CAAC,CAAGZ,QAAQ,CAAmB,EAAE,CAAC,CAE5E,KAAM,CAAEa,wBAAyB,CAAC,CAAGZ,yBAAyB,CAAC,CAAC,CAEhEF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,gBAAgB,CAAGD,wBAAwB,CAACL,cAAc,CAAC,CACjEI,kBAAkB,CAACE,gBAAgB,EAAI,EAAE,CAAC,CAC5C,CAAC,CAAE,CAACD,wBAAwB,CAAEL,cAAc,CAAC,CAAC,CAE9C,KAAM,CACJO,iBAAiB,CACjBC,oBACF,CAAC,CAAGf,yBAAyB,CAAC,CAAC,CAE/B,KAAM,CAAAgB,uBAAuB,CAAGnB,WAAW,CAAEoB,2BAAmC,EAAK,CACnF,GAAIT,cAAc,CAACU,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,EAAE,GAAKH,2BAA2B,CAAC,CAAE,CAClEH,iBAAiB,CAAC,CAChBO,QAAQ,CAAEd,cAAc,CACxBe,YAAY,CAAEL,2BAChB,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,KAAM,CAAAM,aAAa,CAAGd,cAAc,CAAC,CACnCe,SAAS,CAAE,CAAC,CAAC,CACbC,OAAO,CAAER,2BAA2B,CACpCG,EAAE,CAAE,KACN,CAAC,CAAC,CACFN,iBAAiB,CAAC,CAChBO,QAAQ,CAAEd,cAAc,CACxBe,YAAY,CAAEC,aAAa,CAACH,EAC9B,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACb,cAAc,CAAEC,cAAc,CAAEM,iBAAiB,CAAEL,cAAc,CAAC,CAAC,CAEvE,mBAAQL,IAAA,CAACF,kBAAkB,EACzBM,cAAc,CAAEA,cAAe,CAC/BkB,mBAAmB,CAAEhB,eAAe,CAACiB,GAAG,CAACC,EAAE,EAAIA,EAAE,CAACN,YAAY,CAAE,CAChEO,mBAAmB,CAAEb,uBAAwB,CAC7Cc,sBAAsB,CAAGR,YAAY,EAAKP,oBAAoB,CAACO,YAAY,CAAEf,cAAc,CAAE,CAC9F,CAAC,CACJ,CAAC,CAED,cAAe,CAAAF,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}