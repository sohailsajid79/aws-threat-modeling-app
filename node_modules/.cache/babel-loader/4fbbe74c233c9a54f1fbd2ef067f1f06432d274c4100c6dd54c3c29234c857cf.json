{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport Pagination from '@cloudscape-design/components/pagination';\nimport Table from '@cloudscape-design/components/table';\nimport orderBy from 'lodash/orderBy';\nimport get from 'lodash/get';\nimport chunk from 'lodash/chunk';\nimport { useMemo, useState } from 'react';\n/**\n * Extends the Cloudscape Table component with pagination options for @tanstack/react-query infinite query hooks.\n * Compatible with generated hooks for paginated operations from <a href='https://aws.github.io/aws-pdk/developer_guides/type-safe-api/index.html' target='_blank' rel='noreferrer noopener'>AWS PDK Type Safe API</a>.\n */\nconst InfiniteQueryTable = ({\n  query,\n  itemsKey,\n  pageSize,\n  clientSideSort,\n  clientSideTextFilter,\n  extendData,\n  ...tableProps\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterText, setFilterText] = useState('');\n  const [sortingColumn, setSortingColumn] = useState(clientSideSort?.defaultSortingColumn);\n  const [sortingDescending, setSortingDescending] = useState(clientSideSort?.defaultSortingDescending);\n  const allLocalData = useMemo(() => {\n    const flattenedData = (query?.data?.pages ?? []).flatMap(p => p[itemsKey]);\n    return extendData ? extendData(flattenedData) : flattenedData;\n  }, [query.data?.pages, extendData, itemsKey]);\n  const filteredData = useMemo(() => allLocalData.filter(item => clientSideTextFilter ? clientSideTextFilter.filterFunction(filterText, item) : true), [filterText, clientSideTextFilter, allLocalData]);\n  const sortedData = useMemo(() => sortingColumn?.sortingField ? orderBy(filteredData, s => get(s, sortingColumn.sortingField), sortingDescending ? 'desc' : 'asc') : filteredData, [filteredData, sortingColumn, sortingDescending]);\n  const pages = useMemo(() => chunk(sortedData, pageSize ?? 100), [sortedData, pageSize]);\n  return _jsx(Table, {\n    pagination: _jsx(Pagination, {\n      currentPageIndex: currentPage,\n      pagesCount: pages.length,\n      openEnd: query.hasNextPage,\n      onChange: e => setCurrentPage(e.detail.currentPageIndex),\n      onNextPageClick: e => {\n        if (!e.detail.requestedPageAvailable) {\n          void query.fetchNextPage();\n        }\n      }\n    }),\n    items: query.isError ? [] : pages[currentPage - 1],\n    loading: query.isLoading || query.isFetchingNextPage || query.isRefetching,\n    sortingColumn: sortingColumn,\n    sortingDescending: sortingDescending,\n    sortingDisabled: !clientSideSort,\n    filter: clientSideTextFilter ? _jsx(TextFilter, {\n      filteringText: filterText,\n      filteringPlaceholder: clientSideTextFilter.placeholder,\n      onChange: e => setFilterText(e.detail.filteringText)\n    }) : undefined,\n    ...tableProps,\n    onSortingChange: clientSideSort ? e => {\n      setSortingColumn(e.detail.sortingColumn);\n      setSortingDescending(e.detail.isDescending);\n    } : tableProps?.onSortingChange\n  });\n};\nexport default InfiniteQueryTable;","map":{"version":3,"names":["jsx","_jsx","TextFilter","Pagination","Table","orderBy","get","chunk","useMemo","useState","InfiniteQueryTable","query","itemsKey","pageSize","clientSideSort","clientSideTextFilter","extendData","tableProps","currentPage","setCurrentPage","filterText","setFilterText","sortingColumn","setSortingColumn","defaultSortingColumn","sortingDescending","setSortingDescending","defaultSortingDescending","allLocalData","flattenedData","data","pages","flatMap","p","filteredData","filter","item","filterFunction","sortedData","sortingField","s","pagination","currentPageIndex","pagesCount","length","openEnd","hasNextPage","onChange","e","detail","onNextPageClick","requestedPageAvailable","fetchNextPage","items","isError","loading","isLoading","isFetchingNextPage","isRefetching","sortingDisabled","filteringText","filteringPlaceholder","placeholder","undefined","onSortingChange","isDescending"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/InfiniteQueryTable/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport Pagination from '@cloudscape-design/components/pagination';\nimport Table from '@cloudscape-design/components/table';\nimport orderBy from 'lodash/orderBy';\nimport get from 'lodash/get';\nimport chunk from 'lodash/chunk';\nimport { useMemo, useState } from 'react';\n/**\n * Extends the Cloudscape Table component with pagination options for @tanstack/react-query infinite query hooks.\n * Compatible with generated hooks for paginated operations from <a href='https://aws.github.io/aws-pdk/developer_guides/type-safe-api/index.html' target='_blank' rel='noreferrer noopener'>AWS PDK Type Safe API</a>.\n */\nconst InfiniteQueryTable = ({ query, itemsKey, pageSize, clientSideSort, clientSideTextFilter, extendData, ...tableProps }) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [filterText, setFilterText] = useState('');\n    const [sortingColumn, setSortingColumn] = useState(clientSideSort?.defaultSortingColumn);\n    const [sortingDescending, setSortingDescending] = useState(clientSideSort?.defaultSortingDescending);\n    const allLocalData = useMemo(() => {\n        const flattenedData = (query?.data?.pages ?? []).flatMap((p) => p[itemsKey]);\n        return extendData ? extendData(flattenedData) : flattenedData;\n    }, [query.data?.pages, extendData, itemsKey]);\n    const filteredData = useMemo(() => allLocalData.filter((item) => clientSideTextFilter ? clientSideTextFilter.filterFunction(filterText, item) : true), [filterText, clientSideTextFilter, allLocalData]);\n    const sortedData = useMemo(() => sortingColumn?.sortingField\n        ? orderBy(filteredData, (s) => get(s, sortingColumn.sortingField), sortingDescending ? 'desc' : 'asc')\n        : filteredData, [filteredData, sortingColumn, sortingDescending]);\n    const pages = useMemo(() => chunk(sortedData, pageSize ?? 100), [sortedData, pageSize]);\n    return (_jsx(Table, { pagination: _jsx(Pagination, { currentPageIndex: currentPage, pagesCount: pages.length, openEnd: query.hasNextPage, onChange: (e) => setCurrentPage(e.detail.currentPageIndex), onNextPageClick: (e) => {\n                if (!e.detail.requestedPageAvailable) {\n                    void query.fetchNextPage();\n                }\n            } }), items: query.isError ? [] : pages[currentPage - 1], loading: query.isLoading || query.isFetchingNextPage || query.isRefetching, sortingColumn: sortingColumn, sortingDescending: sortingDescending, sortingDisabled: !clientSideSort, filter: clientSideTextFilter ? (_jsx(TextFilter, { filteringText: filterText, filteringPlaceholder: clientSideTextFilter.placeholder, onChange: (e) => setFilterText(e.detail.filteringText) })) : undefined, ...tableProps, onSortingChange: clientSideSort\n            ? (e) => {\n                setSortingColumn(e.detail.sortingColumn);\n                setSortingDescending(e.detail.isDescending);\n            }\n            : tableProps?.onSortingChange }));\n};\nexport default InfiniteQueryTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}