{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { useMobile } from '../../../internal/hooks/use-mobile';\nimport { highContrastHeaderClassName } from '../../../internal/utils/content-header-utils';\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\nconst contentTypeCustomWidths = ['dashboard', 'cards', 'table'];\nexport function SkeletonLayout({\n  style,\n  notifications,\n  headerVariant,\n  contentHeader,\n  content,\n  navigation,\n  navigationOpen,\n  navigationWidth,\n  tools,\n  globalTools,\n  toolsOpen,\n  toolsWidth,\n  toolbar,\n  sideSplitPanel,\n  bottomSplitPanel,\n  splitPanelOpen,\n  placement,\n  contentType,\n  maxContentWidth,\n  disableContentPaddings,\n  globalToolsOpen\n}) {\n  const isMobile = useMobile();\n  const isMaxWidth = maxContentWidth === Number.MAX_VALUE || maxContentWidth === Number.MAX_SAFE_INTEGER;\n  const anyPanelOpen = navigationOpen || toolsOpen;\n  return React.createElement(\"div\", {\n    className: clsx(styles.root, testutilStyles.root, {\n      [styles['has-adaptive-widths-default']]: !contentTypeCustomWidths.includes(contentType),\n      [styles['has-adaptive-widths-dashboard']]: contentType === 'dashboard'\n    }),\n    style: {\n      minBlockSize: `calc(100vh - ${placement.insetBlockStart + placement.insetBlockEnd}px)`,\n      [customCssProps.maxContentWidth]: isMaxWidth ? '100%' : maxContentWidth ? `${maxContentWidth}px` : '',\n      [customCssProps.navigationWidth]: `${navigationWidth}px`,\n      [customCssProps.toolsWidth]: `${toolsWidth}px`\n    }\n  }, toolbar, navigation && React.createElement(\"div\", {\n    className: clsx(styles.navigation, !navigationOpen && styles['panel-hidden'], toolsOpen && styles['unfocusable-mobile'], sharedStyles['with-motion'])\n  }, navigation), React.createElement(\"main\", {\n    className: clsx(styles['main-landmark'], isMobile && anyPanelOpen && styles['unfocusable-mobile'])\n  }, notifications && React.createElement(\"div\", {\n    className: clsx(styles['notifications-background'], headerVariant === 'high-contrast' && highContrastHeaderClassName)\n  }), notifications, React.createElement(\"div\", {\n    className: clsx(styles.main, {\n      [styles['main-disable-paddings']]: disableContentPaddings\n    }),\n    style: style\n  }, contentHeader && React.createElement(\"div\", {\n    className: styles['content-header']\n  }, contentHeader), React.createElement(\"div\", {\n    className: clsx(styles.content, testutilStyles.content)\n  }, content)), bottomSplitPanel && React.createElement(\"div\", {\n    className: clsx(styles['split-panel-bottom']),\n    style: {\n      insetBlockEnd: placement.insetBlockEnd\n    }\n  }, bottomSplitPanel)), sideSplitPanel && React.createElement(\"div\", {\n    className: clsx(styles['split-panel-side'], !splitPanelOpen && styles['panel-hidden'])\n  }, sideSplitPanel), React.createElement(\"div\", {\n    className: clsx(styles.tools, !toolsOpen && styles['panel-hidden'], sharedStyles['with-motion'], navigationOpen && !toolsOpen && styles['unfocusable-mobile'], toolsOpen && styles['tools-open'])\n  }, tools), React.createElement(\"div\", {\n    className: clsx(styles['global-tools'], !globalToolsOpen && styles['panel-hidden'])\n  }, globalTools));\n}","map":{"version":3,"names":["React","clsx","customCssProps","useMobile","highContrastHeaderClassName","sharedStyles","testutilStyles","styles","contentTypeCustomWidths","SkeletonLayout","style","notifications","headerVariant","contentHeader","content","navigation","navigationOpen","navigationWidth","tools","globalTools","toolsOpen","toolsWidth","toolbar","sideSplitPanel","bottomSplitPanel","splitPanelOpen","placement","contentType","maxContentWidth","disableContentPaddings","globalToolsOpen","isMobile","isMaxWidth","Number","MAX_VALUE","MAX_SAFE_INTEGER","anyPanelOpen","createElement","className","root","includes","minBlockSize","insetBlockStart","insetBlockEnd","main"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/visual-refresh-toolbar/skeleton/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { useMobile } from '../../../internal/hooks/use-mobile';\nimport { highContrastHeaderClassName } from '../../../internal/utils/content-header-utils';\nimport { AppLayoutPropsWithDefaults } from '../../interfaces';\n\nimport sharedStyles from '../../resize/styles.css.js';\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nconst contentTypeCustomWidths: Array<string | undefined> = ['dashboard', 'cards', 'table'];\n\ninterface SkeletonLayoutProps\n  extends Pick<\n    AppLayoutPropsWithDefaults,\n    | 'notifications'\n    | 'headerVariant'\n    | 'contentHeader'\n    | 'content'\n    | 'contentType'\n    | 'maxContentWidth'\n    | 'disableContentPaddings'\n    | 'navigation'\n    | 'navigationOpen'\n    | 'navigationWidth'\n    | 'tools'\n    | 'toolsOpen'\n    | 'toolsWidth'\n    | 'placement'\n  > {\n  style?: React.CSSProperties;\n  toolbar?: React.ReactNode;\n  splitPanelOpen?: boolean;\n  sideSplitPanel?: React.ReactNode;\n  bottomSplitPanel?: React.ReactNode;\n  globalTools?: React.ReactNode;\n  globalToolsOpen?: boolean;\n}\n\nexport function SkeletonLayout({\n  style,\n  notifications,\n  headerVariant,\n  contentHeader,\n  content,\n  navigation,\n  navigationOpen,\n  navigationWidth,\n  tools,\n  globalTools,\n  toolsOpen,\n  toolsWidth,\n  toolbar,\n  sideSplitPanel,\n  bottomSplitPanel,\n  splitPanelOpen,\n  placement,\n  contentType,\n  maxContentWidth,\n  disableContentPaddings,\n  globalToolsOpen,\n}: SkeletonLayoutProps) {\n  const isMobile = useMobile();\n  const isMaxWidth = maxContentWidth === Number.MAX_VALUE || maxContentWidth === Number.MAX_SAFE_INTEGER;\n  const anyPanelOpen = navigationOpen || toolsOpen;\n  return (\n    <div\n      className={clsx(styles.root, testutilStyles.root, {\n        [styles['has-adaptive-widths-default']]: !contentTypeCustomWidths.includes(contentType),\n        [styles['has-adaptive-widths-dashboard']]: contentType === 'dashboard',\n      })}\n      style={{\n        minBlockSize: `calc(100vh - ${placement.insetBlockStart + placement.insetBlockEnd}px)`,\n        [customCssProps.maxContentWidth]: isMaxWidth ? '100%' : maxContentWidth ? `${maxContentWidth}px` : '',\n        [customCssProps.navigationWidth]: `${navigationWidth}px`,\n        [customCssProps.toolsWidth]: `${toolsWidth}px`,\n      }}\n    >\n      {toolbar}\n      {navigation && (\n        <div\n          className={clsx(\n            styles.navigation,\n            !navigationOpen && styles['panel-hidden'],\n            toolsOpen && styles['unfocusable-mobile'],\n            sharedStyles['with-motion']\n          )}\n        >\n          {navigation}\n        </div>\n      )}\n      <main className={clsx(styles['main-landmark'], isMobile && anyPanelOpen && styles['unfocusable-mobile'])}>\n        {notifications && (\n          <div\n            className={clsx(\n              styles['notifications-background'],\n              headerVariant === 'high-contrast' && highContrastHeaderClassName\n            )}\n          ></div>\n        )}\n        {notifications}\n        <div className={clsx(styles.main, { [styles['main-disable-paddings']]: disableContentPaddings })} style={style}>\n          {contentHeader && <div className={styles['content-header']}>{contentHeader}</div>}\n          <div className={clsx(styles.content, testutilStyles.content)}>{content}</div>\n        </div>\n        {bottomSplitPanel && (\n          <div className={clsx(styles['split-panel-bottom'])} style={{ insetBlockEnd: placement.insetBlockEnd }}>\n            {bottomSplitPanel}\n          </div>\n        )}\n      </main>\n      {sideSplitPanel && (\n        <div className={clsx(styles['split-panel-side'], !splitPanelOpen && styles['panel-hidden'])}>\n          {sideSplitPanel}\n        </div>\n      )}\n      <div\n        className={clsx(\n          styles.tools,\n          !toolsOpen && styles['panel-hidden'],\n          sharedStyles['with-motion'],\n          navigationOpen && !toolsOpen && styles['unfocusable-mobile'],\n          toolsOpen && styles['tools-open']\n        )}\n      >\n        {tools}\n      </div>\n      <div className={clsx(styles['global-tools'], !globalToolsOpen && styles['panel-hidden'])}>{globalTools}</div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}