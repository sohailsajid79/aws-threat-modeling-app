{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport MaskedInput from '../internal/components/masked-input';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport styles from './styles.css.js';\nconst getMaskArgs = (format, use24Hour) => {\n  const segments = [use24Hour ? {\n    min: 0,\n    max: 23,\n    length: 2\n  } : {\n    min: 1,\n    max: 12,\n    length: 2\n  }, {\n    min: 0,\n    max: 59,\n    length: 2\n  }, {\n    min: 0,\n    max: 59,\n    length: 2\n  }];\n  return {\n    separator: ':',\n    segments: segments.slice(0, format.split(':').length)\n  };\n};\nconst InternalTimeInput = React.forwardRef((_a, ref) => {\n  var {\n      format = 'hh:mm:ss',\n      use24Hour = true,\n      autoComplete = true,\n      __internalRootRef = null\n    } = _a,\n    props = __rest(_a, [\"format\", \"use24Hour\", \"autoComplete\", \"__internalRootRef\"]);\n  const inputRef = useRef(null);\n  useForwardFocus(ref, inputRef);\n  const maskArgs = getMaskArgs(format, use24Hour);\n  return React.createElement(MaskedInput, Object.assign({}, props, {\n    __internalRootRef: __internalRootRef,\n    ref: inputRef,\n    className: clsx(styles.root, props.className),\n    autoComplete: autoComplete,\n    disableBrowserAutocorrect: true,\n    mask: maskArgs\n  }));\n});\nexport default InternalTimeInput;","map":{"version":3,"names":["React","useRef","clsx","MaskedInput","useForwardFocus","styles","getMaskArgs","format","use24Hour","segments","min","max","length","separator","slice","split","InternalTimeInput","forwardRef","_a","ref","autoComplete","__internalRootRef","props","__rest","inputRef","maskArgs","createElement","Object","assign","className","root","disableBrowserAutocorrect","mask"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/time-input/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport MaskedInput from '../internal/components/masked-input';\nimport { MaskArgs } from '../internal/components/masked-input/utils/mask-format';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { TimeInputProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nconst getMaskArgs = (format: string, use24Hour: boolean): MaskArgs => {\n  const segments = [\n    use24Hour ? { min: 0, max: 23, length: 2 } : { min: 1, max: 12, length: 2 },\n    { min: 0, max: 59, length: 2 },\n    { min: 0, max: 59, length: 2 },\n  ];\n\n  return {\n    separator: ':',\n    segments: segments.slice(0, format.split(':').length),\n  };\n};\n\ntype InternalTimeInputProps = TimeInputProps & InternalBaseComponentProps;\n\nconst InternalTimeInput = React.forwardRef(\n  (\n    {\n      format = 'hh:mm:ss',\n      use24Hour = true,\n      autoComplete = true,\n      __internalRootRef = null,\n      ...props\n    }: InternalTimeInputProps,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, inputRef);\n\n    const maskArgs = getMaskArgs(format, use24Hour);\n\n    return (\n      <MaskedInput\n        {...props}\n        __internalRootRef={__internalRootRef}\n        ref={inputRef}\n        className={clsx(styles.root, props.className)}\n        autoComplete={autoComplete}\n        disableBrowserAutocorrect={true}\n        mask={maskArgs}\n      />\n    );\n  }\n);\n\nexport default InternalTimeInput;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAASC,MAAM,QAAQ,OAAO;AAC1C,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,WAAW,MAAM,qCAAqC;AAE7D,OAAOC,eAAe,MAAM,iCAAiC;AAI7D,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,WAAW,GAAGA,CAACC,MAAc,EAAEC,SAAkB,KAAc;EACnE,MAAMC,QAAQ,GAAG,CACfD,SAAS,GAAG;IAAEE,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAC,CAAE,GAAG;IAAEF,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAC,CAAE,EAC3E;IAAEF,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAC,CAAE,EAC9B;IAAEF,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAC,CAAE,CAC/B;EAED,OAAO;IACLC,SAAS,EAAE,GAAG;IACdJ,QAAQ,EAAEA,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAEP,MAAM,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACH,MAAM;GACrD;AACH,CAAC;AAID,MAAMI,iBAAiB,GAAGhB,KAAK,CAACiB,UAAU,CACxC,CACEC,EAMyB,EACzBC,GAA0B,KACxB;MARF;MACEZ,MAAM,GAAG,UAAU;MACnBC,SAAS,GAAG,IAAI;MAChBY,YAAY,GAAG,IAAI;MACnBC,iBAAiB,GAAG;IAAI,IAAAH,EAED;IADpBI,KAAK,GAAAC,MAAA,CAAAL,EAAA,EALV,4DAMC,CADS;EAIV,MAAMM,QAAQ,GAAGvB,MAAM,CAAmB,IAAI,CAAC;EAC/CG,eAAe,CAACe,GAAG,EAAEK,QAAQ,CAAC;EAE9B,MAAMC,QAAQ,GAAGnB,WAAW,CAACC,MAAM,EAAEC,SAAS,CAAC;EAE/C,OACER,KAAA,CAAA0B,aAAA,CAACvB,WAAW,EAAAwB,MAAA,CAAAC,MAAA,KACNN,KAAK;IACTD,iBAAiB,EAAEA,iBAAiB;IACpCF,GAAG,EAAEK,QAAQ;IACbK,SAAS,EAAE3B,IAAI,CAACG,MAAM,CAACyB,IAAI,EAAER,KAAK,CAACO,SAAS,CAAC;IAC7CT,YAAY,EAAEA,YAAY;IAC1BW,yBAAyB,EAAE,IAAI;IAC/BC,IAAI,EAAEP;EAAQ,GACd;AAEN,CAAC,CACF;AAED,eAAeT,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}