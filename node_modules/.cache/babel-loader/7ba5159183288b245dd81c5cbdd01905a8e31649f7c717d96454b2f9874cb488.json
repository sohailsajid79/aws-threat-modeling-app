{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import{useCallback}from'react';export const isSameAssumptionLink=(entity1,entity2)=>{return entity1.assumptionId===entity2.assumptionId&&entity1.linkedId===entity2.linkedId&&entity1.type===entity2.type;};const useAssumptionLinks=(assumptionLinkList,setAssumptionLinkList)=>{const handlRemoveAssumptionLink=useCallback((assumptionId,linkedEntityId)=>{setAssumptionLinkList(prevList=>prevList.filter(x=>!(x.linkedId===linkedEntityId&&x.assumptionId===assumptionId)));},[setAssumptionLinkList]);const handleRemoveAssumptionLinks=useCallback(assumptionLinks=>{setAssumptionLinkList(prevList=>{return prevList.filter(pl=>assumptionLinks.findIndex(al=>isSameAssumptionLink(al,pl))<0);});},[setAssumptionLinkList]);const handlRemoveAssumptionLinksByAssumptionId=useCallback(async assumptionId=>{setAssumptionLinkList(prevList=>prevList.filter(x=>!(x.assumptionId===assumptionId)));},[setAssumptionLinkList]);const handlRemoveAssumptionLinksByLinkedEntityId=useCallback(async linkedEntityId=>{setAssumptionLinkList(prevList=>prevList.filter(x=>!(x.linkedId===linkedEntityId)));},[setAssumptionLinkList]);const handleAddAssumptionLink=useCallback(assumptionLink=>{setAssumptionLinkList(prevList=>{const foundIndex=prevList.findIndex(st=>st.assumptionId===assumptionLink.assumptionId&&st.linkedId===assumptionLink.linkedId&&st.type===assumptionLink.type);if(foundIndex<0){return[...prevList,assumptionLink];};return[...prevList];});},[setAssumptionLinkList]);const handleAddAssumptionLinks=useCallback(assumptionLinks=>{setAssumptionLinkList(prevList=>{const filteredLinks=assumptionLinks.filter(al=>prevList.findIndex(pl=>isSameAssumptionLink(al,pl))<0);return[...prevList,...filteredLinks];});},[setAssumptionLinkList]);const handleGetLinkedAssumptionLinks=useCallback(linkedEntityId=>{return assumptionLinkList.filter(x=>x.linkedId===linkedEntityId);},[assumptionLinkList]);const handleGetAssumptionEntityLinks=useCallback((assumptionId,type)=>{return assumptionLinkList.filter(x=>x.assumptionId===assumptionId&&x.type===type);},[assumptionLinkList]);return{handlRemoveAssumptionLink,handleRemoveAssumptionLinks,handlRemoveAssumptionLinksByAssumptionId,handlRemoveAssumptionLinksByLinkedEntityId,handleAddAssumptionLink,handleAddAssumptionLinks,handleGetLinkedAssumptionLinks,handleGetAssumptionEntityLinks};};export default useAssumptionLinks;","map":{"version":3,"names":["useCallback","isSameAssumptionLink","entity1","entity2","assumptionId","linkedId","type","useAssumptionLinks","assumptionLinkList","setAssumptionLinkList","handlRemoveAssumptionLink","linkedEntityId","prevList","filter","x","handleRemoveAssumptionLinks","assumptionLinks","pl","findIndex","al","handlRemoveAssumptionLinksByAssumptionId","handlRemoveAssumptionLinksByLinkedEntityId","handleAddAssumptionLink","assumptionLink","foundIndex","st","handleAddAssumptionLinks","filteredLinks","handleGetLinkedAssumptionLinks","handleGetAssumptionEntityLinks"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/contexts/AssumptionLinksContext/useAssumptionLinks.ts"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { useCallback } from 'react';\nimport { AssumptionLink } from '../../customTypes';\n\nexport const isSameAssumptionLink = (entity1: AssumptionLink, entity2: AssumptionLink) => {\n  return entity1.assumptionId === entity2.assumptionId\n    && entity1.linkedId === entity2.linkedId\n    && entity1.type === entity2.type;\n};\n\nconst useAssumptionLinks = (\n  assumptionLinkList: AssumptionLink[],\n  setAssumptionLinkList: React.Dispatch<React.SetStateAction<AssumptionLink[]>>,\n) => {\n  const handlRemoveAssumptionLink = useCallback((assumptionId: string, linkedEntityId: string) => {\n    setAssumptionLinkList((prevList) => prevList.filter(x =>\n      !(x.linkedId === linkedEntityId && x.assumptionId === assumptionId),\n    ));\n  }, [setAssumptionLinkList]);\n\n  const handleRemoveAssumptionLinks = useCallback((assumptionLinks: AssumptionLink[]) => {\n    setAssumptionLinkList((prevList) => {\n      return prevList.filter(pl =>\n        assumptionLinks.findIndex(al => isSameAssumptionLink(al, pl)) < 0);\n    });\n  }, [setAssumptionLinkList]);\n\n  const handlRemoveAssumptionLinksByAssumptionId = useCallback(async (assumptionId: string) => {\n    setAssumptionLinkList((prevList) => prevList.filter(x =>\n      !(x.assumptionId === assumptionId),\n    ));\n  }, [setAssumptionLinkList]);\n\n  const handlRemoveAssumptionLinksByLinkedEntityId = useCallback(async (linkedEntityId: string) => {\n    setAssumptionLinkList((prevList) => prevList.filter(x =>\n      !(x.linkedId === linkedEntityId),\n    ));\n  }, [setAssumptionLinkList]);\n\n  const handleAddAssumptionLink = useCallback((assumptionLink: AssumptionLink) => {\n    setAssumptionLinkList((prevList) => {\n      const foundIndex = prevList.findIndex(st =>\n        st.assumptionId === assumptionLink.assumptionId &&\n        st.linkedId === assumptionLink.linkedId &&\n        st.type === assumptionLink.type,\n      );\n      if (foundIndex < 0) {\n        return [...prevList, assumptionLink];\n      };\n\n      return [...prevList];\n    });\n  }, [setAssumptionLinkList]);\n\n  const handleAddAssumptionLinks = useCallback((assumptionLinks: AssumptionLink[]) => {\n    setAssumptionLinkList((prevList) => {\n      const filteredLinks = assumptionLinks.filter(al =>\n        prevList.findIndex(pl => isSameAssumptionLink(al, pl)) < 0);\n      return [...prevList, ...filteredLinks];\n    });\n  }, [setAssumptionLinkList]);\n\n  const handleGetLinkedAssumptionLinks = useCallback((linkedEntityId: string) => {\n    return assumptionLinkList.filter(x => x.linkedId === linkedEntityId);\n  }, [assumptionLinkList]);\n\n  const handleGetAssumptionEntityLinks = useCallback((assumptionId: string, type: AssumptionLink['type']) => {\n    return assumptionLinkList.filter(x => x.assumptionId === assumptionId && x.type === type);\n  }, [assumptionLinkList]);\n\n  return {\n    handlRemoveAssumptionLink,\n    handleRemoveAssumptionLinks,\n    handlRemoveAssumptionLinksByAssumptionId,\n    handlRemoveAssumptionLinksByLinkedEntityId,\n    handleAddAssumptionLink,\n    handleAddAssumptionLinks,\n    handleGetLinkedAssumptionLinks,\n    handleGetAssumptionEntityLinks,\n  };\n};\n\nexport default useAssumptionLinks;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAEA,OAASA,WAAW,KAAQ,OAAO,CAGnC,MAAO,MAAM,CAAAC,oBAAoB,CAAGA,CAACC,OAAuB,CAAEC,OAAuB,GAAK,CACxF,MAAO,CAAAD,OAAO,CAACE,YAAY,GAAKD,OAAO,CAACC,YAAY,EAC/CF,OAAO,CAACG,QAAQ,GAAKF,OAAO,CAACE,QAAQ,EACrCH,OAAO,CAACI,IAAI,GAAKH,OAAO,CAACG,IAAI,CACpC,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGA,CACzBC,kBAAoC,CACpCC,qBAA6E,GAC1E,CACH,KAAM,CAAAC,yBAAyB,CAAGV,WAAW,CAAC,CAACI,YAAoB,CAAEO,cAAsB,GAAK,CAC9FF,qBAAqB,CAAEG,QAAQ,EAAKA,QAAQ,CAACC,MAAM,CAACC,CAAC,EACnD,EAAEA,CAAC,CAACT,QAAQ,GAAKM,cAAc,EAAIG,CAAC,CAACV,YAAY,GAAKA,YAAY,CACpE,CAAC,CAAC,CACJ,CAAC,CAAE,CAACK,qBAAqB,CAAC,CAAC,CAE3B,KAAM,CAAAM,2BAA2B,CAAGf,WAAW,CAAEgB,eAAiC,EAAK,CACrFP,qBAAqB,CAAEG,QAAQ,EAAK,CAClC,MAAO,CAAAA,QAAQ,CAACC,MAAM,CAACI,EAAE,EACvBD,eAAe,CAACE,SAAS,CAACC,EAAE,EAAIlB,oBAAoB,CAACkB,EAAE,CAAEF,EAAE,CAAC,CAAC,CAAG,CAAC,CAAC,CACtE,CAAC,CAAC,CACJ,CAAC,CAAE,CAACR,qBAAqB,CAAC,CAAC,CAE3B,KAAM,CAAAW,wCAAwC,CAAGpB,WAAW,CAAC,KAAO,CAAAI,YAAoB,EAAK,CAC3FK,qBAAqB,CAAEG,QAAQ,EAAKA,QAAQ,CAACC,MAAM,CAACC,CAAC,EACnD,EAAEA,CAAC,CAACV,YAAY,GAAKA,YAAY,CACnC,CAAC,CAAC,CACJ,CAAC,CAAE,CAACK,qBAAqB,CAAC,CAAC,CAE3B,KAAM,CAAAY,0CAA0C,CAAGrB,WAAW,CAAC,KAAO,CAAAW,cAAsB,EAAK,CAC/FF,qBAAqB,CAAEG,QAAQ,EAAKA,QAAQ,CAACC,MAAM,CAACC,CAAC,EACnD,EAAEA,CAAC,CAACT,QAAQ,GAAKM,cAAc,CACjC,CAAC,CAAC,CACJ,CAAC,CAAE,CAACF,qBAAqB,CAAC,CAAC,CAE3B,KAAM,CAAAa,uBAAuB,CAAGtB,WAAW,CAAEuB,cAA8B,EAAK,CAC9Ed,qBAAqB,CAAEG,QAAQ,EAAK,CAClC,KAAM,CAAAY,UAAU,CAAGZ,QAAQ,CAACM,SAAS,CAACO,EAAE,EACtCA,EAAE,CAACrB,YAAY,GAAKmB,cAAc,CAACnB,YAAY,EAC/CqB,EAAE,CAACpB,QAAQ,GAAKkB,cAAc,CAAClB,QAAQ,EACvCoB,EAAE,CAACnB,IAAI,GAAKiB,cAAc,CAACjB,IAC7B,CAAC,CACD,GAAIkB,UAAU,CAAG,CAAC,CAAE,CAClB,MAAO,CAAC,GAAGZ,QAAQ,CAAEW,cAAc,CAAC,CACtC,CAAC,CAED,MAAO,CAAC,GAAGX,QAAQ,CAAC,CACtB,CAAC,CAAC,CACJ,CAAC,CAAE,CAACH,qBAAqB,CAAC,CAAC,CAE3B,KAAM,CAAAiB,wBAAwB,CAAG1B,WAAW,CAAEgB,eAAiC,EAAK,CAClFP,qBAAqB,CAAEG,QAAQ,EAAK,CAClC,KAAM,CAAAe,aAAa,CAAGX,eAAe,CAACH,MAAM,CAACM,EAAE,EAC7CP,QAAQ,CAACM,SAAS,CAACD,EAAE,EAAIhB,oBAAoB,CAACkB,EAAE,CAAEF,EAAE,CAAC,CAAC,CAAG,CAAC,CAAC,CAC7D,MAAO,CAAC,GAAGL,QAAQ,CAAE,GAAGe,aAAa,CAAC,CACxC,CAAC,CAAC,CACJ,CAAC,CAAE,CAAClB,qBAAqB,CAAC,CAAC,CAE3B,KAAM,CAAAmB,8BAA8B,CAAG5B,WAAW,CAAEW,cAAsB,EAAK,CAC7E,MAAO,CAAAH,kBAAkB,CAACK,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACT,QAAQ,GAAKM,cAAc,CAAC,CACtE,CAAC,CAAE,CAACH,kBAAkB,CAAC,CAAC,CAExB,KAAM,CAAAqB,8BAA8B,CAAG7B,WAAW,CAAC,CAACI,YAAoB,CAAEE,IAA4B,GAAK,CACzG,MAAO,CAAAE,kBAAkB,CAACK,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACV,YAAY,GAAKA,YAAY,EAAIU,CAAC,CAACR,IAAI,GAAKA,IAAI,CAAC,CAC3F,CAAC,CAAE,CAACE,kBAAkB,CAAC,CAAC,CAExB,MAAO,CACLE,yBAAyB,CACzBK,2BAA2B,CAC3BK,wCAAwC,CACxCC,0CAA0C,CAC1CC,uBAAuB,CACvBI,wBAAwB,CACxBE,8BAA8B,CAC9BC,8BACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAtB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}