{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createContext, useContext } from 'react';\nconst SplitPanelContext = createContext(null);\nexport const SplitPanelContextProvider = SplitPanelContext.Provider;\nexport function useSplitPanelContext() {\n  const ctx = useContext(SplitPanelContext);\n  if (!ctx) {\n    throw new Error('Split panel can only be used inside app layout');\n  }\n  return ctx;\n}","map":{"version":3,"names":["createContext","useContext","SplitPanelContext","SplitPanelContextProvider","Provider","useSplitPanelContext","ctx","Error"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/context/split-panel-context.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { createContext, useContext } from 'react';\n\nimport { SplitPanelFocusControlRefs } from '../../app-layout/utils/use-split-panel-focus-control';\n\nexport interface SplitPanelSideToggleProps {\n  displayed: boolean;\n  ariaLabel: string | undefined;\n}\n\nexport interface SplitPanelContextBaseProps {\n  topOffset: number;\n  bottomOffset: number;\n  leftOffset: number;\n  rightOffset: number;\n  position: 'side' | 'bottom';\n  size: number;\n  disableContentPaddings?: boolean;\n  contentWidthStyles?: React.CSSProperties;\n  contentWrapperPaddings?: {\n    closedNav: boolean;\n    closedTools: boolean;\n  };\n  isOpen?: boolean;\n  isForcedPosition: boolean;\n  onResize: (newSize: number) => void;\n  onToggle: () => void;\n  onPreferencesChange: (detail: { position: 'side' | 'bottom' }) => void;\n  reportHeaderHeight: (pixels: number) => void;\n  setSplitPanelToggle: (config: SplitPanelSideToggleProps) => void;\n  refs: SplitPanelFocusControlRefs;\n}\n\nexport interface SplitPanelContextProps extends SplitPanelContextBaseProps {\n  relativeSize: number;\n}\n\nconst SplitPanelContext = createContext<SplitPanelContextProps | null>(null);\n\nexport const SplitPanelContextProvider = SplitPanelContext.Provider;\n\nexport function useSplitPanelContext() {\n  const ctx = useContext(SplitPanelContext);\n  if (!ctx) {\n    throw new Error('Split panel can only be used inside app layout');\n  }\n  return ctx;\n}\n"],"mappings":"AAAA;AACA;AACA,SAAgBA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAoCxD,MAAMC,iBAAiB,GAAGF,aAAa,CAAgC,IAAI,CAAC;AAE5E,OAAO,MAAMG,yBAAyB,GAAGD,iBAAiB,CAACE,QAAQ;AAEnE,OAAM,SAAUC,oBAAoBA,CAAA;EAClC,MAAMC,GAAG,GAAGL,UAAU,CAACC,iBAAiB,CAAC;EACzC,IAAI,CAACI,GAAG,EAAE;IACR,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;;EAEnE,OAAOD,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}