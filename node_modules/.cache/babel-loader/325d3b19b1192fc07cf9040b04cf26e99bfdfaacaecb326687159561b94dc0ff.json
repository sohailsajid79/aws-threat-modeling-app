{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { getStepArray } from './utils.js';\nimport styles from './styles.css.js';\nfunction TickMark(props) {\n  const {\n    hideFillLine,\n    value,\n    isActive,\n    invalid,\n    warning,\n    disabled,\n    type,\n    min,\n    max,\n    step,\n    readOnly\n  } = props;\n  const showWarning = warning && !invalid;\n  const getType = () => {\n    if (type === 'min') {\n      return min;\n    }\n    if (type === 'max') {\n      return max;\n    }\n    return step;\n  };\n  return React.createElement(\"div\", {\n    className: clsx(styles.tick, {\n      [styles.filled]: !hideFillLine && value > getType(),\n      [styles.active]: !hideFillLine && isActive && value > getType(),\n      [styles.error]: invalid && !hideFillLine && value > getType(),\n      [styles.warning]: showWarning && !hideFillLine && value > getType(),\n      [styles['error-active']]: invalid && isActive && !hideFillLine && value > getType(),\n      [styles['warning-active']]: showWarning && isActive && !hideFillLine && value > getType(),\n      [styles.disabled]: disabled,\n      [styles.readonly]: readOnly,\n      [styles.middle]: type === 'step'\n    })\n  });\n}\nexport default function SliderTickMarks(props) {\n  const {\n    min,\n    max,\n    step\n  } = props;\n  return React.createElement(\"div\", {\n    className: styles['ticks-wrapper']\n  }, React.createElement(TickMark, Object.assign({}, props, {\n    type: \"min\"\n  })), React.createElement(\"div\", {\n    className: styles.ticks,\n    style: {\n      [customCssProps.sliderTickCount]: Math.round((max - min) / step)\n    }\n  }, getStepArray(step, [min, max]).map((step, index) => React.createElement(TickMark, Object.assign({}, props, {\n    type: \"step\",\n    step: step,\n    key: `step-${index}`\n  })))), React.createElement(TickMark, Object.assign({}, props, {\n    type: \"max\"\n  })));\n}","map":{"version":3,"names":["React","clsx","customCssProps","getStepArray","styles","TickMark","props","hideFillLine","value","isActive","invalid","warning","disabled","type","min","max","step","readOnly","showWarning","getType","createElement","className","tick","filled","active","error","readonly","middle","SliderTickMarks","Object","assign","ticks","style","sliderTickCount","Math","round","map","index","key"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/slider/tick-marks.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { getStepArray } from './utils.js';\n\nimport styles from './styles.css.js';\n\nexport interface SliderTicksProps {\n  hideFillLine?: boolean;\n  value: number;\n  isActive: boolean;\n  invalid?: boolean;\n  warning?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  min: number;\n  max: number;\n  step: number;\n}\n\nexport interface SliderTickMarkProps extends SliderTicksProps {\n  type: 'min' | 'max' | 'step';\n}\n\nfunction TickMark(props: SliderTickMarkProps) {\n  const { hideFillLine, value, isActive, invalid, warning, disabled, type, min, max, step, readOnly } = props;\n\n  const showWarning = warning && !invalid;\n\n  const getType = () => {\n    if (type === 'min') {\n      return min;\n    }\n    if (type === 'max') {\n      return max;\n    }\n    return step;\n  };\n\n  return (\n    <div\n      className={clsx(styles.tick, {\n        [styles.filled]: !hideFillLine && value > getType(),\n        [styles.active]: !hideFillLine && isActive && value > getType(),\n        [styles.error]: invalid && !hideFillLine && value > getType(),\n        [styles.warning]: showWarning && !hideFillLine && value > getType(),\n        [styles['error-active']]: invalid && isActive && !hideFillLine && value > getType(),\n        [styles['warning-active']]: showWarning && isActive && !hideFillLine && value > getType(),\n        [styles.disabled]: disabled,\n        [styles.readonly]: readOnly,\n        [styles.middle]: type === 'step',\n      })}\n    />\n  );\n}\n\nexport default function SliderTickMarks(props: SliderTicksProps) {\n  const { min, max, step } = props;\n\n  return (\n    <div className={styles['ticks-wrapper']}>\n      <TickMark {...props} type=\"min\" />\n      <div\n        className={styles.ticks}\n        style={{\n          [customCssProps.sliderTickCount]: Math.round((max - min) / step),\n        }}\n      >\n        {getStepArray(step, [min, max]).map((step, index) => (\n          <TickMark {...props} type=\"step\" step={step} key={`step-${index}`} />\n        ))}\n      </div>\n      <TickMark {...props} type=\"max\" />\n    </div>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,cAAc,MAAM,sDAAsD;AACjF,SAASC,YAAY,QAAQ,YAAY;AAEzC,OAAOC,MAAM,MAAM,iBAAiB;AAmBpC,SAASC,QAAQA,CAACC,KAA0B;EAC1C,MAAM;IAAEC,YAAY;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,GAAG;IAAEC,GAAG;IAAEC,IAAI;IAAEC;EAAQ,CAAE,GAAGX,KAAK;EAE3G,MAAMY,WAAW,GAAGP,OAAO,IAAI,CAACD,OAAO;EAEvC,MAAMS,OAAO,GAAGA,CAAA,KAAK;IACnB,IAAIN,IAAI,KAAK,KAAK,EAAE;MAClB,OAAOC,GAAG;;IAEZ,IAAID,IAAI,KAAK,KAAK,EAAE;MAClB,OAAOE,GAAG;;IAEZ,OAAOC,IAAI;EACb,CAAC;EAED,OACEhB,KAAA,CAAAoB,aAAA;IACEC,SAAS,EAAEpB,IAAI,CAACG,MAAM,CAACkB,IAAI,EAAE;MAC3B,CAAClB,MAAM,CAACmB,MAAM,GAAG,CAAChB,YAAY,IAAIC,KAAK,GAAGW,OAAO,EAAE;MACnD,CAACf,MAAM,CAACoB,MAAM,GAAG,CAACjB,YAAY,IAAIE,QAAQ,IAAID,KAAK,GAAGW,OAAO,EAAE;MAC/D,CAACf,MAAM,CAACqB,KAAK,GAAGf,OAAO,IAAI,CAACH,YAAY,IAAIC,KAAK,GAAGW,OAAO,EAAE;MAC7D,CAACf,MAAM,CAACO,OAAO,GAAGO,WAAW,IAAI,CAACX,YAAY,IAAIC,KAAK,GAAGW,OAAO,EAAE;MACnE,CAACf,MAAM,CAAC,cAAc,CAAC,GAAGM,OAAO,IAAID,QAAQ,IAAI,CAACF,YAAY,IAAIC,KAAK,GAAGW,OAAO,EAAE;MACnF,CAACf,MAAM,CAAC,gBAAgB,CAAC,GAAGc,WAAW,IAAIT,QAAQ,IAAI,CAACF,YAAY,IAAIC,KAAK,GAAGW,OAAO,EAAE;MACzF,CAACf,MAAM,CAACQ,QAAQ,GAAGA,QAAQ;MAC3B,CAACR,MAAM,CAACsB,QAAQ,GAAGT,QAAQ;MAC3B,CAACb,MAAM,CAACuB,MAAM,GAAGd,IAAI,KAAK;KAC3B;EAAC,EACF;AAEN;AAEA,eAAc,SAAUe,eAAeA,CAACtB,KAAuB;EAC7D,MAAM;IAAEQ,GAAG;IAAEC,GAAG;IAAEC;EAAI,CAAE,GAAGV,KAAK;EAEhC,OACEN,KAAA,CAAAoB,aAAA;IAAKC,SAAS,EAAEjB,MAAM,CAAC,eAAe;EAAC,GACrCJ,KAAA,CAAAoB,aAAA,CAACf,QAAQ,EAAAwB,MAAA,CAAAC,MAAA,KAAKxB,KAAK;IAAEO,IAAI,EAAC;EAAK,GAAG,EAClCb,KAAA,CAAAoB,aAAA;IACEC,SAAS,EAAEjB,MAAM,CAAC2B,KAAK;IACvBC,KAAK,EAAE;MACL,CAAC9B,cAAc,CAAC+B,eAAe,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACpB,GAAG,GAAGD,GAAG,IAAIE,IAAI;;EAChE,GAEAb,YAAY,CAACa,IAAI,EAAE,CAACF,GAAG,EAAEC,GAAG,CAAC,CAAC,CAACqB,GAAG,CAAC,CAACpB,IAAI,EAAEqB,KAAK,KAC9CrC,KAAA,CAAAoB,aAAA,CAACf,QAAQ,EAAAwB,MAAA,CAAAC,MAAA,KAAKxB,KAAK;IAAEO,IAAI,EAAC,MAAM;IAACG,IAAI,EAAEA,IAAI;IAAEsB,GAAG,EAAE,QAAQD,KAAK;EAAE,GAClE,CAAC,CACE,EACNrC,KAAA,CAAAoB,aAAA,CAACf,QAAQ,EAAAwB,MAAA,CAAAC,MAAA,KAAKxB,KAAK;IAAEO,IAAI,EAAC;EAAK,GAAG,CAC9B;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}