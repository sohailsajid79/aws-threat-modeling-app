{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { focusMarkers, SelectionControl, useSelection, useSelectionFocusMove } from '../table/selection';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport styles from './styles.css.js';\nconst Cards = React.forwardRef(function (_a, ref) {\n  var {\n      items = [],\n      cardDefinition,\n      cardsPerRow = [],\n      header,\n      filter,\n      pagination,\n      preferences,\n      empty,\n      loading,\n      loadingText,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      visibleSections,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      variant = 'container',\n      renderAriaLive,\n      firstIndex = 1,\n      totalItemsCount,\n      entireCardClickable\n    } = _a,\n    rest = __rest(_a, [\"items\", \"cardDefinition\", \"cardsPerRow\", \"header\", \"filter\", \"pagination\", \"preferences\", \"empty\", \"loading\", \"loadingText\", \"trackBy\", \"selectedItems\", \"selectionType\", \"isItemDisabled\", \"onSelectionChange\", \"ariaLabels\", \"visibleSections\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"variant\", \"renderAriaLive\", \"firstIndex\", \"totalItemsCount\", \"entireCardClickable\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('Cards', {\n    props: {\n      entireCardClickable,\n      selectionType,\n      stickyHeader,\n      variant\n    }\n  });\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n  const computedVariant = isRefresh ? variant : 'container';\n  const headerIdRef = useRef(undefined);\n  const setHeaderRef = useCallback(id => {\n    headerIdRef.current = id;\n  }, []);\n  const isLabelledByHeader = !(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel) && !!header;\n  const [columns, measureRef] = useContainerQuery(({\n    contentBoxWidth\n  }) => getCardsPerRow(contentBoxWidth, cardsPerRow), [cardsPerRow]);\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  const getMouseDownTarget = useMouseDownTarget();\n  const i18n = useInternalI18n('cards');\n  const {\n    isItemSelected,\n    getItemSelectionProps\n  } = useSelection({\n    items,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels: {\n      itemSelectionLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.itemSelectionLabel,\n      selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel)\n    }\n  });\n  const hasToolsHeader = header || filter || pagination || preferences;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const headerRef = useRef(null);\n  const {\n    scrollToTop,\n    scrollToItem\n  } = stickyScrolling(refObject, headerRef);\n  stickyHeader = !isMobile && stickyHeader;\n  const onCardFocus = event => {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(ref, () => ({\n    scrollToTop: () => {\n      if (stickyHeader) {\n        scrollToTop();\n      }\n    }\n  }), [stickyHeader, scrollToTop]);\n  let status;\n  if (loading) {\n    status = React.createElement(\"div\", {\n      className: styles.loading\n    }, React.createElement(InternalStatusIndicator, {\n      type: \"loading\"\n    }, React.createElement(LiveRegion, {\n      visible: true\n    }, loadingText)));\n  } else if (empty && !items.length) {\n    status = React.createElement(\"div\", {\n      className: styles.empty\n    }, empty);\n  }\n  return React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(AnalyticsFunnelSubStep, null, React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(InternalContainerAsSubstep, {\n    header: hasToolsHeader && React.createElement(\"div\", {\n      className: clsx(styles.header, isRefresh && styles['header-refresh'], styles[`header-variant-${computedVariant}`])\n    }, React.createElement(CollectionLabelContext.Provider, {\n      value: {\n        assignId: setHeaderRef\n      }\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences\n    }))),\n    footer: hasFooterPagination && React.createElement(\"div\", {\n      className: styles['footer-pagination']\n    }, pagination),\n    disableContentPaddings: true,\n    disableHeaderPaddings: computedVariant === 'full-page',\n    variant: computedVariant === 'container' ? 'cards' : computedVariant,\n    __stickyHeader: stickyHeader,\n    __stickyOffset: stickyHeaderVerticalOffset,\n    __headerRef: headerRef,\n    __fullPage: computedVariant === 'full-page',\n    __disableFooterDivider: true\n  }, React.createElement(\"div\", {\n    className: clsx(hasToolsHeader && styles['has-header'], isRefresh && styles.refresh, styles[`header-variant-${computedVariant}`])\n  }, !!renderAriaLive && !!firstIndex && React.createElement(LiveRegion, null, React.createElement(\"span\", null, renderAriaLive({\n    totalItemsCount,\n    firstIndex,\n    lastIndex: firstIndex + items.length - 1\n  }))), status !== null && status !== void 0 ? status : React.createElement(CardsList, {\n    items: items,\n    cardDefinition: cardDefinition,\n    trackBy: trackBy,\n    selectionType: selectionType,\n    columns: columns,\n    isItemSelected: isItemSelected,\n    getItemSelectionProps: getItemSelectionProps,\n    visibleSections: visibleSections,\n    onFocus: onCardFocus,\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel,\n    ariaLabelledby: isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined,\n    entireCardClickable: entireCardClickable\n  }))))));\n});\nexport default Cards;\nconst CardsList = ({\n  items,\n  cardDefinition,\n  trackBy,\n  selectionType,\n  columns,\n  isItemSelected,\n  getItemSelectionProps,\n  visibleSections,\n  onFocus,\n  ariaLabelledby,\n  ariaLabel,\n  entireCardClickable\n}) => {\n  const selectable = !!selectionType;\n  const canClickEntireCard = selectable && entireCardClickable;\n  const isRefresh = useVisualRefresh();\n  const {\n    moveFocusDown,\n    moveFocusUp\n  } = useSelectionFocusMove(selectionType, items.length);\n  let visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections ? visibleSectionsDefinition.filter(section => section.id && visibleSections.indexOf(section.id) !== -1) : visibleSectionsDefinition;\n  let listRole = undefined;\n  let listItemRole = undefined;\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n  return React.createElement(\"ol\", Object.assign({\n    className: clsx(styles.list, styles[`list-grid-${columns || 1}`]),\n    role: listRole,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-label\": ariaLabel\n  }, focusMarkers && focusMarkers.root), items.map((item, index) => React.createElement(\"li\", Object.assign({\n    className: clsx(styles.card, {\n      [styles['card-selectable']]: selectable,\n      [styles['card-selected']]: selectable && isItemSelected(item)\n    }),\n    key: getItemKey(trackBy, item, index),\n    onFocus: onFocus\n  }, focusMarkers && focusMarkers.item, {\n    role: listItemRole\n  }), React.createElement(\"div\", {\n    className: clsx(styles['card-inner'], isRefresh && styles.refresh),\n    onClick: canClickEntireCard ? event => {\n      var _a;\n      getItemSelectionProps === null || getItemSelectionProps === void 0 ? void 0 : getItemSelectionProps(item).onChange();\n      // Manually move focus to the native input (checkbox or radio button)\n      (_a = event.currentTarget.querySelector('input')) === null || _a === void 0 ? void 0 : _a.focus();\n    } : undefined\n  }, React.createElement(\"div\", {\n    className: styles['card-header']\n  }, React.createElement(\"div\", {\n    className: styles['card-header-inner']\n  }, cardDefinition.header ? cardDefinition.header(item) : ''), getItemSelectionProps && React.createElement(\"div\", {\n    className: styles['selection-control']\n  }, React.createElement(SelectionControl, Object.assign({\n    onFocusDown: moveFocusDown,\n    onFocusUp: moveFocusUp\n  }, getItemSelectionProps(item))))), visibleSectionsDefinition.map(({\n    width = 100,\n    header,\n    content,\n    id\n  }, index) => React.createElement(\"div\", {\n    key: id || index,\n    className: styles.section,\n    style: {\n      width: `${width}%`\n    }\n  }, header ? React.createElement(\"div\", {\n    className: styles['section-header']\n  }, header) : '', content ? React.createElement(\"div\", {\n    className: styles['section-content']\n  }, content(item)) : ''))))));\n};\napplyDisplayName(Cards, 'Cards');","map":{"version":3,"names":["React","useCallback","useImperativeHandle","useRef","clsx","useContainerQuery","InternalContainerAsSubstep","useInternalI18n","AnalyticsFunnelSubStep","getBaseProps","LiveRegion","CollectionLabelContext","LinkDefaultVariantContext","useBaseComponent","useMergeRefs","useMobile","useMouseDownTarget","useVisualRefresh","applyDisplayName","InternalStatusIndicator","focusMarkers","SelectionControl","useSelection","useSelectionFocusMove","stickyScrolling","ToolsHeader","getItemKey","getCardsPerRow","styles","Cards","forwardRef","_a","ref","items","cardDefinition","cardsPerRow","header","filter","pagination","preferences","empty","loading","loadingText","trackBy","selectedItems","selectionType","isItemDisabled","onSelectionChange","ariaLabels","visibleSections","stickyHeader","stickyHeaderVerticalOffset","variant","renderAriaLive","firstIndex","totalItemsCount","entireCardClickable","rest","__rest","__internalRootRef","props","baseProps","isRefresh","isMobile","computedVariant","headerIdRef","undefined","setHeaderRef","id","current","isLabelledByHeader","cardsLabel","columns","measureRef","contentBoxWidth","refObject","mergedRef","getMouseDownTarget","i18n","isItemSelected","getItemSelectionProps","itemSelectionLabel","selectionGroupLabel","hasToolsHeader","hasFooterPagination","headerRef","scrollToTop","scrollToItem","onCardFocus","event","currentTarget","contains","status","createElement","className","type","visible","length","Provider","value","defaultVariant","Object","assign","root","assignId","footer","disableContentPaddings","disableHeaderPaddings","__stickyHeader","__stickyOffset","__headerRef","__fullPage","__disableFooterDivider","refresh","lastIndex","CardsList","onFocus","ariaLabel","ariaLabelledby","selectable","canClickEntireCard","moveFocusDown","moveFocusUp","visibleSectionsDefinition","sections","section","indexOf","listRole","listItemRole","list","role","map","item","index","card","key","onClick","onChange","querySelector","focus","onFocusDown","onFocusUp","width","content","style"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/cards/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { FocusEventHandler, useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\n\nimport { InternalContainerAsSubstep } from '../container/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { getBaseProps } from '../internal/base-component';\nimport LiveRegion from '../internal/components/live-region';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport {\n  focusMarkers,\n  SelectionControl,\n  SelectionControlProps,\n  useSelection,\n  useSelectionFocusMove,\n} from '../table/selection';\nimport stickyScrolling from '../table/sticky-scrolling';\nimport ToolsHeader from '../table/tools-header';\nimport { getItemKey } from '../table/utils';\nimport { getCardsPerRow } from './cards-layout-helper';\nimport { CardsForwardRefType, CardsProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport { CardsProps };\n\nconst Cards = React.forwardRef(function <T = any>(\n  {\n    items = [],\n    cardDefinition,\n    cardsPerRow = [],\n    header,\n    filter,\n    pagination,\n    preferences,\n    empty,\n    loading,\n    loadingText,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels,\n    visibleSections,\n    stickyHeader,\n    stickyHeaderVerticalOffset,\n    variant = 'container',\n    renderAriaLive,\n    firstIndex = 1,\n    totalItemsCount,\n    entireCardClickable,\n    ...rest\n  }: CardsProps<T>,\n  ref: React.Ref<CardsProps.Ref>\n) {\n  const { __internalRootRef } = useBaseComponent('Cards', {\n    props: { entireCardClickable, selectionType, stickyHeader, variant },\n  });\n  const baseProps = getBaseProps(rest);\n  const isRefresh = useVisualRefresh();\n  const isMobile = useMobile();\n\n  const computedVariant = isRefresh ? variant : 'container';\n\n  const headerIdRef = useRef<string | undefined>(undefined);\n  const setHeaderRef = useCallback((id: string) => {\n    headerIdRef.current = id;\n  }, []);\n  const isLabelledByHeader = !ariaLabels?.cardsLabel && !!header;\n\n  const [columns, measureRef] = useContainerQuery<number>(\n    ({ contentBoxWidth }) => getCardsPerRow(contentBoxWidth, cardsPerRow),\n    [cardsPerRow]\n  );\n  const refObject = useRef(null);\n  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);\n  const getMouseDownTarget = useMouseDownTarget();\n\n  const i18n = useInternalI18n('cards');\n  const { isItemSelected, getItemSelectionProps } = useSelection({\n    items,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels: {\n      itemSelectionLabel: ariaLabels?.itemSelectionLabel,\n      selectionGroupLabel: i18n('ariaLabels.selectionGroupLabel', ariaLabels?.selectionGroupLabel),\n    },\n  });\n  const hasToolsHeader = header || filter || pagination || preferences;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const { scrollToTop, scrollToItem } = stickyScrolling(refObject, headerRef);\n  stickyHeader = !isMobile && stickyHeader;\n  const onCardFocus: FocusEventHandler<HTMLElement> = event => {\n    // When an element inside card receives focus we want to adjust the scroll.\n    // However, that behavior is unwanted when the focus is received as result of a click\n    // as it causes the click to never reach the target element.\n    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {\n      scrollToItem(event.currentTarget);\n    }\n  };\n  useImperativeHandle(\n    ref,\n    () => ({\n      scrollToTop: () => {\n        if (stickyHeader) {\n          scrollToTop();\n        }\n      },\n    }),\n    [stickyHeader, scrollToTop]\n  );\n  let status;\n  if (loading) {\n    status = (\n      <div className={styles.loading}>\n        <InternalStatusIndicator type=\"loading\">\n          <LiveRegion visible={true}>{loadingText}</LiveRegion>\n        </InternalStatusIndicator>\n      </div>\n    );\n  } else if (empty && !items.length) {\n    status = <div className={styles.empty}>{empty}</div>;\n  }\n\n  return (\n    <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n      <AnalyticsFunnelSubStep>\n        <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n          <InternalContainerAsSubstep\n            header={\n              hasToolsHeader && (\n                <div\n                  className={clsx(\n                    styles.header,\n                    isRefresh && styles['header-refresh'],\n                    styles[`header-variant-${computedVariant}`]\n                  )}\n                >\n                  <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                    <ToolsHeader header={header} filter={filter} pagination={pagination} preferences={preferences} />\n                  </CollectionLabelContext.Provider>\n                </div>\n              )\n            }\n            footer={hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n            disableContentPaddings={true}\n            disableHeaderPaddings={computedVariant === 'full-page'}\n            variant={computedVariant === 'container' ? 'cards' : computedVariant}\n            __stickyHeader={stickyHeader}\n            __stickyOffset={stickyHeaderVerticalOffset}\n            __headerRef={headerRef}\n            __fullPage={computedVariant === 'full-page'}\n            __disableFooterDivider={true}\n          >\n            <div\n              className={clsx(\n                hasToolsHeader && styles['has-header'],\n                isRefresh && styles.refresh,\n                styles[`header-variant-${computedVariant}`]\n              )}\n            >\n              {!!renderAriaLive && !!firstIndex && (\n                <LiveRegion>\n                  <span>\n                    {renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 })}\n                  </span>\n                </LiveRegion>\n              )}\n              {status ?? (\n                <CardsList\n                  items={items}\n                  cardDefinition={cardDefinition}\n                  trackBy={trackBy}\n                  selectionType={selectionType}\n                  columns={columns}\n                  isItemSelected={isItemSelected}\n                  getItemSelectionProps={getItemSelectionProps}\n                  visibleSections={visibleSections}\n                  onFocus={onCardFocus}\n                  ariaLabel={ariaLabels?.cardsLabel}\n                  ariaLabelledby={isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined}\n                  entireCardClickable={entireCardClickable}\n                />\n              )}\n            </div>\n          </InternalContainerAsSubstep>\n        </div>\n      </AnalyticsFunnelSubStep>\n    </LinkDefaultVariantContext.Provider>\n  );\n}) as CardsForwardRefType;\n\nexport default Cards;\n\nconst CardsList = <T,>({\n  items,\n  cardDefinition,\n  trackBy,\n  selectionType,\n  columns,\n  isItemSelected,\n  getItemSelectionProps,\n  visibleSections,\n  onFocus,\n  ariaLabelledby,\n  ariaLabel,\n  entireCardClickable,\n}: Pick<\n  CardsProps<T>,\n  'items' | 'cardDefinition' | 'trackBy' | 'selectionType' | 'visibleSections' | 'entireCardClickable'\n> & {\n  columns: number | null;\n  isItemSelected: (item: T) => boolean;\n  getItemSelectionProps?: (item: T) => SelectionControlProps;\n  onFocus: FocusEventHandler<HTMLElement>;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}) => {\n  const selectable = !!selectionType;\n  const canClickEntireCard = selectable && entireCardClickable;\n  const isRefresh = useVisualRefresh();\n\n  const { moveFocusDown, moveFocusUp } = useSelectionFocusMove(selectionType, items.length);\n\n  let visibleSectionsDefinition = cardDefinition.sections || [];\n  visibleSectionsDefinition = visibleSections\n    ? visibleSectionsDefinition.filter(\n        (section: CardsProps.SectionDefinition<T>) => section.id && visibleSections.indexOf(section.id) !== -1\n      )\n    : visibleSectionsDefinition;\n\n  let listRole: 'group' | undefined = undefined;\n  let listItemRole: 'presentation' | undefined = undefined;\n\n  if (selectable) {\n    listRole = 'group';\n    listItemRole = 'presentation';\n  }\n\n  return (\n    <ol\n      className={clsx(styles.list, styles[`list-grid-${columns || 1}`])}\n      role={listRole}\n      aria-labelledby={ariaLabelledby}\n      aria-label={ariaLabel}\n      {...(focusMarkers && focusMarkers.root)}\n    >\n      {items.map((item, index) => (\n        <li\n          className={clsx(styles.card, {\n            [styles['card-selectable']]: selectable,\n            [styles['card-selected']]: selectable && isItemSelected(item),\n          })}\n          key={getItemKey(trackBy, item, index)}\n          onFocus={onFocus}\n          {...(focusMarkers && focusMarkers.item)}\n          role={listItemRole}\n        >\n          <div\n            className={clsx(styles['card-inner'], isRefresh && styles.refresh)}\n            onClick={\n              canClickEntireCard\n                ? event => {\n                    getItemSelectionProps?.(item).onChange();\n                    // Manually move focus to the native input (checkbox or radio button)\n                    event.currentTarget.querySelector('input')?.focus();\n                  }\n                : undefined\n            }\n          >\n            <div className={styles['card-header']}>\n              <div className={styles['card-header-inner']}>\n                {cardDefinition.header ? cardDefinition.header(item) : ''}\n              </div>\n              {getItemSelectionProps && (\n                <div className={styles['selection-control']}>\n                  <SelectionControl\n                    onFocusDown={moveFocusDown}\n                    onFocusUp={moveFocusUp}\n                    {...getItemSelectionProps(item)}\n                  />\n                </div>\n              )}\n            </div>\n            {visibleSectionsDefinition.map(({ width = 100, header, content, id }, index) => (\n              <div key={id || index} className={styles.section} style={{ width: `${width}%` }}>\n                {header ? <div className={styles['section-header']}>{header}</div> : ''}\n                {content ? <div className={styles['section-content']}>{content(item)}</div> : ''}\n              </div>\n            ))}\n          </div>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\napplyDisplayName(Cards, 'Cards');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}