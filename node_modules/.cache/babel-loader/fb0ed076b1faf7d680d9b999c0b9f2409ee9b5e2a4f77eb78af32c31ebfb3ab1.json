{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport OptionsList from '../../internal/components/options-list';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useVirtual } from '../../internal/hooks/use-virtual';\nimport { renderOptions } from '../utils/render-options';\nimport styles from './styles.css.js';\nconst VirtualList = (props, ref) => {\n  return props.menuProps.open ? React.createElement(VirtualListOpen, Object.assign({}, props, {\n    ref: ref\n  })) : React.createElement(VirtualListClosed, Object.assign({}, props, {\n    ref: ref\n  }));\n};\nconst VirtualListOpen = forwardRef((_ref, ref) => {\n  let {\n    menuProps,\n    getOptionProps,\n    filteredOptions,\n    filteringValue,\n    highlightType,\n    checkboxes,\n    hasDropdownStatus,\n    listBottom,\n    useInteractiveGroups,\n    screenReaderContent\n  } = _ref;\n  // update component, when it gets wider or narrower to reposition items\n  const [width, menuMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth, []);\n  const menuRefObject = useRef(null);\n  const menuRef = useMergeRefs(menuMeasureRef, menuRefObject, menuProps.ref);\n  const {\n    virtualItems,\n    totalSize,\n    scrollToIndex\n  } = useVirtual({\n    items: filteredOptions,\n    parentRef: menuRefObject,\n    // estimateSize is a dependency of measurements memo. We update it to force full recalculation\n    // when the height of any option could have changed:\n    // 1: because the component got resized (width property got updated)\n    // 2: because the option changed its content (filteringValue property controls the highlight and the visibility of hidden tags)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    estimateSize: useCallback(() => 31, [width, filteringValue])\n  });\n  useImperativeHandle(ref, () => index => {\n    if (highlightType.moveFocus) {\n      scrollToIndex(index);\n    }\n  }, [highlightType, scrollToIndex]);\n  const finalOptions = renderOptions({\n    options: virtualItems.map(_ref2 => {\n      let {\n        index\n      } = _ref2;\n      return filteredOptions[index];\n    }),\n    getOptionProps,\n    filteringValue,\n    highlightType,\n    checkboxes,\n    hasDropdownStatus,\n    virtualItems,\n    useInteractiveGroups,\n    screenReaderContent,\n    ariaSetsize: filteredOptions.length\n  });\n  return React.createElement(OptionsList, Object.assign({}, menuProps, {\n    ref: menuRef\n  }), React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    key: \"total-size\",\n    className: styles['layout-strut'],\n    style: {\n      height: totalSize\n    }\n  }), finalOptions, listBottom ? React.createElement(\"li\", {\n    role: \"option\",\n    className: styles['list-bottom']\n  }, listBottom) : null);\n});\nconst VirtualListClosed = forwardRef((_ref3, ref) => {\n  let {\n    menuProps,\n    listBottom\n  } = _ref3;\n  useImperativeHandle(ref, () => () => {}, []);\n  return React.createElement(OptionsList, Object.assign({}, menuProps, {\n    ref: menuProps.ref\n  }), listBottom ? React.createElement(\"li\", {\n    role: \"option\",\n    className: styles['list-bottom']\n  }, listBottom) : null);\n});\nexport default forwardRef(VirtualList);","map":{"version":3,"names":["React","forwardRef","useCallback","useImperativeHandle","useRef","useContainerQuery","OptionsList","useMergeRefs","useVirtual","renderOptions","styles","VirtualList","props","ref","menuProps","open","createElement","VirtualListOpen","Object","assign","VirtualListClosed","_ref","getOptionProps","filteredOptions","filteringValue","highlightType","checkboxes","hasDropdownStatus","listBottom","useInteractiveGroups","screenReaderContent","width","menuMeasureRef","rect","contentBoxWidth","menuRefObject","menuRef","virtualItems","totalSize","scrollToIndex","items","parentRef","estimateSize","index","moveFocus","finalOptions","options","map","_ref2","ariaSetsize","length","key","className","style","height","role","_ref3"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/select/parts/virtual-list.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useCallback, useImperativeHandle, useRef } from 'react';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\n\nimport OptionsList from '../../internal/components/options-list';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useVirtual } from '../../internal/hooks/use-virtual';\nimport { renderOptions } from '../utils/render-options';\nimport { SelectListProps } from './plain-list';\n\nimport styles from './styles.css.js';\n\nconst VirtualList = (props: SelectListProps, ref: React.Ref<SelectListProps.SelectListRef>) => {\n  return props.menuProps.open ? <VirtualListOpen {...props} ref={ref} /> : <VirtualListClosed {...props} ref={ref} />;\n};\n\nconst VirtualListOpen = forwardRef(\n  (\n    {\n      menuProps,\n      getOptionProps,\n      filteredOptions,\n      filteringValue,\n      highlightType,\n      checkboxes,\n      hasDropdownStatus,\n      listBottom,\n      useInteractiveGroups,\n      screenReaderContent,\n    }: SelectListProps,\n    ref: React.Ref<SelectListProps.SelectListRef>\n  ) => {\n    // update component, when it gets wider or narrower to reposition items\n    const [width, menuMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth, []);\n    const menuRefObject = useRef(null);\n    const menuRef = useMergeRefs(menuMeasureRef, menuRefObject, menuProps.ref);\n\n    const { virtualItems, totalSize, scrollToIndex } = useVirtual({\n      items: filteredOptions,\n      parentRef: menuRefObject,\n      // estimateSize is a dependency of measurements memo. We update it to force full recalculation\n      // when the height of any option could have changed:\n      // 1: because the component got resized (width property got updated)\n      // 2: because the option changed its content (filteringValue property controls the highlight and the visibility of hidden tags)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      estimateSize: useCallback(() => 31, [width, filteringValue]),\n    });\n\n    useImperativeHandle(\n      ref,\n      () => (index: number) => {\n        if (highlightType.moveFocus) {\n          scrollToIndex(index);\n        }\n      },\n      [highlightType, scrollToIndex]\n    );\n    const finalOptions = renderOptions({\n      options: virtualItems.map(({ index }) => filteredOptions[index]),\n      getOptionProps,\n      filteringValue,\n      highlightType,\n      checkboxes,\n      hasDropdownStatus,\n      virtualItems,\n      useInteractiveGroups,\n      screenReaderContent,\n      ariaSetsize: filteredOptions.length,\n    });\n\n    return (\n      <OptionsList {...menuProps} ref={menuRef}>\n        <div aria-hidden=\"true\" key=\"total-size\" className={styles['layout-strut']} style={{ height: totalSize }} />\n        {finalOptions}\n        {listBottom ? (\n          <li role=\"option\" className={styles['list-bottom']}>\n            {listBottom}\n          </li>\n        ) : null}\n      </OptionsList>\n    );\n  }\n);\n\nconst VirtualListClosed = forwardRef(\n  ({ menuProps, listBottom }: SelectListProps, ref: React.Ref<SelectListProps.SelectListRef>) => {\n    useImperativeHandle(ref, () => () => {}, []);\n    return (\n      <OptionsList {...menuProps} ref={menuProps.ref}>\n        {listBottom ? (\n          <li role=\"option\" className={styles['list-bottom']}>\n            {listBottom}\n          </li>\n        ) : null}\n      </OptionsList>\n    );\n  }\n);\n\nexport default forwardRef(VirtualList);\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAEnF,SAASC,iBAAiB,QAAQ,sCAAsC;AAExE,OAAOC,WAAW,MAAM,wCAAwC;AAChE,SAASC,YAAY,QAAQ,qCAAqC;AAClE,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,aAAa,QAAQ,yBAAyB;AAGvD,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,WAAW,GAAGA,CAACC,KAAsB,EAAEC,GAA6C,KAAI;EAC5F,OAAOD,KAAK,CAACE,SAAS,CAACC,IAAI,GAAGf,KAAA,CAAAgB,aAAA,CAACC,eAAe,EAAAC,MAAA,CAAAC,MAAA,KAAKP,KAAK;IAAEC,GAAG,EAAEA;EAAG,GAAI,GAAGb,KAAA,CAAAgB,aAAA,CAACI,iBAAiB,EAAAF,MAAA,CAAAC,MAAA,KAAKP,KAAK;IAAEC,GAAG,EAAEA;EAAG,GAAI;AACrH,CAAC;AAED,MAAMI,eAAe,GAAGhB,UAAU,CAChC,CAAAoB,IAAA,EAaER,GAA6C,KAC3C;EAAA,IAbF;IACEC,SAAS;IACTQ,cAAc;IACdC,eAAe;IACfC,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC,iBAAiB;IACjBC,UAAU;IACVC,oBAAoB;IACpBC;EAAmB,CACH,GAAAT,IAAA;EAGlB;EACA,MAAM,CAACU,KAAK,EAAEC,cAAc,CAAC,GAAG3B,iBAAiB,CAAC4B,IAAI,IAAIA,IAAI,CAACC,eAAe,EAAE,EAAE,CAAC;EACnF,MAAMC,aAAa,GAAG/B,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMgC,OAAO,GAAG7B,YAAY,CAACyB,cAAc,EAAEG,aAAa,EAAErB,SAAS,CAACD,GAAG,CAAC;EAE1E,MAAM;IAAEwB,YAAY;IAAEC,SAAS;IAAEC;EAAa,CAAE,GAAG/B,UAAU,CAAC;IAC5DgC,KAAK,EAAEjB,eAAe;IACtBkB,SAAS,EAAEN,aAAa;IACxB;IACA;IACA;IACA;IACA;IACAO,YAAY,EAAExC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC6B,KAAK,EAAEP,cAAc,CAAC;GAC5D,CAAC;EAEFrB,mBAAmB,CACjBU,GAAG,EACH,MAAO8B,KAAa,IAAI;IACtB,IAAIlB,aAAa,CAACmB,SAAS,EAAE;MAC3BL,aAAa,CAACI,KAAK,CAAC;;EAExB,CAAC,EACD,CAAClB,aAAa,EAAEc,aAAa,CAAC,CAC/B;EACD,MAAMM,YAAY,GAAGpC,aAAa,CAAC;IACjCqC,OAAO,EAAET,YAAY,CAACU,GAAG,CAACC,KAAA;MAAA,IAAC;QAAEL;MAAK,CAAE,GAAAK,KAAA;MAAA,OAAKzB,eAAe,CAACoB,KAAK,CAAC;IAAA,EAAC;IAChErB,cAAc;IACdE,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC,iBAAiB;IACjBU,YAAY;IACZR,oBAAoB;IACpBC,mBAAmB;IACnBmB,WAAW,EAAE1B,eAAe,CAAC2B;GAC9B,CAAC;EAEF,OACElD,KAAA,CAAAgB,aAAA,CAACV,WAAW,EAAAY,MAAA,CAAAC,MAAA,KAAKL,SAAS;IAAED,GAAG,EAAEuB;EAAO,IACtCpC,KAAA,CAAAgB,aAAA;IAAA,eAAiB,MAAM;IAACmC,GAAG,EAAC,YAAY;IAACC,SAAS,EAAE1C,MAAM,CAAC,cAAc,CAAC;IAAE2C,KAAK,EAAE;MAAEC,MAAM,EAAEhB;IAAS;EAAE,EAAI,EAC3GO,YAAY,EACZjB,UAAU,GACT5B,KAAA,CAAAgB,aAAA;IAAIuC,IAAI,EAAC,QAAQ;IAACH,SAAS,EAAE1C,MAAM,CAAC,aAAa;EAAC,GAC/CkB,UAAU,CACR,GACH,IAAI,CACI;AAElB,CAAC,CACF;AAED,MAAMR,iBAAiB,GAAGnB,UAAU,CAClC,CAAAuD,KAAA,EAA6C3C,GAA6C,KAAI;EAAA,IAA7F;IAAEC,SAAS;IAAEc;EAAU,CAAmB,GAAA4B,KAAA;EACzCrD,mBAAmB,CAACU,GAAG,EAAE,MAAM,MAAK,CAAE,CAAC,EAAE,EAAE,CAAC;EAC5C,OACEb,KAAA,CAAAgB,aAAA,CAACV,WAAW,EAAAY,MAAA,CAAAC,MAAA,KAAKL,SAAS;IAAED,GAAG,EAAEC,SAAS,CAACD;EAAG,IAC3Ce,UAAU,GACT5B,KAAA,CAAAgB,aAAA;IAAIuC,IAAI,EAAC,QAAQ;IAACH,SAAS,EAAE1C,MAAM,CAAC,aAAa;EAAC,GAC/CkB,UAAU,CACR,GACH,IAAI,CACI;AAElB,CAAC,CACF;AAED,eAAe3B,UAAU,CAACU,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}