{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nexport function useSplitPanelFocusControl(dependencies) {\n  const refs = {\n    toggle: useRef(null),\n    slider: useRef(null),\n    preferences: useRef(null)\n  };\n  const lastInteraction = useRef(null);\n  useEffect(() => {\n    var _a, _b, _c, _d;\n    switch ((_a = lastInteraction.current) === null || _a === void 0 ? void 0 : _a.type) {\n      case 'open':\n        (_b = refs.slider.current) === null || _b === void 0 ? void 0 : _b.focus();\n        break;\n      case 'close':\n        (_c = refs.toggle.current) === null || _c === void 0 ? void 0 : _c.focus();\n        break;\n      case 'position':\n        (_d = refs.preferences.current) === null || _d === void 0 ? void 0 : _d.focus();\n        break;\n    }\n    lastInteraction.current = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n  return {\n    refs,\n    setLastInteraction: interaction => lastInteraction.current = interaction\n  };\n}","map":{"version":3,"names":["useEffect","useRef","useSplitPanelFocusControl","dependencies","refs","toggle","slider","preferences","lastInteraction","_a","current","type","_b","focus","_c","_d","setLastInteraction","interaction"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/app-layout/utils/use-split-panel-focus-control.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { DependencyList, RefObject, useEffect, useRef } from 'react';\n\nimport { Focusable } from './use-focus-control';\n\nexport type SplitPanelLastInteraction = { type: 'open' } | { type: 'close' } | { type: 'position' };\n\nexport interface SplitPanelFocusControlRefs {\n  toggle: RefObject<Focusable>;\n  slider: RefObject<HTMLDivElement>;\n  preferences: RefObject<Focusable>;\n}\nexport interface SplitPanelFocusControlState {\n  refs: SplitPanelFocusControlRefs;\n  setLastInteraction: (interaction: SplitPanelLastInteraction) => void;\n}\n\nexport function useSplitPanelFocusControl(dependencies: DependencyList): SplitPanelFocusControlState {\n  const refs = {\n    toggle: useRef<Focusable>(null),\n    slider: useRef<HTMLDivElement>(null),\n    preferences: useRef<Focusable>(null),\n  };\n  const lastInteraction = useRef<SplitPanelLastInteraction | null>(null);\n\n  useEffect(() => {\n    switch (lastInteraction.current?.type) {\n      case 'open':\n        refs.slider.current?.focus();\n        break;\n      case 'close':\n        refs.toggle.current?.focus();\n        break;\n      case 'position':\n        refs.preferences.current?.focus();\n        break;\n    }\n    lastInteraction.current = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return {\n    refs,\n    setLastInteraction: (interaction: SplitPanelLastInteraction) => (lastInteraction.current = interaction),\n  };\n}\n"],"mappings":"AAAA;AACA;AACA,SAAoCA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAgBpE,OAAM,SAAUC,yBAAyBA,CAACC,YAA4B;EACpE,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAEJ,MAAM,CAAY,IAAI,CAAC;IAC/BK,MAAM,EAAEL,MAAM,CAAiB,IAAI,CAAC;IACpCM,WAAW,EAAEN,MAAM,CAAY,IAAI;GACpC;EACD,MAAMO,eAAe,GAAGP,MAAM,CAAmC,IAAI,CAAC;EAEtED,SAAS,CAAC,MAAK;;IACb,QAAQ,CAAAS,EAAA,GAAAD,eAAe,CAACE,OAAO,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI;MACnC,KAAK,MAAM;QACT,CAAAC,EAAA,GAAAR,IAAI,CAACE,MAAM,CAACI,OAAO,cAAAE,EAAA,uBAAAA,EAAA,CAAEC,KAAK,EAAE;QAC5B;MACF,KAAK,OAAO;QACV,CAAAC,EAAA,GAAAV,IAAI,CAACC,MAAM,CAACK,OAAO,cAAAI,EAAA,uBAAAA,EAAA,CAAED,KAAK,EAAE;QAC5B;MACF,KAAK,UAAU;QACb,CAAAE,EAAA,GAAAX,IAAI,CAACG,WAAW,CAACG,OAAO,cAAAK,EAAA,uBAAAA,EAAA,CAAEF,KAAK,EAAE;QACjC;;IAEJL,eAAe,CAACE,OAAO,GAAG,IAAI;IAC9B;EACF,CAAC,EAAEP,YAAY,CAAC;EAEhB,OAAO;IACLC,IAAI;IACJY,kBAAkB,EAAGC,WAAsC,IAAMT,eAAe,CAACE,OAAO,GAAGO;GAC5F;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}