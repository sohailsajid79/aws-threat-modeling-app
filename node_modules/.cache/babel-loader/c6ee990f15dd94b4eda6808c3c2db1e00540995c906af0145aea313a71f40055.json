{"ast":null,"code":"/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\nimport { frontmatter } from 'micromark-extension-frontmatter';\nimport { frontmatterFromMarkdown, frontmatterToMarkdown } from 'mdast-util-frontmatter';\n\n/**\n * Plugin to add support for frontmatter.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkFrontmatter() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'yaml';\n  const data = this.data();\n  add('micromarkExtensions', frontmatter(options));\n  add('fromMarkdownExtensions', frontmatterFromMarkdown(options));\n  add('toMarkdownExtensions', frontmatterToMarkdown(options));\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */\n    // Other extensions\n    /* c8 ignore next 2 */\n    data[field] ? data[field] : data[field] = [];\n    list.push(value);\n  }\n}","map":{"version":3,"names":["frontmatter","frontmatterFromMarkdown","frontmatterToMarkdown","remarkFrontmatter","options","arguments","length","undefined","data","add","field","value","list","push"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/node_modules/remark-frontmatter/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\nimport {frontmatter} from 'micromark-extension-frontmatter'\nimport {\n  frontmatterFromMarkdown,\n  frontmatterToMarkdown\n} from 'mdast-util-frontmatter'\n\n/**\n * Plugin to add support for frontmatter.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkFrontmatter(options = 'yaml') {\n  const data = this.data()\n\n  add('micromarkExtensions', frontmatter(options))\n  add('fromMarkdownExtensions', frontmatterFromMarkdown(options))\n  add('toMarkdownExtensions', frontmatterToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,WAAW,QAAO,iCAAiC;AAC3D,SACEC,uBAAuB,EACvBC,qBAAqB,QAChB,wBAAwB;;AAE/B;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAAA,EAAmB;EAAA,IAAlBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;EACxD,MAAMG,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC,CAAC;EAExBC,GAAG,CAAC,qBAAqB,EAAET,WAAW,CAACI,OAAO,CAAC,CAAC;EAChDK,GAAG,CAAC,wBAAwB,EAAER,uBAAuB,CAACG,OAAO,CAAC,CAAC;EAC/DK,GAAG,CAAC,sBAAsB,EAAEP,qBAAqB,CAACE,OAAO,CAAC,CAAC;;EAE3D;AACF;AACA;AACA;EACE,SAASK,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACzB,MAAMC,IAAI,GAAG;IACX;IACA;IACAJ,IAAI,CAACE,KAAK,CAAC,GAAGF,IAAI,CAACE,KAAK,CAAC,GAAIF,IAAI,CAACE,KAAK,CAAC,GAAG,EAC5C;IAEDE,IAAI,CAACC,IAAI,CAACF,KAAK,CAAC;EAClB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}