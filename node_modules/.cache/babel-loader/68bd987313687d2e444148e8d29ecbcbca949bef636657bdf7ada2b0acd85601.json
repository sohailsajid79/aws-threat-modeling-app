{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalStatusIndicator from './internal';\nexport default function StatusIndicator(_a) {\n  var {\n      type = 'success',\n      wrapText = true\n    } = _a,\n    props = __rest(_a, [\"type\", \"wrapText\"]);\n  const baseComponentProps = useBaseComponent('StatusIndicator', {\n    props: {\n      colorOverride: props.colorOverride,\n      type,\n      wrapText\n    }\n  });\n  return React.createElement(InternalStatusIndicator, Object.assign({\n    type: type,\n    wrapText: wrapText\n  }, props, baseComponentProps));\n}\napplyDisplayName(StatusIndicator, 'StatusIndicator');","map":{"version":3,"names":["React","useBaseComponent","applyDisplayName","InternalStatusIndicator","StatusIndicator","_a","type","wrapText","props","__rest","baseComponentProps","colorOverride","createElement","Object","assign"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/status-indicator/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalStatusIndicator, { StatusIndicatorProps } from './internal';\n\nexport { StatusIndicatorProps };\n\nexport default function StatusIndicator({ type = 'success', wrapText = true, ...props }: StatusIndicatorProps) {\n  const baseComponentProps = useBaseComponent('StatusIndicator', {\n    props: { colorOverride: props.colorOverride, type, wrapText },\n  });\n  return <InternalStatusIndicator type={type} wrapText={wrapText} {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(StatusIndicator, 'StatusIndicator');\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,OAAOC,uBAAiD,MAAM,YAAY;AAI1E,eAAc,SAAUC,eAAeA,CAACC,EAAqE;MAArE;MAAEC,IAAI,GAAG,SAAS;MAAEC,QAAQ,GAAG;IAAI,IAAAF,EAAkC;IAA7BG,KAAK,GAAAC,MAAA,CAAAJ,EAAA,EAA7C,oBAA+C,CAAF;EACnF,MAAMK,kBAAkB,GAAGT,gBAAgB,CAAC,iBAAiB,EAAE;IAC7DO,KAAK,EAAE;MAAEG,aAAa,EAAEH,KAAK,CAACG,aAAa;MAAEL,IAAI;MAAEC;IAAQ;GAC5D,CAAC;EACF,OAAOP,KAAA,CAAAY,aAAA,CAACT,uBAAuB,EAAAU,MAAA,CAAAC,MAAA;IAACR,IAAI,EAAEA,IAAI;IAAEC,QAAQ,EAAEA;EAAQ,GAAMC,KAAK,EAAME,kBAAkB,EAAI;AACvG;AAEAR,gBAAgB,CAACE,eAAe,EAAE,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}