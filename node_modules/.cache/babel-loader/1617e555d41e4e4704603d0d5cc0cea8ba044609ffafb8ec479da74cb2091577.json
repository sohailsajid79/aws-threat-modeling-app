{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport analyticsSelectors from './styles.css.js';\nexport const getComponentAnalyticsMetadata = (disabled, preferences = {}) => {\n  const metadata = {\n    name: 'awsui.CollectionPreferences',\n    label: `.${analyticsSelectors['trigger-button']}`,\n    properties: {\n      disabled: `${!!disabled}`\n    }\n  };\n  if (preferences.pageSize) {\n    metadata.properties.pageSize = `${preferences.pageSize}`;\n  }\n  if (preferences.wrapLines !== undefined) {\n    metadata.properties.wrapLines = `${!!preferences.wrapLines}`;\n  }\n  if (preferences.stripedRows !== undefined) {\n    metadata.properties.stripedRows = `${!!preferences.stripedRows}`;\n  }\n  if (preferences.contentDensity !== undefined) {\n    metadata.properties.contentDensity = preferences.contentDensity;\n  }\n  if (preferences.visibleContent) {\n    metadata.properties.visibleContentCount = `${preferences.visibleContent.length}`;\n  }\n  if (preferences.stickyColumns) {\n    if (preferences.stickyColumns.first) {\n      metadata.properties.stickyColumnsFirst = `${preferences.stickyColumns.first}`;\n    }\n    if (preferences.stickyColumns.last) {\n      metadata.properties.stickyColumnsLast = `${preferences.stickyColumns.last}`;\n    }\n  }\n  if (preferences.contentDisplay) {\n    metadata.properties.contentDisplayVisibleCount = `${preferences.contentDisplay.filter(({\n      visible\n    }) => !!visible).length}`;\n  }\n  return metadata;\n};\nexport const getAnalyticsInnerContextAttribute = preference => getAnalyticsMetadataAttribute({\n  component: {\n    innerContext: {\n      preference\n    }\n  }\n});","map":{"version":3,"names":["getAnalyticsMetadataAttribute","analyticsSelectors","getComponentAnalyticsMetadata","disabled","preferences","metadata","name","label","properties","pageSize","wrapLines","undefined","stripedRows","contentDensity","visibleContent","visibleContentCount","length","stickyColumns","first","stickyColumnsFirst","last","stickyColumnsLast","contentDisplay","contentDisplayVisibleCount","filter","visible","getAnalyticsInnerContextAttribute","preference","component","innerContext"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/collection-preferences/analytics-metadata/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { CollectionPreferencesProps } from '../interfaces';\nimport { GeneratedAnalyticsMetadataCollectionPreferencesComponent } from './interfaces';\n\nimport analyticsSelectors from './styles.css.js';\n\nexport const getComponentAnalyticsMetadata = (\n  disabled: boolean,\n  preferences: CollectionPreferencesProps['preferences'] = {}\n): GeneratedAnalyticsMetadataCollectionPreferencesComponent => {\n  const metadata: GeneratedAnalyticsMetadataCollectionPreferencesComponent = {\n    name: 'awsui.CollectionPreferences',\n    label: `.${analyticsSelectors['trigger-button']}`,\n    properties: {\n      disabled: `${!!disabled}`,\n    },\n  };\n  if (preferences.pageSize) {\n    metadata.properties.pageSize = `${preferences.pageSize}`;\n  }\n  if (preferences.wrapLines !== undefined) {\n    metadata.properties.wrapLines = `${!!preferences.wrapLines}`;\n  }\n  if (preferences.stripedRows !== undefined) {\n    metadata.properties.stripedRows = `${!!preferences.stripedRows}`;\n  }\n  if (preferences.contentDensity !== undefined) {\n    metadata.properties.contentDensity = preferences.contentDensity;\n  }\n  if (preferences.visibleContent) {\n    metadata.properties.visibleContentCount = `${preferences.visibleContent.length}`;\n  }\n  if (preferences.stickyColumns) {\n    if (preferences.stickyColumns.first) {\n      metadata.properties.stickyColumnsFirst = `${preferences.stickyColumns.first}`;\n    }\n    if (preferences.stickyColumns.last) {\n      metadata.properties.stickyColumnsLast = `${preferences.stickyColumns.last}`;\n    }\n  }\n  if (preferences.contentDisplay) {\n    metadata.properties.contentDisplayVisibleCount = `${preferences.contentDisplay.filter(({ visible }) => !!visible).length}`;\n  }\n  return metadata;\n};\n\nexport const getAnalyticsInnerContextAttribute = (preference: string) =>\n  getAnalyticsMetadataAttribute({\n    component: {\n      innerContext: {\n        preference,\n      },\n    },\n  });\n"],"mappings":"AAAA;AACA;AAEA,SAASA,6BAA6B,QAAQ,kEAAkE;AAKhH,OAAOC,kBAAkB,MAAM,iBAAiB;AAEhD,OAAO,MAAMC,6BAA6B,GAAGA,CAC3CC,QAAiB,EACjBC,WAAA,GAAyD,EAAE,KACC;EAC5D,MAAMC,QAAQ,GAA6D;IACzEC,IAAI,EAAE,6BAA6B;IACnCC,KAAK,EAAE,IAAIN,kBAAkB,CAAC,gBAAgB,CAAC,EAAE;IACjDO,UAAU,EAAE;MACVL,QAAQ,EAAE,GAAG,CAAC,CAACA,QAAQ;;GAE1B;EACD,IAAIC,WAAW,CAACK,QAAQ,EAAE;IACxBJ,QAAQ,CAACG,UAAU,CAACC,QAAQ,GAAG,GAAGL,WAAW,CAACK,QAAQ,EAAE;;EAE1D,IAAIL,WAAW,CAACM,SAAS,KAAKC,SAAS,EAAE;IACvCN,QAAQ,CAACG,UAAU,CAACE,SAAS,GAAG,GAAG,CAAC,CAACN,WAAW,CAACM,SAAS,EAAE;;EAE9D,IAAIN,WAAW,CAACQ,WAAW,KAAKD,SAAS,EAAE;IACzCN,QAAQ,CAACG,UAAU,CAACI,WAAW,GAAG,GAAG,CAAC,CAACR,WAAW,CAACQ,WAAW,EAAE;;EAElE,IAAIR,WAAW,CAACS,cAAc,KAAKF,SAAS,EAAE;IAC5CN,QAAQ,CAACG,UAAU,CAACK,cAAc,GAAGT,WAAW,CAACS,cAAc;;EAEjE,IAAIT,WAAW,CAACU,cAAc,EAAE;IAC9BT,QAAQ,CAACG,UAAU,CAACO,mBAAmB,GAAG,GAAGX,WAAW,CAACU,cAAc,CAACE,MAAM,EAAE;;EAElF,IAAIZ,WAAW,CAACa,aAAa,EAAE;IAC7B,IAAIb,WAAW,CAACa,aAAa,CAACC,KAAK,EAAE;MACnCb,QAAQ,CAACG,UAAU,CAACW,kBAAkB,GAAG,GAAGf,WAAW,CAACa,aAAa,CAACC,KAAK,EAAE;;IAE/E,IAAId,WAAW,CAACa,aAAa,CAACG,IAAI,EAAE;MAClCf,QAAQ,CAACG,UAAU,CAACa,iBAAiB,GAAG,GAAGjB,WAAW,CAACa,aAAa,CAACG,IAAI,EAAE;;;EAG/E,IAAIhB,WAAW,CAACkB,cAAc,EAAE;IAC9BjB,QAAQ,CAACG,UAAU,CAACe,0BAA0B,GAAG,GAAGnB,WAAW,CAACkB,cAAc,CAACE,MAAM,CAAC,CAAC;MAAEC;IAAO,CAAE,KAAK,CAAC,CAACA,OAAO,CAAC,CAACT,MAAM,EAAE;;EAE5H,OAAOX,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMqB,iCAAiC,GAAIC,UAAkB,IAClE3B,6BAA6B,CAAC;EAC5B4B,SAAS,EAAE;IACTC,YAAY,EAAE;MACZF;;;CAGL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}