{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport NewPasswordView from '../NewPasswordView';\nconst NewPassword = ({\n  onMFARequired,\n  onMFASelection,\n  onMFASetup,\n  resetView,\n  cognitoUser,\n  userAttributes,\n  requiredAttributes\n}) => {\n  const handleChangePassword = useCallback(async data => {\n    return new Promise((resolve, reject) => {\n      return cognitoUser.completeNewPasswordChallenge(data.password, data.attributes, {\n        onSuccess(result) {\n          resolve(result);\n          resetView();\n        },\n        onFailure(err) {\n          reject(err);\n        },\n        mfaSetup(challengeName, challengeParams) {\n          onMFASetup(cognitoUser, challengeName, challengeParams);\n          resolve({});\n        },\n        selectMFAType(challengeName, challengeParams) {\n          onMFASelection(cognitoUser, challengeName, challengeParams);\n          resolve({});\n        },\n        mfaRequired(challengeName, challengeParams) {\n          onMFARequired(cognitoUser, challengeName, challengeParams);\n          resolve({});\n        },\n        totpRequired(challengeName, challengeParams) {\n          onMFARequired(cognitoUser, challengeName, challengeParams);\n          resolve({});\n        }\n      });\n    });\n  }, [onMFARequired, resetView, cognitoUser, onMFASetup, onMFASelection]);\n  return _jsx(NewPasswordView, {\n    userAttributes: userAttributes,\n    requiredAttributes: requiredAttributes,\n    onChangePassword: handleChangePassword,\n    onBackToSignIn: resetView\n  });\n};\nexport default NewPassword;","map":{"version":3,"names":["jsx","_jsx","useCallback","NewPasswordView","NewPassword","onMFARequired","onMFASelection","onMFASetup","resetView","cognitoUser","userAttributes","requiredAttributes","handleChangePassword","data","Promise","resolve","reject","completeNewPasswordChallenge","password","attributes","onSuccess","result","onFailure","err","mfaSetup","challengeName","challengeParams","selectMFAType","mfaRequired","totpRequired","onChangePassword","onBackToSignIn"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/NewPassword/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport NewPasswordView from '../NewPasswordView';\nconst NewPassword = ({ onMFARequired, onMFASelection, onMFASetup, resetView, cognitoUser, userAttributes, requiredAttributes, }) => {\n    const handleChangePassword = useCallback(async (data) => {\n        return new Promise((resolve, reject) => {\n            return cognitoUser.completeNewPasswordChallenge(data.password, data.attributes, {\n                onSuccess(result) {\n                    resolve(result);\n                    resetView();\n                },\n                onFailure(err) {\n                    reject(err);\n                },\n                mfaSetup(challengeName, challengeParams) {\n                    onMFASetup(cognitoUser, challengeName, challengeParams);\n                    resolve({});\n                },\n                selectMFAType(challengeName, challengeParams) {\n                    onMFASelection(cognitoUser, challengeName, challengeParams);\n                    resolve({});\n                },\n                mfaRequired(challengeName, challengeParams) {\n                    onMFARequired(cognitoUser, challengeName, challengeParams);\n                    resolve({});\n                },\n                totpRequired(challengeName, challengeParams) {\n                    onMFARequired(cognitoUser, challengeName, challengeParams);\n                    resolve({});\n                },\n            });\n        });\n    }, [onMFARequired, resetView, cognitoUser, onMFASetup, onMFASelection]);\n    return (_jsx(NewPasswordView, { userAttributes: userAttributes, requiredAttributes: requiredAttributes, onChangePassword: handleChangePassword, onBackToSignIn: resetView }));\n};\nexport default NewPassword;\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,eAAe,MAAM,oBAAoB;AAChD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,aAAa;EAAEC,cAAc;EAAEC,UAAU;EAAEC,SAAS;EAAEC,WAAW;EAAEC,cAAc;EAAEC;AAAoB,CAAC,KAAK;EAChI,MAAMC,oBAAoB,GAAGV,WAAW,CAAC,MAAOW,IAAI,IAAK;IACrD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,OAAOP,WAAW,CAACQ,4BAA4B,CAACJ,IAAI,CAACK,QAAQ,EAAEL,IAAI,CAACM,UAAU,EAAE;QAC5EC,SAASA,CAACC,MAAM,EAAE;UACdN,OAAO,CAACM,MAAM,CAAC;UACfb,SAAS,CAAC,CAAC;QACf,CAAC;QACDc,SAASA,CAACC,GAAG,EAAE;UACXP,MAAM,CAACO,GAAG,CAAC;QACf,CAAC;QACDC,QAAQA,CAACC,aAAa,EAAEC,eAAe,EAAE;UACrCnB,UAAU,CAACE,WAAW,EAAEgB,aAAa,EAAEC,eAAe,CAAC;UACvDX,OAAO,CAAC,CAAC,CAAC,CAAC;QACf,CAAC;QACDY,aAAaA,CAACF,aAAa,EAAEC,eAAe,EAAE;UAC1CpB,cAAc,CAACG,WAAW,EAAEgB,aAAa,EAAEC,eAAe,CAAC;UAC3DX,OAAO,CAAC,CAAC,CAAC,CAAC;QACf,CAAC;QACDa,WAAWA,CAACH,aAAa,EAAEC,eAAe,EAAE;UACxCrB,aAAa,CAACI,WAAW,EAAEgB,aAAa,EAAEC,eAAe,CAAC;UAC1DX,OAAO,CAAC,CAAC,CAAC,CAAC;QACf,CAAC;QACDc,YAAYA,CAACJ,aAAa,EAAEC,eAAe,EAAE;UACzCrB,aAAa,CAACI,WAAW,EAAEgB,aAAa,EAAEC,eAAe,CAAC;UAC1DX,OAAO,CAAC,CAAC,CAAC,CAAC;QACf;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,CAACV,aAAa,EAAEG,SAAS,EAAEC,WAAW,EAAEF,UAAU,EAAED,cAAc,CAAC,CAAC;EACvE,OAAQL,IAAI,CAACE,eAAe,EAAE;IAAEO,cAAc,EAAEA,cAAc;IAAEC,kBAAkB,EAAEA,kBAAkB;IAAEmB,gBAAgB,EAAElB,oBAAoB;IAAEmB,cAAc,EAAEvB;EAAU,CAAC,CAAC;AAChL,CAAC;AACD,eAAeJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}