{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { useMobile } from '../internal/hooks/use-mobile/index.js';\nimport styles from './styles.css.js';\nexport default function SliderLabels({\n  min,\n  max,\n  referenceValues,\n  valueFormatter,\n  labelsId,\n  ariaDescription\n}) {\n  const isMobile = useMobile();\n  const MAX_LABEL_COUNT = isMobile ? 4 : 10;\n  const minDistance = (max - min) / MAX_LABEL_COUNT;\n  // Returns only values that have enough distance between them to show properly.\n  // We also remove non-integer values and any values outside of the slider range.\n  const getVisibleReferenceValues = () => {\n    if (!referenceValues || referenceValues.length === 0) {\n      return [];\n    }\n    const values = [];\n    let lastValue = min;\n    for (let i = 0; i <= referenceValues.length; i++) {\n      if (referenceValues[i] > min && referenceValues[i] < max && Math.abs(referenceValues[i] - lastValue) >= minDistance && Math.abs(max - referenceValues[i]) >= minDistance && Number.isInteger(referenceValues[i])) {\n        values.push(referenceValues[i]);\n        lastValue = referenceValues[i];\n      }\n    }\n    return values;\n  };\n  function getLabelPosition(index) {\n    const colSpan = Math.floor(minDistance / 2);\n    const positionStart = index - colSpan;\n    const positionEnd = index + colSpan;\n    // We simplify label treatment if the range is less than the max label count.\n    // This is because we don't need to add extra grid columns for necessary width.\n    const hasSmallRange = max - min <= MAX_LABEL_COUNT;\n    if (hasSmallRange) {\n      return {\n        min: 1,\n        max: (max - min) * 2 - 1,\n        posStart: (index - min) * 2,\n        posEnd: (index - min) * 2\n      };\n    }\n    const roundedHalfCol = Math.round(colSpan / 2);\n    return {\n      min: colSpan * 2 + roundedHalfCol,\n      max: (max - min - colSpan) * 2 - roundedHalfCol + 1,\n      // add one to center the label\n      posStart: (positionStart - min) * 2 + 1 + roundedHalfCol,\n      posEnd: (positionEnd - min) * 2 - roundedHalfCol\n    };\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    role: \"list\",\n    \"aria-hidden\": !valueFormatter && !referenceValues ? 'true' : undefined,\n    className: clsx(styles.labels, {\n      [styles['labels-noref']]: getVisibleReferenceValues().length === 0\n    }),\n    style: {\n      [customCssProps.sliderLabelCount]: getVisibleReferenceValues().length === 0 ? 2 : (max - min) * 2\n    },\n    id: !ariaDescription ? labelsId : undefined\n  }, React.createElement(\"span\", {\n    role: \"listitem\",\n    className: clsx(styles.label, styles['labels-min']),\n    style: {\n      [customCssProps.sliderMinEnd]: getLabelPosition(0).min\n    }\n  }, valueFormatter ? valueFormatter(min) : min), getVisibleReferenceValues().map(step => {\n    return React.createElement(\"span\", {\n      role: \"listitem\",\n      key: step,\n      style: {\n        [customCssProps.sliderReferenceColumn]: getLabelPosition(step).posStart,\n        [customCssProps.sliderNextReferenceColumn]: getLabelPosition(step).posEnd\n      },\n      className: clsx(styles.label, styles['labels-reference'])\n    }, valueFormatter ? valueFormatter(step) : step);\n  }), React.createElement(\"span\", {\n    role: \"listitem\",\n    className: clsx(styles.label, styles['labels-max']),\n    style: {\n      [customCssProps.sliderMaxStart]: !referenceValues ? 2 : getLabelPosition(0).max\n    }\n  }, valueFormatter ? valueFormatter(max) : max)), ariaDescription && React.createElement(\"div\", {\n    className: styles['labels-aria-description'],\n    id: labelsId\n  }, ariaDescription));\n}","map":{"version":3,"names":["React","clsx","customCssProps","useMobile","styles","SliderLabels","min","max","referenceValues","valueFormatter","labelsId","ariaDescription","isMobile","MAX_LABEL_COUNT","minDistance","getVisibleReferenceValues","length","values","lastValue","i","Math","abs","Number","isInteger","push","getLabelPosition","index","colSpan","floor","positionStart","positionEnd","hasSmallRange","posStart","posEnd","roundedHalfCol","round","createElement","Fragment","role","undefined","className","labels","style","sliderLabelCount","id","label","sliderMinEnd","map","step","key","sliderReferenceColumn","sliderNextReferenceColumn","sliderMaxStart"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/slider/slider-labels.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport customCssProps from '../internal/generated/custom-css-properties/index.js';\nimport { useMobile } from '../internal/hooks/use-mobile/index.js';\n\nimport styles from './styles.css.js';\n\nexport interface SliderLabelProps {\n  min: number;\n  max: number;\n  referenceValues?: ReadonlyArray<number>;\n  valueFormatter?: (value: number) => string;\n  labelsId: string;\n  ariaDescription?: string;\n}\nexport default function SliderLabels({\n  min,\n  max,\n  referenceValues,\n  valueFormatter,\n  labelsId,\n  ariaDescription,\n}: SliderLabelProps) {\n  const isMobile = useMobile();\n  const MAX_LABEL_COUNT = isMobile ? 4 : 10;\n  const minDistance = (max - min) / MAX_LABEL_COUNT;\n\n  // Returns only values that have enough distance between them to show properly.\n  // We also remove non-integer values and any values outside of the slider range.\n  const getVisibleReferenceValues = () => {\n    if (!referenceValues || referenceValues.length === 0) {\n      return [];\n    }\n\n    const values: Array<number> = [];\n\n    let lastValue = min;\n    for (let i = 0; i <= referenceValues.length; i++) {\n      if (\n        referenceValues[i] > min &&\n        referenceValues[i] < max &&\n        Math.abs(referenceValues[i] - lastValue) >= minDistance &&\n        Math.abs(max - referenceValues[i]) >= minDistance &&\n        Number.isInteger(referenceValues[i])\n      ) {\n        values.push(referenceValues[i]);\n        lastValue = referenceValues[i];\n      }\n    }\n    return values;\n  };\n\n  function getLabelPosition(index: number) {\n    const colSpan = Math.floor(minDistance / 2);\n    const positionStart = index - colSpan;\n    const positionEnd = index + colSpan;\n\n    // We simplify label treatment if the range is less than the max label count.\n    // This is because we don't need to add extra grid columns for necessary width.\n    const hasSmallRange = max - min <= MAX_LABEL_COUNT;\n\n    if (hasSmallRange) {\n      return {\n        min: 1,\n        max: (max - min) * 2 - 1,\n        posStart: (index - min) * 2,\n        posEnd: (index - min) * 2,\n      };\n    }\n    const roundedHalfCol = Math.round(colSpan / 2);\n\n    return {\n      min: colSpan * 2 + roundedHalfCol,\n      max: (max - min - colSpan) * 2 - roundedHalfCol + 1,\n      // add one to center the label\n      posStart: (positionStart - min) * 2 + 1 + roundedHalfCol,\n      posEnd: (positionEnd - min) * 2 - roundedHalfCol,\n    };\n  }\n\n  return (\n    <>\n      <div\n        role=\"list\"\n        aria-hidden={!valueFormatter && !referenceValues ? 'true' : undefined}\n        className={clsx(styles.labels, {\n          [styles['labels-noref']]: getVisibleReferenceValues().length === 0,\n        })}\n        style={{\n          [customCssProps.sliderLabelCount]: getVisibleReferenceValues().length === 0 ? 2 : (max - min) * 2,\n        }}\n        id={!ariaDescription ? labelsId : undefined}\n      >\n        <span\n          role=\"listitem\"\n          className={clsx(styles.label, styles['labels-min'])}\n          style={{\n            [customCssProps.sliderMinEnd]: getLabelPosition(0).min,\n          }}\n        >\n          {valueFormatter ? valueFormatter(min) : min}\n        </span>\n        {getVisibleReferenceValues().map(step => {\n          return (\n            <span\n              role=\"listitem\"\n              key={step}\n              style={{\n                [customCssProps.sliderReferenceColumn]: getLabelPosition(step).posStart,\n                [customCssProps.sliderNextReferenceColumn]: getLabelPosition(step).posEnd,\n              }}\n              className={clsx(styles.label, styles['labels-reference'])}\n            >\n              {valueFormatter ? valueFormatter(step) : step}\n            </span>\n          );\n        })}\n        <span\n          role=\"listitem\"\n          className={clsx(styles.label, styles['labels-max'])}\n          style={{\n            [customCssProps.sliderMaxStart]: !referenceValues ? 2 : getLabelPosition(0).max,\n          }}\n        >\n          {valueFormatter ? valueFormatter(max) : max}\n        </span>\n      </div>\n      {ariaDescription && (\n        <div className={styles['labels-aria-description']} id={labelsId}>\n          {ariaDescription}\n        </div>\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}