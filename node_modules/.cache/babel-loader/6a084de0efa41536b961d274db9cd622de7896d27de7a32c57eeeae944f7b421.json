{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getAnalyticsMetadataProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalExpandableSection from './internal';\nexport default function ExpandableSection(_a) {\n  var {\n      variant = 'default'\n    } = _a,\n    props = __rest(_a, [\"variant\"]);\n  const analyticsMetadata = getAnalyticsMetadataProps(props);\n  const baseComponentProps = useBaseComponent('ExpandableSection', {\n    props: {\n      disableContentPaddings: props.disableContentPaddings,\n      headingTagOverride: props.headingTagOverride,\n      variant\n    },\n    metadata: {\n      hasInstanceIdentifier: Boolean(analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier),\n      hasHeaderActions: Boolean(props.headerActions)\n    }\n  }, analyticsMetadata);\n  return React.createElement(InternalExpandableSection, Object.assign({\n    variant: variant\n  }, props, baseComponentProps, {\n    __injectAnalyticsComponentMetadata: true\n  }));\n}\napplyDisplayName(ExpandableSection, 'ExpandableSection');","map":{"version":3,"names":["React","getAnalyticsMetadataProps","useBaseComponent","applyDisplayName","InternalExpandableSection","ExpandableSection","_a","variant","props","__rest","analyticsMetadata","baseComponentProps","disableContentPaddings","headingTagOverride","metadata","hasInstanceIdentifier","Boolean","instanceIdentifier","hasHeaderActions","headerActions","createElement","Object","assign","__injectAnalyticsComponentMetadata"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/expandable-section/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { BasePropsWithAnalyticsMetadata, getAnalyticsMetadataProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ExpandableSectionProps } from './interfaces';\nimport InternalExpandableSection from './internal';\n\nexport { ExpandableSectionProps };\n\nexport default function ExpandableSection({ variant = 'default', ...props }: ExpandableSectionProps) {\n  const analyticsMetadata = getAnalyticsMetadataProps(props as BasePropsWithAnalyticsMetadata);\n  const baseComponentProps = useBaseComponent(\n    'ExpandableSection',\n    {\n      props: {\n        disableContentPaddings: props.disableContentPaddings,\n        headingTagOverride: props.headingTagOverride,\n        variant,\n      },\n      metadata: {\n        hasInstanceIdentifier: Boolean(analyticsMetadata?.instanceIdentifier),\n        hasHeaderActions: Boolean(props.headerActions),\n      },\n    },\n    analyticsMetadata\n  );\n\n  return (\n    <InternalExpandableSection\n      variant={variant}\n      {...props}\n      {...baseComponentProps}\n      __injectAnalyticsComponentMetadata={true}\n    />\n  );\n}\n\napplyDisplayName(ExpandableSection, 'ExpandableSection');\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAyCC,yBAAyB,QAAQ,4BAA4B;AACtG,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,yBAAyB,MAAM,YAAY;AAIlD,eAAc,SAAUC,iBAAiBA,CAACC,EAAyD;MAAzD;MAAEC,OAAO,GAAG;IAAS,IAAAD,EAAoC;IAA/BE,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAA/B,WAAiC,CAAF;EACvE,MAAMI,iBAAiB,GAAGT,yBAAyB,CAACO,KAAuC,CAAC;EAC5F,MAAMG,kBAAkB,GAAGT,gBAAgB,CACzC,mBAAmB,EACnB;IACEM,KAAK,EAAE;MACLI,sBAAsB,EAAEJ,KAAK,CAACI,sBAAsB;MACpDC,kBAAkB,EAAEL,KAAK,CAACK,kBAAkB;MAC5CN;KACD;IACDO,QAAQ,EAAE;MACRC,qBAAqB,EAAEC,OAAO,CAACN,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEO,kBAAkB,CAAC;MACrEC,gBAAgB,EAAEF,OAAO,CAACR,KAAK,CAACW,aAAa;;GAEhD,EACDT,iBAAiB,CAClB;EAED,OACEV,KAAA,CAAAoB,aAAA,CAAChB,yBAAyB,EAAAiB,MAAA,CAAAC,MAAA;IACxBf,OAAO,EAAEA;EAAO,GACZC,KAAK,EACLG,kBAAkB;IACtBY,kCAAkC,EAAE;EAAI,GACxC;AAEN;AAEApB,gBAAgB,CAACE,iBAAiB,EAAE,mBAAmB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}