{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalHeader, { Description as HeaderDescription } from '../header/internal';\nimport InternalIcon from '../icon/internal';\nimport { isDevelopment } from '../internal/is-development';\nimport { variantRequiresActionsDivider, variantSupportsActions, variantSupportsDescription, variantSupportsInfoLink } from './utils';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nexport const componentName = 'ExpandableSection';\nconst getExpandActionAnalyticsMetadataAttribute = expanded => {\n  const metadata = {\n    action: 'expand',\n    detail: {\n      label: {\n        rootSelector: `.${analyticsSelectors.root}`\n      },\n      expanded: `${!expanded}`\n    }\n  };\n  return getAnalyticsMetadataAttribute(metadata);\n};\nconst ExpandableDeprecatedHeader = _ref => {\n  let {\n    id,\n    className,\n    onClick,\n    ariaLabel,\n    ariaControls,\n    expanded,\n    children,\n    icon,\n    onKeyUp,\n    onKeyDown,\n    variant\n  } = _ref;\n  return React.createElement(\"div\", Object.assign({\n    id: id,\n    role: \"button\",\n    className: clsx(className, styles['expand-button'], styles['click-target'], styles['header-deprecated'], analyticsSelectors['header-label']),\n    tabIndex: 0,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onClick: onClick,\n    \"aria-label\": ariaLabel,\n    \"aria-controls\": ariaControls,\n    \"aria-expanded\": expanded\n  }, getExpandActionAnalyticsMetadataAttribute(expanded)), React.createElement(\"div\", {\n    className: clsx(styles['icon-container'], styles[`icon-container-${variant}`])\n  }, icon), children);\n};\nconst ExpandableNavigationHeader = _ref2 => {\n  let {\n    id,\n    className,\n    onClick,\n    ariaLabelledBy,\n    ariaLabel,\n    ariaControls,\n    expanded,\n    children,\n    icon\n  } = _ref2;\n  return React.createElement(\"div\", {\n    id: id,\n    className: clsx(className, styles['click-target'], analyticsSelectors['header-label'])\n  }, React.createElement(\"button\", Object.assign({\n    className: clsx(styles['icon-container'], styles['expand-button']),\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-label\": ariaLabel,\n    \"aria-controls\": ariaControls,\n    \"aria-expanded\": expanded,\n    type: \"button\",\n    onClick: onClick\n  }, getExpandActionAnalyticsMetadataAttribute(expanded)), icon), children);\n};\nconst ExpandableHeaderTextWrapper = _ref3 => {\n  let {\n    id,\n    descriptionId,\n    className,\n    onClick,\n    ariaLabel,\n    ariaControls,\n    expanded,\n    children,\n    icon,\n    headerDescription,\n    headerCounter,\n    headerInfo,\n    headerActions,\n    variant,\n    headingTagOverride,\n    onKeyUp,\n    onKeyDown\n  } = _ref3;\n  const isContainer = variant === 'container';\n  const HeadingTag = headingTagOverride || 'div';\n  const supportsInteractiveElements = variantSupportsActions(variant);\n  const restrictClickableArea = supportsInteractiveElements && (headerInfo || headerActions);\n  const actions = supportsInteractiveElements && headerActions;\n  const description = variantSupportsDescription(variant) && headerDescription && React.createElement(\"span\", {\n    id: descriptionId,\n    className: styles[`description-${variant}`]\n  }, headerDescription);\n  const listeners = {\n    onClick,\n    onKeyDown,\n    onKeyUp\n  };\n  // If interactive elements are present, constrain the clickable area to only the icon and the header text\n  // to prevent nesting interactive elements.\n  const headerButtonListeners = restrictClickableArea ? listeners : undefined;\n  // For the default and footer variants with description,\n  // include also the immediate wrapper around it to include the entire row for backwards compatibility,\n  // but exclude the description.\n  const headingTagListeners = !headerButtonListeners && !isContainer && description ? listeners : undefined;\n  // For all other cases, make the entire header clickable for backwards compatibility.\n  const wrapperListeners = !headerButtonListeners && !headingTagListeners ? listeners : undefined;\n  const headerButton = React.createElement(\"span\", Object.assign({\n    className: clsx(styles['expand-button'], isContainer ? styles['header-container-button'] : styles['header-button'], headerButtonListeners && styles['click-target']),\n    role: \"button\",\n    tabIndex: 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": !ariaLabel && description ? id : undefined,\n    \"aria-describedby\": description ? descriptionId : undefined,\n    \"aria-controls\": ariaControls,\n    \"aria-expanded\": expanded\n  }, headerButtonListeners, headerButtonListeners ? getExpandActionAnalyticsMetadataAttribute(expanded) : {}), React.createElement(\"span\", {\n    className: clsx(styles['icon-container'], styles[`icon-container-${variant}`])\n  }, icon), React.createElement(\"span\", {\n    id: id,\n    className: clsx(styles['header-text'], analyticsSelectors['header-label'])\n  }, children));\n  return React.createElement(\"div\", Object.assign({\n    className: clsx(className, wrapperListeners && styles['click-target'])\n  }, wrapperListeners, wrapperListeners ? getExpandActionAnalyticsMetadataAttribute(expanded) : {}), isContainer ? React.createElement(InternalHeader, {\n    variant: \"h2\",\n    description: description,\n    counter: headerCounter,\n    info: headerInfo,\n    actions: actions,\n    headingTagOverride: headingTagOverride\n  }, headerButton) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: clsx(actions && styles['header-actions-wrapper'])\n  }, React.createElement(HeadingTag, Object.assign({\n    className: clsx(styles['header-wrapper'], headingTagListeners && styles['click-target'])\n  }, headingTagListeners, headingTagListeners ? getExpandActionAnalyticsMetadataAttribute(expanded) : {}), headerButton), actions), description && React.createElement(HeaderDescription, {\n    variantOverride: \"h3\"\n  }, description)));\n};\nexport const ExpandableSectionHeader = _ref4 => {\n  let {\n    id,\n    descriptionId,\n    className,\n    variant,\n    header,\n    headerText,\n    headerDescription,\n    headerCounter,\n    headerInfo,\n    headerActions,\n    headingTagOverride,\n    expanded,\n    ariaControls,\n    ariaLabel,\n    ariaLabelledBy,\n    onKeyUp,\n    onKeyDown,\n    onClick\n  } = _ref4;\n  const alwaysShowDivider = variantRequiresActionsDivider(variant) && headerActions;\n  const icon = React.createElement(InternalIcon, {\n    size: variant === 'container' ? 'medium' : 'normal',\n    className: clsx(styles.icon, expanded && styles.expanded),\n    name: \"caret-down-filled\"\n  });\n  const defaultHeaderProps = {\n    id: id,\n    icon: icon,\n    expanded: expanded,\n    ariaControls: ariaControls,\n    ariaLabel: ariaLabel,\n    onClick: onClick,\n    variant\n  };\n  if ((headerCounter || headerInfo) && !variantSupportsInfoLink(variant) && isDevelopment) {\n    warnOnce(componentName, 'The `headerCounter` and `headerInfo` props are only supported for the \"container\" variant.');\n  }\n  if (headerActions && !variantSupportsActions(variant) && isDevelopment) {\n    warnOnce(componentName, `The \\`headerActions\\` prop is only supported for the \"container\" and \"default\" variants.`);\n  }\n  if (headerDescription && !variantSupportsDescription(variant) && isDevelopment) {\n    warnOnce(componentName, `The \\`headerDescription\\` prop is not supported for the ${variant} variant.`);\n  }\n  const wrapperClassName = clsx(styles.wrapper, styles[`wrapper-${variant}`], (expanded || alwaysShowDivider) && styles['wrapper-expanded']);\n  if (variant === 'navigation') {\n    return React.createElement(ExpandableNavigationHeader, Object.assign({\n      className: clsx(className, wrapperClassName),\n      ariaLabelledBy: ariaLabelledBy\n    }, defaultHeaderProps), headerText !== null && headerText !== void 0 ? headerText : header);\n  }\n  if (headerText || variant === 'inline') {\n    if (!headerText && header && variant === 'inline') {\n      warnOnce(componentName, 'Only `headerText` instead of `header` is supported for `inline` variant.');\n    }\n    return React.createElement(ExpandableHeaderTextWrapper, Object.assign({\n      className: clsx(className, wrapperClassName, expanded && styles.expanded),\n      descriptionId: descriptionId,\n      headerDescription: headerDescription,\n      headerCounter: headerCounter,\n      headerInfo: headerInfo,\n      headerActions: headerActions,\n      headingTagOverride: headingTagOverride,\n      onKeyUp: onKeyUp,\n      onKeyDown: onKeyDown\n    }, defaultHeaderProps), headerText);\n  }\n  if (variant === 'container' && header && isDevelopment) {\n    warnOnce(componentName, 'Use `headerText` instead of `header` to provide the button within the heading for a11y.');\n  }\n  return React.createElement(ExpandableDeprecatedHeader, Object.assign({\n    className: clsx(className, wrapperClassName, styles.focusable, expanded && styles.expanded),\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown\n  }, defaultHeaderProps), header);\n};","map":{"version":3,"names":["React","clsx","warnOnce","getAnalyticsMetadataAttribute","InternalHeader","Description","HeaderDescription","InternalIcon","isDevelopment","variantRequiresActionsDivider","variantSupportsActions","variantSupportsDescription","variantSupportsInfoLink","analyticsSelectors","styles","componentName","getExpandActionAnalyticsMetadataAttribute","expanded","metadata","action","detail","label","rootSelector","root","ExpandableDeprecatedHeader","_ref","id","className","onClick","ariaLabel","ariaControls","children","icon","onKeyUp","onKeyDown","variant","createElement","Object","assign","role","tabIndex","ExpandableNavigationHeader","_ref2","ariaLabelledBy","type","ExpandableHeaderTextWrapper","_ref3","descriptionId","headerDescription","headerCounter","headerInfo","headerActions","headingTagOverride","isContainer","HeadingTag","supportsInteractiveElements","restrictClickableArea","actions","description","listeners","headerButtonListeners","undefined","headingTagListeners","wrapperListeners","headerButton","counter","info","Fragment","variantOverride","ExpandableSectionHeader","_ref4","header","headerText","alwaysShowDivider","size","name","defaultHeaderProps","wrapperClassName","wrapper","focusable"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/expandable-section/expandable-section-header.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { KeyboardEventHandler, MouseEventHandler, ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalHeader, { Description as HeaderDescription } from '../header/internal';\nimport InternalIcon from '../icon/internal';\nimport { isDevelopment } from '../internal/is-development';\nimport { GeneratedAnalyticsMetadataExpandableSectionExpand } from './analytics-metadata/interfaces';\nimport { ExpandableSectionProps, InternalVariant } from './interfaces';\nimport {\n  variantRequiresActionsDivider,\n  variantSupportsActions,\n  variantSupportsDescription,\n  variantSupportsInfoLink,\n} from './utils';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\nexport const componentName = 'ExpandableSection';\n\ninterface ExpandableDefaultHeaderProps {\n  id: string;\n  descriptionId?: string;\n  className?: string;\n  children?: ReactNode;\n  expanded: boolean;\n  ariaControls: string;\n  ariaLabel?: string;\n  onKeyUp: KeyboardEventHandler;\n  onKeyDown: KeyboardEventHandler;\n  onClick: MouseEventHandler;\n  icon: JSX.Element;\n  variant: InternalVariant;\n}\n\ninterface ExpandableNavigationHeaderProps extends Omit<ExpandableDefaultHeaderProps, 'onKeyUp' | 'onKeyDown'> {\n  ariaLabelledBy?: string;\n}\n\ninterface ExpandableHeaderTextWrapperProps extends ExpandableDefaultHeaderProps {\n  headerDescription?: ReactNode;\n  headerCounter?: string;\n  headerInfo?: ReactNode;\n  headerActions?: ReactNode;\n  headingTagOverride?: ExpandableSectionProps.HeadingTag;\n}\n\ninterface ExpandableSectionHeaderProps extends Omit<ExpandableDefaultHeaderProps, 'children' | 'icon'> {\n  header?: ReactNode;\n  headerText?: ReactNode;\n  headerDescription?: ReactNode;\n  headerCounter?: string;\n  headerInfo?: ReactNode;\n  headerActions?: ReactNode;\n  headingTagOverride?: ExpandableSectionProps.HeadingTag;\n  ariaLabelledBy?: string;\n}\n\nconst getExpandActionAnalyticsMetadataAttribute = (expanded: boolean) => {\n  const metadata: GeneratedAnalyticsMetadataExpandableSectionExpand = {\n    action: 'expand',\n    detail: {\n      label: { rootSelector: `.${analyticsSelectors.root}` },\n      expanded: `${!expanded}`,\n    },\n  };\n  return getAnalyticsMetadataAttribute(metadata);\n};\nconst ExpandableDeprecatedHeader = ({\n  id,\n  className,\n  onClick,\n  ariaLabel,\n  ariaControls,\n  expanded,\n  children,\n  icon,\n  onKeyUp,\n  onKeyDown,\n  variant,\n}: ExpandableDefaultHeaderProps) => {\n  return (\n    <div\n      id={id}\n      role=\"button\"\n      className={clsx(\n        className,\n        styles['expand-button'],\n        styles['click-target'],\n        styles['header-deprecated'],\n        analyticsSelectors['header-label']\n      )}\n      tabIndex={0}\n      onKeyUp={onKeyUp}\n      onKeyDown={onKeyDown}\n      onClick={onClick}\n      aria-label={ariaLabel}\n      aria-controls={ariaControls}\n      aria-expanded={expanded}\n      {...getExpandActionAnalyticsMetadataAttribute(expanded)}\n    >\n      <div className={clsx(styles['icon-container'], styles[`icon-container-${variant}`])}>{icon}</div>\n      {children}\n    </div>\n  );\n};\n\nconst ExpandableNavigationHeader = ({\n  id,\n  className,\n  onClick,\n  ariaLabelledBy,\n  ariaLabel,\n  ariaControls,\n  expanded,\n  children,\n  icon,\n}: ExpandableNavigationHeaderProps) => {\n  return (\n    <div id={id} className={clsx(className, styles['click-target'], analyticsSelectors['header-label'])}>\n      <button\n        className={clsx(styles['icon-container'], styles['expand-button'])}\n        aria-labelledby={ariaLabelledBy}\n        aria-label={ariaLabel}\n        aria-controls={ariaControls}\n        aria-expanded={expanded}\n        type=\"button\"\n        onClick={onClick}\n        {...getExpandActionAnalyticsMetadataAttribute(expanded)}\n      >\n        {icon}\n      </button>\n      {children}\n    </div>\n  );\n};\n\nconst ExpandableHeaderTextWrapper = ({\n  id,\n  descriptionId,\n  className,\n  onClick,\n  ariaLabel,\n  ariaControls,\n  expanded,\n  children,\n  icon,\n  headerDescription,\n  headerCounter,\n  headerInfo,\n  headerActions,\n  variant,\n  headingTagOverride,\n  onKeyUp,\n  onKeyDown,\n}: ExpandableHeaderTextWrapperProps) => {\n  const isContainer = variant === 'container';\n  const HeadingTag = headingTagOverride || 'div';\n  const supportsInteractiveElements = variantSupportsActions(variant);\n  const restrictClickableArea = supportsInteractiveElements && (headerInfo || headerActions);\n  const actions = supportsInteractiveElements && headerActions;\n  const description = variantSupportsDescription(variant) && headerDescription && (\n    <span id={descriptionId} className={styles[`description-${variant}`]}>\n      {headerDescription}\n    </span>\n  );\n  const listeners = { onClick, onKeyDown, onKeyUp };\n\n  // If interactive elements are present, constrain the clickable area to only the icon and the header text\n  // to prevent nesting interactive elements.\n  const headerButtonListeners = restrictClickableArea ? listeners : undefined;\n  // For the default and footer variants with description,\n  // include also the immediate wrapper around it to include the entire row for backwards compatibility,\n  // but exclude the description.\n  const headingTagListeners = !headerButtonListeners && !isContainer && description ? listeners : undefined;\n  // For all other cases, make the entire header clickable for backwards compatibility.\n  const wrapperListeners = !headerButtonListeners && !headingTagListeners ? listeners : undefined;\n  const headerButton = (\n    <span\n      className={clsx(\n        styles['expand-button'],\n        isContainer ? styles['header-container-button'] : styles['header-button'],\n        headerButtonListeners && styles['click-target']\n      )}\n      role=\"button\"\n      tabIndex={0}\n      aria-label={ariaLabel}\n      aria-labelledby={!ariaLabel && description ? id : undefined}\n      aria-describedby={description ? descriptionId : undefined}\n      aria-controls={ariaControls}\n      aria-expanded={expanded}\n      {...headerButtonListeners}\n      {...(headerButtonListeners ? getExpandActionAnalyticsMetadataAttribute(expanded) : {})}\n    >\n      <span className={clsx(styles['icon-container'], styles[`icon-container-${variant}`])}>{icon}</span>\n      <span id={id} className={clsx(styles['header-text'], analyticsSelectors['header-label'])}>\n        {children}\n      </span>\n    </span>\n  );\n\n  return (\n    <div\n      className={clsx(className, wrapperListeners && styles['click-target'])}\n      {...wrapperListeners}\n      {...(wrapperListeners ? getExpandActionAnalyticsMetadataAttribute(expanded) : {})}\n    >\n      {isContainer ? (\n        <InternalHeader\n          variant=\"h2\"\n          description={description}\n          counter={headerCounter}\n          info={headerInfo}\n          actions={actions}\n          headingTagOverride={headingTagOverride}\n        >\n          {headerButton}\n        </InternalHeader>\n      ) : (\n        <>\n          <div className={clsx(actions && styles['header-actions-wrapper'])}>\n            <HeadingTag\n              className={clsx(styles['header-wrapper'], headingTagListeners && styles['click-target'])}\n              {...headingTagListeners}\n              {...(headingTagListeners ? getExpandActionAnalyticsMetadataAttribute(expanded) : {})}\n            >\n              {headerButton}\n            </HeadingTag>\n            {actions}\n          </div>\n          {description && <HeaderDescription variantOverride=\"h3\">{description}</HeaderDescription>}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const ExpandableSectionHeader = ({\n  id,\n  descriptionId,\n  className,\n  variant,\n  header,\n  headerText,\n  headerDescription,\n  headerCounter,\n  headerInfo,\n  headerActions,\n  headingTagOverride,\n  expanded,\n  ariaControls,\n  ariaLabel,\n  ariaLabelledBy,\n  onKeyUp,\n  onKeyDown,\n  onClick,\n}: ExpandableSectionHeaderProps) => {\n  const alwaysShowDivider = variantRequiresActionsDivider(variant) && headerActions;\n  const icon = (\n    <InternalIcon\n      size={variant === 'container' ? 'medium' : 'normal'}\n      className={clsx(styles.icon, expanded && styles.expanded)}\n      name=\"caret-down-filled\"\n    />\n  );\n  const defaultHeaderProps = {\n    id: id,\n    icon: icon,\n    expanded: expanded,\n    ariaControls: ariaControls,\n    ariaLabel: ariaLabel,\n    onClick: onClick,\n    variant,\n  };\n\n  if ((headerCounter || headerInfo) && !variantSupportsInfoLink(variant) && isDevelopment) {\n    warnOnce(\n      componentName,\n      'The `headerCounter` and `headerInfo` props are only supported for the \"container\" variant.'\n    );\n  }\n\n  if (headerActions && !variantSupportsActions(variant) && isDevelopment) {\n    warnOnce(componentName, `The \\`headerActions\\` prop is only supported for the \"container\" and \"default\" variants.`);\n  }\n\n  if (headerDescription && !variantSupportsDescription(variant) && isDevelopment) {\n    warnOnce(componentName, `The \\`headerDescription\\` prop is not supported for the ${variant} variant.`);\n  }\n\n  const wrapperClassName = clsx(\n    styles.wrapper,\n    styles[`wrapper-${variant}`],\n    (expanded || alwaysShowDivider) && styles['wrapper-expanded']\n  );\n  if (variant === 'navigation') {\n    return (\n      <ExpandableNavigationHeader\n        className={clsx(className, wrapperClassName)}\n        ariaLabelledBy={ariaLabelledBy}\n        {...defaultHeaderProps}\n      >\n        {headerText ?? header}\n      </ExpandableNavigationHeader>\n    );\n  }\n\n  if (headerText || variant === 'inline') {\n    if (!headerText && header && variant === 'inline') {\n      warnOnce(componentName, 'Only `headerText` instead of `header` is supported for `inline` variant.');\n    }\n    return (\n      <ExpandableHeaderTextWrapper\n        className={clsx(className, wrapperClassName, expanded && styles.expanded)}\n        descriptionId={descriptionId}\n        headerDescription={headerDescription}\n        headerCounter={headerCounter}\n        headerInfo={headerInfo}\n        headerActions={headerActions}\n        headingTagOverride={headingTagOverride}\n        onKeyUp={onKeyUp}\n        onKeyDown={onKeyDown}\n        {...defaultHeaderProps}\n      >\n        {headerText}\n      </ExpandableHeaderTextWrapper>\n    );\n  }\n\n  if (variant === 'container' && header && isDevelopment) {\n    warnOnce(componentName, 'Use `headerText` instead of `header` to provide the button within the heading for a11y.');\n  }\n\n  return (\n    <ExpandableDeprecatedHeader\n      className={clsx(className, wrapperClassName, styles.focusable, expanded && styles.expanded)}\n      onKeyUp={onKeyUp}\n      onKeyDown={onKeyDown}\n      {...defaultHeaderProps}\n    >\n      {header}\n    </ExpandableDeprecatedHeader>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}