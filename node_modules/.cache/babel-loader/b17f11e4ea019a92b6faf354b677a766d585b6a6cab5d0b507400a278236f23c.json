{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { isLinkItem } from '../../../button-dropdown/utils/utils';\nimport InternalIcon from '../../../icon/internal';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../../internal/events';\nimport { useUniqueId } from '../../../internal/hooks/use-unique-id';\nimport { useNavigate } from './router';\nimport styles from '../../styles.css.js';\nconst ListItem = _ref => {\n  let {\n    children,\n    startIcon,\n    endIcon\n  } = _ref;\n  return React.createElement(React.Fragment, null, startIcon && React.createElement(\"span\", {\n    className: styles['overflow-menu-list-item-icon']\n  }, startIcon), React.createElement(\"span\", {\n    className: styles['overflow-menu-list-item-text']\n  }, children), endIcon && endIcon);\n};\nconst LinkItem = forwardRef((_ref2, ref) => {\n  let {\n    children,\n    external,\n    href,\n    target,\n    rel,\n    startIcon,\n    endIcon,\n    onClick,\n    context,\n    testId\n  } = _ref2;\n  const anchorTarget = target !== null && target !== void 0 ? target : external ? '_blank' : undefined;\n  const anchorRel = rel !== null && rel !== void 0 ? rel : anchorTarget === '_blank' ? 'noopener noreferrer' : undefined;\n  const role = !href ? 'button' : undefined;\n  return React.createElement(\"a\", Object.assign({\n    ref: ref,\n    onClick: onClick,\n    className: clsx(styles['overflow-menu-control'], styles['overflow-menu-control-link'], context && styles[`overflow-menu-control-${context}`]),\n    role: role,\n    tabIndex: 0,\n    href: href,\n    target: anchorTarget,\n    rel: anchorRel\n  }, testId ? {\n    'data-testid': testId\n  } : {}), React.createElement(ListItem, {\n    startIcon: startIcon,\n    endIcon: endIcon\n  }, children));\n});\nconst ButtonItem = forwardRef((_ref3, ref) => {\n  let {\n    children,\n    startIcon,\n    endIcon,\n    onClick,\n    testId\n  } = _ref3;\n  return React.createElement(\"button\", Object.assign({\n    ref: ref,\n    className: styles['overflow-menu-control'],\n    onClick: onClick\n  }, typeof testId === 'string' ? {\n    'data-testid': testId\n  } : {}), React.createElement(ListItem, {\n    startIcon: startIcon,\n    endIcon: endIcon\n  }, children));\n});\nconst NavigationItem = forwardRef((_a, ref) => {\n  var {\n      startIcon,\n      children,\n      index,\n      testId\n    } = _a,\n    definition = __rest(_a, [\"startIcon\", \"children\", \"index\", \"testId\"]);\n  const navigate = useNavigate();\n  return React.createElement(ButtonItem, {\n    ref: ref,\n    startIcon: startIcon,\n    endIcon: React.createElement(InternalIcon, {\n      name: \"angle-right\"\n    }),\n    testId: testId,\n    onClick: () => navigate('dropdown-menu', {\n      definition,\n      headerText: definition.text || definition.title,\n      headerSecondaryText: definition.description,\n      utilityIndex: index\n    })\n  }, children);\n});\nconst ExpandableItem = _a => {\n  var {\n      children,\n      onItemClick\n    } = _a,\n    definition = __rest(_a, [\"children\", \"onItemClick\"]);\n  const [expanded, setExpanded] = useState(false);\n  const headerId = useUniqueId('overflow-menu-item');\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    className: clsx(styles['overflow-menu-control'], styles['overflow-menu-control-expandable-menu-trigger']),\n    onClick: () => setExpanded(value => !value),\n    \"aria-expanded\": expanded\n  }, React.createElement(ListItem, {\n    endIcon: React.createElement(\"span\", {\n      className: clsx(styles.icon, expanded && styles.expanded)\n    }, React.createElement(InternalIcon, {\n      name: \"caret-up-filled\"\n    }))\n  }, React.createElement(\"span\", {\n    id: headerId\n  }, children))), expanded && React.createElement(\"ul\", {\n    className: clsx(styles['overflow-menu-list'], styles['overflow-menu-list-submenu']),\n    \"aria-labelledby\": headerId\n  }, definition.items.map((item, index) => {\n    const isGroup = typeof item.items !== 'undefined';\n    return React.createElement(\"li\", {\n      key: index,\n      className: clsx(styles[`overflow-menu-list-item`], styles[`overflow-menu-list-item-dropdown-menu`])\n    }, dropdownComponentFactory(item, isGroup, onItemClick));\n  })));\n};\nfunction utilityComponentFactory(utility, index, ref) {\n  const label = utility.text || utility.title;\n  const hasIcon = !!utility.iconName || !!utility.iconUrl || !!utility.iconAlt || !!utility.iconSvg;\n  const startIcon = hasIcon && React.createElement(InternalIcon, {\n    name: utility.iconName,\n    url: utility.iconUrl,\n    alt: utility.iconAlt,\n    svg: utility.iconSvg\n  });\n  switch (utility.type) {\n    case 'button':\n      {\n        const handleClick = event => {\n          var _a;\n          if (Boolean(utility.href) && isPlainLeftClick(event)) {\n            fireCancelableEvent(utility.onFollow, {\n              href: utility.href,\n              target: utility.target\n            }, event);\n          }\n          fireCancelableEvent(utility.onClick, {}, event);\n          (_a = utility.onClose) === null || _a === void 0 ? void 0 : _a.call(utility);\n        };\n        const content = React.createElement(React.Fragment, null, label, utility.external && React.createElement(React.Fragment, null, ' ', React.createElement(\"span\", {\n          \"aria-label\": utility.externalIconAriaLabel,\n          role: utility.externalIconAriaLabel ? 'img' : undefined\n        }, React.createElement(InternalIcon, {\n          name: \"external\",\n          size: \"normal\"\n        }))));\n        if (!utility.href) {\n          return React.createElement(ButtonItem, {\n            ref: ref,\n            startIcon: startIcon,\n            onClick: handleClick,\n            testId: `__${index}`\n          }, content);\n        }\n        return React.createElement(LinkItem, {\n          ref: ref,\n          startIcon: startIcon,\n          href: utility.href,\n          external: utility.external,\n          target: utility.target,\n          rel: utility.rel,\n          testId: `__${index}`,\n          onClick: handleClick\n        }, content);\n      }\n    case 'menu-dropdown':\n      {\n        return React.createElement(NavigationItem, Object.assign({\n          ref: ref,\n          startIcon: startIcon,\n          index: index\n        }, utility, {\n          testId: `__${index}`\n        }), label);\n      }\n  }\n}\nfunction dropdownComponentFactory(item, expandable, onItemClick) {\n  const label = item.text;\n  const hasIcon = !!item.iconName || !!item.iconUrl || !!item.iconAlt || !!item.iconSvg;\n  const isLink = isLinkItem(item);\n  const startIcon = hasIcon && React.createElement(InternalIcon, {\n    name: item.iconName,\n    url: item.iconUrl,\n    alt: item.iconAlt,\n    svg: item.iconSvg\n  });\n  if (expandable) {\n    return React.createElement(ExpandableItem, Object.assign({}, item, {\n      onItemClick: onItemClick\n    }), label);\n  }\n  return React.createElement(LinkItem, {\n    startIcon: startIcon,\n    href: isLink ? item.href : undefined,\n    external: isLink ? item.external : undefined,\n    context: \"dropdown-menu\",\n    testId: item.id,\n    onClick: event => onItemClick(event, item)\n  }, label, isLink && item.external && React.createElement(React.Fragment, null, ' ', React.createElement(\"span\", {\n    \"aria-label\": item.externalIconAriaLabel,\n    role: item.externalIconAriaLabel ? 'img' : undefined\n  }, React.createElement(InternalIcon, {\n    name: \"external\",\n    size: \"normal\"\n  }))));\n}\nexport const UtilityMenuItem = forwardRef((_a, ref) => {\n  var {\n      index\n    } = _a,\n    props = __rest(_a, [\"index\"]);\n  return React.createElement(\"li\", {\n    className: clsx(styles[`overflow-menu-list-item`], styles[`overflow-menu-list-item-utility`])\n  }, utilityComponentFactory(props, index, ref));\n});\nexport const SubmenuItem = props => {\n  const expandable = typeof props.items !== 'undefined';\n  return React.createElement(\"li\", {\n    className: clsx(styles[`overflow-menu-list-item`], styles[`overflow-menu-list-item-submenu`], expandable && styles[`overflow-menu-list-item-expandable`])\n  }, dropdownComponentFactory(props, expandable, props.onClick));\n};","map":{"version":3,"names":["React","forwardRef","useState","clsx","isLinkItem","InternalIcon","fireCancelableEvent","isPlainLeftClick","useUniqueId","useNavigate","styles","ListItem","_ref","children","startIcon","endIcon","createElement","Fragment","className","LinkItem","_ref2","ref","external","href","target","rel","onClick","context","testId","anchorTarget","undefined","anchorRel","role","Object","assign","tabIndex","ButtonItem","_ref3","NavigationItem","_a","index","definition","__rest","navigate","name","headerText","text","title","headerSecondaryText","description","utilityIndex","ExpandableItem","onItemClick","expanded","setExpanded","headerId","value","icon","id","items","map","item","isGroup","key","dropdownComponentFactory","utilityComponentFactory","utility","label","hasIcon","iconName","iconUrl","iconAlt","iconSvg","url","alt","svg","type","handleClick","event","Boolean","onFollow","onClose","call","content","externalIconAriaLabel","size","expandable","isLink","UtilityMenuItem","props","SubmenuItem"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/top-navigation/parts/overflow-menu/menu-item.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { ButtonDropdownProps } from '../../../button-dropdown/interfaces';\nimport { isLinkItem } from '../../../button-dropdown/utils/utils';\nimport InternalIcon from '../../../icon/internal';\nimport { fireCancelableEvent, isPlainLeftClick } from '../../../internal/events';\nimport { useUniqueId } from '../../../internal/hooks/use-unique-id';\nimport { LinkProps } from '../../../link/interfaces';\nimport { TopNavigationProps } from '../../interfaces';\nimport { useNavigate } from './router';\n\nimport styles from '../../styles.css.js';\n\ninterface ListItemProps {\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  context?: 'dropdown-menu';\n  children?: React.ReactNode;\n  testId?: string;\n}\n\nconst ListItem = ({ children, startIcon, endIcon }: ListItemProps) => {\n  return (\n    <>\n      {startIcon && <span className={styles['overflow-menu-list-item-icon']}>{startIcon}</span>}\n      <span className={styles['overflow-menu-list-item-text']}>{children}</span>\n      {endIcon && endIcon}\n    </>\n  );\n};\n\ninterface LinkItemProps extends ButtonItemProps, Pick<LinkProps, 'href' | 'external' | 'target' | 'rel'> {}\n\nconst LinkItem = forwardRef(\n  (\n    { children, external, href, target, rel, startIcon, endIcon, onClick, context, testId }: LinkItemProps,\n    ref: React.Ref<HTMLAnchorElement & HTMLButtonElement>\n  ) => {\n    const anchorTarget = target ?? (external ? '_blank' : undefined);\n    const anchorRel = rel ?? (anchorTarget === '_blank' ? 'noopener noreferrer' : undefined);\n    const role = !href ? 'button' : undefined;\n\n    return (\n      <a\n        ref={ref}\n        onClick={onClick}\n        className={clsx(\n          styles['overflow-menu-control'],\n          styles['overflow-menu-control-link'],\n          context && styles[`overflow-menu-control-${context}`]\n        )}\n        role={role}\n        tabIndex={0}\n        href={href}\n        target={anchorTarget}\n        rel={anchorRel}\n        {...(testId ? { 'data-testid': testId } : {})}\n      >\n        <ListItem startIcon={startIcon} endIcon={endIcon}>\n          {children}\n        </ListItem>\n      </a>\n    );\n  }\n);\n\ninterface ButtonItemProps extends ListItemProps {\n  onClick?: (event: React.MouseEvent) => void;\n}\n\nconst ButtonItem = forwardRef(\n  (\n    { children, startIcon, endIcon, onClick, testId }: ButtonItemProps & { testId?: string },\n    ref: React.Ref<HTMLButtonElement>\n  ) => {\n    return (\n      <button\n        ref={ref}\n        className={styles['overflow-menu-control']}\n        onClick={onClick}\n        {...(typeof testId === 'string' ? { 'data-testid': testId } : {})}\n      >\n        <ListItem startIcon={startIcon} endIcon={endIcon}>\n          {children}\n        </ListItem>\n      </button>\n    );\n  }\n);\n\nconst NavigationItem = forwardRef(\n  (\n    {\n      startIcon,\n      children,\n      index,\n      testId,\n      ...definition\n    }: ButtonItemProps & TopNavigationProps.MenuDropdownUtility & { index: number; testId?: string },\n    ref: React.Ref<HTMLButtonElement>\n  ) => {\n    const navigate = useNavigate();\n    return (\n      <ButtonItem\n        ref={ref}\n        startIcon={startIcon}\n        endIcon={<InternalIcon name=\"angle-right\" />}\n        testId={testId}\n        onClick={() =>\n          navigate('dropdown-menu', {\n            definition,\n            headerText: definition.text || definition.title,\n            headerSecondaryText: definition.description,\n            utilityIndex: index,\n          })\n        }\n      >\n        {children}\n      </ButtonItem>\n    );\n  }\n);\n\nconst ExpandableItem: React.FC<\n  ButtonItemProps &\n    ButtonDropdownProps.ItemGroup & { onItemClick: (event: React.MouseEvent, item: ButtonDropdownProps.Item) => void }\n> = ({ children, onItemClick, ...definition }) => {\n  const [expanded, setExpanded] = useState(false);\n  const headerId = useUniqueId('overflow-menu-item');\n\n  return (\n    <>\n      <button\n        className={clsx(styles['overflow-menu-control'], styles['overflow-menu-control-expandable-menu-trigger'])}\n        onClick={() => setExpanded(value => !value)}\n        aria-expanded={expanded}\n      >\n        <ListItem\n          endIcon={\n            <span className={clsx(styles.icon, expanded && styles.expanded)}>\n              <InternalIcon name=\"caret-up-filled\" />\n            </span>\n          }\n        >\n          <span id={headerId}>{children}</span>\n        </ListItem>\n      </button>\n      {expanded && (\n        <ul\n          className={clsx(styles['overflow-menu-list'], styles['overflow-menu-list-submenu'])}\n          aria-labelledby={headerId}\n        >\n          {definition.items.map((item, index) => {\n            const isGroup = typeof (item as ButtonDropdownProps.ItemGroup).items !== 'undefined';\n\n            return (\n              <li\n                key={index}\n                className={clsx(styles[`overflow-menu-list-item`], styles[`overflow-menu-list-item-dropdown-menu`])}\n              >\n                {dropdownComponentFactory(item, isGroup, onItemClick)}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nfunction utilityComponentFactory(\n  utility: TopNavigationProps.Utility & { onClose?: () => void },\n  index: number,\n  ref?: React.Ref<HTMLAnchorElement & HTMLButtonElement>\n) {\n  const label = utility.text || utility.title;\n  const hasIcon = !!utility.iconName || !!utility.iconUrl || !!utility.iconAlt || !!utility.iconSvg;\n  const startIcon = hasIcon && (\n    <InternalIcon name={utility.iconName} url={utility.iconUrl} alt={utility.iconAlt} svg={utility.iconSvg} />\n  );\n\n  switch (utility.type) {\n    case 'button': {\n      const handleClick = (event: React.MouseEvent) => {\n        if (Boolean(utility.href) && isPlainLeftClick(event)) {\n          fireCancelableEvent(utility.onFollow, { href: utility.href, target: utility.target }, event);\n        }\n\n        fireCancelableEvent(utility.onClick, {}, event);\n        utility.onClose?.();\n      };\n\n      const content = (\n        <>\n          {label}\n          {utility.external && (\n            <>\n              {' '}\n              <span aria-label={utility.externalIconAriaLabel} role={utility.externalIconAriaLabel ? 'img' : undefined}>\n                <InternalIcon name=\"external\" size=\"normal\" />\n              </span>\n            </>\n          )}\n        </>\n      );\n\n      if (!utility.href) {\n        return (\n          <ButtonItem ref={ref} startIcon={startIcon} onClick={handleClick} testId={`__${index}`}>\n            {content}\n          </ButtonItem>\n        );\n      }\n\n      return (\n        <LinkItem\n          ref={ref}\n          startIcon={startIcon}\n          href={utility.href}\n          external={utility.external}\n          target={utility.target}\n          rel={utility.rel}\n          testId={`__${index}`}\n          onClick={handleClick}\n        >\n          {content}\n        </LinkItem>\n      );\n    }\n    case 'menu-dropdown': {\n      return (\n        <NavigationItem\n          ref={ref}\n          startIcon={startIcon}\n          index={index}\n          {...(utility as TopNavigationProps.MenuDropdownUtility)}\n          testId={`__${index}`}\n        >\n          {label}\n        </NavigationItem>\n      );\n    }\n  }\n}\n\nfunction dropdownComponentFactory(\n  item: ButtonDropdownProps.ItemOrGroup,\n  expandable: boolean,\n  onItemClick: (event: React.MouseEvent, item: ButtonDropdownProps.Item) => void\n) {\n  const label = item.text;\n  const hasIcon = !!item.iconName || !!item.iconUrl || !!item.iconAlt || !!item.iconSvg;\n  const isLink = isLinkItem(item);\n  const startIcon = hasIcon && (\n    <InternalIcon name={item.iconName} url={item.iconUrl} alt={item.iconAlt} svg={item.iconSvg} />\n  );\n\n  if (expandable) {\n    return (\n      <ExpandableItem {...(item as ButtonDropdownProps.ItemGroup)} onItemClick={onItemClick}>\n        {label}\n      </ExpandableItem>\n    );\n  }\n\n  return (\n    <LinkItem\n      startIcon={startIcon}\n      href={isLink ? item.href : undefined}\n      external={isLink ? item.external : undefined}\n      context=\"dropdown-menu\"\n      testId={item.id}\n      onClick={event => onItemClick(event, item as ButtonDropdownProps.Item)}\n    >\n      {label}\n      {isLink && item.external && (\n        <>\n          {' '}\n          <span aria-label={item.externalIconAriaLabel} role={item.externalIconAriaLabel ? 'img' : undefined}>\n            <InternalIcon name=\"external\" size=\"normal\" />\n          </span>\n        </>\n      )}\n    </LinkItem>\n  );\n}\n\ntype UtilityMenuItemProps = TopNavigationProps.Utility & { index: number; onClose?: () => void };\n\nexport const UtilityMenuItem = forwardRef(\n  ({ index, ...props }: UtilityMenuItemProps, ref: React.Ref<HTMLAnchorElement & HTMLButtonElement>) => {\n    return (\n      <li className={clsx(styles[`overflow-menu-list-item`], styles[`overflow-menu-list-item-utility`])}>\n        {utilityComponentFactory(props, index, ref)}\n      </li>\n    );\n  }\n);\n\ntype SubmenuItemProps = ButtonDropdownProps.ItemOrGroup & {\n  onClick: (event: React.MouseEvent, item: ButtonDropdownProps.Item) => void;\n};\n\nexport const SubmenuItem = (props: SubmenuItemProps) => {\n  const expandable = typeof (props as ButtonDropdownProps.ItemGroup).items !== 'undefined';\n\n  return (\n    <li\n      className={clsx(\n        styles[`overflow-menu-list-item`],\n        styles[`overflow-menu-list-item-submenu`],\n        expandable && styles[`overflow-menu-list-item-expandable`]\n      )}\n    >\n      {dropdownComponentFactory(props, expandable, props.onClick)}\n    </li>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}