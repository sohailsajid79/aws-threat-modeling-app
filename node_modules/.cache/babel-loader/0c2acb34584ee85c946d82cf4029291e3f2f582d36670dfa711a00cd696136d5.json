{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalBox from '../box/internal';\nimport { InternalButton } from '../button/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport styles from './styles.css.js';\nconst MAX_VALUE = 100;\nconst clamp = (value, lowerLimit, upperLimit) => {\n  return Math.max(Math.min(value, upperLimit), lowerLimit);\n};\nexport const Progress = _ref => {\n  let {\n    value,\n    isInFlash,\n    ariaLabel,\n    ariaLabelledby,\n    ariaDescribedby\n  } = _ref;\n  const roundedValue = Math.round(value);\n  const progressValue = clamp(roundedValue, 0, MAX_VALUE);\n  return React.createElement(\"div\", {\n    className: styles['progress-container']\n  }, React.createElement(\"progress\", {\n    className: clsx(styles.progress, progressValue >= MAX_VALUE && styles.complete, isInFlash && styles['progress-in-flash']),\n    max: MAX_VALUE,\n    value: progressValue,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": !ariaLabel ? ariaLabelledby : undefined,\n    \"aria-describedby\": ariaDescribedby\n  }), React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: styles['percentage-container']\n  }, React.createElement(InternalBox, {\n    className: styles.percentage,\n    variant: \"small\",\n    color: isInFlash ? 'inherit' : undefined\n  }, `${progressValue}%`)));\n};\nexport const SmallText = _ref2 => {\n  let {\n    color,\n    children,\n    className,\n    id\n  } = _ref2;\n  return React.createElement(InternalBox, {\n    className: clsx(styles['word-wrap'], className),\n    variant: \"small\",\n    display: \"block\",\n    color: color,\n    id: id\n  }, children);\n};\nconst ResultButton = _ref3 => {\n  let {\n    onClick,\n    children\n  } = _ref3;\n  return React.createElement(\"div\", {\n    className: styles['result-button']\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    onClick: onClick\n  }, children));\n};\nexport const ResultState = _ref4 => {\n  let {\n    isInFlash,\n    resultText,\n    resultButtonText,\n    status,\n    onClick\n  } = _ref4;\n  const hasResultButton = !!resultButtonText;\n  if (isInFlash) {\n    return React.createElement(\"div\", {\n      className: styles[`result-container-${status}`],\n      \"aria-live\": \"polite\",\n      \"aria-atomic\": \"true\"\n    }, React.createElement(\"span\", {\n      className: styles['result-text']\n    }, resultText));\n  }\n  return React.createElement(\"div\", {\n    className: styles[`result-container-${status}`],\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, React.createElement(\"span\", {\n    className: clsx(hasResultButton && styles['with-result-button'])\n  }, React.createElement(InternalStatusIndicator, {\n    type: status === 'success' ? 'success' : 'error'\n  }, React.createElement(\"span\", {\n    className: styles['result-text']\n  }, resultText))), hasResultButton && React.createElement(ResultButton, {\n    onClick: onClick\n  }, resultButtonText));\n};","map":{"version":3,"names":["React","clsx","InternalBox","InternalButton","InternalStatusIndicator","styles","MAX_VALUE","clamp","value","lowerLimit","upperLimit","Math","max","min","Progress","_ref","isInFlash","ariaLabel","ariaLabelledby","ariaDescribedby","roundedValue","round","progressValue","createElement","className","progress","complete","undefined","percentage","variant","color","SmallText","_ref2","children","id","display","ResultButton","_ref3","onClick","formAction","ResultState","_ref4","resultText","resultButtonText","status","hasResultButton","type"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/progress-bar/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { BoxProps } from '../box/interfaces';\nimport InternalBox from '../box/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { ProgressBarProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nconst MAX_VALUE = 100;\n\nconst clamp = (value: number, lowerLimit: number, upperLimit: number) => {\n  return Math.max(Math.min(value, upperLimit), lowerLimit);\n};\n\ninterface ProgressProps {\n  value: number;\n  isInFlash: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}\nexport const Progress = ({ value, isInFlash, ariaLabel, ariaLabelledby, ariaDescribedby }: ProgressProps) => {\n  const roundedValue = Math.round(value);\n  const progressValue = clamp(roundedValue, 0, MAX_VALUE);\n\n  return (\n    <div className={styles['progress-container']}>\n      <progress\n        className={clsx(\n          styles.progress,\n          progressValue >= MAX_VALUE && styles.complete,\n          isInFlash && styles['progress-in-flash']\n        )}\n        max={MAX_VALUE}\n        value={progressValue}\n        aria-label={ariaLabel}\n        // Ensures aria-label takes precedence over aria-labelledby\n        aria-labelledby={!ariaLabel ? ariaLabelledby : undefined}\n        aria-describedby={ariaDescribedby}\n      />\n      <span aria-hidden=\"true\" className={styles['percentage-container']}>\n        <InternalBox className={styles.percentage} variant=\"small\" color={isInFlash ? 'inherit' : undefined}>\n          {`${progressValue}%`}\n        </InternalBox>\n      </span>\n    </div>\n  );\n};\n\ninterface SmallTextProps {\n  color?: BoxProps.Color;\n  id?: string;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const SmallText = ({ color, children, className, id }: SmallTextProps) => {\n  return (\n    <InternalBox className={clsx(styles['word-wrap'], className)} variant=\"small\" display=\"block\" color={color} id={id}>\n      {children}\n    </InternalBox>\n  );\n};\n\nconst ResultButton = ({ onClick, children }: ButtonProps) => {\n  return (\n    <div className={styles['result-button']}>\n      <InternalButton formAction=\"none\" onClick={onClick}>\n        {children}\n      </InternalButton>\n    </div>\n  );\n};\n\ninterface ResultStateProps {\n  isInFlash: boolean;\n  resultText: React.ReactNode;\n  resultButtonText?: string;\n  status: ProgressBarProps.Status;\n  onClick: () => void;\n}\n\nexport const ResultState = ({ isInFlash, resultText, resultButtonText, status, onClick }: ResultStateProps) => {\n  const hasResultButton = !!resultButtonText;\n\n  if (isInFlash) {\n    return (\n      <div className={styles[`result-container-${status}`]} aria-live=\"polite\" aria-atomic=\"true\">\n        <span className={styles['result-text']}>{resultText}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles[`result-container-${status}`]} aria-live=\"polite\" aria-atomic=\"true\">\n      <span className={clsx(hasResultButton && styles['with-result-button'])}>\n        <InternalStatusIndicator type={status === 'success' ? 'success' : 'error'}>\n          <span className={styles['result-text']}>{resultText}</span>\n        </InternalStatusIndicator>\n      </span>\n      {hasResultButton && <ResultButton onClick={onClick}>{resultButtonText}</ResultButton>}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}