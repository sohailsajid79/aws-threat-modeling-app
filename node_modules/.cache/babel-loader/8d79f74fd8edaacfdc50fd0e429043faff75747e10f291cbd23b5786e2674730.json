{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\nimport LiveRegion from '../internal/components/live-region';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport styles from './styles.css.js';\nexport function NoDataCell(_ref) {\n  let {\n    totalColumnsCount,\n    hasFooter,\n    loading,\n    loadingText,\n    empty,\n    tableRef,\n    containerRef\n  } = _ref;\n  const cellContentRef = useRef(null);\n  useResizeObserver(containerRef, _ref2 => {\n    let {\n      contentBoxWidth: containerInlineSize\n    } = _ref2;\n    if (tableRef.current && cellContentRef.current) {\n      const tablePaddingInlineStart = parseFloat(getComputedStyle(tableRef.current).paddingInlineStart) || 0;\n      const tablePaddingInlineEnd = parseFloat(getComputedStyle(tableRef.current).paddingInlineEnd) || 0;\n      const inlineSize = containerInlineSize + tablePaddingInlineStart + tablePaddingInlineEnd;\n      cellContentRef.current.style.inlineSize = Math.floor(inlineSize) + 'px';\n    }\n  });\n  return React.createElement(\"td\", {\n    colSpan: totalColumnsCount,\n    className: clsx(styles['cell-merged'], hasFooter && styles['has-footer'])\n  }, React.createElement(\"div\", {\n    ref: cellContentRef,\n    className: styles['cell-merged-content'],\n    \"data-awsui-table-suppress-navigation\": true\n  }, loading ? React.createElement(InternalStatusIndicator, {\n    type: \"loading\",\n    className: styles.loading,\n    wrapText: true\n  }, React.createElement(LiveRegion, {\n    visible: true\n  }, loadingText)) : React.createElement(\"div\", {\n    className: styles.empty\n  }, empty)));\n}","map":{"version":3,"names":["React","useRef","clsx","useResizeObserver","LiveRegion","InternalStatusIndicator","styles","NoDataCell","_ref","totalColumnsCount","hasFooter","loading","loadingText","empty","tableRef","containerRef","cellContentRef","_ref2","contentBoxWidth","containerInlineSize","current","tablePaddingInlineStart","parseFloat","getComputedStyle","paddingInlineStart","tablePaddingInlineEnd","paddingInlineEnd","inlineSize","style","Math","floor","createElement","colSpan","className","ref","type","wrapText","visible"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/no-data-cell.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport LiveRegion from '../internal/components/live-region';\nimport InternalStatusIndicator from '../status-indicator/internal';\n\nimport styles from './styles.css.js';\n\ninterface NoDataCellProps {\n  totalColumnsCount: number;\n  hasFooter: boolean;\n  loading?: boolean;\n  loadingText?: string;\n  empty?: React.ReactNode;\n  tableRef: React.RefObject<HTMLTableElement>;\n  containerRef: React.RefObject<HTMLElement>;\n}\n\nexport function NoDataCell({\n  totalColumnsCount,\n  hasFooter,\n  loading,\n  loadingText,\n  empty,\n  tableRef,\n  containerRef,\n}: NoDataCellProps) {\n  const cellContentRef = useRef<HTMLDivElement>(null);\n\n  useResizeObserver(containerRef, ({ contentBoxWidth: containerInlineSize }) => {\n    if (tableRef.current && cellContentRef.current) {\n      const tablePaddingInlineStart = parseFloat(getComputedStyle(tableRef.current).paddingInlineStart) || 0;\n      const tablePaddingInlineEnd = parseFloat(getComputedStyle(tableRef.current).paddingInlineEnd) || 0;\n      const inlineSize = containerInlineSize + tablePaddingInlineStart + tablePaddingInlineEnd;\n      cellContentRef.current.style.inlineSize = Math.floor(inlineSize) + 'px';\n    }\n  });\n\n  return (\n    <td colSpan={totalColumnsCount} className={clsx(styles['cell-merged'], hasFooter && styles['has-footer'])}>\n      <div ref={cellContentRef} className={styles['cell-merged-content']} data-awsui-table-suppress-navigation={true}>\n        {loading ? (\n          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n          </InternalStatusIndicator>\n        ) : (\n          <div className={styles.empty}>{empty}</div>\n        )}\n      </div>\n    </td>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,iBAAiB,QAAQ,+CAA+C;AAEjF,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,uBAAuB,MAAM,8BAA8B;AAElE,OAAOC,MAAM,MAAM,iBAAiB;AAYpC,OAAM,SAAUC,UAAUA,CAAAC,IAAA,EAQR;EAAA,IARS;IACzBC,iBAAiB;IACjBC,SAAS;IACTC,OAAO;IACPC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC;EAAY,CACI,GAAAP,IAAA;EAChB,MAAMQ,cAAc,GAAGf,MAAM,CAAiB,IAAI,CAAC;EAEnDE,iBAAiB,CAACY,YAAY,EAAEE,KAAA,IAA6C;IAAA,IAA5C;MAAEC,eAAe,EAAEC;IAAmB,CAAE,GAAAF,KAAA;IACvE,IAAIH,QAAQ,CAACM,OAAO,IAAIJ,cAAc,CAACI,OAAO,EAAE;MAC9C,MAAMC,uBAAuB,GAAGC,UAAU,CAACC,gBAAgB,CAACT,QAAQ,CAACM,OAAO,CAAC,CAACI,kBAAkB,CAAC,IAAI,CAAC;MACtG,MAAMC,qBAAqB,GAAGH,UAAU,CAACC,gBAAgB,CAACT,QAAQ,CAACM,OAAO,CAAC,CAACM,gBAAgB,CAAC,IAAI,CAAC;MAClG,MAAMC,UAAU,GAAGR,mBAAmB,GAAGE,uBAAuB,GAAGI,qBAAqB;MACxFT,cAAc,CAACI,OAAO,CAACQ,KAAK,CAACD,UAAU,GAAGE,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,GAAG,IAAI;;EAE3E,CAAC,CAAC;EAEF,OACE3B,KAAA,CAAA+B,aAAA;IAAIC,OAAO,EAAEvB,iBAAiB;IAAEwB,SAAS,EAAE/B,IAAI,CAACI,MAAM,CAAC,aAAa,CAAC,EAAEI,SAAS,IAAIJ,MAAM,CAAC,YAAY,CAAC;EAAC,GACvGN,KAAA,CAAA+B,aAAA;IAAKG,GAAG,EAAElB,cAAc;IAAEiB,SAAS,EAAE3B,MAAM,CAAC,qBAAqB,CAAC;IAAA,wCAAwC;EAAI,GAC3GK,OAAO,GACNX,KAAA,CAAA+B,aAAA,CAAC1B,uBAAuB;IAAC8B,IAAI,EAAC,SAAS;IAACF,SAAS,EAAE3B,MAAM,CAACK,OAAO;IAAEyB,QAAQ,EAAE;EAAI,GAC/EpC,KAAA,CAAA+B,aAAA,CAAC3B,UAAU;IAACiC,OAAO,EAAE;EAAI,GAAGzB,WAAW,CAAc,CAC7B,GAE1BZ,KAAA,CAAA+B,aAAA;IAAKE,SAAS,EAAE3B,MAAM,CAACO;EAAK,GAAGA,KAAK,CACrC,CACG,CACH;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}