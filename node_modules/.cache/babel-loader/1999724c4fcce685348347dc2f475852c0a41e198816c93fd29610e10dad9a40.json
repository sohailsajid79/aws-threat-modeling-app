{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport styles from './styles.css.js';\nexport default function Badge(_a) {\n  var {\n      color = 'grey',\n      children\n    } = _a,\n    rest = __rest(_a, [\"color\", \"children\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('Badge', {\n    props: {\n      color\n    }\n  });\n  const baseProps = getBaseProps(rest);\n  const className = clsx(baseProps.className, styles.badge, styles[`badge-color-${color}`]);\n  return React.createElement(\"span\", Object.assign({}, baseProps, {\n    className\n  }, {\n    ref: __internalRootRef\n  }), children);\n}\napplyDisplayName(Badge, 'Badge');","map":{"version":3,"names":["React","clsx","getBaseProps","useBaseComponent","applyDisplayName","styles","Badge","_a","color","children","rest","__rest","__internalRootRef","props","baseProps","className","badge","createElement","Object","assign","ref"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/badge/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { BadgeProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport { BadgeProps };\n\nexport default function Badge({ color = 'grey', children, ...rest }: BadgeProps) {\n  const { __internalRootRef } = useBaseComponent('Badge', { props: { color } });\n  const baseProps = getBaseProps(rest);\n\n  const className = clsx(baseProps.className, styles.badge, styles[`badge-color-${color}`]);\n\n  return (\n    <span {...baseProps} {...{ className }} ref={__internalRootRef}>\n      {children}\n    </span>\n  );\n}\n\napplyDisplayName(Badge, 'Badge');\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAGvE,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,eAAc,SAAUC,KAAKA,CAACC,EAAiD;MAAjD;MAAEC,KAAK,GAAG,MAAM;MAAEC;IAAQ,IAAAF,EAAuB;IAAlBG,IAAI,GAAAC,MAAA,CAAAJ,EAAA,EAAnC,qBAAqC,CAAF;EAC/D,MAAM;IAAEK;EAAiB,CAAE,GAAGT,gBAAgB,CAAC,OAAO,EAAE;IAAEU,KAAK,EAAE;MAAEL;IAAK;EAAE,CAAE,CAAC;EAC7E,MAAMM,SAAS,GAAGZ,YAAY,CAACQ,IAAI,CAAC;EAEpC,MAAMK,SAAS,GAAGd,IAAI,CAACa,SAAS,CAACC,SAAS,EAAEV,MAAM,CAACW,KAAK,EAAEX,MAAM,CAAC,eAAeG,KAAK,EAAE,CAAC,CAAC;EAEzF,OACER,KAAA,CAAAiB,aAAA,SAAAC,MAAA,CAAAC,MAAA,KAAUL,SAAS,EAAM;IAAEC;EAAS,CAAE;IAAEK,GAAG,EAAER;EAAiB,IAC3DH,QAAQ,CACJ;AAEX;AAEAL,gBAAgB,CAACE,KAAK,EAAE,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}