{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/FullExamples/index.tsx\",\n  _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Box from '@cloudscape-design/components/box';\nimport Button from '@cloudscape-design/components/button';\nimport ExpandableSection from '@cloudscape-design/components/expandable-section';\nimport PropertyFilter from '@cloudscape-design/components/property-filter';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport { useState, useMemo, useCallback, useImperativeHandle, forwardRef } from 'react';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport STRIDE from '../../../data/stride';\nimport intersectArrays from '../../../utils/intersectArrays';\nimport shuffle from '../../../utils/shuffle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parseToken = (statements, token) => {\n  var _token$value;\n  const targetValue = (_token$value = token.value) === null || _token$value === void 0 ? void 0 : _token$value.slice(0, 1).toUpperCase();\n  const result = [];\n  statements.forEach((st, index) => {\n    if (token.propertyKey === 'STRIDE') {\n      var _st$metadata, _st$metadata$find;\n      const value = (_st$metadata = st.metadata) === null || _st$metadata === void 0 ? void 0 : (_st$metadata$find = _st$metadata.find(m => m.key === 'STRIDE')) === null || _st$metadata$find === void 0 ? void 0 : _st$metadata$find.value;\n      if (!value && token.operator === '!=') {\n        result.push(index);\n      }\n      if (value && token.operator === '=' && value.includes(targetValue)) {\n        result.push(index);\n      }\n      if (token.operator !== '=' && (!value || !value.includes(targetValue))) {\n        result.push(index);\n      }\n    } else if (!token.propertyKey && token.operator === ':') {\n      if (st.statement && st.statement.toLocaleLowerCase().indexOf(token.value) >= 0) {\n        result.push(index);\n      }\n    } else {\n      result.push(index);\n    }\n  });\n  return result;\n};\nconst FullExamples = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  onClick\n}, ref) => {\n  _s();\n  const {\n    threatStatementExamples\n  } = useThreatsContext();\n  const [expanded, setExpanded] = useState(false);\n  const [query, setQuery] = useState({\n    tokens: [],\n    operation: 'and'\n  });\n  useImperativeHandle(ref, () => {\n    return {\n      collapse() {\n        setExpanded(false);\n      }\n    };\n  }, []);\n  const handleClick = useCallback(example => {\n    setExpanded(false);\n    onClick === null || onClick === void 0 ? void 0 : onClick(example);\n  }, [onClick]);\n  const filteredThreatStatementList = useMemo(() => {\n    let resultExamples = [...threatStatementExamples];\n    if (query.tokens.length > 0) {\n      const queryResult = query.tokens.map(t => parseToken(threatStatementExamples, t));\n      let mergeResult = [];\n      if (queryResult.length === 1) {\n        mergeResult = queryResult[0];\n      } else {\n        if (query.operation === 'or') {\n          mergeResult = queryResult.reduce((arr, cur) => {\n            const result = [...arr];\n            cur.forEach(n => {\n              if (!result.includes(n)) {\n                result.push(n);\n              }\n            });\n            return result;\n          }, []);\n        } else {\n          mergeResult = intersectArrays(...queryResult);\n        }\n      }\n      resultExamples = resultExamples.filter((_r, index) => {\n        return mergeResult.includes(index);\n      });\n    }\n    return shuffle(resultExamples);\n  }, [threatStatementExamples, query]);\n  const filteringOptions = useMemo(() => {\n    const options = [];\n    options.push(...STRIDE.map(v => ({\n      propertyKey: 'STRIDE',\n      value: v.label\n    })));\n    return options;\n  }, []);\n  const filteringProperties = useMemo(() => {\n    return [{\n      key: 'STRIDE',\n      operators: ['=', '!='],\n      propertyLabel: 'STRIDE',\n      groupValuesLabel: 'STRIDE values'\n    }];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ExpandableSection, {\n    headerText: \"Full examples\",\n    expanded: expanded,\n    onChange: ({\n      detail\n    }) => setExpanded(detail.expanded),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      padding: \"m\",\n      children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n        direction: \"vertical\",\n        size: \"m\",\n        children: [/*#__PURE__*/_jsxDEV(PropertyFilter, {\n          onChange: ({\n            detail\n          }) => setQuery(detail),\n          query: query,\n          i18nStrings: {\n            filteringAriaLabel: 'your choice',\n            dismissAriaLabel: 'Dismiss',\n            filteringPlaceholder: 'Filter examples by metadata or content',\n            groupValuesText: 'Values',\n            groupPropertiesText: 'Properties',\n            operatorsText: 'Operators',\n            operationAndText: 'and',\n            operationOrText: 'or',\n            operatorLessText: 'Less than',\n            operatorLessOrEqualText: 'Less than or equal',\n            operatorGreaterText: 'Greater than',\n            operatorGreaterOrEqualText: 'Greater than or equal',\n            operatorContainsText: 'Contains',\n            operatorDoesNotContainText: 'Does not contain',\n            operatorEqualsText: 'Equals',\n            operatorDoesNotEqualText: 'Does not equal',\n            editTokenHeader: 'Edit filter',\n            propertyText: 'Property',\n            operatorText: 'Operator',\n            valueText: 'Value',\n            cancelActionText: 'Cancel',\n            applyActionText: 'Apply',\n            allPropertiesLabel: 'All properties',\n            tokenLimitShowMore: 'Show more',\n            tokenLimitShowFewer: 'Show fewer',\n            clearFiltersText: 'Clear filters',\n            removeTokenButtonAriaLabel: token => `Remove token ${token.propertyKey} ${token.operator} ${token.value}`,\n            enteredTextLabel: text => `Use: \"${text}\"`\n          },\n          countText: `${filteredThreatStatementList.length} matches`,\n          expandToViewport: true,\n          filteringOptions: filteringOptions,\n          filteringProperties: filteringProperties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextContent, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: filteredThreatStatementList.map((example, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleClick(example),\n                variant: \"link\",\n                children: example.statement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}, \"3QONRPBPRLfiAsOpZE4kciSiRQ4=\", false, function () {\n  return [useThreatsContext];\n})), \"3QONRPBPRLfiAsOpZE4kciSiRQ4=\", false, function () {\n  return [useThreatsContext];\n});\n_c2 = FullExamples;\nexport default FullExamples;\nvar _c, _c2;\n$RefreshReg$(_c, \"FullExamples$forwardRef\");\n$RefreshReg$(_c2, \"FullExamples\");","map":{"version":3,"names":["Box","Button","ExpandableSection","PropertyFilter","SpaceBetween","TextContent","useState","useMemo","useCallback","useImperativeHandle","forwardRef","useThreatsContext","STRIDE","intersectArrays","shuffle","jsxDEV","_jsxDEV","parseToken","statements","token","_token$value","targetValue","value","slice","toUpperCase","result","forEach","st","index","propertyKey","_st$metadata","_st$metadata$find","metadata","find","m","key","operator","push","includes","statement","toLocaleLowerCase","indexOf","FullExamples","_s","_c","onClick","ref","threatStatementExamples","expanded","setExpanded","query","setQuery","tokens","operation","collapse","handleClick","example","filteredThreatStatementList","resultExamples","length","queryResult","map","t","mergeResult","reduce","arr","cur","n","filter","_r","filteringOptions","options","v","label","filteringProperties","operators","propertyLabel","groupValuesLabel","headerText","onChange","detail","children","padding","direction","size","i18nStrings","filteringAriaLabel","dismissAriaLabel","filteringPlaceholder","groupValuesText","groupPropertiesText","operatorsText","operationAndText","operationOrText","operatorLessText","operatorLessOrEqualText","operatorGreaterText","operatorGreaterOrEqualText","operatorContainsText","operatorDoesNotContainText","operatorEqualsText","operatorDoesNotEqualText","editTokenHeader","propertyText","operatorText","valueText","cancelActionText","applyActionText","allPropertiesLabel","tokenLimitShowMore","tokenLimitShowFewer","clearFiltersText","removeTokenButtonAriaLabel","enteredTextLabel","text","countText","expandToViewport","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c2","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/FullExamples/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Box from '@cloudscape-design/components/box';\nimport Button from '@cloudscape-design/components/button';\nimport ExpandableSection from '@cloudscape-design/components/expandable-section';\nimport PropertyFilter, { PropertyFilterProps } from '@cloudscape-design/components/property-filter';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport { FC, useState, useMemo, useCallback, useImperativeHandle, forwardRef } from 'react';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport { TemplateThreatStatement } from '../../../customTypes';\nimport STRIDE from '../../../data/stride';\nimport intersectArrays from '../../../utils/intersectArrays';\nimport shuffle from '../../../utils/shuffle';\n\nexport interface FullExamplesProps {\n  onClick: (example: TemplateThreatStatement) => void;\n}\n\nconst parseToken = (statements: TemplateThreatStatement[], token: PropertyFilterProps.Token) => {\n  const targetValue = token.value?.slice(0, 1).toUpperCase();\n  const result: number[] = [];\n  statements.forEach((st, index) => {\n    if (token.propertyKey === 'STRIDE') {\n      const value = st.metadata?.find(m => m.key === 'STRIDE')?.value as string[];\n      if (!value && token.operator === '!=') {\n        result.push(index);\n      }\n\n      if (value && token.operator === '=' && value.includes(targetValue)) {\n        result.push(index);\n      }\n\n      if (token.operator !== '=' && (!value || !value.includes(targetValue))) {\n        result.push(index);\n      }\n    } else if (!token.propertyKey && token.operator === ':') {\n      if (st.statement && st.statement.toLocaleLowerCase().indexOf(token.value) >= 0) {\n        result.push(index);\n      }\n    } else {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst FullExamples: FC<FullExamplesProps & { ref?: React.ForwardedRef<any> }> = forwardRef(({\n  onClick,\n}, ref) => {\n  const { threatStatementExamples } = useThreatsContext();\n  const [expanded, setExpanded] = useState(false);\n  const [query, setQuery] = useState<PropertyFilterProps.Query>({\n    tokens: [],\n    operation: 'and',\n  });\n\n  useImperativeHandle(ref, () => {\n    return {\n      collapse() {\n        setExpanded(false);\n      },\n    };\n  }, []);\n\n  const handleClick = useCallback((example: TemplateThreatStatement) => {\n    setExpanded(false);\n    onClick?.(example);\n  }, [onClick]);\n\n  const filteredThreatStatementList = useMemo(() => {\n    let resultExamples = [...threatStatementExamples];\n    if (query.tokens.length > 0) {\n      const queryResult = query.tokens.map(t => parseToken(threatStatementExamples, t));\n      let mergeResult: number[] = [];\n      if (queryResult.length === 1) {\n        mergeResult = queryResult[0];\n      } else {\n        if (query.operation === 'or') {\n          mergeResult = queryResult.reduce((arr: number[], cur: number[]) => {\n            const result = [...arr];\n            cur.forEach(n => {\n              if (!result.includes(n)) {\n                result.push(n);\n              }\n            });\n            return result;\n          }, []);\n        } else {\n          mergeResult = intersectArrays(...queryResult);\n        }\n      }\n\n      resultExamples = resultExamples.filter((_r, index) => {\n        return mergeResult.includes(index);\n      });\n    }\n\n    return shuffle(resultExamples);\n  }, [threatStatementExamples, query]);\n\n  const filteringOptions = useMemo(() => {\n    const options: PropertyFilterProps.FilteringOption[] = [];\n    options.push(...STRIDE.map(v => ({\n      propertyKey: 'STRIDE',\n      value: v.label,\n    })));\n\n    return options;\n  }, []);\n\n  const filteringProperties: PropertyFilterProps.FilteringProperty[] = useMemo(() => {\n    return [\n      {\n        key: 'STRIDE',\n        operators: ['=', '!='],\n        propertyLabel: 'STRIDE',\n        groupValuesLabel: 'STRIDE values',\n      },\n    ];\n  }, []);\n\n  return (\n    <ExpandableSection\n      headerText=\"Full examples\"\n      expanded={expanded}\n      onChange={({ detail }) => setExpanded(detail.expanded)}\n    >\n      <Box padding='m'>\n        <SpaceBetween direction='vertical' size='m'>\n          <PropertyFilter\n            onChange={({ detail }) => setQuery(detail)}\n            query={query}\n            i18nStrings={{\n              filteringAriaLabel: 'your choice',\n              dismissAriaLabel: 'Dismiss',\n              filteringPlaceholder:\n                'Filter examples by metadata or content',\n              groupValuesText: 'Values',\n              groupPropertiesText: 'Properties',\n              operatorsText: 'Operators',\n              operationAndText: 'and',\n              operationOrText: 'or',\n              operatorLessText: 'Less than',\n              operatorLessOrEqualText: 'Less than or equal',\n              operatorGreaterText: 'Greater than',\n              operatorGreaterOrEqualText:\n                'Greater than or equal',\n              operatorContainsText: 'Contains',\n              operatorDoesNotContainText: 'Does not contain',\n              operatorEqualsText: 'Equals',\n              operatorDoesNotEqualText: 'Does not equal',\n              editTokenHeader: 'Edit filter',\n              propertyText: 'Property',\n              operatorText: 'Operator',\n              valueText: 'Value',\n              cancelActionText: 'Cancel',\n              applyActionText: 'Apply',\n              allPropertiesLabel: 'All properties',\n              tokenLimitShowMore: 'Show more',\n              tokenLimitShowFewer: 'Show fewer',\n              clearFiltersText: 'Clear filters',\n              removeTokenButtonAriaLabel: token =>\n                `Remove token ${token.propertyKey} ${token.operator} ${token.value}`,\n              enteredTextLabel: text => `Use: \"${text}\"`,\n            }}\n            countText={`${filteredThreatStatementList.length} matches`}\n            expandToViewport\n            filteringOptions={filteringOptions}\n            filteringProperties={filteringProperties}\n          />\n          <TextContent>\n            <ul>\n              {filteredThreatStatementList.map((example, index) => (\n                <li key={index}>\n                  <Button onClick={() => handleClick(example)} variant='link'>\n                    {example.statement}\n                  </Button>\n                </li>))}\n            </ul>\n          </TextContent>\n        </SpaceBetween>\n      </Box>\n    </ExpandableSection>\n  );\n});\n\nexport default FullExamples;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}