{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import Button from'@cloudscape-design/components/button';import Container from'@cloudscape-design/components/container';import Grid from'@cloudscape-design/components/grid';import Header from'@cloudscape-design/components/header';import SpaceBetween from'@cloudscape-design/components/space-between';import TextFilter from'@cloudscape-design/components/text-filter';import{useCallback,useMemo,useState}from'react';import{useAssumptionLinksContext,useControlLinksContext,useMitigationLinksContext}from'../../../contexts';import{useMitigationsContext}from'../../../contexts/MitigationsContext/context';import LinkedEntityFilter,{ALL,WITHOUT_NO_LINKED_ENTITY,WITH_LINKED_ENTITY}from'../../generic/LinkedEntityFilter';import TagSelector from'../../generic/TagSelector';import MitigationCard from'../MitigationCard';import MitigationCreationCard from'../MitigationCreationCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MitigationList=()=>{const{mitigationList,removeMitigation,saveMitigation}=useMitigationsContext();const{addMitigationLinks,mitigationLinkList,removeMitigationLinksByMitigationId}=useMitigationLinksContext();const{addAssumptionLinks,assumptionLinkList,removeAssumptionLinksByLinkedEntityId}=useAssumptionLinksContext();const{addControlLinks,controlLinkList,removeControlLinksByLinkedEntityId}=useControlLinksContext();const[filteringText,setFilteringText]=useState('');const[selectedTags,setSelectedTags]=useState([]);const[selectedLinkedThreatsFilter,setSelectedLinkedThreatsFilter]=useState(ALL);const[selectedLinkedAssumptionsFilter,setSelectedLinkedAssumptionsFilter]=useState(ALL);const[selectedLinkedControlsFilter,setSelectedLinkedControlsFilter]=useState(ALL);const handleRemove=useCallback(async mitigationId=>{removeMitigation(mitigationId);await removeControlLinksByLinkedEntityId(mitigationId);await removeAssumptionLinksByLinkedEntityId(mitigationId);await removeMitigationLinksByMitigationId(mitigationId);},[removeAssumptionLinksByLinkedEntityId,removeMitigation,removeControlLinksByLinkedEntityId,removeMitigationLinksByMitigationId]);const hasNoFilter=useMemo(()=>{return filteringText===''&&selectedLinkedAssumptionsFilter===ALL&&selectedLinkedControlsFilter===ALL&&selectedLinkedThreatsFilter===ALL&&selectedTags.length===0;},[filteringText,selectedTags,selectedLinkedThreatsFilter,selectedLinkedAssumptionsFilter,selectedLinkedControlsFilter]);const handleClearFilter=useCallback(()=>{setFilteringText('');setSelectedTags([]);setSelectedLinkedControlsFilter(ALL);setSelectedLinkedAssumptionsFilter(ALL);setSelectedLinkedThreatsFilter(ALL);},[]);const allTags=useMemo(()=>{return mitigationList.reduce((all,cur)=>{var _cur$tags;return[...all,...(((_cur$tags=cur.tags)===null||_cur$tags===void 0?void 0:_cur$tags.filter(ia=>!all.includes(ia)))||[])];},[]);},[mitigationList]);const handleAddTagToEntity=useCallback((assumption,tag)=>{const updated={...assumption,tags:assumption.tags?!assumption.tags.includes(tag)?[...assumption.tags,tag]:assumption.tags:[tag]};saveMitigation(updated);},[saveMitigation]);const handleRemoveTagFromEntity=useCallback((assumption,tag)=>{var _assumption$tags;const updated={...assumption,tags:(_assumption$tags=assumption.tags)===null||_assumption$tags===void 0?void 0:_assumption$tags.filter(t=>t!==tag)};saveMitigation(updated);},[saveMitigation]);const filteredList=useMemo(()=>{let output=mitigationList;if(filteringText){output=output.filter(st=>st.content&&st.content.toLowerCase().indexOf(filteringText.toLowerCase())>=0);}if(selectedTags&&selectedTags.length>0){output=output.filter(st=>{var _st$tags;return(_st$tags=st.tags)===null||_st$tags===void 0?void 0:_st$tags.some(t=>selectedTags.includes(t));});}if(selectedLinkedThreatsFilter!==ALL){output=output.filter(st=>{return mitigationLinkList.some(ml=>ml.mitigationId===st.id)?selectedLinkedThreatsFilter===WITH_LINKED_ENTITY:selectedLinkedThreatsFilter===WITHOUT_NO_LINKED_ENTITY;});}if(selectedLinkedAssumptionsFilter!==ALL){output=output.filter(st=>{return assumptionLinkList.some(al=>al.linkedId===st.id)?selectedLinkedAssumptionsFilter===WITH_LINKED_ENTITY:selectedLinkedAssumptionsFilter===WITHOUT_NO_LINKED_ENTITY;});}if(selectedLinkedControlsFilter!==ALL){output=output.filter(st=>{return controlLinkList.some(al=>al.linkedId===st.id)?selectedLinkedControlsFilter===WITH_LINKED_ENTITY:selectedLinkedControlsFilter===WITHOUT_NO_LINKED_ENTITY;});}output=output.sort((op1,op2)=>(op2.displayOrder||Number.MAX_VALUE)-(op1.displayOrder||Number.MAX_VALUE));return output;},[filteringText,mitigationList,selectedTags,assumptionLinkList,controlLinkList,mitigationLinkList,selectedLinkedAssumptionsFilter,selectedLinkedControlsFilter,selectedLinkedThreatsFilter]);const handleSaveNew=useCallback((mitigation,linkedControlIds,linkedAssumptionIds,linkedThreatIds)=>{const updated=saveMitigation(mitigation);const mitigationLinks=[];linkedThreatIds.forEach(id=>{mitigationLinks.push({linkedId:id,mitigationId:updated.id});});addMitigationLinks(mitigationLinks);const assumptionLinks=[];linkedAssumptionIds.forEach(id=>{assumptionLinks.push({linkedId:updated.id,assumptionId:id,type:'Mitigation'});});addAssumptionLinks(assumptionLinks);const controlLinks=[];linkedControlIds.forEach(id=>{controlLinks.push({linkedId:updated.id,controlId:id});});addControlLinks(controlLinks);},[saveMitigation,addMitigationLinks,addAssumptionLinks,addControlLinks]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(SpaceBetween,{direction:\"vertical\",size:\"s\",children:[/*#__PURE__*/_jsx(Container,{header:/*#__PURE__*/_jsx(Header,{counter:`(${filteredList.length})`,children:\"Mitigation List\"}),children:/*#__PURE__*/_jsxs(SpaceBetween,{direction:\"vertical\",size:\"s\",children:[/*#__PURE__*/_jsx(TextFilter,{filteringText:filteringText,filteringPlaceholder:\"Find mitigations\",filteringAriaLabel:\"Filter mitigations\",onChange:_ref=>{let{detail}=_ref;return setFilteringText(detail.filteringText);}}),/*#__PURE__*/_jsxs(Grid,{gridDefinition:[{colspan:{default:12,xs:2}},{colspan:{default:12,xs:3}},{colspan:{default:12,xs:3}},{colspan:{default:12,xs:3}},{colspan:{default:1}}],children:[/*#__PURE__*/_jsx(TagSelector,{allTags:allTags,selectedTags:selectedTags,setSelectedTags:setSelectedTags}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked threats\",entityDisplayName:\"threats\",callerName:\"mitigations\",selected:selectedLinkedThreatsFilter,setSelected:setSelectedLinkedThreatsFilter}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked controls\",entityDisplayName:\"controls\",callerName:\"mitigations\",selected:selectedLinkedControlsFilter,setSelected:setSelectedLinkedControlsFilter}),/*#__PURE__*/_jsx(LinkedEntityFilter,{label:\"Linked assumptions\",entityDisplayName:\"assumptions\",callerName:\"mitigations\",selected:selectedLinkedAssumptionsFilter,setSelected:setSelectedLinkedAssumptionsFilter}),/*#__PURE__*/_jsx(Button,{onClick:handleClearFilter,variant:\"icon\",iconSvg:/*#__PURE__*/_jsx(\"svg\",{focusable:\"false\",\"aria-hidden\":\"true\",viewBox:\"0 0 24 24\",tabIndex:-1,children:/*#__PURE__*/_jsx(\"path\",{d:\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"})}),ariaLabel:\"Clear filters\",disabled:hasNoFilter})]})]})}),filteredList===null||filteredList===void 0?void 0:filteredList.map(entity=>/*#__PURE__*/_jsx(MitigationCard,{entity:entity,onRemove:handleRemove,onEdit:saveMitigation,onAddTagToEntity:handleAddTagToEntity,onRemoveTagFromEntity:handleRemoveTagFromEntity},entity.id)),/*#__PURE__*/_jsx(MitigationCreationCard,{onSave:handleSaveNew})]})});};export default MitigationList;","map":{"version":3,"names":["Button","Container","Grid","Header","SpaceBetween","TextFilter","useCallback","useMemo","useState","useAssumptionLinksContext","useControlLinksContext","useMitigationLinksContext","useMitigationsContext","LinkedEntityFilter","ALL","WITHOUT_NO_LINKED_ENTITY","WITH_LINKED_ENTITY","TagSelector","MitigationCard","MitigationCreationCard","jsx","_jsx","jsxs","_jsxs","MitigationList","mitigationList","removeMitigation","saveMitigation","addMitigationLinks","mitigationLinkList","removeMitigationLinksByMitigationId","addAssumptionLinks","assumptionLinkList","removeAssumptionLinksByLinkedEntityId","addControlLinks","controlLinkList","removeControlLinksByLinkedEntityId","filteringText","setFilteringText","selectedTags","setSelectedTags","selectedLinkedThreatsFilter","setSelectedLinkedThreatsFilter","selectedLinkedAssumptionsFilter","setSelectedLinkedAssumptionsFilter","selectedLinkedControlsFilter","setSelectedLinkedControlsFilter","handleRemove","mitigationId","hasNoFilter","length","handleClearFilter","allTags","reduce","all","cur","_cur$tags","tags","filter","ia","includes","handleAddTagToEntity","assumption","tag","updated","handleRemoveTagFromEntity","_assumption$tags","t","filteredList","output","st","content","toLowerCase","indexOf","_st$tags","some","ml","id","al","linkedId","sort","op1","op2","displayOrder","Number","MAX_VALUE","handleSaveNew","mitigation","linkedControlIds","linkedAssumptionIds","linkedThreatIds","mitigationLinks","forEach","push","assumptionLinks","assumptionId","type","controlLinks","controlId","children","direction","size","header","counter","filteringPlaceholder","filteringAriaLabel","onChange","_ref","detail","gridDefinition","colspan","default","xs","label","entityDisplayName","callerName","selected","setSelected","onClick","variant","iconSvg","focusable","viewBox","tabIndex","d","ariaLabel","disabled","map","entity","onRemove","onEdit","onAddTagToEntity","onRemoveTagFromEntity","onSave"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/mitigations/MitigationList/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Button from '@cloudscape-design/components/button';\nimport Container from '@cloudscape-design/components/container';\nimport Grid from '@cloudscape-design/components/grid';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport { FC, useCallback, useMemo, useState } from 'react';\nimport { useAssumptionLinksContext, useControlLinksContext, useMitigationLinksContext } from '../../../contexts';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport { AssumptionLink, ControlLink, Mitigation, MitigationLink } from '../../../customTypes';\nimport LinkedEntityFilter, { ALL, WITHOUT_NO_LINKED_ENTITY, WITH_LINKED_ENTITY } from '../../generic/LinkedEntityFilter';\nimport TagSelector from '../../generic/TagSelector';\nimport MitigationCard from '../MitigationCard';\nimport MitigationCreationCard from '../MitigationCreationCard';\n\nconst MitigationList: FC = () => {\n  const {\n    mitigationList,\n    removeMitigation,\n    saveMitigation,\n  } = useMitigationsContext();\n\n  const {\n    addMitigationLinks,\n    mitigationLinkList,\n    removeMitigationLinksByMitigationId,\n  } = useMitigationLinksContext();\n\n  const {\n    addAssumptionLinks,\n    assumptionLinkList,\n    removeAssumptionLinksByLinkedEntityId,\n  } = useAssumptionLinksContext();\n\n  const {\n    addControlLinks,\n    controlLinkList,\n    removeControlLinksByLinkedEntityId,\n  } = useControlLinksContext();\n\n  const [filteringText, setFilteringText] = useState('');\n\n  const [\n    selectedTags,\n    setSelectedTags,\n  ] = useState<string[]>([]);\n\n  const [\n    selectedLinkedThreatsFilter,\n    setSelectedLinkedThreatsFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedAssumptionsFilter,\n    setSelectedLinkedAssumptionsFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedControlsFilter,\n    setSelectedLinkedControlsFilter,\n  ] = useState(ALL);\n\n  const handleRemove = useCallback(async (mitigationId: string) => {\n    removeMitigation(mitigationId);\n    await removeControlLinksByLinkedEntityId(mitigationId);\n    await removeAssumptionLinksByLinkedEntityId(mitigationId);\n    await removeMitigationLinksByMitigationId(mitigationId);\n  }, [removeAssumptionLinksByLinkedEntityId, removeMitigation, removeControlLinksByLinkedEntityId, removeMitigationLinksByMitigationId]);\n\n  const hasNoFilter = useMemo(() => {\n    return (filteringText === ''\n      && selectedLinkedAssumptionsFilter === ALL\n      && selectedLinkedControlsFilter === ALL\n      && selectedLinkedThreatsFilter === ALL\n      && selectedTags.length === 0);\n  }, [filteringText, selectedTags,\n    selectedLinkedThreatsFilter, selectedLinkedAssumptionsFilter, selectedLinkedControlsFilter]);\n\n  const handleClearFilter = useCallback(() => {\n    setFilteringText('');\n    setSelectedTags([]);\n    setSelectedLinkedControlsFilter(ALL);\n    setSelectedLinkedAssumptionsFilter(ALL);\n    setSelectedLinkedThreatsFilter(ALL);\n  }, []);\n\n  const allTags = useMemo(() => {\n    return mitigationList\n      .reduce((all: string[], cur) => {\n        return [...all, ...cur.tags?.filter(ia => !all.includes(ia)) || []];\n      }, []);\n  }, [mitigationList]);\n\n  const handleAddTagToEntity = useCallback((assumption: Mitigation, tag: string) => {\n    const updated: Mitigation = {\n      ...assumption,\n      tags: assumption.tags ?\n        (!assumption.tags.includes(tag) ?\n          [...assumption.tags, tag] : assumption.tags) :\n        [tag],\n    };\n    saveMitigation(updated);\n  }, [saveMitigation]);\n\n  const handleRemoveTagFromEntity = useCallback((assumption: Mitigation, tag: string) => {\n    const updated: Mitigation = {\n      ...assumption,\n      tags: assumption.tags?.filter(t => t !== tag),\n    };\n    saveMitigation(updated);\n  }, [saveMitigation]);\n\n  const filteredList = useMemo(() => {\n    let output = mitigationList;\n\n    if (filteringText) {\n      output = output.filter(st => st.content && st.content.toLowerCase().indexOf(filteringText.toLowerCase()) >= 0);\n    }\n\n    if (selectedTags && selectedTags.length > 0) {\n      output = output.filter(st => {\n        return st.tags?.some(t => selectedTags.includes(t));\n      });\n    }\n\n    if (selectedLinkedThreatsFilter !== ALL) {\n      output = output.filter(st => {\n        return mitigationLinkList.some(ml => ml. mitigationId === st.id) ?\n          selectedLinkedThreatsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedThreatsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedAssumptionsFilter !== ALL) {\n      output = output.filter(st => {\n        return assumptionLinkList.some(al => al.linkedId === st.id) ?\n          selectedLinkedAssumptionsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedAssumptionsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedControlsFilter !== ALL) {\n      output = output.filter(st => {\n        return controlLinkList.some(al => al.linkedId === st.id) ?\n          selectedLinkedControlsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedControlsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    output = output.sort((op1, op2) => (op2.displayOrder || Number.MAX_VALUE) - (op1.displayOrder || Number.MAX_VALUE));\n\n    return output;\n  }, [filteringText, mitigationList, selectedTags,\n    assumptionLinkList, controlLinkList, mitigationLinkList,\n    selectedLinkedAssumptionsFilter, selectedLinkedControlsFilter, selectedLinkedThreatsFilter]);\n\n  const handleSaveNew = useCallback((mitigation: Mitigation,\n    linkedControlIds: string[],\n    linkedAssumptionIds: string[],\n    linkedThreatIds: string[]) => {\n    const updated = saveMitigation(mitigation);\n\n    const mitigationLinks: MitigationLink[] = [];\n    linkedThreatIds.forEach(id => {\n      mitigationLinks.push({\n        linkedId: id,\n        mitigationId: updated.id,\n      });\n    });\n\n    addMitigationLinks(mitigationLinks);\n\n    const assumptionLinks: AssumptionLink[] = [];\n    linkedAssumptionIds.forEach(id => {\n      assumptionLinks.push({\n        linkedId: updated.id,\n        assumptionId: id,\n        type: 'Mitigation',\n      });\n    });\n\n    addAssumptionLinks(assumptionLinks);\n\n    const controlLinks: ControlLink[] = [];\n    linkedControlIds.forEach(id => {\n      controlLinks.push({\n        linkedId: updated.id,\n        controlId: id,\n      });\n    });\n\n    addControlLinks(controlLinks);\n\n  }, [saveMitigation, addMitigationLinks, addAssumptionLinks, addControlLinks]);\n\n  return (<div>\n    <SpaceBetween direction='vertical' size='s'>\n      <Container header={\n        <Header\n          counter={`(${filteredList.length})`}\n        >Mitigation List</Header>\n      }>\n        <SpaceBetween direction='vertical' size='s'>\n          <TextFilter\n            filteringText={filteringText}\n            filteringPlaceholder=\"Find mitigations\"\n            filteringAriaLabel=\"Filter mitigations\"\n            onChange={({ detail }) =>\n              setFilteringText(detail.filteringText)\n            }\n          />\n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xs: 2 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 1 } },\n            ]}\n          >\n            <TagSelector\n              allTags={allTags}\n              selectedTags={selectedTags}\n              setSelectedTags={setSelectedTags}\n            />\n            <LinkedEntityFilter\n              label='Linked threats'\n              entityDisplayName='threats'\n              callerName='mitigations'\n              selected={selectedLinkedThreatsFilter}\n              setSelected={setSelectedLinkedThreatsFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked controls'\n              entityDisplayName='controls'\n              callerName='mitigations'\n              selected={selectedLinkedControlsFilter}\n              setSelected={setSelectedLinkedControlsFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked assumptions'\n              entityDisplayName='assumptions'\n              callerName='mitigations'\n              selected={selectedLinkedAssumptionsFilter}\n              setSelected={setSelectedLinkedAssumptionsFilter}\n            />\n            <Button onClick={handleClearFilter}\n              variant='icon'\n              iconSvg={<svg\n                focusable=\"false\"\n                aria-hidden=\"true\"\n                viewBox=\"0 0 24 24\"\n                tabIndex={-1}\n              >\n                <path d=\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"></path>\n              </svg>}\n              ariaLabel='Clear filters'\n              disabled={hasNoFilter}\n            />\n          </Grid>\n        </SpaceBetween>\n      </Container>\n      {filteredList?.map(entity => (<MitigationCard\n        key={entity.id}\n        entity={entity}\n        onRemove={handleRemove}\n        onEdit={saveMitigation}\n        onAddTagToEntity={handleAddTagToEntity}\n        onRemoveTagFromEntity={handleRemoveTagFromEntity}\n      />))}\n      <MitigationCreationCard\n        onSave={handleSaveNew}\n      />\n    </SpaceBetween>\n  </div>);\n};\n\nexport default MitigationList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}