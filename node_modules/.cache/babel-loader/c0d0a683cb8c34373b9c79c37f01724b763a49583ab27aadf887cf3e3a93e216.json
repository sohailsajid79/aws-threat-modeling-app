{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** *//** @jsxImportSource @emotion/react */import Grid from'@cloudscape-design/components/grid';import SpaceBetween from'@cloudscape-design/components/space-between';import TextContent from'@cloudscape-design/components/text-content';import*as awsui from'@cloudscape-design/design-tokens';import{css}from'@emotion/react';import React,{useCallback,useMemo,useState,useRef,useEffect}from'react';import{v4 as uuidV4}from'uuid';import{DEFAULT_WORKSPACE_LABEL}from'../../../configs/constants';import{useAssumptionLinksContext}from'../../../contexts/AssumptionLinksContext/context';import{useAssumptionsContext}from'../../../contexts/AssumptionsContext/context';import{useGlobalSetupContext}from'../../../contexts/GlobalSetupContext/context';import{useMitigationLinksContext}from'../../../contexts/MitigationLinksContext/context';import{useMitigationsContext}from'../../../contexts/MitigationsContext/context';import{useControlLinksContext}from'../../../contexts/ControlLinksContext/context';import{useThreatsContext}from'../../../contexts/ThreatsContext/context';import{useWorkspacesContext}from'../../../contexts/WorkspacesContext/context';import threatFieldData from'../../../data/threatFieldData';import threatStatementExamples from'../../../data/threatStatementExamples.json';import threatStatementFormat from'../../../data/threatStatementFormat';import useEditMetadata from'../../../hooks/useEditMetadata';import getRecommendedEditor from'../../../utils/getRecommandedEditor';import renderThreatStatement from'../../../utils/renderThreatStatement';import scrollToTop from'../../../utils/scrollToTop';import AssumptionLinkComponent from'../../assumptions/AssumptionLinkView';import Tooltip from'../../generic/Tooltip';import MitigationLinkComponent from'../../mitigations/MitigationLinkView';import CustomTemplate from'../CustomTemplate';import EditorImpactedAssets from'../EditorImpactedAssets';import EditorImpactedGoal from'../EditorImpactedGoal';import EditorPrerequisites from'../EditorPrerequisites';import EditorThreatAction from'../EditorThreatAction';import EditorThreatImpact from'../EditorThreatImpact';import EditorThreatSource from'../EditorThreatSource';import FieldSelector from'../FieldSelector';import FinalStatement from'../FinalStatement';import FullExamples from'../FullExamples';import Header from'../Header';import MetadataEditor from'../MetadataEditor';import Metrics from'../Metrics';import ControlLookupComponent from'../../controls/ControlLookup';import{getControlProfileByName}from'../../../data/controlProfileProvider';import{useApplicationInfoContext}from'../../../contexts';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";const styles={finalStatementSection:css({'&:hover':{backgroundColor:awsui.colorBackgroundDropdownItemHover}}),metadataContainer:css({'h3>span>span':{fontSize:'20px'}})};const defaultThreatStatementFormat=threatStatementFormat[63];const editorMapping={threat_source:EditorThreatSource,prerequisites:EditorPrerequisites,threat_action:EditorThreatAction,threat_impact:EditorThreatImpact,impacted_goal:EditorImpactedGoal,impacted_assets:EditorImpactedAssets};const ThreatStatementEditorInner=_ref=>{let{editingStatement}=_ref;const{applicationInfo}=useApplicationInfoContext();const{setEditingStatement,saveStatement,addStatement,onThreatListView}=useThreatsContext();const inputRef=useRef();const fullExamplesRef=useRef();const{currentWorkspace,workspaceList}=useWorkspacesContext();const[editor,setEditor]=useState(getRecommendedEditor(editingStatement));const[suggestions,setSuggestions]=useState([]);const[displayStatement,setDisplayStatement]=useState([]);const[customTemplateEditorVisible,setCustomTemplateEditorVisible]=useState(false);const{addAssumptionLinks,getLinkedAssumptionLinks,removeAssumptionLinks}=useAssumptionLinksContext();const{addMitigationLinks,getLinkedMitigationLinks,removeMitigationLinks}=useMitigationLinksContext();const{addControlLinks,getLinkedControlLinks,removeControlLinks}=useControlLinksContext();const prevLinkedAssumptionIds=useMemo(()=>{return getLinkedAssumptionLinks(editingStatement.id).map(la=>la.assumptionId);},[getLinkedAssumptionLinks,editingStatement]);const prevLinkedMitigationIds=useMemo(()=>{return getLinkedMitigationLinks(editingStatement.id).map(lm=>lm.mitigationId);},[getLinkedMitigationLinks,editingStatement]);const prevLinkedControlIds=useMemo(()=>{return getLinkedControlLinks(editingStatement.id).map(lm=>lm.controlId);},[getLinkedControlLinks,editingStatement]);const[linkedAssumptionIds,setLinkedAssumptionIds]=useState(editingStatement&&(editingStatement===null||editingStatement===void 0?void 0:editingStatement.numericId)===-1?[]:prevLinkedAssumptionIds);const[linkedMitigationIds,setLinkedMitigationIds]=useState(editingStatement&&(editingStatement===null||editingStatement===void 0?void 0:editingStatement.numericId)===-1?[]:prevLinkedMitigationIds);const[linkedControlIds,setLinkedControlIds]=useState(editingStatement&&(editingStatement===null||editingStatement===void 0?void 0:editingStatement.numericId)===-1?[]:prevLinkedControlIds);const{composerMode}=useGlobalSetupContext();const{assumptionList,saveAssumption}=useAssumptionsContext();const{mitigationList,saveMitigation}=useMitigationsContext();let selectedCategory=applicationInfo.securityCategory==undefined?'CCCS Medium':applicationInfo.securityCategory;const controlList=useMemo(()=>{return getControlProfileByName(selectedCategory);},[selectedCategory]);const Component=useMemo(()=>{return editor&&editorMapping[editor];},[editor]);const handleCancel=useCallback(()=>{setEditingStatement(null);onThreatListView===null||onThreatListView===void 0?void 0:onThreatListView();},[setEditingStatement,onThreatListView]);useEffect(()=>{var _inputRef$current;(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();},[editor]);useEffect(()=>{if(editingStatement){const{statement,suggestions:currentSuggestions,displayedStatement}=renderThreatStatement(editingStatement);if(statement!==editingStatement.statement){setEditingStatement(prev=>prev&&{...prev,statement,displayedStatement});}const displayedHtml=displayedStatement===null||displayedStatement===void 0?void 0:displayedStatement.map((s,index)=>typeof s==='string'?s:s.type==='b'?_jsx(Tooltip,{tooltip:s.tooltip,anchor:composerMode==='EditorOnly'?'bottom':'top',children:_jsx(\"b\",{css:styles.finalStatementSection,children:s.content})},index):s.type==='span'?_jsx(Tooltip,{tooltip:s.tooltip,anchor:composerMode==='EditorOnly'?'bottom':'top',children:_jsx(\"span\",{css:styles.finalStatementSection,children:s.content})},index):_jsx(_Fragment,{children:s.content}));setDisplayStatement(displayedHtml);setSuggestions(currentSuggestions);}else{setSuggestions([]);setDisplayStatement([]);}},[editingStatement,composerMode,setEditingStatement]);const handleStartOver=useCallback(()=>{var _fullExamplesRef$curr;addStatement();setEditor(undefined);(_fullExamplesRef$curr=fullExamplesRef.current)===null||_fullExamplesRef$curr===void 0?void 0:_fullExamplesRef$curr.collapse();},[addStatement]);const handleComplete=useCallback(()=>{if(editingStatement){saveStatement(editingStatement);const id=editingStatement.id;if(editingStatement.numericId===-1){linkedAssumptionIds&&linkedAssumptionIds.length>0&&addAssumptionLinks(linkedAssumptionIds.map(la=>({assumptionId:la,linkedId:id,type:'Threat'})));linkedMitigationIds&&linkedMitigationIds.length>0&&addMitigationLinks(linkedMitigationIds.map(lm=>({mitigationId:lm,linkedId:id})));linkedControlIds&&linkedControlIds.length>0&&addControlLinks(linkedControlIds.map(lm=>({controlId:lm,linkedId:id})));}else{const toAddlinkedAssumptionIds=linkedAssumptionIds.filter(x=>!prevLinkedAssumptionIds.includes(x));const toRemovelinkedAssumptionIds=prevLinkedAssumptionIds.filter(x=>!linkedAssumptionIds.includes(x));toAddlinkedAssumptionIds&&toAddlinkedAssumptionIds.length>0&&addAssumptionLinks(toAddlinkedAssumptionIds.map(la=>({assumptionId:la,linkedId:id,type:'Threat'})));toRemovelinkedAssumptionIds&&toRemovelinkedAssumptionIds.length>0&&removeAssumptionLinks(toRemovelinkedAssumptionIds.map(la=>({assumptionId:la,linkedId:id,type:'Threat'})));const toAddlinkedMitigationIds=linkedMitigationIds.filter(x=>!prevLinkedMitigationIds.includes(x));const toRemovelinkedMitigationIds=prevLinkedMitigationIds.filter(x=>!linkedMitigationIds.includes(x));toAddlinkedMitigationIds&&toAddlinkedMitigationIds.length>0&&addMitigationLinks(toAddlinkedMitigationIds.map(lm=>({mitigationId:lm,linkedId:id})));toRemovelinkedMitigationIds&&toRemovelinkedMitigationIds.length>0&&removeMitigationLinks(toRemovelinkedMitigationIds.map(lm=>({mitigationId:lm,linkedId:id})));const toAddlinkedControlIds=linkedControlIds.filter(x=>!prevLinkedControlIds.includes(x));const toRemovelinkedControlIds=prevLinkedControlIds.filter(x=>!linkedControlIds.includes(x));toAddlinkedControlIds&&toAddlinkedControlIds.length>0&&addControlLinks(toAddlinkedControlIds.map(lm=>({controlId:lm,linkedId:id})));toRemovelinkedControlIds&&toRemovelinkedControlIds.length>0&&removeControlLinks(toRemovelinkedControlIds.map(lm=>({controlId:lm,linkedId:id})));}}setEditingStatement(null);onThreatListView===null||onThreatListView===void 0?void 0:onThreatListView();},[saveStatement,editingStatement,linkedAssumptionIds,linkedMitigationIds,linkedControlIds,prevLinkedAssumptionIds,prevLinkedMitigationIds,prevLinkedControlIds,onThreatListView,addAssumptionLinks,addMitigationLinks,addControlLinks,removeAssumptionLinks,removeMitigationLinks,removeControlLinks,setEditingStatement]);const handleExampleClicked=useCallback(statement=>{var _fullExamplesRef$curr2;setEditingStatement({...statement,tags:[],metadata:[],displayOrder:-1,numericId:-1,id:uuidV4()});const recommendedEditor=getRecommendedEditor(statement);recommendedEditor&&setEditor(recommendedEditor);(_fullExamplesRef$curr2=fullExamplesRef.current)===null||_fullExamplesRef$curr2===void 0?void 0:_fullExamplesRef$curr2.collapse();},[setEditingStatement]);const handleGiveExampleClicked=useCallback(()=>{const len=threatStatementExamples.length;const randomNumber=Math.floor(Math.random()*len);const example=threatStatementExamples[randomNumber];const statement={...example,tags:[],metadata:[],displayOrder:-1,numericId:-1,id:uuidV4()};setEditingStatement(statement);const recommendedEditor=getRecommendedEditor(statement);recommendedEditor&&setEditor(recommendedEditor);scrollToTop();},[setEditingStatement]);const saveButtonText=useMemo(()=>{if(!currentWorkspace&&workspaceList.length===0){// For most of use cases, if there is only the default workspace, use list to reduce cognitive load.\nreturn(editingStatement===null||editingStatement===void 0?void 0:editingStatement.numericId)===-1?'Add to list':'Save';}const workspace=(currentWorkspace===null||currentWorkspace===void 0?void 0:currentWorkspace.name)||DEFAULT_WORKSPACE_LABEL;return(editingStatement===null||editingStatement===void 0?void 0:editingStatement.numericId)===-1?`Add to workspace ${workspace}`:`Save to workspace ${workspace}`;},[currentWorkspace,workspaceList,editingStatement]);const handleCustomTemplateConfirm=useCallback(template=>{setCustomTemplateEditorVisible(false);if(template!==defaultThreatStatementFormat.template){setEditingStatement({...editingStatement,customTemplate:template});}else{setEditingStatement({...editingStatement,customTemplate:undefined});}},[editingStatement,setEditingStatement]);const handleAddAssumptionLink=useCallback(assumptionIdOrNewAssumption=>{if(assumptionList.find(a=>a.id===assumptionIdOrNewAssumption)){setLinkedAssumptionIds(prev=>[...prev,assumptionIdOrNewAssumption]);}else{const newAssumption=saveAssumption({id:'new',numericId:-1,content:assumptionIdOrNewAssumption});setLinkedAssumptionIds(prev=>[...prev,newAssumption.id]);}},[setLinkedAssumptionIds,assumptionList,saveAssumption]);const handleAddMitigationLink=useCallback(mitigationIdOrNewMitigation=>{if(mitigationList.find(a=>a.id===mitigationIdOrNewMitigation)){setLinkedMitigationIds(prev=>[...prev,mitigationIdOrNewMitigation]);}else{const newMitigation=saveMitigation({id:'new',numericId:-1,content:mitigationIdOrNewMitigation});setLinkedMitigationIds(prev=>[...prev,newMitigation.id]);}},[setLinkedMitigationIds,mitigationList,saveMitigation]);const handleAddControlLink=useCallback(controlIdOrNewControl=>{if(controlList.find(a=>a.id===controlIdOrNewControl)){setLinkedControlIds(prev=>[...prev,controlIdOrNewControl]);}},[setLinkedControlIds,controlList]);const handleEditMetadata=useEditMetadata(setEditingStatement);if(!editingStatement){return _jsx(TextContent,{children:\"Not threat statement editing in place\"});}return _jsxs(_Fragment,{children:[_jsxs(SpaceBetween,{direction:\"vertical\",size:\"l\",children:[composerMode!=='EditorOnly'&&_jsx(Header,{composerMode:composerMode,statement:editingStatement,saveButtonText:saveButtonText,onCancel:handleCancel,onStartOver:handleStartOver,onComplete:handleComplete}),_jsx(FinalStatement,{statement:editingStatement,displayStatement:displayStatement}),_jsx(FieldSelector,{composerMode:composerMode,onStartOver:handleStartOver,setEditor:setEditor,statement:editingStatement,currentEditor:editor,suggestions:suggestions,onGiveExampleClick:handleGiveExampleClicked,setCustomTemplateEditorVisible:setCustomTemplateEditorVisible}),Component&&editor&&_jsxs(SpaceBetween,{direction:\"vertical\",size:\"l\",children:[_jsxs(Grid,{gridDefinition:[{colspan:{default:12,xs:9}},{colspan:{default:12,xs:3}}],children:[_jsx(\"div\",{children:_jsx(Component,{ref:inputRef,statement:editingStatement,setStatement:setEditingStatement,fieldData:threatFieldData[editor]})}),_jsx(Metrics,{statement:editingStatement,onClick:token=>setEditor(token)})]}),composerMode==='Full'&&_jsx(\"div\",{css:styles.metadataContainer,children:_jsx(ControlLookupComponent,{variant:\"container\",linkedControlIds:linkedControlIds,controlList:controlList,onAddControlLink:handleAddControlLink,onRemoveControlLink:id=>setLinkedControlIds(prev=>prev.filter(p=>p!==id))})}),composerMode==='Full'&&_jsx(\"div\",{css:styles.metadataContainer,children:_jsx(MitigationLinkComponent,{variant:\"container\",linkedMitigationIds:linkedMitigationIds,mitigationList:mitigationList,onAddMitigationLink:handleAddMitigationLink,onRemoveMitigationLink:id=>setLinkedMitigationIds(prev=>prev.filter(p=>p!==id))})}),composerMode==='Full'&&_jsx(\"div\",{css:styles.metadataContainer,children:_jsx(AssumptionLinkComponent,{variant:\"container\",linkedAssumptionIds:linkedAssumptionIds,assumptionList:assumptionList,onAddAssumptionLink:handleAddAssumptionLink,onRemoveAssumptionLink:id=>setLinkedAssumptionIds(prev=>prev.filter(p=>p!==id))})}),composerMode==='Full'&&_jsx(\"div\",{css:styles.metadataContainer,children:_jsx(MetadataEditor,{variant:\"container\",editingStatement:editingStatement,onEditMetadata:handleEditMetadata})})]}),_jsx(FullExamples,{ref:fullExamplesRef,onClick:handleExampleClicked})]}),customTemplateEditorVisible&&_jsx(CustomTemplate,{statement:editingStatement,visible:customTemplateEditorVisible,setVisible:setCustomTemplateEditorVisible,onConfirm:handleCustomTemplateConfirm,defaultTemplate:defaultThreatStatementFormat.template})]});};const ThreatStatementEditor=()=>{const{editingStatement}=useThreatsContext();return editingStatement?_jsx(ThreatStatementEditorInner,{editingStatement:editingStatement}):null;};export default ThreatStatementEditor;","map":{"version":3,"names":["Grid","SpaceBetween","TextContent","awsui","css","React","useCallback","useMemo","useState","useRef","useEffect","v4","uuidV4","DEFAULT_WORKSPACE_LABEL","useAssumptionLinksContext","useAssumptionsContext","useGlobalSetupContext","useMitigationLinksContext","useMitigationsContext","useControlLinksContext","useThreatsContext","useWorkspacesContext","threatFieldData","threatStatementExamples","threatStatementFormat","useEditMetadata","getRecommendedEditor","renderThreatStatement","scrollToTop","AssumptionLinkComponent","Tooltip","MitigationLinkComponent","CustomTemplate","EditorImpactedAssets","EditorImpactedGoal","EditorPrerequisites","EditorThreatAction","EditorThreatImpact","EditorThreatSource","FieldSelector","FinalStatement","FullExamples","Header","MetadataEditor","Metrics","ControlLookupComponent","getControlProfileByName","useApplicationInfoContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","styles","finalStatementSection","backgroundColor","colorBackgroundDropdownItemHover","metadataContainer","fontSize","defaultThreatStatementFormat","editorMapping","threat_source","prerequisites","threat_action","threat_impact","impacted_goal","impacted_assets","ThreatStatementEditorInner","_ref","editingStatement","applicationInfo","setEditingStatement","saveStatement","addStatement","onThreatListView","inputRef","fullExamplesRef","currentWorkspace","workspaceList","editor","setEditor","suggestions","setSuggestions","displayStatement","setDisplayStatement","customTemplateEditorVisible","setCustomTemplateEditorVisible","addAssumptionLinks","getLinkedAssumptionLinks","removeAssumptionLinks","addMitigationLinks","getLinkedMitigationLinks","removeMitigationLinks","addControlLinks","getLinkedControlLinks","removeControlLinks","prevLinkedAssumptionIds","id","map","la","assumptionId","prevLinkedMitigationIds","lm","mitigationId","prevLinkedControlIds","controlId","linkedAssumptionIds","setLinkedAssumptionIds","numericId","linkedMitigationIds","setLinkedMitigationIds","linkedControlIds","setLinkedControlIds","composerMode","assumptionList","saveAssumption","mitigationList","saveMitigation","selectedCategory","securityCategory","undefined","controlList","Component","handleCancel","_inputRef$current","current","focus","statement","currentSuggestions","displayedStatement","prev","displayedHtml","s","index","type","tooltip","anchor","children","content","handleStartOver","_fullExamplesRef$curr","collapse","handleComplete","length","linkedId","toAddlinkedAssumptionIds","filter","x","includes","toRemovelinkedAssumptionIds","toAddlinkedMitigationIds","toRemovelinkedMitigationIds","toAddlinkedControlIds","toRemovelinkedControlIds","handleExampleClicked","_fullExamplesRef$curr2","tags","metadata","displayOrder","recommendedEditor","handleGiveExampleClicked","len","randomNumber","Math","floor","random","example","saveButtonText","workspace","name","handleCustomTemplateConfirm","template","customTemplate","handleAddAssumptionLink","assumptionIdOrNewAssumption","find","a","newAssumption","handleAddMitigationLink","mitigationIdOrNewMitigation","newMitigation","handleAddControlLink","controlIdOrNewControl","handleEditMetadata","direction","size","onCancel","onStartOver","onComplete","currentEditor","onGiveExampleClick","gridDefinition","colspan","default","xs","ref","setStatement","fieldData","onClick","token","variant","onAddControlLink","onRemoveControlLink","p","onAddMitigationLink","onRemoveMitigationLink","onAddAssumptionLink","onRemoveAssumptionLink","onEditMetadata","visible","setVisible","onConfirm","defaultTemplate","ThreatStatementEditor"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/threats/ThreatStatementEditor/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\n/** @jsxImportSource @emotion/react */\nimport Grid from '@cloudscape-design/components/grid';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextContent from '@cloudscape-design/components/text-content';\nimport * as awsui from '@cloudscape-design/design-tokens';\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo, useState, useRef, useEffect, ReactNode } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\nimport { EditorProps } from './types';\nimport { DEFAULT_WORKSPACE_LABEL } from '../../../configs/constants';\nimport { useAssumptionLinksContext } from '../../../contexts/AssumptionLinksContext/context';\nimport { useAssumptionsContext } from '../../../contexts/AssumptionsContext/context';\nimport { useGlobalSetupContext } from '../../../contexts/GlobalSetupContext/context';\nimport { useMitigationLinksContext } from '../../../contexts/MitigationLinksContext/context';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport { useControlLinksContext } from '../../../contexts/ControlLinksContext/context';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport { useWorkspacesContext } from '../../../contexts/WorkspacesContext/context';\nimport { TemplateThreatStatement, Control } from '../../../customTypes';\nimport { ThreatFieldTypes } from '../../../customTypes/threatFieldTypes';\nimport threatFieldData from '../../../data/threatFieldData';\nimport threatStatementExamples from '../../../data/threatStatementExamples.json';\nimport threatStatementFormat from '../../../data/threatStatementFormat';\nimport useEditMetadata from '../../../hooks/useEditMetadata';\nimport getRecommendedEditor from '../../../utils/getRecommandedEditor';\nimport renderThreatStatement from '../../../utils/renderThreatStatement';\nimport scrollToTop from '../../../utils/scrollToTop';\nimport AssumptionLinkComponent from '../../assumptions/AssumptionLinkView';\nimport Tooltip from '../../generic/Tooltip';\nimport MitigationLinkComponent from '../../mitigations/MitigationLinkView';\nimport CustomTemplate from '../CustomTemplate';\nimport EditorImpactedAssets from '../EditorImpactedAssets';\nimport EditorImpactedGoal from '../EditorImpactedGoal';\nimport EditorPrerequisites from '../EditorPrerequisites';\nimport EditorThreatAction from '../EditorThreatAction';\nimport EditorThreatImpact from '../EditorThreatImpact';\nimport EditorThreatSource from '../EditorThreatSource';\nimport FieldSelector from '../FieldSelector';\nimport FinalStatement from '../FinalStatement';\nimport FullExamples from '../FullExamples';\nimport Header from '../Header';\nimport MetadataEditor from '../MetadataEditor';\nimport Metrics from '../Metrics';\nimport ControlLookupComponent from '../../controls/ControlLookup';\nimport { getControlProfileByName } from '../../../data/controlProfileProvider';\nimport { useApplicationInfoContext } from '../../../contexts';\n\nconst styles = {\n  finalStatementSection: css({\n    '&:hover': {\n      backgroundColor: awsui.colorBackgroundDropdownItemHover,\n    },\n  }),\n  metadataContainer: css({\n    'h3>span>span': {\n      fontSize: '20px',\n    },\n  }),\n};\n\nconst defaultThreatStatementFormat = threatStatementFormat[63];\n\nconst editorMapping: { [key in ThreatFieldTypes]: React.ComponentType<EditorProps & { ref?: React.ForwardedRef<any> }> } = {\n  threat_source: EditorThreatSource,\n  prerequisites: EditorPrerequisites,\n  threat_action: EditorThreatAction,\n  threat_impact: EditorThreatImpact,\n  impacted_goal: EditorImpactedGoal,\n  impacted_assets: EditorImpactedAssets,\n};\n\nconst ThreatStatementEditorInner: FC<{ editingStatement: TemplateThreatStatement }> = ({\n  editingStatement,\n}) => {\n  const { applicationInfo } = useApplicationInfoContext();\n  const { setEditingStatement, saveStatement, addStatement, onThreatListView } = useThreatsContext();\n  const inputRef = useRef<{ focus(): void }>();\n  const fullExamplesRef = useRef<{ collapse(): void }>();\n  const { currentWorkspace, workspaceList } = useWorkspacesContext();\n  const [editor, setEditor] = useState<ThreatFieldTypes | undefined>(getRecommendedEditor(editingStatement));\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [displayStatement, setDisplayStatement] = useState<ReactNode[] | undefined>([]);\n  const [customTemplateEditorVisible, setCustomTemplateEditorVisible] = useState(false);\n\n  const { addAssumptionLinks, getLinkedAssumptionLinks, removeAssumptionLinks } = useAssumptionLinksContext();\n  const { addMitigationLinks, getLinkedMitigationLinks, removeMitigationLinks } = useMitigationLinksContext();\n  const { addControlLinks, getLinkedControlLinks, removeControlLinks } = useControlLinksContext();\n\n  const prevLinkedAssumptionIds = useMemo(() => {\n    return getLinkedAssumptionLinks(editingStatement.id).map(la => la.assumptionId);\n  }, [getLinkedAssumptionLinks, editingStatement]);\n\n  const prevLinkedMitigationIds = useMemo(() => {\n    return getLinkedMitigationLinks(editingStatement.id).map(lm => lm.mitigationId);\n  }, [getLinkedMitigationLinks, editingStatement]);\n\n  const prevLinkedControlIds = useMemo(() => {\n    return getLinkedControlLinks(editingStatement.id).map(lm => lm.controlId);\n  }, [getLinkedControlLinks, editingStatement]);\n\n  const [linkedAssumptionIds, setLinkedAssumptionIds] = useState<string[]>(editingStatement\n    && editingStatement?.numericId === -1 ? [] : prevLinkedAssumptionIds);\n  const [linkedMitigationIds, setLinkedMitigationIds] = useState<string[]>(editingStatement\n    && editingStatement?.numericId === -1 ? [] : prevLinkedMitigationIds);\n  const [linkedControlIds, setLinkedControlIds] = useState<string[]>(editingStatement\n      && editingStatement?.numericId === -1 ? [] : prevLinkedControlIds);\n\n  const { composerMode } = useGlobalSetupContext();\n\n  const { assumptionList, saveAssumption } = useAssumptionsContext();\n  const { mitigationList, saveMitigation } = useMitigationsContext();\n\n  let selectedCategory = (applicationInfo.securityCategory == undefined ? 'CCCS Medium' : applicationInfo.securityCategory);\n  const controlList = useMemo(() => {\n    return getControlProfileByName(selectedCategory) as Control[];\n  }, [selectedCategory]);\n\n  const Component = useMemo(() => {\n    return editor && editorMapping[editor];\n  }, [editor]);\n\n  const handleCancel = useCallback(() => {\n    setEditingStatement(null);\n    onThreatListView?.();\n  }, [setEditingStatement, onThreatListView]);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, [editor]);\n\n  useEffect(() => {\n    if (editingStatement) {\n      const { statement, suggestions: currentSuggestions, displayedStatement } = renderThreatStatement(editingStatement);\n      if (statement !== editingStatement.statement) {\n        setEditingStatement(prev => prev && ({\n          ...prev,\n          statement,\n          displayedStatement,\n        }));\n      }\n      const displayedHtml = displayedStatement?.map((s, index) => typeof s === 'string' ?\n        s : s.type === 'b' ?\n          <Tooltip tooltip={s.tooltip} key={index} anchor={composerMode === 'EditorOnly' ? 'bottom' : 'top'}><b css={styles.finalStatementSection}>{s.content}</b></Tooltip> :\n          s.type === 'span' ?\n            <Tooltip tooltip={s.tooltip} key={index} anchor={composerMode === 'EditorOnly' ? 'bottom' : 'top'}><span css={styles.finalStatementSection}>{s.content}</span></Tooltip> :\n            <>{s.content}</>);\n\n      setDisplayStatement(displayedHtml);\n      setSuggestions(currentSuggestions);\n    } else {\n      setSuggestions([]);\n      setDisplayStatement([]);\n    }\n  }, [editingStatement, composerMode, setEditingStatement]);\n\n  const handleStartOver = useCallback(() => {\n    addStatement();\n    setEditor(undefined);\n    fullExamplesRef.current?.collapse();\n  }, [addStatement]);\n\n  const handleComplete = useCallback(() => {\n    if (editingStatement) {\n      saveStatement(editingStatement);\n      const id = editingStatement.id;\n      if (editingStatement.numericId === -1) {\n        linkedAssumptionIds && linkedAssumptionIds.length > 0 && addAssumptionLinks(linkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat',\n        })));\n        linkedMitigationIds && linkedMitigationIds.length > 0 && addMitigationLinks(linkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id,\n        })));\n        linkedControlIds && linkedControlIds.length > 0 && addControlLinks(linkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id,\n        })));\n      } else {\n        const toAddlinkedAssumptionIds = linkedAssumptionIds.filter(x =>\n          !prevLinkedAssumptionIds.includes(x));\n        const toRemovelinkedAssumptionIds = prevLinkedAssumptionIds.filter(x =>\n          !linkedAssumptionIds.includes(x));\n        toAddlinkedAssumptionIds && toAddlinkedAssumptionIds.length > 0 && addAssumptionLinks(toAddlinkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat',\n        })));\n        toRemovelinkedAssumptionIds && toRemovelinkedAssumptionIds.length > 0 && removeAssumptionLinks(toRemovelinkedAssumptionIds.map(la => ({\n          assumptionId: la,\n          linkedId: id,\n          type: 'Threat',\n        })));\n        const toAddlinkedMitigationIds = linkedMitigationIds.filter(x =>\n          !prevLinkedMitigationIds.includes(x));\n        const toRemovelinkedMitigationIds = prevLinkedMitigationIds.filter(x =>\n          !linkedMitigationIds.includes(x));\n        toAddlinkedMitigationIds && toAddlinkedMitigationIds.length > 0 && addMitigationLinks(toAddlinkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id,\n        })));\n        toRemovelinkedMitigationIds && toRemovelinkedMitigationIds.length > 0 && removeMitigationLinks(toRemovelinkedMitigationIds.map(lm => ({\n          mitigationId: lm,\n          linkedId: id,\n        })));\n        const toAddlinkedControlIds = linkedControlIds.filter(x =>\n          !prevLinkedControlIds.includes(x));\n        const toRemovelinkedControlIds = prevLinkedControlIds.filter(x =>\n          !linkedControlIds.includes(x));\n        toAddlinkedControlIds && toAddlinkedControlIds.length > 0 && addControlLinks(toAddlinkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id,\n        })));\n        toRemovelinkedControlIds && toRemovelinkedControlIds.length > 0 && removeControlLinks(toRemovelinkedControlIds.map(lm => ({\n          controlId: lm,\n          linkedId: id,\n        })));\n      }\n    }\n\n    setEditingStatement(null);\n    onThreatListView?.();\n  }, [saveStatement,\n    editingStatement,\n    linkedAssumptionIds,\n    linkedMitigationIds,\n    linkedControlIds,\n    prevLinkedAssumptionIds,\n    prevLinkedMitigationIds,\n    prevLinkedControlIds,\n    onThreatListView,\n    addAssumptionLinks,\n    addMitigationLinks,\n    addControlLinks,\n    removeAssumptionLinks,\n    removeMitigationLinks,\n    removeControlLinks,\n    setEditingStatement]);\n\n  const handleExampleClicked = useCallback((statement: TemplateThreatStatement) => {\n    setEditingStatement({\n      ...statement,\n      tags: [],\n      metadata: [],\n      displayOrder: -1,\n      numericId: -1,\n      id: uuidV4(),\n    });\n    const recommendedEditor = getRecommendedEditor(statement);\n    recommendedEditor && setEditor(recommendedEditor);\n    fullExamplesRef.current?.collapse();\n  }, [setEditingStatement]);\n\n  const handleGiveExampleClicked = useCallback(() => {\n    const len = threatStatementExamples.length;\n    const randomNumber = Math.floor(Math.random() * len);\n    const example = threatStatementExamples[randomNumber] as TemplateThreatStatement;\n    const statement = {\n      ...example,\n      tags: [],\n      metadata: [],\n      displayOrder: -1,\n      numericId: -1,\n      id: uuidV4(),\n    };\n\n    setEditingStatement(statement);\n    const recommendedEditor = getRecommendedEditor(statement);\n    recommendedEditor && setEditor(recommendedEditor);\n    scrollToTop();\n  }, [setEditingStatement]);\n\n  const saveButtonText = useMemo(() => {\n    if (!currentWorkspace && workspaceList.length === 0) {\n      // For most of use cases, if there is only the default workspace, use list to reduce cognitive load.\n      return editingStatement?.numericId === -1 ? 'Add to list' : 'Save';\n    }\n\n    const workspace = currentWorkspace?.name || DEFAULT_WORKSPACE_LABEL;\n    return editingStatement?.numericId === -1 ? `Add to workspace ${workspace}` : `Save to workspace ${workspace}`;\n\n  }, [currentWorkspace, workspaceList, editingStatement]);\n\n  const handleCustomTemplateConfirm = useCallback((template: string) => {\n    setCustomTemplateEditorVisible(false);\n    if (template !== defaultThreatStatementFormat.template) {\n      setEditingStatement({\n        ...editingStatement,\n        customTemplate: template,\n      } as TemplateThreatStatement);\n    } else {\n      setEditingStatement({\n        ...editingStatement,\n        customTemplate: undefined,\n      } as TemplateThreatStatement);\n    }\n  }, [editingStatement, setEditingStatement]);\n\n  const handleAddAssumptionLink = useCallback((assumptionIdOrNewAssumption: string) => {\n    if (assumptionList.find(a => a.id === assumptionIdOrNewAssumption)) {\n      setLinkedAssumptionIds(prev => [...prev, assumptionIdOrNewAssumption]);\n    } else {\n      const newAssumption = saveAssumption({\n        id: 'new',\n        numericId: -1,\n        content: assumptionIdOrNewAssumption,\n      });\n      setLinkedAssumptionIds(prev => [...prev, newAssumption.id]);\n    }\n\n  }, [setLinkedAssumptionIds, assumptionList, saveAssumption]);\n\n  const handleAddMitigationLink = useCallback((mitigationIdOrNewMitigation: string) => {\n    if (mitigationList.find(a => a.id === mitigationIdOrNewMitigation)) {\n      setLinkedMitigationIds(prev => [...prev, mitigationIdOrNewMitigation]);\n    } else {\n      const newMitigation = saveMitigation({\n        id: 'new',\n        numericId: -1,\n        content: mitigationIdOrNewMitigation,\n      });\n      setLinkedMitigationIds(prev => [...prev, newMitigation.id]);\n    }\n\n  }, [setLinkedMitigationIds, mitigationList, saveMitigation]);\n\n  const handleAddControlLink = useCallback((controlIdOrNewControl: string) => {\n    if (controlList.find(a => a.id === controlIdOrNewControl)) {\n      setLinkedControlIds(prev => [...prev, controlIdOrNewControl]);\n    }\n\n  }, [setLinkedControlIds, controlList]);\n\n  const handleEditMetadata = useEditMetadata(setEditingStatement);\n\n  if (!editingStatement) {\n    return <TextContent>Not threat statement editing in place</TextContent>;\n  }\n\n  return (\n    <>\n      <SpaceBetween direction='vertical' size='l'>\n        {composerMode !== 'EditorOnly' && <Header\n          composerMode={composerMode}\n          statement={editingStatement}\n          saveButtonText={saveButtonText}\n          onCancel={handleCancel}\n          onStartOver={handleStartOver}\n          onComplete={handleComplete} />}\n        <FinalStatement statement={editingStatement} displayStatement={displayStatement} />\n        <FieldSelector\n          composerMode={composerMode}\n          onStartOver={handleStartOver}\n          setEditor={setEditor}\n          statement={editingStatement}\n          currentEditor={editor}\n          suggestions={suggestions}\n          onGiveExampleClick={handleGiveExampleClicked}\n          setCustomTemplateEditorVisible={setCustomTemplateEditorVisible}\n        />\n        {Component && editor && <SpaceBetween direction='vertical' size='l'>\n          <Grid\n            gridDefinition={[{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }]}\n          >\n            <div>\n              <Component\n                ref={inputRef}\n                statement={editingStatement}\n                setStatement={setEditingStatement}\n                fieldData={threatFieldData[editor]}\n              />\n            </div>\n            <Metrics statement={editingStatement} onClick={(token) => setEditor(token as ThreatFieldTypes)} />\n          </Grid>\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <ControlLookupComponent\n              variant='container'\n              linkedControlIds={linkedControlIds}\n              controlList={controlList}\n              onAddControlLink={handleAddControlLink}\n              onRemoveControlLink={(id) => setLinkedControlIds(prev => prev.filter(p => p !== id))}\n            />\n          </div>}\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <MitigationLinkComponent\n              variant='container'\n              linkedMitigationIds={linkedMitigationIds}\n              mitigationList={mitigationList}\n              onAddMitigationLink={handleAddMitigationLink}\n              onRemoveMitigationLink={(id) => setLinkedMitigationIds(prev => prev.filter(p => p !== id))}\n            />\n          </div>}\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <AssumptionLinkComponent\n              variant='container'\n              linkedAssumptionIds={linkedAssumptionIds}\n              assumptionList={assumptionList}\n              onAddAssumptionLink={handleAddAssumptionLink}\n              onRemoveAssumptionLink={(id) => setLinkedAssumptionIds(prev => prev.filter(p => p !== id))}\n            />\n          </div>}\n          {composerMode === 'Full' && <div css={styles.metadataContainer}>\n            <MetadataEditor\n              variant='container'\n              editingStatement={editingStatement}\n              onEditMetadata={handleEditMetadata}\n            />\n          </div>}\n        </SpaceBetween>}\n        <FullExamples ref={fullExamplesRef} onClick={handleExampleClicked} />\n      </SpaceBetween>\n      {customTemplateEditorVisible && <CustomTemplate\n        statement={editingStatement}\n        visible={customTemplateEditorVisible}\n        setVisible={setCustomTemplateEditorVisible}\n        onConfirm={handleCustomTemplateConfirm}\n        defaultTemplate={defaultThreatStatementFormat.template}\n      />}\n    </>);\n};\n\nconst ThreatStatementEditor: FC = () => {\n  const { editingStatement } = useThreatsContext();\n\n  return editingStatement ? <ThreatStatementEditorInner editingStatement={editingStatement} /> : null;\n};\n\nexport default ThreatStatementEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}