{"ast":null,"code":"var _AppLayoutWidgetController_registrations, _AppLayoutWidgetController_findPrimary, _AppLayoutWidgetController_update, _AppLayoutWidgetController_scheduleUpdate;\nimport { __classPrivateFieldGet } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\nexport class AppLayoutWidgetController {\n  constructor() {\n    var _this = this;\n    _AppLayoutWidgetController_registrations.set(this, []);\n    _AppLayoutWidgetController_findPrimary.set(this, () => {\n      const forcedPrimary = __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\").find(registration => registration.forceType === 'primary');\n      if (forcedPrimary) {\n        return forcedPrimary;\n      }\n      for (const registration of __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\").slice()) {\n        if (registration.forceType !== 'secondary') {\n          return registration;\n        }\n      }\n      return undefined;\n    });\n    _AppLayoutWidgetController_update.set(this, () => {\n      const primary = __classPrivateFieldGet(this, _AppLayoutWidgetController_findPrimary, \"f\").call(this);\n      const discoveredProps = __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\").filter(registration => registration !== primary).map(registration => registration.props);\n      for (const registration of __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\")) {\n        if (registration === primary) {\n          registration.onChange({\n            type: 'primary',\n            discoveredProps\n          });\n        } else {\n          registration.onChange(registration.secondaryInstance);\n        }\n      }\n    });\n    _AppLayoutWidgetController_scheduleUpdate.set(this, debounce(() => __classPrivateFieldGet(this, _AppLayoutWidgetController_update, \"f\").call(this), 0));\n    this.register = (forceType, onRegistrationChange) => {\n      const hasForcedPrimary = __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\").some(instance => instance.forceType === 'primary');\n      if (forceType === 'primary' && hasForcedPrimary) {\n        throw new Error('Double primary registration attempt');\n      }\n      const registration = {\n        forceType,\n        onChange: onRegistrationChange,\n        props: {},\n        secondaryInstance: {\n          type: 'secondary',\n          update: props => {\n            registration.props = props;\n            __classPrivateFieldGet(this, _AppLayoutWidgetController_scheduleUpdate, \"f\").call(this);\n          }\n        }\n      };\n      __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\").push(registration);\n      __classPrivateFieldGet(this, _AppLayoutWidgetController_update, \"f\").call(this);\n      return () => {\n        __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\").splice(__classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\").indexOf(registration), 1);\n        __classPrivateFieldGet(this, _AppLayoutWidgetController_scheduleUpdate, \"f\").call(this);\n      };\n    };\n    this.getStateForTesting = () => {\n      return {\n        registrations: __classPrivateFieldGet(this, _AppLayoutWidgetController_registrations, \"f\")\n      };\n    };\n    this.installInternal = function () {\n      let internalApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _a, _b;\n      (_a = internalApi.register) !== null && _a !== void 0 ? _a : internalApi.register = _this.register;\n      (_b = internalApi.getStateForTesting) !== null && _b !== void 0 ? _b : internalApi.getStateForTesting = _this.getStateForTesting;\n      return internalApi;\n    };\n  }\n}\n_AppLayoutWidgetController_registrations = new WeakMap(), _AppLayoutWidgetController_findPrimary = new WeakMap(), _AppLayoutWidgetController_update = new WeakMap(), _AppLayoutWidgetController_scheduleUpdate = new WeakMap();","map":{"version":3,"names":["debounce","AppLayoutWidgetController","constructor","_this","_AppLayoutWidgetController_registrations","set","_AppLayoutWidgetController_findPrimary","forcedPrimary","__classPrivateFieldGet","find","registration","forceType","slice","undefined","_AppLayoutWidgetController_update","primary","call","discoveredProps","filter","map","props","onChange","type","secondaryInstance","_AppLayoutWidgetController_scheduleUpdate","register","onRegistrationChange","hasForcedPrimary","some","instance","Error","update","push","splice","indexOf","getStateForTesting","registrations","installInternal","internalApi","arguments","length","_a","_b"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/plugins/controllers/app-layout-widget.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport debounce from '../../debounce';\n\ninterface PrimaryRegistration<Props> {\n  type: 'primary';\n  discoveredProps: Array<Props>;\n}\n\ninterface SecondaryRegistration<Props> {\n  type: 'secondary';\n  update: (props: Props) => void;\n}\n\nexport type RegistrationState<Props> = PrimaryRegistration<Props> | SecondaryRegistration<Props>;\nexport type RegistrationType = RegistrationState<unknown>['type'];\n\ntype RegistrationChangeHandler<Props> = (\n  registration: PrimaryRegistration<Props> | SecondaryRegistration<Props>\n) => void;\n\ninterface RegistrationInternal<Props> {\n  forceType: RegistrationType | undefined;\n  props: Props;\n  secondaryInstance: SecondaryRegistration<Props>;\n  onChange: (registration: PrimaryRegistration<Props> | SecondaryRegistration<Props>) => void;\n}\n\nexport interface AppLayoutWidgetApiInternal<Props = unknown> {\n  register(\n    forceDeduplicationType: RegistrationType | undefined,\n    onPropsChange: RegistrationChangeHandler<Props>\n  ): () => void;\n  getStateForTesting(): { registrations: Array<RegistrationInternal<Props>> };\n}\n\nexport class AppLayoutWidgetController<Props = unknown> {\n  #registrations: Array<RegistrationInternal<Props>> = [];\n\n  #findPrimary = () => {\n    const forcedPrimary = this.#registrations.find(registration => registration.forceType === 'primary');\n    if (forcedPrimary) {\n      return forcedPrimary;\n    }\n    for (const registration of this.#registrations.slice()) {\n      if (registration.forceType !== 'secondary') {\n        return registration;\n      }\n    }\n    return undefined;\n  };\n\n  #update = () => {\n    const primary = this.#findPrimary();\n    const discoveredProps = this.#registrations\n      .filter(registration => registration !== primary)\n      .map(registration => registration.props);\n    for (const registration of this.#registrations) {\n      if (registration === primary) {\n        registration.onChange({\n          type: 'primary',\n          discoveredProps,\n        });\n      } else {\n        registration.onChange(registration.secondaryInstance);\n      }\n    }\n  };\n\n  #scheduleUpdate = debounce(() => this.#update(), 0);\n\n  register = (\n    forceType: RegistrationType | undefined,\n    onRegistrationChange: RegistrationChangeHandler<Props>\n  ): (() => void) => {\n    const hasForcedPrimary = this.#registrations.some(instance => instance.forceType === 'primary');\n    if (forceType === 'primary' && hasForcedPrimary) {\n      throw new Error('Double primary registration attempt');\n    }\n\n    const registration: RegistrationInternal<Props> = {\n      forceType,\n      onChange: onRegistrationChange,\n      props: {} as Props,\n      secondaryInstance: {\n        type: 'secondary',\n        update: props => {\n          registration.props = props;\n          this.#scheduleUpdate();\n        },\n      },\n    };\n    this.#registrations.push(registration);\n\n    this.#update();\n\n    return () => {\n      this.#registrations.splice(this.#registrations.indexOf(registration), 1);\n      this.#scheduleUpdate();\n    };\n  };\n\n  getStateForTesting = () => {\n    return {\n      registrations: this.#registrations,\n    };\n  };\n\n  installInternal = (\n    internalApi: Partial<AppLayoutWidgetApiInternal<Props>> = {}\n  ): AppLayoutWidgetApiInternal<Props> => {\n    internalApi.register ??= this.register;\n    internalApi.getStateForTesting ??= this.getStateForTesting;\n    return internalApi as AppLayoutWidgetApiInternal<Props>;\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}