{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nexport const Label = ({\n  label,\n  prefix,\n  highlightText,\n  triggerVariant\n}) => React.createElement(\"span\", {\n  className: clsx(styles.label, analyticsSelectors.label, triggerVariant && styles['trigger-variant'])\n}, prefix && React.createElement(\"span\", {\n  className: clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])\n}, prefix, \" \"), React.createElement(HighlightMatch, {\n  str: label,\n  highlightText: highlightText\n}));\nexport const LabelTag = ({\n  labelTag,\n  highlightText,\n  triggerVariant\n}) => labelTag ? React.createElement(\"span\", {\n  className: clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])\n}, React.createElement(HighlightMatch, {\n  str: labelTag,\n  highlightText: highlightText\n})) : null;\nexport const Description = ({\n  description,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant\n}) => description ? React.createElement(\"span\", {\n  className: clsx(styles.description, {\n    [styles['trigger-variant']]: triggerVariant,\n    [styles.highlighted]: highlightedOption,\n    [styles.selected]: selectedOption\n  })\n}, React.createElement(HighlightMatch, {\n  str: description,\n  highlightText: highlightText\n})) : null;\nexport const Tags = ({\n  tags,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant\n}) => tags ? React.createElement(\"span\", {\n  className: clsx(styles.tags, {\n    [styles.highlighted]: highlightedOption,\n    [styles.selected]: selectedOption\n  })\n}, tags.map((tag, idx) => React.createElement(\"span\", {\n  key: idx,\n  className: clsx(styles.tag, triggerVariant && styles['trigger-variant'])\n}, React.createElement(HighlightMatch, {\n  str: tag,\n  highlightText: highlightText\n})))) : null;\nexport const FilteringTags = ({\n  filteringTags,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant\n}) => {\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n  const searchElement = highlightText.toLowerCase();\n  return React.createElement(\"span\", {\n    className: clsx(styles.tags, {\n      [styles.highlighted]: highlightedOption,\n      [styles.selected]: selectedOption\n    })\n  }, filteringTags.map((filteringTag, key) => {\n    const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n    if (match) {\n      return React.createElement(\"span\", {\n        className: clsx(styles.tag, triggerVariant && styles['trigger-variant']),\n        key: key,\n        \"aria-disabled\": true\n      }, React.createElement(HighlightMatch, {\n        str: filteringTag,\n        highlightText: highlightText\n      }));\n    }\n    return null;\n  }));\n};\nexport const OptionIcon = props => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n  return React.createElement(\"span\", {\n    className: clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])\n  }, React.createElement(InternalIcon, Object.assign({}, props)));\n};","map":{"version":3,"names":["React","clsx","InternalIcon","HighlightMatch","analyticsSelectors","styles","Label","label","prefix","highlightText","triggerVariant","createElement","className","str","LabelTag","labelTag","Description","description","highlightedOption","selectedOption","highlighted","selected","Tags","tags","map","tag","idx","key","FilteringTags","filteringTags","searchElement","toLowerCase","filteringTag","match","indexOf","OptionIcon","props","name","url","svg","icon","size","Object","assign"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/option/option-parts.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { IconProps } from '../../../icon/interfaces';\nimport InternalIcon from '../../../icon/internal';\nimport HighlightMatch from './highlight-match';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ninterface LabelProps {\n  label?: string;\n  prefix?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const Label = ({ label, prefix, highlightText, triggerVariant }: LabelProps) => (\n  <span className={clsx(styles.label, analyticsSelectors.label, triggerVariant && styles['trigger-variant'])}>\n    {prefix && (\n      <span className={clsx(styles['label-prefix'], triggerVariant && styles['trigger-variant'])}>{prefix} </span>\n    )}\n    <HighlightMatch str={label} highlightText={highlightText} />\n  </span>\n);\n\ninterface LabelTagProps {\n  labelTag?: string;\n  highlightText?: string;\n  triggerVariant: boolean;\n}\nexport const LabelTag = ({ labelTag, highlightText, triggerVariant }: LabelTagProps) =>\n  labelTag ? (\n    <span className={clsx(styles['label-tag'], triggerVariant && styles['trigger-variant'])}>\n      <HighlightMatch str={labelTag} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface DescriptionProps {\n  description?: string;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Description = ({\n  description,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: DescriptionProps) =>\n  description ? (\n    <span\n      className={clsx(styles.description, {\n        [styles['trigger-variant']]: triggerVariant,\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      <HighlightMatch str={description} highlightText={highlightText} />\n    </span>\n  ) : null;\n\ninterface TagsProps {\n  tags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const Tags = ({ tags, highlightedOption, highlightText, selectedOption, triggerVariant }: TagsProps) =>\n  tags ? (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {tags.map((tag, idx) => (\n        <span key={idx} className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}>\n          <HighlightMatch str={tag} highlightText={highlightText} />\n        </span>\n      ))}\n    </span>\n  ) : null;\n\ninterface FilteringTagProps {\n  filteringTags?: ReadonlyArray<string>;\n  highlightedOption: boolean;\n  highlightText?: string;\n  selectedOption: boolean;\n  triggerVariant: boolean;\n}\nexport const FilteringTags = ({\n  filteringTags,\n  highlightedOption,\n  highlightText,\n  selectedOption,\n  triggerVariant,\n}: FilteringTagProps) => {\n  if (!highlightText || !filteringTags) {\n    return null;\n  }\n\n  const searchElement = highlightText.toLowerCase();\n\n  return (\n    <span\n      className={clsx(styles.tags, {\n        [styles.highlighted]: highlightedOption,\n        [styles.selected]: selectedOption,\n      })}\n    >\n      {filteringTags.map((filteringTag, key) => {\n        const match = filteringTag.toLowerCase().indexOf(searchElement) !== -1;\n        if (match) {\n          return (\n            <span\n              className={clsx(styles.tag, triggerVariant && styles['trigger-variant'])}\n              key={key}\n              aria-disabled={true}\n            >\n              <HighlightMatch str={filteringTag} highlightText={highlightText} />\n            </span>\n          );\n        }\n        return null;\n      })}\n    </span>\n  );\n};\n\nexport const OptionIcon = (props: IconProps) => {\n  if (!props.name && !props.url && !props.svg) {\n    return null;\n  }\n\n  return (\n    <span className={clsx(styles.icon, props.size === 'big' && [styles[`icon-size-big`]])}>\n      <InternalIcon {...props} />\n    </span>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}