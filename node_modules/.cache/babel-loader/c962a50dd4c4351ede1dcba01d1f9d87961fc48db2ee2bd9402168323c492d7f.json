{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/mitigations/MitigationList/index.tsx\",\n  _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Button from '@cloudscape-design/components/button';\nimport Container from '@cloudscape-design/components/container';\nimport Grid from '@cloudscape-design/components/grid';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useAssumptionLinksContext, useControlLinksContext, useMitigationLinksContext } from '../../../contexts';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport LinkedEntityFilter, { ALL, WITHOUT_NO_LINKED_ENTITY, WITH_LINKED_ENTITY } from '../../generic/LinkedEntityFilter';\nimport TagSelector from '../../generic/TagSelector';\nimport MitigationCard from '../MitigationCard';\nimport MitigationCreationCard from '../MitigationCreationCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MitigationList = () => {\n  _s();\n  const {\n    mitigationList,\n    removeMitigation,\n    saveMitigation\n  } = useMitigationsContext();\n  const {\n    addMitigationLinks,\n    mitigationLinkList,\n    removeMitigationLinksByMitigationId\n  } = useMitigationLinksContext();\n  const {\n    addAssumptionLinks,\n    assumptionLinkList,\n    removeAssumptionLinksByLinkedEntityId\n  } = useAssumptionLinksContext();\n  const {\n    addControlLinks,\n    controlLinkList,\n    removeControlLinksByLinkedEntityId\n  } = useControlLinksContext();\n  const [filteringText, setFilteringText] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedLinkedThreatsFilter, setSelectedLinkedThreatsFilter] = useState(ALL);\n  const [selectedLinkedAssumptionsFilter, setSelectedLinkedAssumptionsFilter] = useState(ALL);\n  const [selectedLinkedControlsFilter, setSelectedLinkedControlsFilter] = useState(ALL);\n  const handleRemove = useCallback(async mitigationId => {\n    removeMitigation(mitigationId);\n    await removeControlLinksByLinkedEntityId(mitigationId);\n    await removeAssumptionLinksByLinkedEntityId(mitigationId);\n    await removeMitigationLinksByMitigationId(mitigationId);\n  }, [removeAssumptionLinksByLinkedEntityId, removeMitigation, removeControlLinksByLinkedEntityId, removeMitigationLinksByMitigationId]);\n  const hasNoFilter = useMemo(() => {\n    return filteringText === '' && selectedLinkedAssumptionsFilter === ALL && selectedLinkedControlsFilter === ALL && selectedLinkedThreatsFilter === ALL && selectedTags.length === 0;\n  }, [filteringText, selectedTags, selectedLinkedThreatsFilter, selectedLinkedAssumptionsFilter, selectedLinkedControlsFilter]);\n  const handleClearFilter = useCallback(() => {\n    setFilteringText('');\n    setSelectedTags([]);\n    setSelectedLinkedControlsFilter(ALL);\n    setSelectedLinkedAssumptionsFilter(ALL);\n    setSelectedLinkedThreatsFilter(ALL);\n  }, []);\n  const allTags = useMemo(() => {\n    return mitigationList.reduce((all, cur) => {\n      var _cur$tags;\n      return [...all, ...(((_cur$tags = cur.tags) === null || _cur$tags === void 0 ? void 0 : _cur$tags.filter(ia => !all.includes(ia))) || [])];\n    }, []);\n  }, [mitigationList]);\n  const handleAddTagToEntity = useCallback((assumption, tag) => {\n    const updated = {\n      ...assumption,\n      tags: assumption.tags ? !assumption.tags.includes(tag) ? [...assumption.tags, tag] : assumption.tags : [tag]\n    };\n    saveMitigation(updated);\n  }, [saveMitigation]);\n  const handleRemoveTagFromEntity = useCallback((assumption, tag) => {\n    var _assumption$tags;\n    const updated = {\n      ...assumption,\n      tags: (_assumption$tags = assumption.tags) === null || _assumption$tags === void 0 ? void 0 : _assumption$tags.filter(t => t !== tag)\n    };\n    saveMitigation(updated);\n  }, [saveMitigation]);\n  const filteredList = useMemo(() => {\n    let output = mitigationList;\n    if (filteringText) {\n      output = output.filter(st => st.content && st.content.toLowerCase().indexOf(filteringText.toLowerCase()) >= 0);\n    }\n    if (selectedTags && selectedTags.length > 0) {\n      output = output.filter(st => {\n        var _st$tags;\n        return (_st$tags = st.tags) === null || _st$tags === void 0 ? void 0 : _st$tags.some(t => selectedTags.includes(t));\n      });\n    }\n    if (selectedLinkedThreatsFilter !== ALL) {\n      output = output.filter(st => {\n        return mitigationLinkList.some(ml => ml.mitigationId === st.id) ? selectedLinkedThreatsFilter === WITH_LINKED_ENTITY : selectedLinkedThreatsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n    if (selectedLinkedAssumptionsFilter !== ALL) {\n      output = output.filter(st => {\n        return assumptionLinkList.some(al => al.linkedId === st.id) ? selectedLinkedAssumptionsFilter === WITH_LINKED_ENTITY : selectedLinkedAssumptionsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n    if (selectedLinkedControlsFilter !== ALL) {\n      output = output.filter(st => {\n        return controlLinkList.some(al => al.linkedId === st.id) ? selectedLinkedControlsFilter === WITH_LINKED_ENTITY : selectedLinkedControlsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n    output = output.sort((op1, op2) => (op2.displayOrder || Number.MAX_VALUE) - (op1.displayOrder || Number.MAX_VALUE));\n    return output;\n  }, [filteringText, mitigationList, selectedTags, assumptionLinkList, controlLinkList, mitigationLinkList, selectedLinkedAssumptionsFilter, selectedLinkedControlsFilter, selectedLinkedThreatsFilter]);\n  const handleSaveNew = useCallback((mitigation, linkedControlIds, linkedAssumptionIds, linkedThreatIds) => {\n    const updated = saveMitigation(mitigation);\n    const mitigationLinks = [];\n    linkedThreatIds.forEach(id => {\n      mitigationLinks.push({\n        linkedId: id,\n        mitigationId: updated.id\n      });\n    });\n    addMitigationLinks(mitigationLinks);\n    const assumptionLinks = [];\n    linkedAssumptionIds.forEach(id => {\n      assumptionLinks.push({\n        linkedId: updated.id,\n        assumptionId: id,\n        type: 'Mitigation'\n      });\n    });\n    addAssumptionLinks(assumptionLinks);\n    const controlLinks = [];\n    linkedControlIds.forEach(id => {\n      controlLinks.push({\n        linkedId: updated.id,\n        controlId: id\n      });\n    });\n    addControlLinks(controlLinks);\n  }, [saveMitigation, addMitigationLinks, addAssumptionLinks, addControlLinks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n      direction: \"vertical\",\n      size: \"s\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        header: /*#__PURE__*/_jsxDEV(Header, {\n          counter: `(${filteredList.length})`,\n          children: \"Mitigation List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n          direction: \"vertical\",\n          size: \"s\",\n          children: [/*#__PURE__*/_jsxDEV(TextFilter, {\n            filteringText: filteringText,\n            filteringPlaceholder: \"Find mitigations\",\n            filteringAriaLabel: \"Filter mitigations\",\n            onChange: ({\n              detail\n            }) => setFilteringText(detail.filteringText)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            gridDefinition: [{\n              colspan: {\n                default: 12,\n                xs: 2\n              }\n            }, {\n              colspan: {\n                default: 12,\n                xs: 3\n              }\n            }, {\n              colspan: {\n                default: 12,\n                xs: 3\n              }\n            }, {\n              colspan: {\n                default: 12,\n                xs: 3\n              }\n            }, {\n              colspan: {\n                default: 1\n              }\n            }],\n            children: [/*#__PURE__*/_jsxDEV(TagSelector, {\n              allTags: allTags,\n              selectedTags: selectedTags,\n              setSelectedTags: setSelectedTags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(LinkedEntityFilter, {\n              label: \"Linked threats\",\n              entityDisplayName: \"threats\",\n              callerName: \"mitigations\",\n              selected: selectedLinkedThreatsFilter,\n              setSelected: setSelectedLinkedThreatsFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(LinkedEntityFilter, {\n              label: \"Linked controls\",\n              entityDisplayName: \"controls\",\n              callerName: \"mitigations\",\n              selected: selectedLinkedControlsFilter,\n              setSelected: setSelectedLinkedControlsFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(LinkedEntityFilter, {\n              label: \"Linked assumptions\",\n              entityDisplayName: \"assumptions\",\n              callerName: \"mitigations\",\n              selected: selectedLinkedAssumptionsFilter,\n              setSelected: setSelectedLinkedAssumptionsFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClearFilter,\n              variant: \"icon\",\n              iconSvg: /*#__PURE__*/_jsxDEV(\"svg\", {\n                focusable: \"false\",\n                \"aria-hidden\": \"true\",\n                viewBox: \"0 0 24 24\",\n                tabIndex: -1,\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 24\n              }, this),\n              ariaLabel: \"Clear filters\",\n              disabled: hasNoFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this), filteredList === null || filteredList === void 0 ? void 0 : filteredList.map(entity => /*#__PURE__*/_jsxDEV(MitigationCard, {\n        entity: entity,\n        onRemove: handleRemove,\n        onEdit: saveMitigation,\n        onAddTagToEntity: handleAddTagToEntity,\n        onRemoveTagFromEntity: handleRemoveTagFromEntity\n      }, entity.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 37\n      }, this)), /*#__PURE__*/_jsxDEV(MitigationCreationCard, {\n        onSave: handleSaveNew\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 11\n  }, this);\n};\n_s(MitigationList, \"85F7Tx2uXYWBjuzB2/RYyJ23Z7U=\", false, function () {\n  return [useMitigationsContext, useMitigationLinksContext, useAssumptionLinksContext, useControlLinksContext];\n});\n_c = MitigationList;\nexport default MitigationList;\nvar _c;\n$RefreshReg$(_c, \"MitigationList\");","map":{"version":3,"names":["Button","Container","Grid","Header","SpaceBetween","TextFilter","useCallback","useMemo","useState","useAssumptionLinksContext","useControlLinksContext","useMitigationLinksContext","useMitigationsContext","LinkedEntityFilter","ALL","WITHOUT_NO_LINKED_ENTITY","WITH_LINKED_ENTITY","TagSelector","MitigationCard","MitigationCreationCard","jsxDEV","_jsxDEV","MitigationList","_s","mitigationList","removeMitigation","saveMitigation","addMitigationLinks","mitigationLinkList","removeMitigationLinksByMitigationId","addAssumptionLinks","assumptionLinkList","removeAssumptionLinksByLinkedEntityId","addControlLinks","controlLinkList","removeControlLinksByLinkedEntityId","filteringText","setFilteringText","selectedTags","setSelectedTags","selectedLinkedThreatsFilter","setSelectedLinkedThreatsFilter","selectedLinkedAssumptionsFilter","setSelectedLinkedAssumptionsFilter","selectedLinkedControlsFilter","setSelectedLinkedControlsFilter","handleRemove","mitigationId","hasNoFilter","length","handleClearFilter","allTags","reduce","all","cur","_cur$tags","tags","filter","ia","includes","handleAddTagToEntity","assumption","tag","updated","handleRemoveTagFromEntity","_assumption$tags","t","filteredList","output","st","content","toLowerCase","indexOf","_st$tags","some","ml","id","al","linkedId","sort","op1","op2","displayOrder","Number","MAX_VALUE","handleSaveNew","mitigation","linkedControlIds","linkedAssumptionIds","linkedThreatIds","mitigationLinks","forEach","push","assumptionLinks","assumptionId","type","controlLinks","controlId","children","direction","size","header","counter","fileName","_jsxFileName","lineNumber","columnNumber","filteringPlaceholder","filteringAriaLabel","onChange","detail","gridDefinition","colspan","default","xs","label","entityDisplayName","callerName","selected","setSelected","onClick","variant","iconSvg","focusable","viewBox","tabIndex","d","ariaLabel","disabled","map","entity","onRemove","onEdit","onAddTagToEntity","onRemoveTagFromEntity","onSave","_c","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/mitigations/MitigationList/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport Button from '@cloudscape-design/components/button';\nimport Container from '@cloudscape-design/components/container';\nimport Grid from '@cloudscape-design/components/grid';\nimport Header from '@cloudscape-design/components/header';\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport TextFilter from '@cloudscape-design/components/text-filter';\nimport { FC, useCallback, useMemo, useState } from 'react';\nimport { useAssumptionLinksContext, useControlLinksContext, useMitigationLinksContext } from '../../../contexts';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport { AssumptionLink, ControlLink, Mitigation, MitigationLink } from '../../../customTypes';\nimport LinkedEntityFilter, { ALL, WITHOUT_NO_LINKED_ENTITY, WITH_LINKED_ENTITY } from '../../generic/LinkedEntityFilter';\nimport TagSelector from '../../generic/TagSelector';\nimport MitigationCard from '../MitigationCard';\nimport MitigationCreationCard from '../MitigationCreationCard';\n\nconst MitigationList: FC = () => {\n  const {\n    mitigationList,\n    removeMitigation,\n    saveMitigation,\n  } = useMitigationsContext();\n\n  const {\n    addMitigationLinks,\n    mitigationLinkList,\n    removeMitigationLinksByMitigationId,\n  } = useMitigationLinksContext();\n\n  const {\n    addAssumptionLinks,\n    assumptionLinkList,\n    removeAssumptionLinksByLinkedEntityId,\n  } = useAssumptionLinksContext();\n\n  const {\n    addControlLinks,\n    controlLinkList,\n    removeControlLinksByLinkedEntityId,\n  } = useControlLinksContext();\n\n  const [filteringText, setFilteringText] = useState('');\n\n  const [\n    selectedTags,\n    setSelectedTags,\n  ] = useState<string[]>([]);\n\n  const [\n    selectedLinkedThreatsFilter,\n    setSelectedLinkedThreatsFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedAssumptionsFilter,\n    setSelectedLinkedAssumptionsFilter,\n  ] = useState(ALL);\n\n  const [\n    selectedLinkedControlsFilter,\n    setSelectedLinkedControlsFilter,\n  ] = useState(ALL);\n\n  const handleRemove = useCallback(async (mitigationId: string) => {\n    removeMitigation(mitigationId);\n    await removeControlLinksByLinkedEntityId(mitigationId);\n    await removeAssumptionLinksByLinkedEntityId(mitigationId);\n    await removeMitigationLinksByMitigationId(mitigationId);\n  }, [removeAssumptionLinksByLinkedEntityId, removeMitigation, removeControlLinksByLinkedEntityId, removeMitigationLinksByMitigationId]);\n\n  const hasNoFilter = useMemo(() => {\n    return (filteringText === ''\n      && selectedLinkedAssumptionsFilter === ALL\n      && selectedLinkedControlsFilter === ALL\n      && selectedLinkedThreatsFilter === ALL\n      && selectedTags.length === 0);\n  }, [filteringText, selectedTags,\n    selectedLinkedThreatsFilter, selectedLinkedAssumptionsFilter, selectedLinkedControlsFilter]);\n\n  const handleClearFilter = useCallback(() => {\n    setFilteringText('');\n    setSelectedTags([]);\n    setSelectedLinkedControlsFilter(ALL);\n    setSelectedLinkedAssumptionsFilter(ALL);\n    setSelectedLinkedThreatsFilter(ALL);\n  }, []);\n\n  const allTags = useMemo(() => {\n    return mitigationList\n      .reduce((all: string[], cur) => {\n        return [...all, ...cur.tags?.filter(ia => !all.includes(ia)) || []];\n      }, []);\n  }, [mitigationList]);\n\n  const handleAddTagToEntity = useCallback((assumption: Mitigation, tag: string) => {\n    const updated: Mitigation = {\n      ...assumption,\n      tags: assumption.tags ?\n        (!assumption.tags.includes(tag) ?\n          [...assumption.tags, tag] : assumption.tags) :\n        [tag],\n    };\n    saveMitigation(updated);\n  }, [saveMitigation]);\n\n  const handleRemoveTagFromEntity = useCallback((assumption: Mitigation, tag: string) => {\n    const updated: Mitigation = {\n      ...assumption,\n      tags: assumption.tags?.filter(t => t !== tag),\n    };\n    saveMitigation(updated);\n  }, [saveMitigation]);\n\n  const filteredList = useMemo(() => {\n    let output = mitigationList;\n\n    if (filteringText) {\n      output = output.filter(st => st.content && st.content.toLowerCase().indexOf(filteringText.toLowerCase()) >= 0);\n    }\n\n    if (selectedTags && selectedTags.length > 0) {\n      output = output.filter(st => {\n        return st.tags?.some(t => selectedTags.includes(t));\n      });\n    }\n\n    if (selectedLinkedThreatsFilter !== ALL) {\n      output = output.filter(st => {\n        return mitigationLinkList.some(ml => ml. mitigationId === st.id) ?\n          selectedLinkedThreatsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedThreatsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedAssumptionsFilter !== ALL) {\n      output = output.filter(st => {\n        return assumptionLinkList.some(al => al.linkedId === st.id) ?\n          selectedLinkedAssumptionsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedAssumptionsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    if (selectedLinkedControlsFilter !== ALL) {\n      output = output.filter(st => {\n        return controlLinkList.some(al => al.linkedId === st.id) ?\n          selectedLinkedControlsFilter === WITH_LINKED_ENTITY :\n          selectedLinkedControlsFilter === WITHOUT_NO_LINKED_ENTITY;\n      });\n    }\n\n    output = output.sort((op1, op2) => (op2.displayOrder || Number.MAX_VALUE) - (op1.displayOrder || Number.MAX_VALUE));\n\n    return output;\n  }, [filteringText, mitigationList, selectedTags,\n    assumptionLinkList, controlLinkList, mitigationLinkList,\n    selectedLinkedAssumptionsFilter, selectedLinkedControlsFilter, selectedLinkedThreatsFilter]);\n\n  const handleSaveNew = useCallback((mitigation: Mitigation,\n    linkedControlIds: string[],\n    linkedAssumptionIds: string[],\n    linkedThreatIds: string[]) => {\n    const updated = saveMitigation(mitigation);\n\n    const mitigationLinks: MitigationLink[] = [];\n    linkedThreatIds.forEach(id => {\n      mitigationLinks.push({\n        linkedId: id,\n        mitigationId: updated.id,\n      });\n    });\n\n    addMitigationLinks(mitigationLinks);\n\n    const assumptionLinks: AssumptionLink[] = [];\n    linkedAssumptionIds.forEach(id => {\n      assumptionLinks.push({\n        linkedId: updated.id,\n        assumptionId: id,\n        type: 'Mitigation',\n      });\n    });\n\n    addAssumptionLinks(assumptionLinks);\n\n    const controlLinks: ControlLink[] = [];\n    linkedControlIds.forEach(id => {\n      controlLinks.push({\n        linkedId: updated.id,\n        controlId: id,\n      });\n    });\n\n    addControlLinks(controlLinks);\n\n  }, [saveMitigation, addMitigationLinks, addAssumptionLinks, addControlLinks]);\n\n  return (<div>\n    <SpaceBetween direction='vertical' size='s'>\n      <Container header={\n        <Header\n          counter={`(${filteredList.length})`}\n        >Mitigation List</Header>\n      }>\n        <SpaceBetween direction='vertical' size='s'>\n          <TextFilter\n            filteringText={filteringText}\n            filteringPlaceholder=\"Find mitigations\"\n            filteringAriaLabel=\"Filter mitigations\"\n            onChange={({ detail }) =>\n              setFilteringText(detail.filteringText)\n            }\n          />\n          <Grid\n            gridDefinition={[\n              { colspan: { default: 12, xs: 2 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 12, xs: 3 } },\n              { colspan: { default: 1 } },\n            ]}\n          >\n            <TagSelector\n              allTags={allTags}\n              selectedTags={selectedTags}\n              setSelectedTags={setSelectedTags}\n            />\n            <LinkedEntityFilter\n              label='Linked threats'\n              entityDisplayName='threats'\n              callerName='mitigations'\n              selected={selectedLinkedThreatsFilter}\n              setSelected={setSelectedLinkedThreatsFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked controls'\n              entityDisplayName='controls'\n              callerName='mitigations'\n              selected={selectedLinkedControlsFilter}\n              setSelected={setSelectedLinkedControlsFilter}\n            />\n            <LinkedEntityFilter\n              label='Linked assumptions'\n              entityDisplayName='assumptions'\n              callerName='mitigations'\n              selected={selectedLinkedAssumptionsFilter}\n              setSelected={setSelectedLinkedAssumptionsFilter}\n            />\n            <Button onClick={handleClearFilter}\n              variant='icon'\n              iconSvg={<svg\n                focusable=\"false\"\n                aria-hidden=\"true\"\n                viewBox=\"0 0 24 24\"\n                tabIndex={-1}\n              >\n                <path d=\"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97 4.99-6.36zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41L2.81 2.81z\"></path>\n              </svg>}\n              ariaLabel='Clear filters'\n              disabled={hasNoFilter}\n            />\n          </Grid>\n        </SpaceBetween>\n      </Container>\n      {filteredList?.map(entity => (<MitigationCard\n        key={entity.id}\n        entity={entity}\n        onRemove={handleRemove}\n        onEdit={saveMitigation}\n        onAddTagToEntity={handleAddTagToEntity}\n        onRemoveTagFromEntity={handleRemoveTagFromEntity}\n      />))}\n      <MitigationCreationCard\n        onSave={handleSaveNew}\n      />\n    </SpaceBetween>\n  </div>);\n};\n\nexport default MitigationList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}