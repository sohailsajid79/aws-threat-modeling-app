{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The class describes the layout engine state at a particular path step.\n * The state of the last performed step is the command result.\n */\nexport class LayoutEngineState {\n  constructor(grid) {\n    let moves = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Array();\n    let conflicts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.grid = grid;\n    this.moves = moves;\n    this.conflicts = conflicts;\n  }\n}","map":{"version":3,"names":["LayoutEngineState","constructor","grid","moves","arguments","length","undefined","Array","conflicts"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/layout-engine/engine-state.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Direction, ItemId } from \"../interfaces\";\nimport { LayoutEngineGrid, ReadonlyLayoutEngineGrid } from \"./grid\";\nimport { CommittedMove } from \"./interfaces\";\n\n/**\n * The class describes the layout engine state at a particular path step.\n * The state of the last performed step is the command result.\n */\nexport class LayoutEngineState {\n  public grid: ReadonlyLayoutEngineGrid;\n  public moves: readonly CommittedMove[];\n  public conflicts: null | Conflicts;\n\n  constructor(grid: LayoutEngineGrid, moves = new Array<CommittedMove>(), conflicts: null | Conflicts = null) {\n    this.grid = grid;\n    this.moves = moves;\n    this.conflicts = conflicts;\n  }\n}\n\nexport interface Conflicts {\n  items: ReadonlySet<ItemId>;\n  direction: Direction;\n}\n"],"mappings":"AAAA;AACA;AAMA;;;;AAIA,OAAM,MAAOA,iBAAiB;EAK5BC,YAAYC,IAAsB,EAAwE;IAAA,IAAtEC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAQ,IAAIG,KAAK,EAAiB;IAAA,IAAEC,SAAA,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA8B,IAAI;IACxG,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACK,SAAS,GAAGA,SAAS;EAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}