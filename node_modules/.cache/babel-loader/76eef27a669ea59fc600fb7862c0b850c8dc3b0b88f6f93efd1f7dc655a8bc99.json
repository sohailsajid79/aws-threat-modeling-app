{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { initAwsUiVersions, useComponentMetadata } from \"@cloudscape-design/component-toolkit/internal\";\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from \"../environment\";\nimport { useTelemetry } from \"./use-telemetry\";\ninitAwsUiVersions(PACKAGE_SOURCE, PACKAGE_VERSION);\n/**\n * This hook is used for components which are exported to customers. The returned __internalRootRef needs to be\n * attached to the (internal) component's root DOM node. The hook takes care of attaching the metadata to this\n * root DOM node and emits the telemetry for this component.\n */\nexport default function useBaseComponent(componentName, config) {\n  useTelemetry(componentName, config);\n  const elementRef = useComponentMetadata(componentName, PACKAGE_VERSION);\n  return {\n    __internalRootRef: elementRef\n  };\n}","map":{"version":3,"names":["initAwsUiVersions","useComponentMetadata","PACKAGE_SOURCE","PACKAGE_VERSION","useTelemetry","useBaseComponent","componentName","config","elementRef","__internalRootRef"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/base-component/use-base-component.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { MutableRefObject } from \"react\";\n\nimport {\n  ComponentConfiguration,\n  initAwsUiVersions,\n  useComponentMetadata,\n} from \"@cloudscape-design/component-toolkit/internal\";\n\nimport { PACKAGE_SOURCE, PACKAGE_VERSION } from \"../environment\";\nimport { useTelemetry } from \"./use-telemetry\";\n\ninitAwsUiVersions(PACKAGE_SOURCE, PACKAGE_VERSION);\n\nexport interface InternalBaseComponentProps {\n  __internalRootRef?: MutableRefObject<any> | null;\n}\n\n/**\n * This hook is used for components which are exported to customers. The returned __internalRootRef needs to be\n * attached to the (internal) component's root DOM node. The hook takes care of attaching the metadata to this\n * root DOM node and emits the telemetry for this component.\n */\nexport default function useBaseComponent<T = any>(componentName: string, config?: ComponentConfiguration) {\n  useTelemetry(componentName, config);\n  const elementRef = useComponentMetadata<T>(componentName, PACKAGE_VERSION);\n  return { __internalRootRef: elementRef };\n}\n"],"mappings":"AAAA;AACA;AAIA,SAEEA,iBAAiB,EACjBC,oBAAoB,QACf,+CAA+C;AAEtD,SAASC,cAAc,EAAEC,eAAe,QAAQ,gBAAgB;AAChE,SAASC,YAAY,QAAQ,iBAAiB;AAE9CJ,iBAAiB,CAACE,cAAc,EAAEC,eAAe,CAAC;AAMlD;;;;;AAKA,eAAc,SAAUE,gBAAgBA,CAAUC,aAAqB,EAAEC,MAA+B;EACtGH,YAAY,CAACE,aAAa,EAAEC,MAAM,CAAC;EACnC,MAAMC,UAAU,GAAGP,oBAAoB,CAAIK,aAAa,EAAEH,eAAe,CAAC;EAC1E,OAAO;IAAEM,iBAAiB,EAAED;EAAU,CAAE;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}