{"ast":null,"code":"const SPACE_BETWEEN = 4;\nexport function formatTicks({\n  ticks,\n  scale,\n  getLabelSpace,\n  tickFormatter\n}) {\n  return ticks.map(tick => {\n    var _a;\n    const position = (_a = scale.d3Scale(tick)) !== null && _a !== void 0 ? _a : NaN;\n    const label = tickFormatter ? tickFormatter(tick) : tick.toString();\n    const lines = (label + '').split('\\n');\n    return {\n      position,\n      lines,\n      space: Math.max(...lines.map(getLabelSpace))\n    };\n  });\n}\nexport function getVisibleTicks(ticks, from, until, balanceTicks = false) {\n  ticks = getTicksInRange(ticks, from, until);\n  return balanceTicks ? getReducedTicks(ticks) : removeIntersections(ticks);\n}\nfunction getTicksInRange(ticks, from, until) {\n  return ticks.filter(tick => from <= tick.position - tick.space / 2 && tick.position + tick.space / 2 <= until);\n}\nfunction getReducedTicks(ticks) {\n  const reduceLabelRatio = findReduceLabelRatio(ticks);\n  const reducedTicks = [];\n  for (let index = 0; index < ticks.length; index += reduceLabelRatio) {\n    reducedTicks.push(ticks[index]);\n  }\n  return reducedTicks;\n}\n// Returns a ratio such that all elements can be displayed with no intersections.\nfunction findReduceLabelRatio(ticks, ratio = 1) {\n  if (ratio >= ticks.length) {\n    return ratio;\n  }\n  for (let i = ratio; i < ticks.length; i += ratio) {\n    if (hasIntersection(ticks[i - ratio], ticks[i])) {\n      return findReduceLabelRatio(ticks, ratio + 1);\n    }\n  }\n  return ratio;\n}\nfunction removeIntersections(ticks) {\n  const visibleTicks = [];\n  let prevTick = null;\n  for (const tick of ticks) {\n    if (!prevTick || !hasIntersection(prevTick, tick)) {\n      visibleTicks.push(tick);\n      prevTick = tick;\n    }\n  }\n  return visibleTicks;\n}\nfunction hasIntersection(a, b) {\n  const [left, right] = a.position < b.position ? [a, b] : [b, a];\n  const leftEdge = left.position + left.space / 2 + SPACE_BETWEEN;\n  const rightEdge = right.position - right.space / 2;\n  return leftEdge > rightEdge;\n}\n// Ignoring as unsupported in JSDom.\n/* istanbul ignore next */\nexport function getSVGTextSize(element) {\n  if (element && element.getBBox) {\n    return element.getBBox();\n  }\n  return undefined;\n}","map":{"version":3,"names":["SPACE_BETWEEN","formatTicks","ticks","scale","getLabelSpace","tickFormatter","map","tick","position","_a","d3Scale","NaN","label","toString","lines","split","space","Math","max","getVisibleTicks","from","until","balanceTicks","getTicksInRange","getReducedTicks","removeIntersections","filter","reduceLabelRatio","findReduceLabelRatio","reducedTicks","index","length","push","ratio","i","hasIntersection","visibleTicks","prevTick","a","b","left","right","leftEdge","rightEdge","getSVGTextSize","element","getBBox","undefined"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/cartesian-chart/label-utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ChartDataTypes } from './interfaces';\nimport { ChartScale, NumericChartScale } from './scales';\n\nconst SPACE_BETWEEN = 4;\n\nexport interface FormattedTick {\n  position: number;\n  space: number;\n  lines: string[];\n}\n\nexport function formatTicks({\n  ticks,\n  scale,\n  getLabelSpace,\n  tickFormatter,\n}: {\n  ticks: readonly ChartDataTypes[];\n  scale: ChartScale | NumericChartScale;\n  getLabelSpace: (label: string) => number;\n  tickFormatter?: (value: any) => string;\n}): FormattedTick[] {\n  return ticks.map(tick => {\n    const position = scale.d3Scale(tick as any) ?? NaN;\n    const label = tickFormatter ? tickFormatter(tick as any) : tick.toString();\n    const lines = (label + '').split('\\n');\n    return { position, lines, space: Math.max(...lines.map(getLabelSpace)) };\n  });\n}\n\nexport function getVisibleTicks(ticks: readonly FormattedTick[], from: number, until: number, balanceTicks = false) {\n  ticks = getTicksInRange(ticks, from, until);\n  return balanceTicks ? getReducedTicks(ticks) : removeIntersections(ticks);\n}\n\nfunction getTicksInRange(ticks: readonly FormattedTick[], from: number, until: number) {\n  return ticks.filter(tick => from <= tick.position - tick.space / 2 && tick.position + tick.space / 2 <= until);\n}\n\nfunction getReducedTicks(ticks: readonly FormattedTick[]): readonly FormattedTick[] {\n  const reduceLabelRatio = findReduceLabelRatio(ticks);\n\n  const reducedTicks = [];\n  for (let index = 0; index < ticks.length; index += reduceLabelRatio) {\n    reducedTicks.push(ticks[index]);\n  }\n  return reducedTicks;\n}\n\n// Returns a ratio such that all elements can be displayed with no intersections.\nfunction findReduceLabelRatio(ticks: readonly FormattedTick[], ratio = 1): number {\n  if (ratio >= ticks.length) {\n    return ratio;\n  }\n  for (let i = ratio; i < ticks.length; i += ratio) {\n    if (hasIntersection(ticks[i - ratio], ticks[i])) {\n      return findReduceLabelRatio(ticks, ratio + 1);\n    }\n  }\n  return ratio;\n}\n\nfunction removeIntersections(ticks: readonly FormattedTick[]) {\n  const visibleTicks = [];\n  let prevTick = null;\n  for (const tick of ticks) {\n    if (!prevTick || !hasIntersection(prevTick, tick)) {\n      visibleTicks.push(tick);\n      prevTick = tick;\n    }\n  }\n  return visibleTicks;\n}\n\nfunction hasIntersection(a: FormattedTick, b: FormattedTick) {\n  const [left, right] = a.position < b.position ? [a, b] : [b, a];\n  const leftEdge = left.position + left.space / 2 + SPACE_BETWEEN;\n  const rightEdge = right.position - right.space / 2;\n  return leftEdge > rightEdge;\n}\n\n// Ignoring as unsupported in JSDom.\n/* istanbul ignore next */\nexport function getSVGTextSize(element: null | SVGTextElement): undefined | { width: number; height: number } {\n  if (element && element.getBBox) {\n    return element.getBBox();\n  }\n  return undefined;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}