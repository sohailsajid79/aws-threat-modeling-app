{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import SpaceBetween from'@cloudscape-design/components/space-between';import{useState,useCallback}from'react';import{useMitigationsContext}from'../../../contexts/MitigationsContext/context';import{useControlsContext}from'../../../contexts/ControlsContext/context';import{useThreatsContext}from'../../../contexts/ThreatsContext/context';import GenericEntityCreationCard,{DEFAULT_ENTITY}from'../../generic/GenericEntityCreationCard';import MitigationLinkView from'../../mitigations/MitigationLinkView';import ControlLinkView from'../../controls/ControlLinkView';import ThreatLinkView from'../../threats/ThreatLinkView';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AssumptionCreationCard=_ref=>{let{onSave}=_ref;const[editingEntity,setEditingEntity]=useState(DEFAULT_ENTITY);const[linkedMitigationIds,setLinkedMitigationIds]=useState([]);const[linkedControlIds,setLinkedControlIds]=useState([]);const[linkedThreatIds,setLinkedThreatIds]=useState([]);const{mitigationList,saveMitigation}=useMitigationsContext();const{controlList,saveControl}=useControlsContext();const{statementList}=useThreatsContext();const handleSave=useCallback(()=>{onSave===null||onSave===void 0?void 0:onSave(editingEntity,linkedMitigationIds,linkedControlIds,linkedThreatIds);setEditingEntity(DEFAULT_ENTITY);setLinkedMitigationIds([]);setLinkedThreatIds([]);},[editingEntity,linkedMitigationIds,linkedControlIds,linkedThreatIds,onSave]);const handleReset=useCallback(()=>{setEditingEntity(DEFAULT_ENTITY);setLinkedMitigationIds([]);setLinkedControlIds([]);setLinkedThreatIds([]);},[]);const handleAddMitigationLink=useCallback(mitigationIdOrNewMitigation=>{if(mitigationList.find(m=>m.id===mitigationIdOrNewMitigation)){setLinkedMitigationIds(prev=>[...prev,mitigationIdOrNewMitigation]);}else{const newMitigation=saveMitigation({numericId:-1,content:mitigationIdOrNewMitigation,id:'new'});setLinkedMitigationIds(prev=>[...prev,newMitigation.id]);}},[mitigationList,saveMitigation]);const handleAddControlLink=useCallback(controlIdOrNewControl=>{if(controlList.find(m=>m.id===controlIdOrNewControl)){setLinkedControlIds(prev=>[...prev,controlIdOrNewControl]);}else{const newControl=saveControl({numericId:-1,content:controlIdOrNewControl,id:'new'});setLinkedControlIds(prev=>[...prev,newControl.id]);}},[controlList,saveControl]);return/*#__PURE__*/_jsx(GenericEntityCreationCard,{editingEntity:editingEntity,setEditingEntity:setEditingEntity,header:\"Add new assumption\",onSave:handleSave,onReset:handleReset,customEditors:/*#__PURE__*/_jsxs(SpaceBetween,{direction:\"vertical\",size:\"s\",children:[/*#__PURE__*/_jsx(ThreatLinkView,{linkedThreatIds:linkedThreatIds,threatList:statementList,onAddThreatLink:id=>setLinkedThreatIds(prev=>[...prev,id]),onRemoveThreatLink:id=>setLinkedThreatIds(prev=>prev.filter(p=>p!==id))}),/*#__PURE__*/_jsx(ControlLinkView,{linkedControlIds:linkedControlIds,controlList:controlList,onAddControlLink:handleAddControlLink,onRemoveControlLink:id=>setLinkedControlIds(prev=>prev.filter(p=>p!==id))}),/*#__PURE__*/_jsx(MitigationLinkView,{linkedMitigationIds:linkedMitigationIds,mitigationList:mitigationList,onAddMitigationLink:handleAddMitigationLink,onRemoveMitigationLink:id=>setLinkedMitigationIds(prev=>prev.filter(p=>p!==id))})]})});};export default AssumptionCreationCard;","map":{"version":3,"names":["SpaceBetween","useState","useCallback","useMitigationsContext","useControlsContext","useThreatsContext","GenericEntityCreationCard","DEFAULT_ENTITY","MitigationLinkView","ControlLinkView","ThreatLinkView","jsx","_jsx","jsxs","_jsxs","AssumptionCreationCard","_ref","onSave","editingEntity","setEditingEntity","linkedMitigationIds","setLinkedMitigationIds","linkedControlIds","setLinkedControlIds","linkedThreatIds","setLinkedThreatIds","mitigationList","saveMitigation","controlList","saveControl","statementList","handleSave","handleReset","handleAddMitigationLink","mitigationIdOrNewMitigation","find","m","id","prev","newMitigation","numericId","content","handleAddControlLink","controlIdOrNewControl","newControl","header","onReset","customEditors","direction","size","children","threatList","onAddThreatLink","onRemoveThreatLink","filter","p","onAddControlLink","onRemoveControlLink","onAddMitigationLink","onRemoveMitigationLink"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/assumptions/AssumptionCreationCard/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport { FC, useState, useCallback } from 'react';\nimport { useMitigationsContext } from '../../../contexts/MitigationsContext/context';\nimport { useControlsContext } from '../../../contexts/ControlsContext/context';\nimport { useThreatsContext } from '../../../contexts/ThreatsContext/context';\nimport { Assumption } from '../../../customTypes';\nimport GenericEntityCreationCard, { DEFAULT_ENTITY } from '../../generic/GenericEntityCreationCard';\nimport MitigationLinkView from '../../mitigations/MitigationLinkView';\nimport ControlLinkView from '../../controls/ControlLinkView';\nimport ThreatLinkView from '../../threats/ThreatLinkView';\n\nexport interface AssumptionCreationCardProps {\n  onSave?: (entity: Assumption, linkedMitigationIds: string[], linkedControlIds: string[], linkedThreatIds: string[]) => void;\n}\n\nconst AssumptionCreationCard: FC<AssumptionCreationCardProps> = ({ onSave }) => {\n  const [editingEntity, setEditingEntity] = useState<Assumption>(DEFAULT_ENTITY);\n  const [linkedMitigationIds, setLinkedMitigationIds] = useState<string[]>([]);\n  const [linkedControlIds, setLinkedControlIds] = useState<string[]>([]);\n  const [linkedThreatIds, setLinkedThreatIds] = useState<string[]>([]);\n\n  const { mitigationList, saveMitigation } = useMitigationsContext();\n  const { controlList, saveControl } = useControlsContext();\n  const { statementList } = useThreatsContext();\n\n  const handleSave = useCallback(() => {\n    onSave?.(editingEntity, linkedMitigationIds, linkedControlIds, linkedThreatIds);\n    setEditingEntity(DEFAULT_ENTITY);\n    setLinkedMitigationIds([]);\n    setLinkedThreatIds([]);\n  }, [editingEntity, linkedMitigationIds, linkedControlIds, linkedThreatIds, onSave]);\n\n  const handleReset = useCallback(() => {\n    setEditingEntity(DEFAULT_ENTITY);\n    setLinkedMitigationIds([]);\n    setLinkedControlIds([]);\n    setLinkedThreatIds([]);\n  }, []);\n\n  const handleAddMitigationLink = useCallback((mitigationIdOrNewMitigation: string) => {\n    if (mitigationList.find(m => m.id === mitigationIdOrNewMitigation)) {\n      setLinkedMitigationIds(prev => [...prev, mitigationIdOrNewMitigation]);\n    } else {\n      const newMitigation = saveMitigation({\n        numericId: -1,\n        content: mitigationIdOrNewMitigation,\n        id: 'new',\n      });\n      setLinkedMitigationIds(prev => [...prev, newMitigation.id]);\n    }\n  }, [mitigationList, saveMitigation]);\n\n  const handleAddControlLink = useCallback((controlIdOrNewControl: string) => {\n    if (controlList.find(m => m.id === controlIdOrNewControl)) {\n      setLinkedControlIds(prev => [...prev, controlIdOrNewControl]);\n    } else {\n      const newControl = saveControl({\n        numericId: -1,\n        content: controlIdOrNewControl,\n        id: 'new',\n      });\n      setLinkedControlIds(prev => [...prev, newControl.id]);\n    }\n  }, [controlList, saveControl]);\n\n  return (<GenericEntityCreationCard\n    editingEntity={editingEntity}\n    setEditingEntity={setEditingEntity}\n    header='Add new assumption'\n    onSave={handleSave}\n    onReset={handleReset}\n    customEditors={<SpaceBetween direction='vertical' size='s'>\n      <ThreatLinkView\n        linkedThreatIds={linkedThreatIds}\n        threatList={statementList}\n        onAddThreatLink={(id) => setLinkedThreatIds(prev => [...prev, id])}\n        onRemoveThreatLink={(id) => setLinkedThreatIds(prev => prev.filter(p => p !== id))}\n      />\n      <ControlLinkView\n        linkedControlIds={linkedControlIds}\n        controlList={controlList}\n        onAddControlLink={handleAddControlLink}\n        onRemoveControlLink={(id) => setLinkedControlIds(prev => prev.filter(p => p !== id))}\n      />\n      <MitigationLinkView\n        linkedMitigationIds={linkedMitigationIds}\n        mitigationList={mitigationList}\n        onAddMitigationLink={handleAddMitigationLink}\n        onRemoveMitigationLink={(id) => setLinkedMitigationIds(prev => prev.filter(p => p !== id))}\n      />\n    </SpaceBetween>}\n  />);\n};\n\nexport default AssumptionCreationCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}