{"ast":null,"code":"var _jsxFileName = \"/Users/sohailsajid/Desktop/threat-modeling-app/src/components/controls/ControlCreationCard/index.tsx\",\n  _s = $RefreshSig$();\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n/** @jsxImportSource @emotion/react */\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport { useState, useCallback, useRef, useMemo } from 'react';\nimport { Button, ColumnLayout, Container, Header, Select, TextContent, Alert } from '@cloudscape-design/components';\nimport getMobileMediaQuery from '../../../utils/getMobileMediaQuery';\nimport * as awsui from '@cloudscape-design/design-tokens';\nimport { css } from '@emotion/react';\nimport Tags from '../ControlCard/components/Tags';\nimport { DEFAULT_NEW_ENTITY_ID } from '../../../configs';\nimport ThreatLinkView from '../../threats/ThreatLinkView';\nimport { useMitigationsContext, useThreatsContext } from '../../../contexts';\nimport MitigationLinkView from '../../mitigations/MitigationLinkView';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst styles = {\n  header: css({\n    display: 'inline-flex',\n    alignItems: 'center',\n    [getMobileMediaQuery()]: {\n      display: 'block',\n      marginTop: awsui.spaceScaledS\n    }\n  }),\n  tags: css({\n    marginRight: awsui.spaceScaledS,\n    marginLeft: awsui.spaceScaledS,\n    [getMobileMediaQuery()]: {\n      marginLeft: '0px'\n    }\n  }),\n  info: css({\n    marginLeft: awsui.spaceScaledS,\n    [getMobileMediaQuery()]: {\n      marginLeft: '0px'\n    }\n  }),\n  finalStatementSection: css({\n    '&:hover': {\n      backgroundColor: awsui.colorBackgroundDropdownItemHover\n    }\n  }),\n  metadataContainer: css({\n    'h3>span>span': {\n      fontSize: '20px'\n    }\n  })\n};\nconst ControlCreationCard = ({\n  onSave,\n  onAddTagToEntity,\n  onRemoveTagFromEntity,\n  controlList\n}) => {\n  _s();\n  var _editingEntity$metada, _editingEntity$metada2;\n  const ref = useRef(null);\n  const DEFAULT_ENTITY = useMemo(() => {\n    return {\n      id: DEFAULT_NEW_ENTITY_ID,\n      numericId: -1,\n      content: '',\n      metadata: [{\n        key: 'Comments',\n        value: ''\n      }, {\n        key: 'STRIDE',\n        value: ''\n      }]\n    };\n  }, []);\n  const [editingEntity, setEditingEntity] = useState(DEFAULT_ENTITY);\n  const [linkedThreatIds, setLinkedThreatIds] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [selectedControl, setSelectedControl] = useState(null);\n  const [controlId, setControlId] = useState(editingEntity.id);\n  const [tags, setTags] = useState(editingEntity.tags);\n  const [metadataComments, setMetadataComments] = useState((_editingEntity$metada = editingEntity.metadata) === null || _editingEntity$metada === void 0 ? void 0 : (_editingEntity$metada2 = _editingEntity$metada.find(m => m.key === 'Comments')) === null || _editingEntity$metada2 === void 0 ? void 0 : _editingEntity$metada2.value);\n  const {\n    statementList\n  } = useThreatsContext();\n  const {\n    mitigationList,\n    saveMitigation\n  } = useMitigationsContext();\n  const [linkedMitigationIds, setLinkedMitigationIds] = useState([]);\n  const handleSave = useCallback(() => {\n    if (linkedThreatIds.length === 0) {\n      setShowAlert(true);\n      return;\n    }\n    editingEntity.id = controlId || 'new';\n    editingEntity.content = (selectedControl === null || selectedControl === void 0 ? void 0 : selectedControl.label) || '';\n    editingEntity.tags = tags || [];\n    if (editingEntity.metadata && editingEntity.metadata.find(m => m.key === 'Comments')) {\n      editingEntity.metadata.find(m => m.key === 'Comments').value = (selectedControl === null || selectedControl === void 0 ? void 0 : selectedControl.description) || '';\n    }\n    if (editingEntity.metadata && editingEntity.metadata.find(m => m.key === 'STRIDE')) {\n      editingEntity.metadata.find(m => m.key === 'STRIDE').value = (selectedControl === null || selectedControl === void 0 ? void 0 : selectedControl.filteringTags) || [];\n    }\n    onSave === null || onSave === void 0 ? void 0 : onSave(editingEntity, linkedMitigationIds, linkedThreatIds);\n    setEditingEntity(DEFAULT_ENTITY);\n    setControlId('new');\n    setSelectedControl(null);\n    setTags([]);\n    setMetadataComments('');\n    setLinkedMitigationIds([]);\n    setLinkedThreatIds([]);\n  }, [controlId, editingEntity, linkedMitigationIds, linkedThreatIds, onSave, selectedControl === null || selectedControl === void 0 ? void 0 : selectedControl.label, selectedControl === null || selectedControl === void 0 ? void 0 : selectedControl.description, tags, DEFAULT_ENTITY, selectedControl === null || selectedControl === void 0 ? void 0 : selectedControl.filteringTags]);\n  const handleReset = useCallback(() => {\n    setEditingEntity(DEFAULT_ENTITY);\n    setControlId('new');\n    setSelectedControl(null);\n    setTags([]);\n    setMetadataComments('');\n    setLinkedMitigationIds([]);\n    setLinkedThreatIds([]);\n  }, [DEFAULT_ENTITY]);\n  const handleControlChange = selectedOption => {\n    setSelectedControl(selectedOption);\n    setControlId(selectedOption.value);\n    setTags(selectedOption.tags);\n    setMetadataComments(selectedOption.description);\n  };\n  const handleAddMitigationLink = useCallback(mitigationIdOrNewMitigation => {\n    if (mitigationList.find(m => m.id === mitigationIdOrNewMitigation)) {\n      setLinkedMitigationIds(prev => [...prev, mitigationIdOrNewMitigation]);\n    } else {\n      const newMitigation = saveMitigation({\n        numericId: -1,\n        content: mitigationIdOrNewMitigation,\n        id: 'new'\n      });\n      setLinkedMitigationIds(prev => [...prev, newMitigation.id]);\n    }\n  }, [mitigationList, saveMitigation]);\n  const handleOnDismissAlert = _event => {\n    setShowAlert(false);\n  };\n  return _jsxDEV(\"div\", {\n    ref: ref,\n    children: _jsxDEV(Container, {\n      header: _jsxDEV(Header, {\n        children: _jsxDEV(\"div\", {\n          css: styles.header,\n          children: ['Add new control', _jsxDEV(\"div\", {\n            css: styles.tags,\n            children: _jsxDEV(Tags, {\n              tags: tags,\n              entityId: controlId,\n              onAddTagToEntity: (_entityId, tag) => onAddTagToEntity === null || onAddTagToEntity === void 0 ? void 0 : onAddTagToEntity(editingEntity, tag),\n              onRemoveTagFromEntity: (_entityId, tag) => onRemoveTagFromEntity === null || onRemoveTagFromEntity === void 0 ? void 0 : onRemoveTagFromEntity(editingEntity, tag)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this),\n      children: _jsxDEV(SpaceBetween, {\n        direction: \"vertical\",\n        size: \"s\",\n        children: [_jsxDEV(SpaceBetween, {\n          direction: \"horizontal\",\n          size: \"s\",\n          children: [_jsxDEV(Button, {\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), _jsxDEV(Button, {\n            variant: \"primary\",\n            disabled: selectedControl === null,\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), _jsxDEV(Alert, {\n            dismissible: true,\n            statusIconAriaLabel: \"Error\",\n            type: \"error\",\n            visible: showAlert,\n            onDismiss: handleOnDismissAlert,\n            header: \"Validation error\",\n            children: \"Select at least one threat from the list.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), _jsxDEV(ColumnLayout, {\n          columns: 2,\n          children: [_jsxDEV(Select, {\n            selectedOption: selectedControl,\n            onChange: ({\n              detail\n            }) => {\n              handleControlChange(detail.selectedOption);\n              setShowAlert(false);\n            },\n            options: controlList === null || controlList === void 0 ? void 0 : controlList.map(c => {\n              var _c$metadata, _c$metadata$find, _c$metadata2, _c$metadata2$find, _c$metadata3, _c$metadata3$find;\n              return {\n                label: c.content,\n                labelTag: ((_c$metadata = c.metadata) === null || _c$metadata === void 0 ? void 0 : (_c$metadata$find = _c$metadata.find(m => m.key === 'STRIDE')) === null || _c$metadata$find === void 0 ? void 0 : _c$metadata$find.value).join(','),\n                value: c.id,\n                description: (_c$metadata2 = c.metadata) === null || _c$metadata2 === void 0 ? void 0 : (_c$metadata2$find = _c$metadata2.find(m => m.key === 'Comments')) === null || _c$metadata2$find === void 0 ? void 0 : _c$metadata2$find.value,\n                tags: c.tags,\n                filteringTags: (_c$metadata3 = c.metadata) === null || _c$metadata3 === void 0 ? void 0 : (_c$metadata3$find = _c$metadata3.find(m => m.key === 'STRIDE')) === null || _c$metadata3$find === void 0 ? void 0 : _c$metadata3$find.value\n              };\n            }),\n            filteringType: \"auto\",\n            placeholder: \"Choose a security control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), _jsxDEV(SpaceBetween, {\n            direction: \"vertical\",\n            size: \"s\",\n            children: [_jsxDEV(ThreatLinkView, {\n              linkedThreatIds: linkedThreatIds,\n              threatList: statementList,\n              onAddThreatLink: id => setLinkedThreatIds(prev => [...prev, id]),\n              onRemoveThreatLink: id => setLinkedThreatIds(prev => prev.filter(p => p !== id))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), _jsxDEV(MitigationLinkView, {\n              linkedMitigationIds: linkedMitigationIds,\n              mitigationList: mitigationList,\n              onAddMitigationLink: handleAddMitigationLink,\n              onRemoveMitigationLink: id => setLinkedMitigationIds(prev => prev.filter(p => p !== id))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), _jsxDEV(TextContent, {\n          children: metadataComments || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlCreationCard, \"qp7dObqcQDQSbtgbLY4AgqPLBvU=\", false, function () {\n  return [useThreatsContext, useMitigationsContext];\n});\n_c = ControlCreationCard;\nexport default ControlCreationCard;\nvar _c;\n$RefreshReg$(_c, \"ControlCreationCard\");","map":{"version":3,"names":["SpaceBetween","useState","useCallback","useRef","useMemo","Button","ColumnLayout","Container","Header","Select","TextContent","Alert","getMobileMediaQuery","awsui","css","Tags","DEFAULT_NEW_ENTITY_ID","ThreatLinkView","useMitigationsContext","useThreatsContext","MitigationLinkView","jsxDEV","_jsxDEV","styles","header","display","alignItems","marginTop","spaceScaledS","tags","marginRight","marginLeft","info","finalStatementSection","backgroundColor","colorBackgroundDropdownItemHover","metadataContainer","fontSize","ControlCreationCard","onSave","onAddTagToEntity","onRemoveTagFromEntity","controlList","_s","_editingEntity$metada","_editingEntity$metada2","ref","DEFAULT_ENTITY","id","numericId","content","metadata","key","value","editingEntity","setEditingEntity","linkedThreatIds","setLinkedThreatIds","showAlert","setShowAlert","selectedControl","setSelectedControl","controlId","setControlId","setTags","metadataComments","setMetadataComments","find","m","statementList","mitigationList","saveMitigation","linkedMitigationIds","setLinkedMitigationIds","handleSave","length","label","description","filteringTags","handleReset","handleControlChange","selectedOption","handleAddMitigationLink","mitigationIdOrNewMitigation","prev","newMitigation","handleOnDismissAlert","_event","children","entityId","_entityId","tag","fileName","_jsxFileName","lineNumber","columnNumber","direction","size","onClick","variant","disabled","dismissible","statusIconAriaLabel","type","visible","onDismiss","columns","onChange","detail","options","map","c","_c$metadata","_c$metadata$find","_c$metadata2","_c$metadata2$find","_c$metadata3","_c$metadata3$find","labelTag","join","filteringType","placeholder","threatList","onAddThreatLink","onRemoveThreatLink","filter","p","onAddMitigationLink","onRemoveMitigationLink","_c","$RefreshReg$"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/controls/ControlCreationCard/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n/** @jsxImportSource @emotion/react */\nimport SpaceBetween from '@cloudscape-design/components/space-between';\nimport { FC, useState, useCallback, useRef, useMemo } from 'react';\nimport { Control } from '../../../customTypes';\nimport { Button, ColumnLayout, Container, Header, Select, TextContent, Alert } from '@cloudscape-design/components';\nimport { OptionDefinition } from '@cloudscape-design/components/internal/components/option/interfaces';\nimport getMobileMediaQuery from '../../../utils/getMobileMediaQuery';\nimport * as awsui from '@cloudscape-design/design-tokens';\nimport { css } from '@emotion/react';\nimport Tags from '../ControlCard/components/Tags';\nimport { DEFAULT_NEW_ENTITY_ID } from '../../../configs';\nimport ThreatLinkView from '../../threats/ThreatLinkView';\nimport { useMitigationsContext, useThreatsContext } from '../../../contexts';\nimport MitigationLinkView from '../../mitigations/MitigationLinkView';\n\nexport interface ControlCreationCardProps {\n  onSave?: (entity: Control, linkedMitigationIds: string[], linkedThreatIds: string[]) => void;\n  onAddTagToEntity?: (entity: Control, tag: string) => void;\n  onRemoveTagFromEntity?: (entity: Control, tag: string) => void;\n  controlList?: Control[];\n}\n\nconst styles = {\n  header: css({\n    display: 'inline-flex',\n    alignItems: 'center',\n    [getMobileMediaQuery()]: {\n      display: 'block',\n      marginTop: awsui.spaceScaledS,\n    },\n  }),\n  tags: css({\n    marginRight: awsui.spaceScaledS,\n    marginLeft: awsui.spaceScaledS,\n    [getMobileMediaQuery()]: {\n      marginLeft: '0px',\n    },\n  }),\n  info: css({\n    marginLeft: awsui.spaceScaledS,\n    [getMobileMediaQuery()]: {\n      marginLeft: '0px',\n    },\n  }),\n  finalStatementSection: css({\n    '&:hover': {\n      backgroundColor: awsui.colorBackgroundDropdownItemHover,\n    },\n  }),\n  metadataContainer: css({\n    'h3>span>span': {\n      fontSize: '20px',\n    },\n  }),\n};\n\nconst ControlCreationCard: FC<ControlCreationCardProps> = ({\n  onSave,\n  onAddTagToEntity,\n  onRemoveTagFromEntity,\n  controlList,\n}) => {\n  const ref = useRef<any>(null);\n  const DEFAULT_ENTITY = useMemo( () => {\n    return {\n      id: DEFAULT_NEW_ENTITY_ID,\n      numericId: -1,\n      content: '',\n      metadata: [\n        {\n          key: 'Comments',\n          value: '',\n        },\n        {\n          key: 'STRIDE',\n          value: '',\n        },\n      ],\n    };\n  }, []);\n  const [editingEntity, setEditingEntity] = useState<Control>(DEFAULT_ENTITY);\n  const [linkedThreatIds, setLinkedThreatIds] = useState<string[]>([]);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [selectedControl, setSelectedControl] = useState<OptionDefinition | null>(null);\n  const [controlId, setControlId] = useState(editingEntity.id);\n  const [tags, setTags] = useState(editingEntity.tags);\n  const [metadataComments, setMetadataComments] = useState(editingEntity.metadata?.find(m => m.key === 'Comments')?.value);\n  const { statementList } = useThreatsContext();\n  const { mitigationList, saveMitigation } = useMitigationsContext();\n  const [linkedMitigationIds, setLinkedMitigationIds] = useState<string[]>([]);\n\n  const handleSave = useCallback(() => {\n    if (linkedThreatIds.length === 0) {\n      setShowAlert(true);\n      return;\n    }\n\n    editingEntity.id = controlId || 'new';\n    editingEntity.content = selectedControl?.label as string || '';\n    editingEntity.tags = tags || [];\n    if ( editingEntity.metadata && editingEntity.metadata.find(m => m.key === 'Comments') ) {\n      editingEntity.metadata!.find(m => m.key === 'Comments')!.value = selectedControl?.description || '';\n    }\n    if ( editingEntity.metadata && editingEntity.metadata.find(m => m.key === 'STRIDE') ) {\n      editingEntity.metadata!.find(m => m.key === 'STRIDE')!.value = selectedControl?.filteringTags as string[] || [];\n    }\n    onSave?.(editingEntity, linkedMitigationIds, linkedThreatIds);\n    setEditingEntity(DEFAULT_ENTITY);\n    setControlId('new');\n    setSelectedControl(null);\n    setTags([]);\n    setMetadataComments('');\n    setLinkedMitigationIds([]);\n    setLinkedThreatIds([]);\n  }, [controlId, editingEntity, linkedMitigationIds, linkedThreatIds,\n    onSave, selectedControl?.label, selectedControl?.description, tags, DEFAULT_ENTITY, selectedControl?.filteringTags]);\n\n  const handleReset = useCallback(() => {\n    setEditingEntity(DEFAULT_ENTITY);\n    setControlId('new');\n    setSelectedControl(null);\n    setTags([]);\n    setMetadataComments('');\n    setLinkedMitigationIds([]);\n    setLinkedThreatIds([]);\n  }, [DEFAULT_ENTITY]);\n\n  const handleControlChange = (selectedOption) => {\n    setSelectedControl(selectedOption);\n    setControlId(selectedOption.value);\n    setTags(selectedOption.tags);\n    setMetadataComments(selectedOption.description);\n  };\n\n  const handleAddMitigationLink = useCallback((mitigationIdOrNewMitigation: string) => {\n    if (mitigationList.find(m => m.id === mitigationIdOrNewMitigation)) {\n      setLinkedMitigationIds(prev => [...prev, mitigationIdOrNewMitigation]);\n    } else {\n      const newMitigation = saveMitigation({\n        numericId: -1,\n        content: mitigationIdOrNewMitigation,\n        id: 'new',\n      });\n      setLinkedMitigationIds(prev => [...prev, newMitigation.id]);\n    }\n  }, [mitigationList, saveMitigation]);\n\n  const handleOnDismissAlert = (_event) => {\n    setShowAlert(false);\n  };\n\n  return (\n    <div ref={ref}>\n      <Container\n        header={\n          <Header>\n            <div css={styles.header}>\n              {'Add new control'}\n              <div css={styles.tags}><Tags\n                tags={tags}\n                entityId={controlId}\n                onAddTagToEntity={(_entityId, tag) => onAddTagToEntity?.(editingEntity, tag)}\n                onRemoveTagFromEntity={(_entityId, tag) => onRemoveTagFromEntity?.(editingEntity, tag)}\n              />\n              </div>\n            </div>\n          </Header>\n        }\n      >\n        <SpaceBetween direction='vertical' size='s'>\n          <SpaceBetween direction='horizontal' size='s'>\n            <Button onClick={handleReset}>Reset</Button>\n            <Button variant='primary' disabled={selectedControl===null} onClick={handleSave}>Save</Button>\n            <Alert\n              dismissible\n              statusIconAriaLabel=\"Error\"\n              type=\"error\"\n              visible={showAlert}\n              onDismiss={handleOnDismissAlert}\n              header=\"Validation error\" >\n              Select at least one threat from the list.\n            </Alert>\n          </SpaceBetween>\n          <ColumnLayout columns={2}>\n            <Select\n              selectedOption={selectedControl}\n              onChange={({ detail }) => {\n                handleControlChange(detail.selectedOption);\n                setShowAlert(false);\n              }}\n              options={controlList?.map(c => ({\n                label: c.content,\n                labelTag: (c.metadata?.find(m => m.key === 'STRIDE')?.value as string[]).join(','),\n                value: c.id,\n                description: c.metadata?.find(m => m.key === 'Comments')?.value as string,\n                tags: c.tags,\n                filteringTags: c.metadata?.find(m => m.key === 'STRIDE')?.value as string[],\n              }))}\n              filteringType=\"auto\"\n              placeholder=\"Choose a security control\"\n            />\n            <SpaceBetween direction='vertical' size='s'>\n              <ThreatLinkView\n                linkedThreatIds={linkedThreatIds}\n                threatList={statementList}\n                onAddThreatLink={(id) => setLinkedThreatIds(prev => [...prev, id])}\n                onRemoveThreatLink={(id) => setLinkedThreatIds(prev => prev.filter(p => p !== id))}\n              />\n              <MitigationLinkView\n                linkedMitigationIds={linkedMitigationIds}\n                mitigationList={mitigationList}\n                onAddMitigationLink={handleAddMitigationLink}\n                onRemoveMitigationLink={(id) => setLinkedMitigationIds(prev => prev.filter(p => p !== id))}\n              />\n            </SpaceBetween>\n          </ColumnLayout>\n          <TextContent>\n            {metadataComments || ''}\n          </TextContent>\n        </SpaceBetween>\n      </Container>\n    </div>\n  );\n};\n\nexport default ControlCreationCard;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,6CAA6C;AACtE,SAAaC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAElE,SAASC,MAAM,EAAEC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,KAAK,QAAQ,+BAA+B;AAEnH,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,OAAO,KAAKC,KAAK,MAAM,kCAAkC;AACzD,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,IAAI,MAAM,gCAAgC;AACjD,SAASC,qBAAqB,QAAQ,kBAAkB;AACxD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,qBAAqB,EAAEC,iBAAiB,QAAQ,mBAAmB;AAC5E,OAAOC,kBAAkB,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAStE,MAAMC,MAAM,GAAG;EACbC,MAAM,EAAEV,GAAG,CAAC;IACVW,OAAO,EAAE,aAAa;IACtBC,UAAU,EAAE,QAAQ;IACpB,CAACd,mBAAmB,CAAC,CAAC,GAAG;MACvBa,OAAO,EAAE,OAAO;MAChBE,SAAS,EAAEd,KAAK,CAACe;IACnB;EACF,CAAC,CAAC;EACFC,IAAI,EAAEf,GAAG,CAAC;IACRgB,WAAW,EAAEjB,KAAK,CAACe,YAAY;IAC/BG,UAAU,EAAElB,KAAK,CAACe,YAAY;IAC9B,CAAChB,mBAAmB,CAAC,CAAC,GAAG;MACvBmB,UAAU,EAAE;IACd;EACF,CAAC,CAAC;EACFC,IAAI,EAAElB,GAAG,CAAC;IACRiB,UAAU,EAAElB,KAAK,CAACe,YAAY;IAC9B,CAAChB,mBAAmB,CAAC,CAAC,GAAG;MACvBmB,UAAU,EAAE;IACd;EACF,CAAC,CAAC;EACFE,qBAAqB,EAAEnB,GAAG,CAAC;IACzB,SAAS,EAAE;MACToB,eAAe,EAAErB,KAAK,CAACsB;IACzB;EACF,CAAC,CAAC;EACFC,iBAAiB,EAAEtB,GAAG,CAAC;IACrB,cAAc,EAAE;MACduB,QAAQ,EAAE;IACZ;EACF,CAAC;AACH,CAAC;AAED,MAAMC,mBAAiD,GAAGA,CAAC;EACzDC,MAAM;EACNC,gBAAgB;EAChBC,qBAAqB;EACrBC;AACF,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACJ,MAAMC,GAAG,GAAG3C,MAAM,CAAM,IAAI,CAAC;EAC7B,MAAM4C,cAAc,GAAG3C,OAAO,CAAE,MAAM;IACpC,OAAO;MACL4C,EAAE,EAAEhC,qBAAqB;MACzBiC,SAAS,EAAE,CAAC,CAAC;MACbC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,CACR;QACEC,GAAG,EAAE,UAAU;QACfC,KAAK,EAAE;MACT,CAAC,EACD;QACED,GAAG,EAAE,QAAQ;QACbC,KAAK,EAAE;MACT,CAAC;IAEL,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtD,QAAQ,CAAU8C,cAAc,CAAC;EAC3E,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGxD,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACyD,SAAS,EAAEC,YAAY,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAAC2D,eAAe,EAAEC,kBAAkB,CAAC,GAAG5D,QAAQ,CAA0B,IAAI,CAAC;EACrF,MAAM,CAAC6D,SAAS,EAAEC,YAAY,CAAC,GAAG9D,QAAQ,CAACqD,aAAa,CAACN,EAAE,CAAC;EAC5D,MAAM,CAACnB,IAAI,EAAEmC,OAAO,CAAC,GAAG/D,QAAQ,CAACqD,aAAa,CAACzB,IAAI,CAAC;EACpD,MAAM,CAACoC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjE,QAAQ,EAAA2C,qBAAA,GAACU,aAAa,CAACH,QAAQ,cAAAP,qBAAA,wBAAAC,sBAAA,GAAtBD,qBAAA,CAAwBuB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,UAAU,CAAC,cAAAP,sBAAA,uBAAvDA,sBAAA,CAAyDQ,KAAK,CAAC;EACxH,MAAM;IAAEgB;EAAc,CAAC,GAAGlD,iBAAiB,CAAC,CAAC;EAC7C,MAAM;IAAEmD,cAAc;IAAEC;EAAe,CAAC,GAAGrD,qBAAqB,CAAC,CAAC;EAClE,MAAM,CAACsD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxE,QAAQ,CAAW,EAAE,CAAC;EAE5E,MAAMyE,UAAU,GAAGxE,WAAW,CAAC,MAAM;IACnC,IAAIsD,eAAe,CAACmB,MAAM,KAAK,CAAC,EAAE;MAChChB,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;IAEAL,aAAa,CAACN,EAAE,GAAGc,SAAS,IAAI,KAAK;IACrCR,aAAa,CAACJ,OAAO,GAAG,CAAAU,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgB,KAAK,KAAc,EAAE;IAC9DtB,aAAa,CAACzB,IAAI,GAAGA,IAAI,IAAI,EAAE;IAC/B,IAAKyB,aAAa,CAACH,QAAQ,IAAIG,aAAa,CAACH,QAAQ,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,UAAU,CAAC,EAAG;MACtFE,aAAa,CAACH,QAAQ,CAAEgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,UAAU,CAAC,CAAEC,KAAK,GAAG,CAAAO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEiB,WAAW,KAAI,EAAE;IACrG;IACA,IAAKvB,aAAa,CAACH,QAAQ,IAAIG,aAAa,CAACH,QAAQ,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,QAAQ,CAAC,EAAG;MACpFE,aAAa,CAACH,QAAQ,CAAEgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,QAAQ,CAAC,CAAEC,KAAK,GAAG,CAAAO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEkB,aAAa,KAAgB,EAAE;IACjH;IACAvC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAGe,aAAa,EAAEkB,mBAAmB,EAAEhB,eAAe,CAAC;IAC7DD,gBAAgB,CAACR,cAAc,CAAC;IAChCgB,YAAY,CAAC,KAAK,CAAC;IACnBF,kBAAkB,CAAC,IAAI,CAAC;IACxBG,OAAO,CAAC,EAAE,CAAC;IACXE,mBAAmB,CAAC,EAAE,CAAC;IACvBO,sBAAsB,CAAC,EAAE,CAAC;IAC1BhB,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC,EAAE,CAACK,SAAS,EAAER,aAAa,EAAEkB,mBAAmB,EAAEhB,eAAe,EAChEjB,MAAM,EAAEqB,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgB,KAAK,EAAEhB,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEiB,WAAW,EAAEhD,IAAI,EAAEkB,cAAc,EAAEa,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEkB,aAAa,CAAC,CAAC;EAEtH,MAAMC,WAAW,GAAG7E,WAAW,CAAC,MAAM;IACpCqD,gBAAgB,CAACR,cAAc,CAAC;IAChCgB,YAAY,CAAC,KAAK,CAAC;IACnBF,kBAAkB,CAAC,IAAI,CAAC;IACxBG,OAAO,CAAC,EAAE,CAAC;IACXE,mBAAmB,CAAC,EAAE,CAAC;IACvBO,sBAAsB,CAAC,EAAE,CAAC;IAC1BhB,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC,EAAE,CAACV,cAAc,CAAC,CAAC;EAEpB,MAAMiC,mBAAmB,GAAIC,cAAc,IAAK;IAC9CpB,kBAAkB,CAACoB,cAAc,CAAC;IAClClB,YAAY,CAACkB,cAAc,CAAC5B,KAAK,CAAC;IAClCW,OAAO,CAACiB,cAAc,CAACpD,IAAI,CAAC;IAC5BqC,mBAAmB,CAACe,cAAc,CAACJ,WAAW,CAAC;EACjD,CAAC;EAED,MAAMK,uBAAuB,GAAGhF,WAAW,CAAEiF,2BAAmC,IAAK;IACnF,IAAIb,cAAc,CAACH,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKmC,2BAA2B,CAAC,EAAE;MAClEV,sBAAsB,CAACW,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,2BAA2B,CAAC,CAAC;IACxE,CAAC,MAAM;MACL,MAAME,aAAa,GAAGd,cAAc,CAAC;QACnCtB,SAAS,EAAE,CAAC,CAAC;QACbC,OAAO,EAAEiC,2BAA2B;QACpCnC,EAAE,EAAE;MACN,CAAC,CAAC;MACFyB,sBAAsB,CAACW,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEC,aAAa,CAACrC,EAAE,CAAC,CAAC;IAC7D;EACF,CAAC,EAAE,CAACsB,cAAc,EAAEC,cAAc,CAAC,CAAC;EAEpC,MAAMe,oBAAoB,GAAIC,MAAM,IAAK;IACvC5B,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OACErC,OAAA;IAAKwB,GAAG,EAAEA,GAAI;IAAA0C,QAAA,EACZlE,OAAA,CAACf,SAAS;MACRiB,MAAM,EACJF,OAAA,CAACd,MAAM;QAAAgF,QAAA,EACLlE,OAAA;UAAKR,GAAG,EAAES,MAAM,CAACC,MAAO;UAAAgE,QAAA,GACrB,iBAAiB,EAClBlE,OAAA;YAAKR,GAAG,EAAES,MAAM,CAACM,IAAK;YAAA2D,QAAA,EAAClE,OAAA,CAACP,IAAI;cAC1Bc,IAAI,EAAEA,IAAK;cACX4D,QAAQ,EAAE3B,SAAU;cACpBtB,gBAAgB,EAAEA,CAACkD,SAAS,EAAEC,GAAG,KAAKnD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAGc,aAAa,EAAEqC,GAAG,CAAE;cAC7ElD,qBAAqB,EAAEA,CAACiD,SAAS,EAAEC,GAAG,KAAKlD,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAGa,aAAa,EAAEqC,GAAG;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACT;MAAAP,QAAA,EAEDlE,OAAA,CAACtB,YAAY;QAACgG,SAAS,EAAC,UAAU;QAACC,IAAI,EAAC,GAAG;QAAAT,QAAA,GACzClE,OAAA,CAACtB,YAAY;UAACgG,SAAS,EAAC,YAAY;UAACC,IAAI,EAAC,GAAG;UAAAT,QAAA,GAC3ClE,OAAA,CAACjB,MAAM;YAAC6F,OAAO,EAAEnB,WAAY;YAAAS,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC5CzE,OAAA,CAACjB,MAAM;YAAC8F,OAAO,EAAC,SAAS;YAACC,QAAQ,EAAExC,eAAe,KAAG,IAAK;YAACsC,OAAO,EAAExB,UAAW;YAAAc,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC9FzE,OAAA,CAACX,KAAK;YACJ0F,WAAW;YACXC,mBAAmB,EAAC,OAAO;YAC3BC,IAAI,EAAC,OAAO;YACZC,OAAO,EAAE9C,SAAU;YACnB+C,SAAS,EAAEnB,oBAAqB;YAChC9D,MAAM,EAAC,kBAAkB;YAAAgE,QAAA,EAAE;UAE7B;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,EACfzE,OAAA,CAAChB,YAAY;UAACoG,OAAO,EAAE,CAAE;UAAAlB,QAAA,GACvBlE,OAAA,CAACb,MAAM;YACLwE,cAAc,EAAErB,eAAgB;YAChC+C,QAAQ,EAAEA,CAAC;cAAEC;YAAO,CAAC,KAAK;cACxB5B,mBAAmB,CAAC4B,MAAM,CAAC3B,cAAc,CAAC;cAC1CtB,YAAY,CAAC,KAAK,CAAC;YACrB,CAAE;YACFkD,OAAO,EAAEnE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEoE,GAAG,CAACC,CAAC;cAAA,IAAAC,WAAA,EAAAC,gBAAA,EAAAC,YAAA,EAAAC,iBAAA,EAAAC,YAAA,EAAAC,iBAAA;cAAA,OAAK;gBAC9BzC,KAAK,EAAEmC,CAAC,CAAC7D,OAAO;gBAChBoE,QAAQ,EAAE,EAAAN,WAAA,GAACD,CAAC,CAAC5D,QAAQ,cAAA6D,WAAA,wBAAAC,gBAAA,GAAVD,WAAA,CAAY7C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,QAAQ,CAAC,cAAA6D,gBAAA,uBAAzCA,gBAAA,CAA2C5D,KAAK,EAAckE,IAAI,CAAC,GAAG,CAAC;gBAClFlE,KAAK,EAAE0D,CAAC,CAAC/D,EAAE;gBACX6B,WAAW,GAAAqC,YAAA,GAAEH,CAAC,CAAC5D,QAAQ,cAAA+D,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAY/C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,UAAU,CAAC,cAAA+D,iBAAA,uBAA3CA,iBAAA,CAA6C9D,KAAe;gBACzExB,IAAI,EAAEkF,CAAC,CAAClF,IAAI;gBACZiD,aAAa,GAAAsC,YAAA,GAAEL,CAAC,CAAC5D,QAAQ,cAAAiE,YAAA,wBAAAC,iBAAA,GAAVD,YAAA,CAAYjD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,GAAG,KAAK,QAAQ,CAAC,cAAAiE,iBAAA,uBAAzCA,iBAAA,CAA2ChE;cAC5D,CAAC;YAAA,CAAC,CAAE;YACJmE,aAAa,EAAC,MAAM;YACpBC,WAAW,EAAC;UAA2B;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,EACFzE,OAAA,CAACtB,YAAY;YAACgG,SAAS,EAAC,UAAU;YAACC,IAAI,EAAC,GAAG;YAAAT,QAAA,GACzClE,OAAA,CAACL,cAAc;cACbuC,eAAe,EAAEA,eAAgB;cACjCkE,UAAU,EAAErD,aAAc;cAC1BsD,eAAe,EAAG3E,EAAE,IAAKS,kBAAkB,CAAC2B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEpC,EAAE,CAAC,CAAE;cACnE4E,kBAAkB,EAAG5E,EAAE,IAAKS,kBAAkB,CAAC2B,IAAI,IAAIA,IAAI,CAACyC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK9E,EAAE,CAAC;YAAE;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpF,CAAC,EACFzE,OAAA,CAACF,kBAAkB;cACjBoD,mBAAmB,EAAEA,mBAAoB;cACzCF,cAAc,EAAEA,cAAe;cAC/ByD,mBAAmB,EAAE7C,uBAAwB;cAC7C8C,sBAAsB,EAAGhF,EAAE,IAAKyB,sBAAsB,CAACW,IAAI,IAAIA,IAAI,CAACyC,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK9E,EAAE,CAAC;YAAE;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EACfzE,OAAA,CAACZ,WAAW;UAAA8E,QAAA,EACTvB,gBAAgB,IAAI;QAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACpD,EAAA,CAxKIL,mBAAiD;EAAA,QAgC3BnB,iBAAiB,EACAD,qBAAqB;AAAA;AAAA+G,EAAA,GAjC5D3F,mBAAiD;AA0KvD,eAAeA,mBAAmB;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}