{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import CloudscapeAutosuggest from'@cloudscape-design/components/autosuggest';import FormField from'@cloudscape-design/components/form-field';import React,{useCallback,useState}from'react';import useContentValidation from'../../../hooks/useContentValidation';import{jsx as _jsx}from\"react/jsx-runtime\";const Autosuggest=/*#__PURE__*/React.forwardRef((_ref,ref)=>{let{onChange,value,validateData,errorText:_errorText,...props}=_ref;const[resetErrorText,setResetErrorText]=useState();const{tempValue,errorText,handleChange}=useContentValidation(value,onChange,validateData);const handleKeyDown=useCallback(event=>{var _props$onKeyDown;if(event.detail.keyCode===8&&!value&&errorText){// When the value is empty, press backspace to reset the errorText.\nsetResetErrorText(true);}else{setResetErrorText(false);}(_props$onKeyDown=props.onKeyDown)===null||_props$onKeyDown===void 0?void 0:_props$onKeyDown.call(props,event);},[errorText,value,props]);return/*#__PURE__*/_jsx(FormField,{...props,errorText:resetErrorText?undefined:errorText,children:/*#__PURE__*/_jsx(CloudscapeAutosuggest,{...props,ref:ref,value:errorText?value:tempValue,onChange:event=>handleChange(event),onKeyDown:handleKeyDown})});});export default Autosuggest;","map":{"version":3,"names":["CloudscapeAutosuggest","FormField","React","useCallback","useState","useContentValidation","jsx","_jsx","Autosuggest","forwardRef","_ref","ref","onChange","value","validateData","errorText","_errorText","props","resetErrorText","setResetErrorText","tempValue","handleChange","handleKeyDown","event","_props$onKeyDown","detail","keyCode","onKeyDown","call","undefined","children"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/generic/Autosuggest/index.tsx"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport CloudscapeAutosuggest, { AutosuggestProps as CloudscapeAutosuggestProps } from '@cloudscape-design/components/autosuggest';\nimport FormField, { FormFieldProps } from '@cloudscape-design/components/form-field';\nimport { BaseKeyDetail, CancelableEventHandler } from '@cloudscape-design/components/internal/events';\nimport React, { FC, useCallback, useState } from 'react';\nimport { z } from 'zod';\nimport useContentValidation from '../../../hooks/useContentValidation';\n\nexport interface AutosuggestProps extends FormFieldProps, Omit<CloudscapeAutosuggestProps, 'errorText'> {\n  ref?: React.ForwardedRef<any>;\n  validateData?: (newValue: string) => z.SafeParseReturnType<string | undefined, string | undefined>;\n}\n\nconst Autosuggest: FC<AutosuggestProps> = React.forwardRef<CloudscapeAutosuggestProps.Ref, AutosuggestProps>(({\n  onChange,\n  value,\n  validateData,\n  errorText: _errorText,\n  ...props\n},\nref) => {\n  const [resetErrorText, setResetErrorText] = useState<boolean>();\n  const { tempValue, errorText, handleChange } = useContentValidation(value, onChange, validateData);\n\n  const handleKeyDown: CancelableEventHandler<BaseKeyDetail> = useCallback((event) => {\n    if (event.detail.keyCode === 8 && !value && errorText) {\n      // When the value is empty, press backspace to reset the errorText.\n      setResetErrorText(true);\n    } else {\n      setResetErrorText(false);\n    }\n\n    props.onKeyDown?.(event);\n  },\n  [errorText, value, props]);\n\n  return (\n    <FormField\n      {...props}\n      errorText={resetErrorText ? undefined : errorText}\n    >\n      <CloudscapeAutosuggest\n        {...props}\n        ref={ref}\n        value={errorText ? value : tempValue}\n        onChange={event =>\n          handleChange(event)\n        }\n        onKeyDown={handleKeyDown}\n      />\n    </FormField>);\n});\n\nexport default Autosuggest;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAEA,MAAO,CAAAA,qBAAqB,KAA0D,2CAA2C,CACjI,MAAO,CAAAC,SAAS,KAA0B,0CAA0C,CAEpF,MAAO,CAAAC,KAAK,EAAQC,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAExD,MAAO,CAAAC,oBAAoB,KAAM,qCAAqC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAOvE,KAAM,CAAAC,WAAiC,cAAGN,KAAK,CAACO,UAAU,CAAmD,CAAAC,IAAA,CAO7GC,GAAG,GAAK,IAPsG,CAC5GC,QAAQ,CACRC,KAAK,CACLC,YAAY,CACZC,SAAS,CAAEC,UAAU,CACrB,GAAGC,KACL,CAAC,CAAAP,IAAA,CAEC,KAAM,CAACQ,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAU,CAAC,CAC/D,KAAM,CAAEgB,SAAS,CAAEL,SAAS,CAAEM,YAAa,CAAC,CAAGhB,oBAAoB,CAACQ,KAAK,CAAED,QAAQ,CAAEE,YAAY,CAAC,CAElG,KAAM,CAAAQ,aAAoD,CAAGnB,WAAW,CAAEoB,KAAK,EAAK,KAAAC,gBAAA,CAClF,GAAID,KAAK,CAACE,MAAM,CAACC,OAAO,GAAK,CAAC,EAAI,CAACb,KAAK,EAAIE,SAAS,CAAE,CACrD;AACAI,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,IAAM,CACLA,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CAEA,CAAAK,gBAAA,CAAAP,KAAK,CAACU,SAAS,UAAAH,gBAAA,iBAAfA,gBAAA,CAAAI,IAAA,CAAAX,KAAK,CAAaM,KAAK,CAAC,CAC1B,CAAC,CACD,CAACR,SAAS,CAAEF,KAAK,CAAEI,KAAK,CAAC,CAAC,CAE1B,mBACEV,IAAA,CAACN,SAAS,KACJgB,KAAK,CACTF,SAAS,CAAEG,cAAc,CAAGW,SAAS,CAAGd,SAAU,CAAAe,QAAA,cAElDvB,IAAA,CAACP,qBAAqB,KAChBiB,KAAK,CACTN,GAAG,CAAEA,GAAI,CACTE,KAAK,CAAEE,SAAS,CAAGF,KAAK,CAAGO,SAAU,CACrCR,QAAQ,CAAEW,KAAK,EACbF,YAAY,CAACE,KAAK,CACnB,CACDI,SAAS,CAAEL,aAAc,CAC1B,CAAC,CACO,CAAC,CAChB,CAAC,CAAC,CAEF,cAAe,CAAAd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}