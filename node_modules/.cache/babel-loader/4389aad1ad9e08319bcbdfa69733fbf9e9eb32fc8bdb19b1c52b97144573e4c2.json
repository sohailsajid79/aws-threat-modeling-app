{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport InternalRadioGroup from '../radio-group/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { getAnalyticsInnerContextAttribute } from './analytics-metadata/utils';\nimport styles from './styles.css.js';\nexport const copyPreferences = ({\n  pageSize,\n  wrapLines,\n  stripedRows,\n  contentDensity,\n  visibleContent,\n  contentDisplay,\n  stickyColumns,\n  custom\n}) => ({\n  pageSize,\n  wrapLines,\n  stripedRows,\n  contentDensity,\n  visibleContent,\n  contentDisplay,\n  stickyColumns,\n  custom\n});\nexport const mergePreferences = (newPref, oldPref) => {\n  const newObj = Object.assign({}, oldPref);\n  const prefNames = ['pageSize', 'wrapLines', 'stripedRows', 'contentDensity', 'visibleContent', 'custom', 'contentDisplay', 'stickyColumns'];\n  for (const prefName of prefNames) {\n    if (newPref[prefName] !== undefined) {\n      newObj[prefName] = newPref[prefName];\n    }\n  }\n  return newObj;\n};\nexport const ModalContentLayout = ({\n  left,\n  right\n}) => {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const smallContainer = breakpoint === 'default';\n  const columns = left && right ? 2 : 1;\n  return React.createElement(\"div\", {\n    ref: ref\n  }, React.createElement(InternalColumnLayout, {\n    columns: smallContainer ? 1 : columns,\n    variant: \"text-grid\"\n  }, left && React.createElement(\"div\", null, left), right && React.createElement(\"div\", {\n    className: clsx(left && smallContainer && styles['second-column-small'])\n  }, right)));\n};\nexport const PageSizePreference = ({\n  title,\n  options,\n  value,\n  onChange\n}) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({\n    className: styles['page-size']\n  }, getAnalyticsInnerContextAttribute('pageSize')), React.createElement(InternalFormField, {\n    label: i18n('pageSizePreference.title', title),\n    stretch: true,\n    className: styles['page-size-form-field']\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['page-size-radio-group'],\n    value: `${value}`,\n    items: options.map(({\n      label,\n      value\n    }) => ({\n      label,\n      value: `${value}`\n    })),\n    onChange: ({\n      detail\n    }) => onChange(parseInt(detail.value, 10))\n  })));\n};\nexport const WrapLinesPreference = ({\n  label,\n  description,\n  value,\n  onChange\n}) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({}, getAnalyticsInnerContextAttribute('wrapLines')), React.createElement(InternalCheckbox, {\n    checked: !!value,\n    description: i18n('wrapLinesPreference.description', description),\n    onChange: ({\n      detail\n    }) => onChange(detail.checked),\n    className: styles['wrap-lines']\n  }, i18n('wrapLinesPreference.label', label)));\n};\nexport function StripedRowsPreference({\n  label,\n  description,\n  value,\n  onChange\n}) {\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({}, getAnalyticsInnerContextAttribute('stripedRows')), React.createElement(InternalCheckbox, {\n    checked: !!value,\n    description: i18n('stripedRowsPreference.description', description),\n    onChange: ({\n      detail\n    }) => onChange(detail.checked),\n    className: styles['striped-rows']\n  }, i18n('stripedRowsPreference.label', label)));\n}\nexport const ContentDensityPreference = ({\n  label,\n  description,\n  value,\n  onChange\n}) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return React.createElement(\"div\", Object.assign({}, getAnalyticsInnerContextAttribute('contentDensity')), React.createElement(InternalCheckbox, {\n    checked: value === 'compact',\n    description: i18n('contentDensityPreference.description', description),\n    onChange: ({\n      detail\n    }) => onChange(detail.checked ? 'compact' : 'comfortable'),\n    className: styles['content-density']\n  }, i18n('contentDensityPreference.label', label)));\n};\nconst StickyPreference = ({\n  firstOrLast,\n  preference,\n  value,\n  onChange\n}) => {\n  const {\n    title,\n    description,\n    options\n  } = preference;\n  return React.createElement(\"div\", Object.assign({\n    className: styles[`sticky-columns-${firstOrLast}`]\n  }, getAnalyticsInnerContextAttribute('stickyColumns')), React.createElement(InternalFormField, {\n    className: styles['sticky-columns-form-field'],\n    label: title,\n    description: description\n  }, React.createElement(InternalRadioGroup, {\n    className: styles['sticky-columns-radio-group'],\n    value: typeof value !== 'undefined' ? `${value}` : null,\n    items: options.map(({\n      label,\n      value\n    }) => ({\n      label,\n      value: `${value}`\n    })),\n    onChange: ({\n      detail\n    }) => onChange(Number(detail.value))\n  })));\n};\nexport const StickyColumnsPreference = ({\n  firstColumns,\n  lastColumns,\n  onChange,\n  value\n}) => {\n  return React.createElement(InternalSpaceBetween, {\n    className: styles['sticky-columns'],\n    size: \"l\"\n  }, firstColumns && React.createElement(StickyPreference, {\n    firstOrLast: \"first\",\n    preference: firstColumns,\n    value: value === null || value === void 0 ? void 0 : value.first,\n    onChange: newValue => onChange(Object.assign(Object.assign({}, value), {\n      first: newValue\n    }))\n  }), lastColumns && React.createElement(StickyPreference, {\n    firstOrLast: \"last\",\n    preference: lastColumns,\n    value: value === null || value === void 0 ? void 0 : value.last,\n    onChange: newValue => onChange(Object.assign(Object.assign({}, value), {\n      last: newValue\n    }))\n  }));\n};\nexport const CustomPreference = ({\n  value,\n  customPreference,\n  onChange\n}) => {\n  const [customState, setCustomState] = useState(value);\n  if (customPreference) {\n    return React.createElement(\"div\", Object.assign({\n      className: styles.custom\n    }, getAnalyticsInnerContextAttribute('custom')), customPreference(customState, value => {\n      // prevent value to be treated as a functional callback\n      setCustomState(() => value);\n      onChange(value);\n    }));\n  }\n  return null;\n};","map":{"version":3,"names":["React","useState","clsx","InternalCheckbox","InternalColumnLayout","InternalFormField","useInternalI18n","useContainerBreakpoints","InternalRadioGroup","InternalSpaceBetween","getAnalyticsInnerContextAttribute","styles","copyPreferences","pageSize","wrapLines","stripedRows","contentDensity","visibleContent","contentDisplay","stickyColumns","custom","mergePreferences","newPref","oldPref","newObj","Object","assign","prefNames","prefName","undefined","ModalContentLayout","left","right","breakpoint","ref","smallContainer","columns","createElement","variant","className","PageSizePreference","title","options","value","onChange","i18n","label","stretch","items","map","detail","parseInt","WrapLinesPreference","description","checked","StripedRowsPreference","ContentDensityPreference","StickyPreference","firstOrLast","preference","Number","StickyColumnsPreference","firstColumns","lastColumns","size","first","newValue","last","CustomPreference","customPreference","customState","setCustomState"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/collection-preferences/utils.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\n\nimport InternalCheckbox from '../checkbox/internal';\nimport InternalColumnLayout from '../column-layout/internal';\nimport InternalFormField from '../form-field/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport InternalRadioGroup from '../radio-group/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { getAnalyticsInnerContextAttribute } from './analytics-metadata/utils';\nimport { CollectionPreferencesProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport const copyPreferences = ({\n  pageSize,\n  wrapLines,\n  stripedRows,\n  contentDensity,\n  visibleContent,\n  contentDisplay,\n  stickyColumns,\n  custom,\n}: CollectionPreferencesProps.Preferences): CollectionPreferencesProps.Preferences => ({\n  pageSize,\n  wrapLines,\n  stripedRows,\n  contentDensity,\n  visibleContent,\n  contentDisplay,\n  stickyColumns,\n  custom,\n});\n\ntype CopyPreferenceName = keyof CollectionPreferencesProps.Preferences;\n\nexport const mergePreferences = (\n  newPref: CollectionPreferencesProps.Preferences,\n  oldPref: CollectionPreferencesProps.Preferences\n): CollectionPreferencesProps.Preferences => {\n  const newObj = { ...oldPref };\n  const prefNames: CopyPreferenceName[] = [\n    'pageSize',\n    'wrapLines',\n    'stripedRows',\n    'contentDensity',\n    'visibleContent',\n    'custom',\n    'contentDisplay',\n    'stickyColumns',\n  ];\n  for (const prefName of prefNames) {\n    if (newPref[prefName] !== undefined) {\n      newObj[prefName] = newPref[prefName];\n    }\n  }\n  return newObj;\n};\n\ninterface ModalContentLayoutProps {\n  left: React.ReactNode;\n  right: React.ReactNode;\n}\n\nexport const ModalContentLayout = ({ left, right }: ModalContentLayoutProps) => {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const smallContainer = breakpoint === 'default';\n\n  const columns = left && right ? 2 : 1;\n  return (\n    <div ref={ref}>\n      <InternalColumnLayout columns={smallContainer ? 1 : columns} variant=\"text-grid\">\n        {left && <div>{left}</div>}\n        {right && <div className={clsx(left && smallContainer && styles['second-column-small'])}>{right}</div>}\n      </InternalColumnLayout>\n    </div>\n  );\n};\n\ninterface PageSizePreferenceProps extends CollectionPreferencesProps.PageSizePreference {\n  onChange: (value: number) => void;\n  value?: number;\n}\n\nexport const PageSizePreference = ({ title, options, value, onChange }: PageSizePreferenceProps) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div className={styles['page-size']} {...getAnalyticsInnerContextAttribute('pageSize')}>\n      <InternalFormField\n        label={i18n('pageSizePreference.title', title)}\n        stretch={true}\n        className={styles['page-size-form-field']}\n      >\n        <InternalRadioGroup\n          className={styles['page-size-radio-group']}\n          value={`${value}`}\n          items={options.map(({ label, value }) => ({ label, value: `${value}` }))}\n          onChange={({ detail }) => onChange(parseInt(detail.value, 10))}\n        />\n      </InternalFormField>\n    </div>\n  );\n};\n\ninterface WrapLinesPreferenceProps extends CollectionPreferencesProps.WrapLinesPreference {\n  onChange: (value: boolean) => void;\n  value?: boolean;\n}\n\nexport const WrapLinesPreference = ({ label, description, value, onChange }: WrapLinesPreferenceProps) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div {...getAnalyticsInnerContextAttribute('wrapLines')}>\n      <InternalCheckbox\n        checked={!!value}\n        description={i18n('wrapLinesPreference.description', description)}\n        onChange={({ detail }) => onChange(detail.checked)}\n        className={styles['wrap-lines']}\n      >\n        {i18n('wrapLinesPreference.label', label)}\n      </InternalCheckbox>\n    </div>\n  );\n};\n\ninterface StripedRowsPreferenceProps extends CollectionPreferencesProps.StripedRowsPreference {\n  onChange: (value: boolean) => void;\n  value?: boolean;\n}\n\nexport function StripedRowsPreference({ label, description, value, onChange }: StripedRowsPreferenceProps) {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div {...getAnalyticsInnerContextAttribute('stripedRows')}>\n      <InternalCheckbox\n        checked={!!value}\n        description={i18n('stripedRowsPreference.description', description)}\n        onChange={({ detail }) => onChange(detail.checked)}\n        className={styles['striped-rows']}\n      >\n        {i18n('stripedRowsPreference.label', label)}\n      </InternalCheckbox>\n    </div>\n  );\n}\n\ninterface ContentDensityPreferenceProps extends CollectionPreferencesProps.ContentDensityPreference {\n  onChange: (value: 'comfortable' | 'compact') => void;\n  value?: 'comfortable' | 'compact';\n}\n\nexport const ContentDensityPreference = ({ label, description, value, onChange }: ContentDensityPreferenceProps) => {\n  const i18n = useInternalI18n('collection-preferences');\n  return (\n    <div {...getAnalyticsInnerContextAttribute('contentDensity')}>\n      <InternalCheckbox\n        checked={value === 'compact'}\n        description={i18n('contentDensityPreference.description', description)}\n        onChange={({ detail }) => onChange(detail.checked ? 'compact' : 'comfortable')}\n        className={styles['content-density']}\n      >\n        {i18n('contentDensityPreference.label', label)}\n      </InternalCheckbox>\n    </div>\n  );\n};\n\ninterface StickyColumnsPreferenceProps extends CollectionPreferencesProps.StickyColumnsPreference {\n  onChange: (value?: { first?: number; last?: number }) => void;\n  value?: { first?: number; last?: number };\n}\ninterface StickyPreference extends CollectionPreferencesProps.StickyColumnsPreference {\n  onChange: (value: number) => void;\n  preference: {\n    title: string;\n    description: string;\n    options: ReadonlyArray<{\n      label: string;\n      value: number;\n    }>;\n  };\n  value?: number;\n  firstOrLast: 'first' | 'last';\n}\n\nconst StickyPreference = ({ firstOrLast, preference, value, onChange }: StickyPreference) => {\n  const { title, description, options } = preference;\n  return (\n    <div className={styles[`sticky-columns-${firstOrLast}`]} {...getAnalyticsInnerContextAttribute('stickyColumns')}>\n      <InternalFormField className={styles['sticky-columns-form-field']} label={title} description={description}>\n        <InternalRadioGroup\n          className={styles['sticky-columns-radio-group']}\n          value={typeof value !== 'undefined' ? `${value}` : null}\n          items={options.map(({ label, value }) => ({ label, value: `${value}` }))}\n          onChange={({ detail }) => onChange(Number(detail.value))}\n        />\n      </InternalFormField>\n    </div>\n  );\n};\n\nexport const StickyColumnsPreference = ({\n  firstColumns,\n  lastColumns,\n  onChange,\n  value,\n}: StickyColumnsPreferenceProps) => {\n  return (\n    <InternalSpaceBetween className={styles['sticky-columns']} size=\"l\">\n      {firstColumns && (\n        <StickyPreference\n          firstOrLast=\"first\"\n          preference={firstColumns}\n          value={value?.first}\n          onChange={newValue => onChange({ ...value, first: newValue })}\n        />\n      )}\n      {lastColumns && (\n        <StickyPreference\n          firstOrLast=\"last\"\n          preference={lastColumns}\n          value={value?.last}\n          onChange={newValue => onChange({ ...value, last: newValue })}\n        />\n      )}\n    </InternalSpaceBetween>\n  );\n};\n\ninterface CustomPreferenceProps<T = any> extends Pick<CollectionPreferencesProps<T>, 'customPreference'> {\n  onChange: (value: T) => void;\n  value: T;\n}\nexport const CustomPreference = ({ value, customPreference, onChange }: CustomPreferenceProps) => {\n  const [customState, setCustomState] = useState(value);\n  if (customPreference) {\n    return (\n      <div className={styles.custom} {...getAnalyticsInnerContextAttribute('custom')}>\n        {customPreference(customState, value => {\n          // prevent value to be treated as a functional callback\n          setCustomState(() => value);\n          onChange(value);\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}