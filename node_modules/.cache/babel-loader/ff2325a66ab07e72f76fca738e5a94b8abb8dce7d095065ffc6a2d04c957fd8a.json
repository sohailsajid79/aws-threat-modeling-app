{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport InternalBox from '../box/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { formatDateRange, isIsoDateOnly } from '../internal/utils/date-time';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport { joinStrings } from '../internal/utils/strings/join-strings';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { normalizeTimeOffset, shiftTimeOffset } from './time-offset';\nimport { formatValue } from './utils';\nimport styles from './styles.css.js';\nfunction renderDateRange(_ref) {\n  let {\n    locale,\n    range,\n    placeholder = '',\n    formatRelativeRange,\n    absoluteFormat,\n    hideTimeOffset,\n    timeOffset\n  } = _ref;\n  var _a;\n  if (!range) {\n    return React.createElement(\"span\", {\n      className: styles['label-text'],\n      \"aria-disabled\": true\n    }, placeholder);\n  }\n  const formatted = range.type === 'relative' ? (_a = formatRelativeRange === null || formatRelativeRange === void 0 ? void 0 : formatRelativeRange(range)) !== null && _a !== void 0 ? _a : '' : React.createElement(BreakSpaces, {\n    text: formatDateRange({\n      startDate: range.startDate,\n      endDate: range.endDate,\n      timeOffset,\n      hideTimeOffset,\n      format: absoluteFormat,\n      locale\n    })\n  });\n  return React.createElement(InternalBox, {\n    fontWeight: \"normal\",\n    display: \"inline\",\n    color: \"inherit\",\n    variant: \"span\"\n  }, formatted);\n}\nfunction BreakSpaces(_ref2) {\n  let {\n    text\n  } = _ref2;\n  const tokens = text.split(/( )/);\n  return React.createElement(React.Fragment, null, tokens.map((token, index) => React.createElement(React.Fragment, {\n    key: index\n  }, token.length > 1 ? React.createElement(\"span\", {\n    className: styles['label-token-nowrap']\n  }, token) : token, token === ' ' && React.createElement(\"wbr\", null))));\n}\nfunction isDateOnly(value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate);\n}\nconst DateRangePicker = React.forwardRef((_a, ref) => {\n  var _b, _c;\n  var {\n      locale = '',\n      startOfWeek,\n      isDateEnabled = () => true,\n      dateDisabledReason = () => '',\n      value,\n      placeholder,\n      readOnly = false,\n      disabled = false,\n      onChange,\n      onBlur,\n      onFocus,\n      relativeOptions = [],\n      i18nStrings,\n      isValidRange = () => ({\n        valid: true\n      }),\n      showClearButton = true,\n      dateOnly = false,\n      timeOffset,\n      getTimeOffset,\n      timeInputFormat = 'hh:mm:ss',\n      expandToViewport = false,\n      rangeSelectorMode = 'default',\n      customAbsoluteRangeControl,\n      absoluteFormat = 'iso',\n      hideTimeOffset,\n      customRelativeRangeUnits\n    } = _a,\n    rest = __rest(_a, [\"locale\", \"startOfWeek\", \"isDateEnabled\", \"dateDisabledReason\", \"value\", \"placeholder\", \"readOnly\", \"disabled\", \"onChange\", \"onBlur\", \"onFocus\", \"relativeOptions\", \"i18nStrings\", \"isValidRange\", \"showClearButton\", \"dateOnly\", \"timeOffset\", \"getTimeOffset\", \"timeInputFormat\", \"expandToViewport\", \"rangeSelectorMode\", \"customAbsoluteRangeControl\", \"absoluteFormat\", \"hideTimeOffset\", \"customRelativeRangeUnits\"]);\n  const {\n    __internalRootRef\n  } = useBaseComponent('DateRangePicker', {\n    props: {\n      absoluteFormat,\n      dateOnly,\n      expandToViewport,\n      rangeSelectorMode,\n      readOnly,\n      showClearButton,\n      timeInputFormat,\n      hideTimeOffset\n    }\n  });\n  checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n  const normalizedTimeOffset = normalizeTimeOffset(value, getTimeOffset, timeOffset);\n  value = isDateOnly(value) ? value : shiftTimeOffset(value, normalizedTimeOffset);\n  const baseProps = getBaseProps(rest);\n  const {\n    invalid,\n    warning,\n    controlId,\n    ariaDescribedby,\n    ariaLabelledby\n  } = useFormFieldContext(Object.assign({\n    ariaLabelledby: (_b = rest.ariaLabelledby) !== null && _b !== void 0 ? _b : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabelledby,\n    ariaDescribedby: (_c = rest.ariaDescribedby) !== null && _c !== void 0 ? _c : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaDescribedby\n  }, rest));\n  const isSingleGrid = useMobile();\n  const triggerRef = useRef(null);\n  useForwardFocus(ref, triggerRef);\n  const rootRef = useRef(null);\n  const dropdownId = useUniqueId('date-range-picker-dropdown');\n  const triggerContentId = useUniqueId('date-range-picker-trigger');\n  useFocusTracker({\n    rootRef,\n    onBlur,\n    onFocus\n  });\n  const [isDropDownOpen, setIsDropDownOpen] = useState(false);\n  const normalizedLocale = normalizeLocale('DateRangePicker', locale);\n  const closeDropdown = function () {\n    let focusTrigger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var _a;\n    setIsDropDownOpen(false);\n    if (focusTrigger) {\n      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  const onWrapperKeyDownHandler = event => {\n    if (event.keyCode === KeyCode.escape) {\n      if (isDropDownOpen) {\n        event.stopPropagation();\n      }\n      closeDropdown(true);\n    }\n  };\n  const onClear = () => {\n    fireNonCancelableEvent(onChange, {\n      value: null\n    });\n  };\n  const onApply = newValue => {\n    const formattedValue = formatValue(newValue, {\n      dateOnly,\n      timeOffset: normalizeTimeOffset(newValue, getTimeOffset, timeOffset)\n    });\n    const validationResult = isValidRange(formattedValue);\n    if ((validationResult === null || validationResult === void 0 ? void 0 : validationResult.valid) === false) {\n      return validationResult;\n    }\n    if (isDevelopment) {\n      if ((newValue === null || newValue === void 0 ? void 0 : newValue.type) === 'absolute') {\n        const [startDateWithoutTime] = newValue.startDate.split('T');\n        const [endDateWithoutTime] = newValue.endDate.split('T');\n        if (!startDateWithoutTime || !endDateWithoutTime) {\n          warnOnce('DateRangePicker', 'You have provided an `isValidRange` prop that did not catch a missing start or end date.');\n        }\n      }\n    }\n    fireNonCancelableEvent(onChange, {\n      value: formattedValue\n    });\n    return validationResult || {\n      valid: true\n    };\n  };\n  const prevDateOnly = usePrevious(dateOnly);\n  useEffect(() => {\n    if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n      warnOnce('DateRangePicker', `The provided \\`dateOnly\\` flag has been changed from \"${prevDateOnly}\" to \"${dateOnly}\" which can lead to unexpected value format. Consider using separate components.`);\n    }\n  }, [prevDateOnly, dateOnly]);\n  if (value && value.type !== 'absolute' && value.type !== 'relative') {\n    warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n    value = null;\n  }\n  if ((value === null || value === void 0 ? void 0 : value.type) === 'absolute' && rangeSelectorMode === 'relative-only' || (value === null || value === void 0 ? void 0 : value.type) === 'relative' && rangeSelectorMode === 'absolute-only') {\n    warnOnce('DateRangePicker', 'The provided value does not correspond to the current range selector mode. Reverting back to default.');\n    value = null;\n  }\n  const i18n = useInternalI18n('date-range-picker');\n  const formatRelativeRange = i18n('i18nStrings.formatRelativeRange', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.formatRelativeRange, format => _ref3 => {\n    let {\n      amount,\n      unit\n    } = _ref3;\n    return format({\n      amount,\n      unit\n    });\n  });\n  if (isDevelopment) {\n    if (!formatRelativeRange && rangeSelectorMode !== 'absolute-only') {\n      warnOnce('DateRangePicker', 'A function for i18nStrings.formatRelativeRange was not provided. Relative ranges will not be correctly rendered.');\n    }\n  }\n  const formattedDate = renderDateRange({\n    locale: normalizedLocale,\n    range: value,\n    placeholder,\n    formatRelativeRange,\n    absoluteFormat,\n    hideTimeOffset,\n    timeOffset: normalizedTimeOffset\n  });\n  const trigger = React.createElement(ButtonTrigger, {\n    ref: triggerRef,\n    id: controlId,\n    invalid: invalid,\n    warning: warning,\n    ariaLabelledby: joinStrings(ariaLabelledby, triggerContentId),\n    ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel,\n    ariaDescribedby: ariaDescribedby,\n    className: clsx(styles.label, {\n      [styles['label-enabled']]: !readOnly && !disabled\n    }),\n    hideCaret: true,\n    onClick: () => {\n      setIsDropDownOpen(true);\n    },\n    disabled: disabled,\n    readOnly: readOnly,\n    ariaHasPopup: \"dialog\"\n  }, React.createElement(\"span\", {\n    className: styles['trigger-flexbox']\n  }, React.createElement(\"span\", {\n    className: styles['icon-wrapper']\n  }, React.createElement(InternalIcon, {\n    name: \"calendar\",\n    variant: disabled || readOnly ? 'disabled' : 'normal'\n  })), React.createElement(\"span\", {\n    id: triggerContentId\n  }, formattedDate)));\n  const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    ref: mergedRef,\n    className: clsx(baseProps.className, styles.root, absoluteFormat === 'long-localized' && !dateOnly && styles.wide),\n    onKeyDown: onWrapperKeyDownHandler\n  }), React.createElement(Dropdown, {\n    stretchWidth: true,\n    stretchHeight: true,\n    open: isDropDownOpen,\n    onDropdownClose: () => closeDropdown(),\n    trigger: trigger,\n    stretchToTriggerWidth: false,\n    expandToViewport: expandToViewport,\n    dropdownId: dropdownId\n  }, React.createElement(ResetContextsForModal, null, isDropDownOpen && React.createElement(DateRangePickerDropdown, {\n    startOfWeek: startOfWeek,\n    locale: normalizedLocale,\n    isSingleGrid: isSingleGrid,\n    onDropdownClose: () => closeDropdown(true),\n    value: value,\n    showClearButton: showClearButton,\n    isDateEnabled: isDateEnabled,\n    dateDisabledReason: dateDisabledReason,\n    i18nStrings: i18nStrings,\n    onClear: onClear,\n    onApply: onApply,\n    getTimeOffset: getTimeOffset,\n    timeOffset: timeOffset,\n    relativeOptions: relativeOptions,\n    isValidRange: isValidRange,\n    dateOnly: dateOnly,\n    timeInputFormat: timeInputFormat,\n    rangeSelectorMode: rangeSelectorMode,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    customAbsoluteRangeControl: customAbsoluteRangeControl,\n    customRelativeRangeUnits: customRelativeRangeUnits\n  }))));\n});\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;","map":{"version":3,"names":["React","useEffect","useRef","useState","clsx","warnOnce","InternalBox","useInternalI18n","InternalIcon","getBaseProps","ButtonTrigger","Dropdown","useFormFieldContext","ResetContextsForModal","fireNonCancelableEvent","checkControlled","useForwardFocus","useBaseComponent","useFocusTracker","useMergeRefs","useMobile","usePrevious","useUniqueId","isDevelopment","KeyCode","applyDisplayName","formatDateRange","isIsoDateOnly","normalizeLocale","joinStrings","DateRangePickerDropdown","normalizeTimeOffset","shiftTimeOffset","formatValue","styles","renderDateRange","_ref","locale","range","placeholder","formatRelativeRange","absoluteFormat","hideTimeOffset","timeOffset","createElement","className","formatted","type","_a","BreakSpaces","text","startDate","endDate","format","fontWeight","display","color","variant","_ref2","tokens","split","Fragment","map","token","index","key","length","isDateOnly","value","DateRangePicker","forwardRef","ref","startOfWeek","isDateEnabled","dateDisabledReason","readOnly","disabled","onChange","onBlur","onFocus","relativeOptions","i18nStrings","isValidRange","valid","showClearButton","dateOnly","getTimeOffset","timeInputFormat","expandToViewport","rangeSelectorMode","customAbsoluteRangeControl","customRelativeRangeUnits","rest","__rest","__internalRootRef","props","normalizedTimeOffset","baseProps","invalid","warning","controlId","ariaDescribedby","ariaLabelledby","Object","assign","_b","_c","isSingleGrid","triggerRef","rootRef","dropdownId","triggerContentId","isDropDownOpen","setIsDropDownOpen","normalizedLocale","closeDropdown","focusTrigger","arguments","undefined","current","focus","onWrapperKeyDownHandler","event","keyCode","escape","stopPropagation","onClear","onApply","newValue","formattedValue","validationResult","startDateWithoutTime","endDateWithoutTime","prevDateOnly","i18n","_ref3","amount","unit","formattedDate","trigger","id","ariaLabel","label","hideCaret","onClick","ariaHasPopup","name","mergedRef","root","wide","onKeyDown","stretchWidth","stretchHeight","open","onDropdownClose","stretchToTriggerWidth"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/date-range-picker/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalBox from '../box/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport InternalIcon from '../icon/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ButtonTrigger from '../internal/components/button-trigger';\nimport Dropdown from '../internal/components/dropdown';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport ResetContextsForModal from '../internal/context/reset-contexts-for-modal.js';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport checkControlled from '../internal/hooks/check-controlled';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useFocusTracker } from '../internal/hooks/use-focus-tracker';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { isDevelopment } from '../internal/is-development.js';\nimport { KeyCode } from '../internal/keycode';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { formatDateRange, isIsoDateOnly } from '../internal/utils/date-time';\nimport { normalizeLocale } from '../internal/utils/locale';\nimport { joinStrings } from '../internal/utils/strings/join-strings';\nimport { DateRangePickerDropdown } from './dropdown';\nimport { DateRangePickerProps } from './interfaces';\nimport { normalizeTimeOffset, shiftTimeOffset } from './time-offset';\nimport { formatValue } from './utils';\n\nimport styles from './styles.css.js';\n\nexport { DateRangePickerProps };\n\nfunction renderDateRange({\n  locale,\n  range,\n  placeholder = '',\n  formatRelativeRange,\n  absoluteFormat,\n  hideTimeOffset,\n  timeOffset,\n}: {\n  locale?: string;\n  range: null | DateRangePickerProps.Value;\n  placeholder?: string;\n  formatRelativeRange: DateRangePickerProps.I18nStrings['formatRelativeRange'];\n  absoluteFormat: DateRangePickerProps.AbsoluteFormat;\n  hideTimeOffset?: boolean;\n  timeOffset: { startDate?: number; endDate?: number };\n}) {\n  if (!range) {\n    return (\n      <span className={styles['label-text']} aria-disabled={true}>\n        {placeholder}\n      </span>\n    );\n  }\n\n  const formatted =\n    range.type === 'relative' ? (\n      formatRelativeRange?.(range) ?? ''\n    ) : (\n      <BreakSpaces\n        text={formatDateRange({\n          startDate: range.startDate,\n          endDate: range.endDate,\n          timeOffset,\n          hideTimeOffset,\n          format: absoluteFormat,\n          locale,\n        })}\n      />\n    );\n\n  return (\n    <InternalBox fontWeight=\"normal\" display=\"inline\" color=\"inherit\" variant=\"span\">\n      {formatted}\n    </InternalBox>\n  );\n}\n\nfunction BreakSpaces({ text }: { text: string }) {\n  const tokens = text.split(/( )/);\n  return (\n    <>\n      {tokens.map((token, index) => (\n        <React.Fragment key={index}>\n          {token.length > 1 ? <span className={styles['label-token-nowrap']}>{token}</span> : token}\n          {token === ' ' && <wbr />}\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n\nfunction isDateOnly(value: null | DateRangePickerProps.Value) {\n  if (!value || value.type !== 'absolute') {\n    return false;\n  }\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate);\n}\n\nconst DateRangePicker = React.forwardRef(\n  (\n    {\n      locale = '',\n      startOfWeek,\n      isDateEnabled = () => true,\n      dateDisabledReason = () => '',\n      value,\n      placeholder,\n      readOnly = false,\n      disabled = false,\n      onChange,\n      onBlur,\n      onFocus,\n      relativeOptions = [],\n      i18nStrings,\n      isValidRange = () => ({ valid: true }),\n      showClearButton = true,\n      dateOnly = false,\n      timeOffset,\n      getTimeOffset,\n      timeInputFormat = 'hh:mm:ss',\n      expandToViewport = false,\n      rangeSelectorMode = 'default',\n      customAbsoluteRangeControl,\n      absoluteFormat = 'iso',\n      hideTimeOffset,\n      customRelativeRangeUnits,\n      ...rest\n    }: DateRangePickerProps,\n    ref: Ref<DateRangePickerProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent('DateRangePicker', {\n      props: {\n        absoluteFormat,\n        dateOnly,\n        expandToViewport,\n        rangeSelectorMode,\n        readOnly,\n        showClearButton,\n        timeInputFormat,\n        hideTimeOffset,\n      },\n    });\n    checkControlled('DateRangePicker', 'value', value, 'onChange', onChange);\n\n    const normalizedTimeOffset = normalizeTimeOffset(value, getTimeOffset, timeOffset);\n    value = isDateOnly(value) ? value : shiftTimeOffset(value, normalizedTimeOffset);\n\n    const baseProps = getBaseProps(rest);\n    const { invalid, warning, controlId, ariaDescribedby, ariaLabelledby } = useFormFieldContext({\n      ariaLabelledby: rest.ariaLabelledby ?? i18nStrings?.ariaLabelledby,\n      ariaDescribedby: rest.ariaDescribedby ?? i18nStrings?.ariaDescribedby,\n      ...rest,\n    });\n    const isSingleGrid = useMobile();\n\n    const triggerRef = useRef<HTMLButtonElement | null>(null);\n    useForwardFocus(ref, triggerRef);\n\n    const rootRef = useRef<HTMLDivElement>(null);\n    const dropdownId = useUniqueId('date-range-picker-dropdown');\n    const triggerContentId = useUniqueId('date-range-picker-trigger');\n\n    useFocusTracker({ rootRef, onBlur, onFocus });\n\n    const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n\n    const normalizedLocale = normalizeLocale('DateRangePicker', locale);\n\n    const closeDropdown = (focusTrigger = false) => {\n      setIsDropDownOpen(false);\n      if (focusTrigger) {\n        triggerRef.current?.focus();\n      }\n    };\n\n    const onWrapperKeyDownHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.keyCode === KeyCode.escape) {\n        if (isDropDownOpen) {\n          event.stopPropagation();\n        }\n        closeDropdown(true);\n      }\n    };\n\n    const onClear = () => {\n      fireNonCancelableEvent(onChange, { value: null });\n    };\n\n    const onApply = (newValue: null | DateRangePickerProps.Value): DateRangePickerProps.ValidationResult => {\n      const formattedValue = formatValue(newValue, {\n        dateOnly,\n        timeOffset: normalizeTimeOffset(newValue, getTimeOffset, timeOffset),\n      });\n\n      const validationResult = isValidRange(formattedValue);\n      if (validationResult?.valid === false) {\n        return validationResult;\n      }\n\n      if (isDevelopment) {\n        if (newValue?.type === 'absolute') {\n          const [startDateWithoutTime] = newValue.startDate.split('T');\n          const [endDateWithoutTime] = newValue.endDate.split('T');\n          if (!startDateWithoutTime || !endDateWithoutTime) {\n            warnOnce(\n              'DateRangePicker',\n              'You have provided an `isValidRange` prop that did not catch a missing start or end date.'\n            );\n          }\n        }\n      }\n      fireNonCancelableEvent(onChange, { value: formattedValue });\n      return validationResult || { valid: true };\n    };\n\n    const prevDateOnly = usePrevious(dateOnly);\n    useEffect(() => {\n      if (prevDateOnly !== undefined && prevDateOnly !== dateOnly) {\n        warnOnce(\n          'DateRangePicker',\n          `The provided \\`dateOnly\\` flag has been changed from \"${prevDateOnly}\" to \"${dateOnly}\" which can lead to unexpected value format. Consider using separate components.`\n        );\n      }\n    }, [prevDateOnly, dateOnly]);\n\n    if (value && value.type !== 'absolute' && value.type !== 'relative') {\n      warnOnce('DateRangePicker', 'You provided an invalid value. Reverting back to default.');\n      value = null;\n    }\n\n    if (\n      (value?.type === 'absolute' && rangeSelectorMode === 'relative-only') ||\n      (value?.type === 'relative' && rangeSelectorMode === 'absolute-only')\n    ) {\n      warnOnce(\n        'DateRangePicker',\n        'The provided value does not correspond to the current range selector mode. Reverting back to default.'\n      );\n      value = null;\n    }\n\n    const i18n = useInternalI18n('date-range-picker');\n    const formatRelativeRange = i18n(\n      'i18nStrings.formatRelativeRange',\n      i18nStrings?.formatRelativeRange,\n      format =>\n        ({ amount, unit }) =>\n          format({ amount, unit })\n    );\n\n    if (isDevelopment) {\n      if (!formatRelativeRange && rangeSelectorMode !== 'absolute-only') {\n        warnOnce(\n          'DateRangePicker',\n          'A function for i18nStrings.formatRelativeRange was not provided. Relative ranges will not be correctly rendered.'\n        );\n      }\n    }\n\n    const formattedDate: string | JSX.Element = renderDateRange({\n      locale: normalizedLocale,\n      range: value,\n      placeholder,\n      formatRelativeRange,\n      absoluteFormat,\n      hideTimeOffset,\n      timeOffset: normalizedTimeOffset,\n    });\n\n    const trigger = (\n      <ButtonTrigger\n        ref={triggerRef}\n        id={controlId}\n        invalid={invalid}\n        warning={warning}\n        ariaLabelledby={joinStrings(ariaLabelledby, triggerContentId)}\n        ariaLabel={i18nStrings?.ariaLabel}\n        ariaDescribedby={ariaDescribedby}\n        className={clsx(styles.label, {\n          [styles['label-enabled']]: !readOnly && !disabled,\n        })}\n        hideCaret={true}\n        onClick={() => {\n          setIsDropDownOpen(true);\n        }}\n        disabled={disabled}\n        readOnly={readOnly}\n        ariaHasPopup=\"dialog\"\n      >\n        <span className={styles['trigger-flexbox']}>\n          <span className={styles['icon-wrapper']}>\n            <InternalIcon name=\"calendar\" variant={disabled || readOnly ? 'disabled' : 'normal'} />\n          </span>\n          <span id={triggerContentId}>{formattedDate}</span>\n        </span>\n      </ButtonTrigger>\n    );\n\n    const mergedRef = useMergeRefs(rootRef, __internalRootRef);\n\n    return (\n      <div\n        {...baseProps}\n        ref={mergedRef}\n        className={clsx(\n          baseProps.className,\n          styles.root,\n          absoluteFormat === 'long-localized' && !dateOnly && styles.wide\n        )}\n        onKeyDown={onWrapperKeyDownHandler}\n      >\n        <Dropdown\n          stretchWidth={true}\n          stretchHeight={true}\n          open={isDropDownOpen}\n          onDropdownClose={() => closeDropdown()}\n          trigger={trigger}\n          stretchToTriggerWidth={false}\n          expandToViewport={expandToViewport}\n          dropdownId={dropdownId}\n        >\n          {/* Reset form field context to prevent a wrapper form field from labelling all inputs inside the dropdown. */}\n          <ResetContextsForModal>\n            {isDropDownOpen && (\n              <DateRangePickerDropdown\n                startOfWeek={startOfWeek}\n                locale={normalizedLocale}\n                isSingleGrid={isSingleGrid}\n                onDropdownClose={() => closeDropdown(true)}\n                value={value}\n                showClearButton={showClearButton}\n                isDateEnabled={isDateEnabled}\n                dateDisabledReason={dateDisabledReason}\n                i18nStrings={i18nStrings}\n                onClear={onClear}\n                onApply={onApply}\n                getTimeOffset={getTimeOffset}\n                timeOffset={timeOffset}\n                relativeOptions={relativeOptions}\n                isValidRange={isValidRange}\n                dateOnly={dateOnly}\n                timeInputFormat={timeInputFormat}\n                rangeSelectorMode={rangeSelectorMode}\n                ariaLabelledby={ariaLabelledby}\n                ariaDescribedby={ariaDescribedby}\n                customAbsoluteRangeControl={customAbsoluteRangeControl}\n                customRelativeRangeUnits={customRelativeRangeUnits}\n              />\n            )}\n          </ResetContextsForModal>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\napplyDisplayName(DateRangePicker, 'DateRangePicker');\nexport default DateRangePicker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}