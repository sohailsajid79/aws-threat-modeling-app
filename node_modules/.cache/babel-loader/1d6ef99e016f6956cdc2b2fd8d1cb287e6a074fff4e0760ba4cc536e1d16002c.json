{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MFATotpView from '../MFATotpSetupView';\nimport { useCallback } from 'react';\nconst MFATotpSetup = _ref => {\n  let {\n    cognitoUser,\n    resetView,\n    secretCode\n  } = _ref;\n  const handleConfirm = useCallback(async data => {\n    return new Promise((resolve, reject) => {\n      cognitoUser.verifySoftwareToken(data.confirmationCode, '', {\n        onSuccess() {\n          resolve({});\n          resetView();\n        },\n        onFailure(err) {\n          console.error('Cognito verifySoftwareToken Failure', err);\n          reject(err);\n        }\n      });\n    });\n  }, [resetView, cognitoUser]);\n  return _jsx(MFATotpView, {\n    secretCode: secretCode,\n    onConfirm: handleConfirm,\n    onBackToSignIn: resetView\n  });\n};\nexport default MFATotpSetup;","map":{"version":3,"names":["jsx","_jsx","MFATotpView","useCallback","MFATotpSetup","_ref","cognitoUser","resetView","secretCode","handleConfirm","data","Promise","resolve","reject","verifySoftwareToken","confirmationCode","onSuccess","onFailure","err","console","error","onConfirm","onBackToSignIn"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/MFATotpSetup/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MFATotpView from '../MFATotpSetupView';\nimport { useCallback } from 'react';\nconst MFATotpSetup = ({ cognitoUser, resetView, secretCode }) => {\n    const handleConfirm = useCallback(async (data) => {\n        return new Promise((resolve, reject) => {\n            cognitoUser.verifySoftwareToken(data.confirmationCode, '', {\n                onSuccess() {\n                    resolve({});\n                    resetView();\n                },\n                onFailure(err) {\n                    console.error('Cognito verifySoftwareToken Failure', err);\n                    reject(err);\n                },\n            });\n        });\n    }, [resetView, cognitoUser]);\n    return _jsx(MFATotpView, { secretCode: secretCode, onConfirm: handleConfirm, onBackToSignIn: resetView });\n};\nexport default MFATotpSetup;\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,WAAW,QAAQ,OAAO;AACnC,MAAMC,YAAY,GAAGC,IAAA,IAA4C;EAAA,IAA3C;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACxD,MAAMI,aAAa,GAAGN,WAAW,CAAC,MAAOO,IAAI,IAAK;IAC9C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCP,WAAW,CAACQ,mBAAmB,CAACJ,IAAI,CAACK,gBAAgB,EAAE,EAAE,EAAE;QACvDC,SAASA,CAAA,EAAG;UACRJ,OAAO,CAAC,CAAC,CAAC,CAAC;UACXL,SAAS,CAAC,CAAC;QACf,CAAC;QACDU,SAASA,CAACC,GAAG,EAAE;UACXC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,GAAG,CAAC;UACzDL,MAAM,CAACK,GAAG,CAAC;QACf;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,SAAS,EAAED,WAAW,CAAC,CAAC;EAC5B,OAAOL,IAAI,CAACC,WAAW,EAAE;IAAEM,UAAU,EAAEA,UAAU;IAAEa,SAAS,EAAEZ,aAAa;IAAEa,cAAc,EAAEf;EAAU,CAAC,CAAC;AAC7G,CAAC;AACD,eAAeH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}