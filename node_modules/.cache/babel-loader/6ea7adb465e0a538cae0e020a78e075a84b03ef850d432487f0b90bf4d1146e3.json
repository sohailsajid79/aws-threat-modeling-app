{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nconst CONTENT_MIN_HEIGHT_BOUNDARY = 40;\nexport const CartesianChartContainer = forwardRef((_ref, ref) => {\n  let {\n    minHeight,\n    fitHeight,\n    leftAxisLabel,\n    leftAxisLabelMeasure,\n    bottomAxisLabel,\n    chartPlot,\n    popover,\n    hasFilters\n  } = _ref;\n  if (fitHeight) {\n    return React.createElement(\"div\", {\n      className: clsx(styles['chart-container'], styles['fit-height']),\n      ref: ref\n    }, leftAxisLabel, React.createElement(\"div\", {\n      className: clsx(styles['chart-container-outer'], styles['fit-height'], hasFilters && styles['has-filters'])\n    }, leftAxisLabelMeasure, React.createElement(\"div\", {\n      className: styles['chart-container-inner']\n    }, React.createElement(\"div\", {\n      className: clsx(styles['chart-container-plot-wrapper'], styles['fit-height']),\n      style: {\n        minHeight: Math.max(minHeight, CONTENT_MIN_HEIGHT_BOUNDARY)\n      }\n    }, React.createElement(\"div\", {\n      className: clsx(styles['chart-container-plot'], styles['fit-height'])\n    }, chartPlot)), React.createElement(\"div\", {\n      className: clsx(styles['chart-container-bottom-labels'], styles['fit-height'])\n    }, bottomAxisLabel)), popover));\n  }\n  return React.createElement(\"div\", {\n    className: styles['chart-container'],\n    ref: ref\n  }, leftAxisLabel, React.createElement(\"div\", {\n    className: styles['chart-container-outer']\n  }, leftAxisLabelMeasure, React.createElement(\"div\", {\n    className: styles['chart-container-inner']\n  }, chartPlot, bottomAxisLabel), popover));\n});","map":{"version":3,"names":["React","forwardRef","clsx","styles","CONTENT_MIN_HEIGHT_BOUNDARY","CartesianChartContainer","_ref","ref","minHeight","fitHeight","leftAxisLabel","leftAxisLabelMeasure","bottomAxisLabel","chartPlot","popover","hasFilters","createElement","className","style","Math","max"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/internal/components/cartesian-chart/chart-container.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.css.js';\n\ninterface CartesianChartContainerProps {\n  minHeight: number;\n  fitHeight: boolean;\n  hasFilters: boolean;\n  leftAxisLabel: React.ReactNode;\n  leftAxisLabelMeasure: React.ReactNode;\n  bottomAxisLabel: React.ReactNode;\n  chartPlot: React.ReactNode;\n  popover: React.ReactNode;\n}\n\nconst CONTENT_MIN_HEIGHT_BOUNDARY = 40;\n\nexport const CartesianChartContainer = forwardRef(\n  (\n    {\n      minHeight,\n      fitHeight,\n      leftAxisLabel,\n      leftAxisLabelMeasure,\n      bottomAxisLabel,\n      chartPlot,\n      popover,\n      hasFilters,\n    }: CartesianChartContainerProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    if (fitHeight) {\n      return (\n        <div className={clsx(styles['chart-container'], styles['fit-height'])} ref={ref}>\n          {leftAxisLabel}\n\n          <div\n            className={clsx(styles['chart-container-outer'], styles['fit-height'], hasFilters && styles['has-filters'])}\n          >\n            {leftAxisLabelMeasure}\n\n            <div className={styles['chart-container-inner']}>\n              <div\n                className={clsx(styles['chart-container-plot-wrapper'], styles['fit-height'])}\n                style={{ minHeight: Math.max(minHeight, CONTENT_MIN_HEIGHT_BOUNDARY) }}\n              >\n                <div className={clsx(styles['chart-container-plot'], styles['fit-height'])}>{chartPlot}</div>\n              </div>\n\n              <div className={clsx(styles['chart-container-bottom-labels'], styles['fit-height'])}>\n                {bottomAxisLabel}\n              </div>\n            </div>\n\n            {popover}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles['chart-container']} ref={ref}>\n        {leftAxisLabel}\n\n        <div className={styles['chart-container-outer']}>\n          {leftAxisLabelMeasure}\n\n          <div className={styles['chart-container-inner']}>\n            {chartPlot}\n            {bottomAxisLabel}\n          </div>\n\n          {popover}\n        </div>\n      </div>\n    );\n  }\n);\n"],"mappings":"AAAA;AACA;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,MAAM,MAAM,iBAAiB;AAapC,MAAMC,2BAA2B,GAAG,EAAE;AAEtC,OAAO,MAAMC,uBAAuB,GAAGJ,UAAU,CAC/C,CAAAK,IAAA,EAWEC,GAA8B,KAC5B;EAAA,IAXF;IACEC,SAAS;IACTC,SAAS;IACTC,aAAa;IACbC,oBAAoB;IACpBC,eAAe;IACfC,SAAS;IACTC,OAAO;IACPC;EAAU,CACmB,GAAAT,IAAA;EAG/B,IAAIG,SAAS,EAAE;IACb,OACET,KAAA,CAAAgB,aAAA;MAAKC,SAAS,EAAEf,IAAI,CAACC,MAAM,CAAC,iBAAiB,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC,CAAC;MAAEI,GAAG,EAAEA;IAAG,GAC5EG,aAAa,EAEdV,KAAA,CAAAgB,aAAA;MACEC,SAAS,EAAEf,IAAI,CAACC,MAAM,CAAC,uBAAuB,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC,EAAEY,UAAU,IAAIZ,MAAM,CAAC,aAAa,CAAC;IAAC,GAE1GQ,oBAAoB,EAErBX,KAAA,CAAAgB,aAAA;MAAKC,SAAS,EAAEd,MAAM,CAAC,uBAAuB;IAAC,GAC7CH,KAAA,CAAAgB,aAAA;MACEC,SAAS,EAAEf,IAAI,CAACC,MAAM,CAAC,8BAA8B,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC,CAAC;MAC7Ee,KAAK,EAAE;QAAEV,SAAS,EAAEW,IAAI,CAACC,GAAG,CAACZ,SAAS,EAAEJ,2BAA2B;MAAC;IAAE,GAEtEJ,KAAA,CAAAgB,aAAA;MAAKC,SAAS,EAAEf,IAAI,CAACC,MAAM,CAAC,sBAAsB,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC;IAAC,GAAGU,SAAS,CAAO,CACzF,EAENb,KAAA,CAAAgB,aAAA;MAAKC,SAAS,EAAEf,IAAI,CAACC,MAAM,CAAC,+BAA+B,CAAC,EAAEA,MAAM,CAAC,YAAY,CAAC;IAAC,GAChFS,eAAe,CACZ,CACF,EAELE,OAAO,CACJ,CACF;;EAIV,OACEd,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAEd,MAAM,CAAC,iBAAiB,CAAC;IAAEI,GAAG,EAAEA;EAAG,GAChDG,aAAa,EAEdV,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAEd,MAAM,CAAC,uBAAuB;EAAC,GAC5CQ,oBAAoB,EAErBX,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAEd,MAAM,CAAC,uBAAuB;EAAC,GAC5CU,SAAS,EACTD,eAAe,CACZ,EAELE,OAAO,CACJ,CACF;AAEV,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}