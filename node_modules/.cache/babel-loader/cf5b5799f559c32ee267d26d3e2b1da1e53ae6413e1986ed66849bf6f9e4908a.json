{"ast":null,"code":"/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */import escapeMarkdown from'../../../../../utils/escapeMarkdown';import parseTableCellContent from'../../../../../utils/parseTableCellContent';import standardizeNumericId from'../../../../../utils/standardizeNumericId';export const getThreatsContent=async function(data){let threatsOnly=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const rows=[];rows.push('## Threats');rows.push('\\n');rows.push(`| Threat Number | Threat | ${threatsOnly?'':'Security Controls | Mitigations | Assumptions |'} Priority | STRIDE | Comments |`);rows.push(`| --- | --- | ${threatsOnly?'':'--- | --- | --- |'} --- | --- | --- |`);if(data.threats){const promises=data.threats.map(async x=>{var _data$mitigationLinks,_data$assumptionLinks,_data$controlLinks,_x$metadata,_x$metadata$find,_x$metadata2,_x$metadata2$find,_x$metadata3,_x$metadata3$find;const mitigationLinks=((_data$mitigationLinks=data.mitigationLinks)===null||_data$mitigationLinks===void 0?void 0:_data$mitigationLinks.filter(ml=>ml.linkedId===x.id))||[];const assumpptionLinks=((_data$assumptionLinks=data.assumptionLinks)===null||_data$assumptionLinks===void 0?void 0:_data$assumptionLinks.filter(al=>al.linkedId===x.id))||[];const controlLinks=((_data$controlLinks=data.controlLinks)===null||_data$controlLinks===void 0?void 0:_data$controlLinks.filter(cl=>cl.linkedId===x.id))||[];const threatId=`T-${standardizeNumericId(x.numericId)}`;const assumptionsContent=assumpptionLinks.map(al=>{var _data$assumptions;const assumption=(_data$assumptions=data.assumptions)===null||_data$assumptions===void 0?void 0:_data$assumptions.find(a=>a.id===al.assumptionId);if(assumption){const assumptionId=`A-${standardizeNumericId(assumption.numericId)}`;return`[**${assumptionId}**](#${assumptionId}): ${escapeMarkdown(assumption.content)}`;}return null;}).filter(al=>!!al).join('<br/>');const mitigationsContent=mitigationLinks.map(ml=>{var _data$mitigations;const mitigation=(_data$mitigations=data.mitigations)===null||_data$mitigations===void 0?void 0:_data$mitigations.find(m=>m.id===ml.mitigationId);if(mitigation){const mitigationId=`M-${standardizeNumericId(mitigation.numericId)}`;return`[**${mitigationId}**](#${mitigationId}): ${escapeMarkdown(mitigation.content)}`;}return null;}).filter(ml=>!!ml).join('<br/>');const controlsContent=controlLinks.map(ml=>{var _data$controls;const control=(_data$controls=data.controls)===null||_data$controls===void 0?void 0:_data$controls.find(m=>m.id===ml.controlId);if(control){const controlId=`C-${standardizeNumericId(control.numericId)}`;return`[**${controlId}**](#${controlId}): ${escapeMarkdown(control.content)}`;}return null;}).filter(cl=>!!cl).join('<br/>');const priority=((_x$metadata=x.metadata)===null||_x$metadata===void 0?void 0:(_x$metadata$find=_x$metadata.find(m=>m.key==='Priority'))===null||_x$metadata$find===void 0?void 0:_x$metadata$find.value)||'';const STRIDE=(((_x$metadata2=x.metadata)===null||_x$metadata2===void 0?void 0:(_x$metadata2$find=_x$metadata2.find(m=>m.key==='STRIDE'))===null||_x$metadata2$find===void 0?void 0:_x$metadata2$find.value)||[]).join(', ');const comments=await parseTableCellContent(((_x$metadata3=x.metadata)===null||_x$metadata3===void 0?void 0:(_x$metadata3$find=_x$metadata3.find(m=>m.key==='Comments'))===null||_x$metadata3$find===void 0?void 0:_x$metadata3$find.value)||'');return`| ${threatId} | ${escapeMarkdown(x.statement||'')} | ${threatsOnly?'':`${controlsContent} | ${mitigationsContent} | ${assumptionsContent} | `} ${priority} | ${STRIDE} | ${comments} |`;});rows.push(...(await Promise.all(promises)));}rows.push('\\n');return rows.join('\\n');};","map":{"version":3,"names":["escapeMarkdown","parseTableCellContent","standardizeNumericId","getThreatsContent","data","threatsOnly","arguments","length","undefined","rows","push","threats","promises","map","x","_data$mitigationLinks","_data$assumptionLinks","_data$controlLinks","_x$metadata","_x$metadata$find","_x$metadata2","_x$metadata2$find","_x$metadata3","_x$metadata3$find","mitigationLinks","filter","ml","linkedId","id","assumpptionLinks","assumptionLinks","al","controlLinks","cl","threatId","numericId","assumptionsContent","_data$assumptions","assumption","assumptions","find","a","assumptionId","content","join","mitigationsContent","_data$mitigations","mitigation","mitigations","m","mitigationId","controlsContent","_data$controls","control","controls","controlId","priority","metadata","key","value","STRIDE","comments","statement","Promise","all"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/src/components/report/ThreatModel/utils/getThreats/index.ts"],"sourcesContent":["/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n ******************************************************************************************************************** */\n\nimport { DataExchangeFormat } from '../../../../../customTypes';\nimport escapeMarkdown from '../../../../../utils/escapeMarkdown';\nimport parseTableCellContent from '../../../../../utils/parseTableCellContent';\nimport standardizeNumericId from '../../../../../utils/standardizeNumericId';\n\nexport const getThreatsContent = async (\n  data: DataExchangeFormat,\n  threatsOnly = false,\n) => {\n  const rows: string[] = [];\n  rows.push('## Threats');\n\n  rows.push('\\n');\n\n  rows.push(`| Threat Number | Threat | ${threatsOnly ? '' : 'Security Controls | Mitigations | Assumptions |'} Priority | STRIDE | Comments |`);\n  rows.push(`| --- | --- | ${threatsOnly ? '' : '--- | --- | --- |'} --- | --- | --- |`);\n\n  if (data.threats) {\n    const promises = data.threats.map(async (x) => {\n      const mitigationLinks = data.mitigationLinks?.filter(ml => ml.linkedId === x.id) || [];\n      const assumpptionLinks = data.assumptionLinks?.filter(al => al.linkedId === x.id) || [];\n      const controlLinks = data.controlLinks?.filter(cl => cl.linkedId === x.id) || [];\n      const threatId = `T-${standardizeNumericId(x.numericId)}`;\n      const assumptionsContent = assumpptionLinks.map(al => {\n        const assumption = data.assumptions?.find(a => a.id === al.assumptionId);\n        if (assumption) {\n          const assumptionId = `A-${standardizeNumericId(assumption.numericId)}`;\n          return `[**${assumptionId}**](#${assumptionId}): ${escapeMarkdown(assumption.content)}`;\n        }\n        return null;\n      }).filter(al => !!al).join('<br/>');\n\n      const mitigationsContent = mitigationLinks.map(ml => {\n        const mitigation = data.mitigations?.find(m => m.id === ml.mitigationId);\n        if (mitigation) {\n          const mitigationId = `M-${standardizeNumericId(mitigation.numericId)}`;\n          return `[**${mitigationId}**](#${mitigationId}): ${escapeMarkdown(mitigation.content)}`;\n        }\n        return null;\n      }).filter(ml => !!ml).join('<br/>');\n\n      const controlsContent = controlLinks.map(ml => {\n        const control = data.controls?.find(m => m.id === ml.controlId);\n        if (control) {\n          const controlId = `C-${standardizeNumericId(control.numericId)}`;\n          return `[**${controlId}**](#${controlId}): ${escapeMarkdown(control.content)}`;\n        }\n        return null;\n      }).filter(cl => !!cl).join('<br/>');\n\n      const priority = x.metadata?.find(m => m.key === 'Priority')?.value || '';\n      const STRIDE = ((x.metadata?.find(m => m.key === 'STRIDE')?.value || []) as string[]).join(', ');\n      const comments = await parseTableCellContent((x.metadata?.find(m => m.key === 'Comments')?.value as string) || '');\n      return `| ${threatId} | ${escapeMarkdown(x.statement || '')} | ${threatsOnly ? '' : `${controlsContent} | ${mitigationsContent} | ${assumptionsContent} | `} ${priority} | ${STRIDE} | ${comments} |`;\n    });\n\n    rows.push(...(await Promise.all(promises)));\n  }\n\n  rows.push('\\n');\n\n  return rows.join('\\n');\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}