{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef } from 'react';\nimport { filterOptions, isGroup, isGroupInteractive, isInteractive } from '../../internal/components/option/utils/filter-options';\nimport { useDebounceCallback } from '../../internal/hooks/use-debounce-callback';\nexport const isRepeatedChar = str => str.split('').every(c => c === str[0]);\nfunction findMatchingOption(options, searchText, currentHighlight, useInteractiveGroups) {\n  const interactivityCheck = useInteractiveGroups ? isGroupInteractive : isInteractive;\n  const filter = searchText => filterOptions(options, searchText, true).filter(option => interactivityCheck(option));\n  const matchingOptions = filter(searchText);\n  if (matchingOptions.length === 1) {\n    return matchingOptions[0];\n  }\n  // Hit the same char over and over, we assume they want to cycle through\n  if (currentHighlight && searchText.length > 1 && isRepeatedChar(searchText)) {\n    const matchingOptions = filter(searchText[0]);\n    if (matchingOptions.length > 0) {\n      //handling OptionGroups when useInteractiveGroups is set\n      let active = isGroup(currentHighlight) ? matchingOptions.map(_ref => {\n        let {\n          option\n        } = _ref;\n        return option;\n      }).indexOf(currentHighlight) : matchingOptions.map(_ref2 => {\n        let {\n          option\n        } = _ref2;\n        return option.value;\n      }).indexOf(currentHighlight.value);\n      // Pick the next thing (if something with this prefix wasn't selected\n      // we'll end up with the first option)\n      active += 1;\n      active = active % matchingOptions.length;\n      return matchingOptions[active];\n    }\n  }\n  // We have multiple things that start with this prefix.  Based on the\n  // behavior of native select, this is considered after the repeated case\n  if (matchingOptions.length > 0) {\n    return matchingOptions[0];\n  }\n  return null;\n}\nexport function useNativeSearch(_ref3) {\n  let {\n    isEnabled,\n    options,\n    highlightOption,\n    highlightedOption,\n    useInteractiveGroups\n  } = _ref3;\n  const value = useRef('');\n  const delayedResetValue = useDebounceCallback(() => value.current = '', 500);\n  return event => {\n    if (!isEnabled) {\n      return;\n    }\n    const {\n      key\n    } = event;\n    if (!key || key.length !== 1) {\n      return;\n    }\n    delayedResetValue();\n    const newValue = value.current + key;\n    value.current = newValue;\n    const nextHighlight = findMatchingOption(options, newValue, highlightedOption, useInteractiveGroups);\n    if (nextHighlight) {\n      highlightOption(nextHighlight);\n    }\n  };\n}","map":{"version":3,"names":["useRef","filterOptions","isGroup","isGroupInteractive","isInteractive","useDebounceCallback","isRepeatedChar","str","split","every","c","findMatchingOption","options","searchText","currentHighlight","useInteractiveGroups","interactivityCheck","filter","option","matchingOptions","length","active","map","_ref","indexOf","_ref2","value","useNativeSearch","_ref3","isEnabled","highlightOption","highlightedOption","delayedResetValue","current","event","key","newValue","nextHighlight"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/select/utils/use-native-search.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\n\nimport type { DropdownOption, OptionDefinition, OptionGroup } from '../../internal/components/option/interfaces';\nimport {\n  filterOptions,\n  isGroup,\n  isGroupInteractive,\n  isInteractive,\n} from '../../internal/components/option/utils/filter-options';\nimport { useDebounceCallback } from '../../internal/hooks/use-debounce-callback';\n\nexport const isRepeatedChar = (str: string) => str.split('').every(c => c === str[0]);\n\ninterface UseNativeSearchProps {\n  isEnabled: boolean;\n  options: ReadonlyArray<DropdownOption>;\n  highlightOption: (option: DropdownOption) => void;\n  highlightedOption: OptionDefinition | undefined | null;\n  useInteractiveGroups?: boolean;\n}\n\nfunction findMatchingOption(\n  options: ReadonlyArray<DropdownOption>,\n  searchText: string,\n  currentHighlight: OptionDefinition | OptionGroup | undefined | null,\n  useInteractiveGroups?: boolean\n) {\n  const interactivityCheck = useInteractiveGroups ? isGroupInteractive : isInteractive;\n  const filter = (searchText: string) =>\n    filterOptions(options, searchText, true).filter(option => interactivityCheck(option));\n  const matchingOptions = filter(searchText);\n\n  if (matchingOptions.length === 1) {\n    return matchingOptions[0];\n  }\n\n  // Hit the same char over and over, we assume they want to cycle through\n  if (currentHighlight && searchText.length > 1 && isRepeatedChar(searchText)) {\n    const matchingOptions = filter(searchText[0]);\n\n    if (matchingOptions.length > 0) {\n      //handling OptionGroups when useInteractiveGroups is set\n      let active: number = isGroup(currentHighlight)\n        ? matchingOptions.map(({ option }) => option).indexOf(currentHighlight)\n        : matchingOptions\n            .map(({ option }) => (option as OptionDefinition).value)\n            .indexOf((currentHighlight as OptionDefinition).value);\n\n      // Pick the next thing (if something with this prefix wasn't selected\n      // we'll end up with the first option)\n      active += 1;\n      active = active % matchingOptions.length;\n      return matchingOptions[active];\n    }\n  }\n\n  // We have multiple things that start with this prefix.  Based on the\n  // behavior of native select, this is considered after the repeated case\n  if (matchingOptions.length > 0) {\n    return matchingOptions[0];\n  }\n  return null;\n}\n\nexport function useNativeSearch({\n  isEnabled,\n  options,\n  highlightOption,\n  highlightedOption,\n  useInteractiveGroups,\n}: UseNativeSearchProps) {\n  const value = useRef('');\n\n  const delayedResetValue = useDebounceCallback(() => (value.current = ''), 500);\n\n  return (event: React.KeyboardEvent) => {\n    if (!isEnabled) {\n      return;\n    }\n\n    const { key } = event;\n\n    if (!key || key.length !== 1) {\n      return;\n    }\n\n    delayedResetValue();\n    const newValue = value.current + key;\n    value.current = newValue;\n\n    const nextHighlight = findMatchingOption(options, newValue, highlightedOption, useInteractiveGroups);\n    if (nextHighlight) {\n      highlightOption(nextHighlight);\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}