{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalButtonDropdown from './internal';\nimport { hasCheckboxItems } from './utils/utils';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nconst ButtonDropdown = React.forwardRef((_a, ref) => {\n  var {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      expandableGroups = false,\n      expandToViewport = false,\n      ariaLabel,\n      children,\n      onItemClick,\n      onItemFollow,\n      mainAction\n    } = _a,\n    props = __rest(_a, [\"items\", \"variant\", \"loading\", \"loadingText\", \"disabled\", \"disabledReason\", \"expandableGroups\", \"expandToViewport\", \"ariaLabel\", \"children\", \"onItemClick\", \"onItemFollow\", \"mainAction\"]);\n  const baseComponentProps = useBaseComponent('ButtonDropdown', {\n    props: {\n      expandToViewport,\n      expandableGroups,\n      variant\n    },\n    metadata: {\n      mainAction: !!mainAction,\n      checkboxItems: hasCheckboxItems(items)\n    }\n  });\n  const baseProps = getBaseProps(props);\n  const analyticsComponentMetadata = {\n    name: 'awsui.ButtonDropdown',\n    label: `.${analyticsSelectors['trigger-label']}`,\n    properties: {\n      variant,\n      disabled: `${disabled}`\n    }\n  };\n  return React.createElement(InternalButtonDropdown, Object.assign({}, baseProps, baseComponentProps, {\n    ref: ref,\n    items: items,\n    variant: variant,\n    loading: loading,\n    loadingText: loadingText,\n    disabled: disabled,\n    disabledReason: disabledReason,\n    expandableGroups: expandableGroups,\n    expandToViewport: expandToViewport,\n    ariaLabel: ariaLabel,\n    onItemClick: onItemClick,\n    onItemFollow: onItemFollow,\n    mainAction: mainAction\n  }, getAnalyticsMetadataAttribute({\n    component: analyticsComponentMetadata\n  })), children);\n});\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;","map":{"version":3,"names":["React","getAnalyticsMetadataAttribute","getBaseProps","useBaseComponent","applyDisplayName","InternalButtonDropdown","hasCheckboxItems","analyticsSelectors","ButtonDropdown","forwardRef","_a","ref","items","variant","loading","loadingText","disabled","disabledReason","expandableGroups","expandToViewport","ariaLabel","children","onItemClick","onItemFollow","mainAction","props","__rest","baseComponentProps","metadata","checkboxItems","baseProps","analyticsComponentMetadata","name","label","properties","createElement","Object","assign","component"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/button-dropdown/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { GeneratedAnalyticsMetadataButtonDropdownComponent } from './analytics-metadata/interfaces';\nimport { ButtonDropdownProps } from './interfaces';\nimport InternalButtonDropdown from './internal';\nimport { hasCheckboxItems } from './utils/utils';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\n\nexport { ButtonDropdownProps };\n\nconst ButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      disabledReason,\n      expandableGroups = false,\n      expandToViewport = false,\n      ariaLabel,\n      children,\n      onItemClick,\n      onItemFollow,\n      mainAction,\n      ...props\n    }: ButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('ButtonDropdown', {\n      props: { expandToViewport, expandableGroups, variant },\n      metadata: {\n        mainAction: !!mainAction,\n        checkboxItems: hasCheckboxItems(items),\n      },\n    });\n    const baseProps = getBaseProps(props);\n\n    const analyticsComponentMetadata: GeneratedAnalyticsMetadataButtonDropdownComponent = {\n      name: 'awsui.ButtonDropdown',\n      label: `.${analyticsSelectors['trigger-label']}`,\n      properties: { variant, disabled: `${disabled}` },\n    };\n\n    return (\n      <InternalButtonDropdown\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        items={items}\n        variant={variant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        disabledReason={disabledReason}\n        expandableGroups={expandableGroups}\n        expandToViewport={expandToViewport}\n        ariaLabel={ariaLabel}\n        onItemClick={onItemClick}\n        onItemFollow={onItemFollow}\n        mainAction={mainAction}\n        {...getAnalyticsMetadataAttribute({\n          component: analyticsComponentMetadata,\n        })}\n      >\n        {children}\n      </InternalButtonDropdown>\n    );\n  }\n);\n\napplyDisplayName(ButtonDropdown, 'ButtonDropdown');\nexport default ButtonDropdown;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,6BAA6B,QAAQ,kEAAkE;AAEhH,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAGvE,OAAOC,sBAAsB,MAAM,YAAY;AAC/C,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,OAAOC,kBAAkB,MAAM,oCAAoC;AAInE,MAAMC,cAAc,GAAGR,KAAK,CAACS,UAAU,CACrC,CACEC,EAesB,EACtBC,GAAuC,KACrC;MAjBF;MACEC,KAAK;MACLC,OAAO,GAAG,QAAQ;MAClBC,OAAO,GAAG,KAAK;MACfC,WAAW;MACXC,QAAQ,GAAG,KAAK;MAChBC,cAAc;MACdC,gBAAgB,GAAG,KAAK;MACxBC,gBAAgB,GAAG,KAAK;MACxBC,SAAS;MACTC,QAAQ;MACRC,WAAW;MACXC,YAAY;MACZC;IAAU,IAAAd,EAEU;IADjBe,KAAK,GAAAC,MAAA,CAAAhB,EAAA,EAdV,0LAeC,CADS;EAIV,MAAMiB,kBAAkB,GAAGxB,gBAAgB,CAAC,gBAAgB,EAAE;IAC5DsB,KAAK,EAAE;MAAEN,gBAAgB;MAAED,gBAAgB;MAAEL;IAAO,CAAE;IACtDe,QAAQ,EAAE;MACRJ,UAAU,EAAE,CAAC,CAACA,UAAU;MACxBK,aAAa,EAAEvB,gBAAgB,CAACM,KAAK;;GAExC,CAAC;EACF,MAAMkB,SAAS,GAAG5B,YAAY,CAACuB,KAAK,CAAC;EAErC,MAAMM,0BAA0B,GAAsD;IACpFC,IAAI,EAAE,sBAAsB;IAC5BC,KAAK,EAAE,IAAI1B,kBAAkB,CAAC,eAAe,CAAC,EAAE;IAChD2B,UAAU,EAAE;MAAErB,OAAO;MAAEG,QAAQ,EAAE,GAAGA,QAAQ;IAAE;GAC/C;EAED,OACEhB,KAAA,CAAAmC,aAAA,CAAC9B,sBAAsB,EAAA+B,MAAA,CAAAC,MAAA,KACjBP,SAAS,EACTH,kBAAkB;IACtBhB,GAAG,EAAEA,GAAG;IACRC,KAAK,EAAEA,KAAK;IACZC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,cAAc,EAAEA,cAAc;IAC9BC,gBAAgB,EAAEA,gBAAgB;IAClCC,gBAAgB,EAAEA,gBAAgB;IAClCC,SAAS,EAAEA,SAAS;IACpBE,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAC1BC,UAAU,EAAEA;EAAU,GAClBvB,6BAA6B,CAAC;IAChCqC,SAAS,EAAEP;GACZ,CAAC,GAEDV,QAAQ,CACc;AAE7B,CAAC,CACF;AAEDjB,gBAAgB,CAACI,cAAc,EAAE,gBAAgB,CAAC;AAClD,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}