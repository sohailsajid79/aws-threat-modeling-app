{"ast":null,"code":"const stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled'\n};\nexport const getSortingStatus = (sortable, sorted, descending, disabled) => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\nexport const getSortingIconName = sortingState => stateToIcon[sortingState];\nexport const isSorted = (column, sortingColumn) => column === sortingColumn || column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField || column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator;\nexport const getSortingColumnId = function () {\n  let columnDefinitions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let sortingColumn = arguments.length > 1 ? arguments[1] : undefined;\n  if (!sortingColumn) {\n    return null;\n  }\n  for (let i = 0; i < columnDefinitions.length; i++) {\n    if (isSorted(columnDefinitions[i], sortingColumn)) {\n      return columnDefinitions[i].id || null;\n    }\n  }\n  return null;\n};","map":{"version":3,"names":["stateToIcon","sortable","ascending","descending","getSortingStatus","sorted","disabled","undefined","getSortingIconName","sortingState","isSorted","column","sortingColumn","sortingField","sortingComparator","getSortingColumnId","columnDefinitions","arguments","length","i","id"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/table/header-cell/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { TableProps } from '../interfaces';\n\nexport type SortingStatus = 'sortable' | 'ascending' | 'descending';\nconst stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled',\n} as const;\n\nexport const getSortingStatus = (\n  sortable: boolean,\n  sorted: boolean,\n  descending: boolean,\n  disabled: boolean\n): SortingStatus | undefined => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\n\nexport const getSortingIconName = (sortingState: SortingStatus) => stateToIcon[sortingState];\nexport const isSorted = <T>(column: TableProps.ColumnDefinition<T>, sortingColumn: TableProps.SortingColumn<T>) =>\n  column === sortingColumn ||\n  (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n  (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\nexport const getSortingColumnId = <T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>> = [],\n  sortingColumn?: TableProps.SortingColumn<T>\n) => {\n  if (!sortingColumn) {\n    return null;\n  }\n  for (let i = 0; i < columnDefinitions.length; i++) {\n    if (isSorted(columnDefinitions[i], sortingColumn)) {\n      return columnDefinitions[i].id || null;\n    }\n  }\n  return null;\n};\n"],"mappings":"AAKA,MAAMA,WAAW,GAAG;EAClBC,QAAQ,EAAE,YAAY;EACtBC,SAAS,EAAE,iBAAiB;EAC5BC,UAAU,EAAE;CACJ;AAEV,OAAO,MAAMC,gBAAgB,GAAGA,CAC9BH,QAAiB,EACjBI,MAAe,EACfF,UAAmB,EACnBG,QAAiB,KACY;EAC7B,IAAID,MAAM,EAAE;IACV,IAAIF,UAAU,EAAE;MACd,OAAO,YAAY;;IAErB,OAAO,WAAW;;EAEpB,IAAIF,QAAQ,IAAI,CAACK,QAAQ,EAAE;IACzB,OAAO,UAAU;;EAEnB,OAAOC,SAAS;AAClB,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,YAA2B,IAAKT,WAAW,CAACS,YAAY,CAAC;AAC5F,OAAO,MAAMC,QAAQ,GAAGA,CAAIC,MAAsC,EAAEC,aAA0C,KAC5GD,MAAM,KAAKC,aAAa,IACvBD,MAAM,CAACE,YAAY,KAAKN,SAAS,IAAII,MAAM,CAACE,YAAY,KAAKD,aAAa,CAACC,YAAa,IACxFF,MAAM,CAACG,iBAAiB,KAAKP,SAAS,IAAII,MAAM,CAACG,iBAAiB,KAAKF,aAAa,CAACE,iBAAkB;AAC1G,OAAO,MAAMC,kBAAkB,GAAG,SAAAA,CAAA,EAG9B;EAAA,IAFFC,iBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAV,SAAA,GAAAU,SAAA,MAAmE,EAAE;EAAA,IACrEL,aAA2C,GAAAK,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAV,SAAA;EAE3C,IAAI,CAACK,aAAa,EAAE;IAClB,OAAO,IAAI;;EAEb,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,iBAAiB,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACjD,IAAIT,QAAQ,CAACM,iBAAiB,CAACG,CAAC,CAAC,EAAEP,aAAa,CAAC,EAAE;MACjD,OAAOI,iBAAiB,CAACG,CAAC,CAAC,CAACC,EAAE,IAAI,IAAI;;;EAG1C,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}