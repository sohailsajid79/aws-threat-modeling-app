{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { useCallback, useState, useRef } from 'react';\nimport ForgotPasswordUsernameView from '../ForgotPasswordUsernameView';\nimport ForgotPasswordView from '../ForgotPasswordView';\nconst ForgotPassword = _ref => {\n  let {\n    userPool,\n    resetView\n  } = _ref;\n  const cognitoUserRef = useRef();\n  const [forgotPasswordData, setForgotPasswordData] = useState();\n  const handleSendCode = useCallback(async data => {\n    if (userPool) {\n      const cognitoUser = new CognitoUser({\n        Username: data.username,\n        Pool: userPool\n      });\n      return new Promise((resolve, reject) => {\n        cognitoUser.forgotPassword({\n          onSuccess(data) {\n            cognitoUserRef.current = cognitoUser;\n            resolve(data);\n            setForgotPasswordData(data);\n          },\n          onFailure(err) {\n            console.error('Congnito forgotPassword Failure', err);\n            reject(err);\n          }\n        });\n      });\n    }\n  }, [userPool]);\n  const handleResetPassword = useCallback(async data => {\n    if (cognitoUserRef.current) {\n      return new Promise((resolve, reject) => {\n        cognitoUserRef.current.confirmPassword(data.verificationCode, data.password, {\n          onSuccess() {\n            resolve({});\n            resetView();\n          },\n          onFailure(err) {\n            console.error('Congnito confirmPassword Failure', err);\n            reject(err);\n          }\n        });\n      });\n    }\n  }, [resetView]);\n  return forgotPasswordData ? _jsx(ForgotPasswordView, {\n    onResetPassword: handleResetPassword,\n    onBackToSignIn: resetView,\n    data: forgotPasswordData\n  }) : _jsx(ForgotPasswordUsernameView, {\n    onSendCode: handleSendCode,\n    onBackToSignIn: resetView\n  });\n};\nexport default ForgotPassword;","map":{"version":3,"names":["jsx","_jsx","CognitoUser","useCallback","useState","useRef","ForgotPasswordUsernameView","ForgotPasswordView","ForgotPassword","_ref","userPool","resetView","cognitoUserRef","forgotPasswordData","setForgotPasswordData","handleSendCode","data","cognitoUser","Username","username","Pool","Promise","resolve","reject","forgotPassword","onSuccess","current","onFailure","err","console","error","handleResetPassword","confirmPassword","verificationCode","password","onResetPassword","onBackToSignIn","onSendCode"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/@aws-northstar/ui/components/CognitoAuth/components/ForgotPassword/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\n/** *******************************************************************************************************************\n  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  \n  Licensed under the Apache License, Version 2.0 (the \"License\").\n  You may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  \n      http://www.apache.org/licenses/LICENSE-2.0\n  \n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.                                                                              *\n ******************************************************************************************************************** */\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { useCallback, useState, useRef } from 'react';\nimport ForgotPasswordUsernameView from '../ForgotPasswordUsernameView';\nimport ForgotPasswordView from '../ForgotPasswordView';\nconst ForgotPassword = ({ userPool, resetView }) => {\n    const cognitoUserRef = useRef();\n    const [forgotPasswordData, setForgotPasswordData] = useState();\n    const handleSendCode = useCallback(async (data) => {\n        if (userPool) {\n            const cognitoUser = new CognitoUser({\n                Username: data.username,\n                Pool: userPool,\n            });\n            return new Promise((resolve, reject) => {\n                cognitoUser.forgotPassword({\n                    onSuccess(data) {\n                        cognitoUserRef.current = cognitoUser;\n                        resolve(data);\n                        setForgotPasswordData(data);\n                    },\n                    onFailure(err) {\n                        console.error('Congnito forgotPassword Failure', err);\n                        reject(err);\n                    },\n                });\n            });\n        }\n    }, [userPool]);\n    const handleResetPassword = useCallback(async (data) => {\n        if (cognitoUserRef.current) {\n            return new Promise((resolve, reject) => {\n                cognitoUserRef.current.confirmPassword(data.verificationCode, data.password, {\n                    onSuccess() {\n                        resolve({});\n                        resetView();\n                    },\n                    onFailure(err) {\n                        console.error('Congnito confirmPassword Failure', err);\n                        reject(err);\n                    },\n                });\n            });\n        }\n    }, [resetView]);\n    return forgotPasswordData ? (_jsx(ForgotPasswordView, { onResetPassword: handleResetPassword, onBackToSignIn: resetView, data: forgotPasswordData })) : (_jsx(ForgotPasswordUsernameView, { onSendCode: handleSendCode, onBackToSignIn: resetView }));\n};\nexport default ForgotPassword;\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,WAAW,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACrD,OAAOC,0BAA0B,MAAM,+BAA+B;AACtE,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,MAAMC,cAAc,GAAGC,IAAA,IAA6B;EAAA,IAA5B;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC3C,MAAMG,cAAc,GAAGP,MAAM,CAAC,CAAC;EAC/B,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC9D,MAAMW,cAAc,GAAGZ,WAAW,CAAC,MAAOa,IAAI,IAAK;IAC/C,IAAIN,QAAQ,EAAE;MACV,MAAMO,WAAW,GAAG,IAAIf,WAAW,CAAC;QAChCgB,QAAQ,EAAEF,IAAI,CAACG,QAAQ;QACvBC,IAAI,EAAEV;MACV,CAAC,CAAC;MACF,OAAO,IAAIW,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCN,WAAW,CAACO,cAAc,CAAC;UACvBC,SAASA,CAACT,IAAI,EAAE;YACZJ,cAAc,CAACc,OAAO,GAAGT,WAAW;YACpCK,OAAO,CAACN,IAAI,CAAC;YACbF,qBAAqB,CAACE,IAAI,CAAC;UAC/B,CAAC;UACDW,SAASA,CAACC,GAAG,EAAE;YACXC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC;YACrDL,MAAM,CAACK,GAAG,CAAC;UACf;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EACd,MAAMqB,mBAAmB,GAAG5B,WAAW,CAAC,MAAOa,IAAI,IAAK;IACpD,IAAIJ,cAAc,CAACc,OAAO,EAAE;MACxB,OAAO,IAAIL,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCX,cAAc,CAACc,OAAO,CAACM,eAAe,CAAChB,IAAI,CAACiB,gBAAgB,EAAEjB,IAAI,CAACkB,QAAQ,EAAE;UACzET,SAASA,CAAA,EAAG;YACRH,OAAO,CAAC,CAAC,CAAC,CAAC;YACXX,SAAS,CAAC,CAAC;UACf,CAAC;UACDgB,SAASA,CAACC,GAAG,EAAE;YACXC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC;YACtDL,MAAM,CAACK,GAAG,CAAC;UACf;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACjB,SAAS,CAAC,CAAC;EACf,OAAOE,kBAAkB,GAAIZ,IAAI,CAACM,kBAAkB,EAAE;IAAE4B,eAAe,EAAEJ,mBAAmB;IAAEK,cAAc,EAAEzB,SAAS;IAAEK,IAAI,EAAEH;EAAmB,CAAC,CAAC,GAAKZ,IAAI,CAACK,0BAA0B,EAAE;IAAE+B,UAAU,EAAEtB,cAAc;IAAEqB,cAAc,EAAEzB;EAAU,CAAC,CAAE;AACzP,CAAC;AACD,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}