{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport ScreenreaderOnly from '../../internal/components/screenreader-only/index.js';\nimport Tooltip from '../../internal/components/tooltip';\nimport { useEffectOnUpdate } from '../../internal/hooks/use-effect-on-update.js';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { applyDisplayName } from '../../internal/utils/apply-display-name';\nimport styles from '../styles.css.js';\nconst GridCell = forwardRef((props, focusedDateRef) => {\n  const {\n      disabledReason\n    } = props,\n    rest = __rest(props, [\"disabledReason\"]);\n  const isDisabledWithReason = !!disabledReason;\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(disabledReason);\n  const ref = useRef(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n  return React.createElement(\"td\", Object.assign({\n    ref: useMergeRefs(focusedDateRef, ref)\n  }, isDisabledWithReason ? targetProps : {}, rest, {\n    onFocus: () => isDisabledWithReason ? setShowTooltip(true) : undefined,\n    onBlur: () => isDisabledWithReason ? setShowTooltip(false) : undefined,\n    onMouseEnter: () => isDisabledWithReason ? setShowTooltip(true) : undefined,\n    onMouseLeave: () => isDisabledWithReason ? setShowTooltip(false) : undefined\n  }), props.children, isDisabledWithReason && React.createElement(React.Fragment, null, descriptionEl, showTooltip && React.createElement(Tooltip, {\n    className: styles['disabled-reason-tooltip'],\n    trackRef: ref,\n    value: disabledReason\n  })));\n});\napplyDisplayName(GridCell, 'GridCell');\nexport default function Grid(_ref) {\n  let {\n    isDateEnabled,\n    dateDisabledReason,\n    focusedDate,\n    focusableDate,\n    onSelectDate,\n    selectedDate,\n    ariaLabelledby,\n    header,\n    rows,\n    isCurrentPage,\n    renderDate,\n    renderDateAnnouncement,\n    isSameDate,\n    onGridKeyDownHandler\n  } = _ref;\n  const focusedDateRef = useRef(null);\n  // The focused date changes as a feedback to keyboard navigation in the grid.\n  // Once changed, the corresponding date button needs to receive the actual focus.\n  useEffectOnUpdate(() => {\n    if (focusedDate && focusedDateRef.current) {\n      focusedDateRef.current.focus();\n    }\n  }, [focusedDate]);\n  const rowLength = rows[0].length;\n  const denseGrid = rowLength > 3;\n  return React.createElement(\"table\", {\n    role: \"grid\",\n    className: clsx(styles['calendar-grid'], denseGrid && styles['calendar-grid-dense']),\n    \"aria-labelledby\": ariaLabelledby\n  }, header, React.createElement(\"tbody\", {\n    onKeyDown: onGridKeyDownHandler\n  }, rows.map((row, rowIndex) => React.createElement(\"tr\", {\n    key: rowIndex,\n    className: styles['calendar-row']\n  }, row.map((date, dateIndex) => {\n    const isFocusable = !!focusableDate && isSameDate(date, focusableDate);\n    const isSelected = !!selectedDate && isSameDate(date, selectedDate);\n    const isEnabled = !isDateEnabled || isDateEnabled(date);\n    const disabledReason = dateDisabledReason(date);\n    const isDisabledWithReason = !isEnabled && !!disabledReason;\n    const isCurrentDate = isSameDate(date, new Date());\n    // Can't be focused.\n    let tabIndex = undefined;\n    if (isFocusable && (isEnabled || isDisabledWithReason)) {\n      // Next focus target.\n      tabIndex = 0;\n    } else if (isEnabled || isDisabledWithReason) {\n      // Can be focused programmatically.\n      tabIndex = -1;\n    }\n    return React.createElement(GridCell, {\n      key: `${rowIndex}:${dateIndex}`,\n      ref: tabIndex === 0 ? focusedDateRef : undefined,\n      tabIndex: tabIndex,\n      \"aria-current\": isCurrentDate ? 'date' : undefined,\n      \"aria-selected\": isEnabled ? isSelected : undefined,\n      \"aria-disabled\": !isEnabled,\n      // Do not attach click event when the date is disabled, otherwise VO+safari announces clickable\n      onClick: isEnabled ? () => onSelectDate(date) : undefined,\n      className: clsx(styles['calendar-grid-cell'], styles['calendar-date'], {\n        [styles['calendar-date-current-page']]: isCurrentPage(date),\n        [styles['calendar-date-enabled']]: isEnabled,\n        [styles['calendar-date-selected']]: isSelected,\n        [styles['calendar-date-current']]: isCurrentDate,\n        [styles['calendar-date-dense']]: denseGrid\n      }),\n      disabledReason: isDisabledWithReason ? disabledReason : undefined\n    }, React.createElement(\"span\", {\n      className: styles['date-inner'],\n      \"aria-hidden\": \"true\"\n    }, renderDate(date)), React.createElement(ScreenreaderOnly, null, renderDateAnnouncement(date, isCurrentDate)));\n  })))));\n}","map":{"version":3,"names":["React","forwardRef","useRef","useState","clsx","ScreenreaderOnly","Tooltip","useEffectOnUpdate","useHiddenDescription","useMergeRefs","applyDisplayName","styles","GridCell","props","focusedDateRef","disabledReason","rest","__rest","isDisabledWithReason","targetProps","descriptionEl","ref","showTooltip","setShowTooltip","createElement","Object","assign","onFocus","undefined","onBlur","onMouseEnter","onMouseLeave","children","Fragment","className","trackRef","value","Grid","_ref","isDateEnabled","dateDisabledReason","focusedDate","focusableDate","onSelectDate","selectedDate","ariaLabelledby","header","rows","isCurrentPage","renderDate","renderDateAnnouncement","isSameDate","onGridKeyDownHandler","current","focus","rowLength","length","denseGrid","role","onKeyDown","map","row","rowIndex","key","date","dateIndex","isFocusable","isSelected","isEnabled","isCurrentDate","Date","tabIndex","onClick"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/calendar/grid/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, TdHTMLAttributes, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { DatePickerProps } from '../../date-picker/interfaces';\nimport ScreenreaderOnly from '../../internal/components/screenreader-only/index.js';\nimport Tooltip from '../../internal/components/tooltip';\nimport { useEffectOnUpdate } from '../../internal/hooks/use-effect-on-update.js';\nimport useHiddenDescription from '../../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { applyDisplayName } from '../../internal/utils/apply-display-name';\nimport { CalendarProps } from '../interfaces';\n\nimport styles from '../styles.css.js';\n\n/**\n * Calendar grid supports two mechanisms of keyboard navigation:\n * - Native screen-reader table navigation (semantic table markup);\n * - Keyboard arrow-keys navigation (a custom key-down handler).\n *\n * The implementation largely follows the w3 example (https://www.w3.org/WAI/ARIA/apg/example-index/dialog-modal/datepicker-dialog) and shares the following issues:\n * - (table navigation) Chrome+VO - weekday is announced twice when navigating to the calendar's header;\n * - (table navigation) Safari+VO - \"dimmed\" state is announced twice;\n * - (table navigation) Firefox/Chrome+NVDA - cannot use table navigation if any cell has a focus;\n * - (keyboard navigation) Firefox+NVDA - every date is announced as \"not selected\";\n * - (keyboard navigation) Safari/Chrome+VO - weekdays are not announced;\n * - (keyboard navigation) Safari/Chrome+VO - dates are not announced as interactive (clickable or selectable);\n * - (keyboard navigation) Safari/Chrome+VO - date announcements are not interruptive and can be missed if navigating fast.\n */\n\nexport interface GridProps {\n  isDateEnabled: DatePickerProps.IsDateEnabledFunction;\n  dateDisabledReason: CalendarProps.DateDisabledReasonFunction;\n  focusedDate: Date | null;\n  focusableDate: Date | null;\n  onSelectDate: (date: Date) => void;\n  onFocusDate: (date: null | Date) => void;\n  onChangePage: (date: Date) => void;\n  selectedDate: Date | null;\n  ariaLabelledby: string;\n  header?: React.ReactNode;\n  rows: ReadonlyArray<ReadonlyArray<Date>>;\n  isCurrentPage: (date: Date) => boolean;\n  renderDate: (date: Date) => string;\n  renderDateAnnouncement: (date: Date, isOnCurrentDate: boolean) => string;\n  isSameDate: (date: Date, baseDate: Date) => boolean;\n  onGridKeyDownHandler: (event: React.KeyboardEvent<HTMLElement>) => void;\n}\n\ninterface GridCellProps extends TdHTMLAttributes<HTMLTableCellElement> {\n  disabledReason?: string;\n}\n\nconst GridCell = forwardRef((props: GridCellProps, focusedDateRef: React.Ref<HTMLTableCellElement>) => {\n  const { disabledReason, ...rest } = props;\n  const isDisabledWithReason = !!disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(disabledReason);\n  const ref = useRef<HTMLTableCellElement>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <td\n      ref={useMergeRefs(focusedDateRef, ref)}\n      {...(isDisabledWithReason ? targetProps : {})}\n      {...rest}\n      onFocus={() => (isDisabledWithReason ? setShowTooltip(true) : undefined)}\n      onBlur={() => (isDisabledWithReason ? setShowTooltip(false) : undefined)}\n      onMouseEnter={() => (isDisabledWithReason ? setShowTooltip(true) : undefined)}\n      onMouseLeave={() => (isDisabledWithReason ? setShowTooltip(false) : undefined)}\n    >\n      {props.children}\n      {isDisabledWithReason && (\n        <>\n          {descriptionEl}\n          {showTooltip && (\n            <Tooltip className={styles['disabled-reason-tooltip']} trackRef={ref} value={disabledReason!} />\n          )}\n        </>\n      )}\n    </td>\n  );\n});\n\napplyDisplayName(GridCell, 'GridCell');\n\nexport default function Grid({\n  isDateEnabled,\n  dateDisabledReason,\n  focusedDate,\n  focusableDate,\n  onSelectDate,\n  selectedDate,\n  ariaLabelledby,\n  header,\n  rows,\n  isCurrentPage,\n  renderDate,\n  renderDateAnnouncement,\n  isSameDate,\n  onGridKeyDownHandler,\n}: GridProps) {\n  const focusedDateRef = useRef<HTMLTableCellElement>(null);\n\n  // The focused date changes as a feedback to keyboard navigation in the grid.\n  // Once changed, the corresponding date button needs to receive the actual focus.\n  useEffectOnUpdate(() => {\n    if (focusedDate && focusedDateRef.current) {\n      (focusedDateRef.current as HTMLDivElement).focus();\n    }\n  }, [focusedDate]);\n\n  const rowLength = rows[0].length;\n\n  const denseGrid = rowLength > 3;\n\n  return (\n    <table\n      role=\"grid\"\n      className={clsx(styles['calendar-grid'], denseGrid && styles['calendar-grid-dense'])}\n      aria-labelledby={ariaLabelledby}\n    >\n      {header}\n      <tbody onKeyDown={onGridKeyDownHandler}>\n        {rows.map((row, rowIndex) => (\n          <tr key={rowIndex} className={styles['calendar-row']}>\n            {row.map((date, dateIndex) => {\n              const isFocusable = !!focusableDate && isSameDate(date, focusableDate);\n              const isSelected = !!selectedDate && isSameDate(date, selectedDate);\n              const isEnabled = !isDateEnabled || isDateEnabled(date);\n              const disabledReason = dateDisabledReason(date);\n              const isDisabledWithReason = !isEnabled && !!disabledReason;\n              const isCurrentDate = isSameDate(date, new Date());\n\n              // Can't be focused.\n              let tabIndex = undefined;\n              if (isFocusable && (isEnabled || isDisabledWithReason)) {\n                // Next focus target.\n                tabIndex = 0;\n              } else if (isEnabled || isDisabledWithReason) {\n                // Can be focused programmatically.\n                tabIndex = -1;\n              }\n\n              return (\n                <GridCell\n                  key={`${rowIndex}:${dateIndex}`}\n                  ref={tabIndex === 0 ? focusedDateRef : undefined}\n                  tabIndex={tabIndex}\n                  aria-current={isCurrentDate ? 'date' : undefined}\n                  aria-selected={isEnabled ? isSelected : undefined}\n                  aria-disabled={!isEnabled}\n                  // Do not attach click event when the date is disabled, otherwise VO+safari announces clickable\n                  onClick={isEnabled ? () => onSelectDate(date) : undefined}\n                  className={clsx(styles['calendar-grid-cell'], styles['calendar-date'], {\n                    [styles['calendar-date-current-page']]: isCurrentPage(date),\n                    [styles['calendar-date-enabled']]: isEnabled,\n                    [styles['calendar-date-selected']]: isSelected,\n                    [styles['calendar-date-current']]: isCurrentDate,\n                    [styles['calendar-date-dense']]: denseGrid,\n                  })}\n                  disabledReason={isDisabledWithReason ? disabledReason : undefined}\n                >\n                  <span className={styles['date-inner']} aria-hidden=\"true\">\n                    {renderDate(date)}\n                  </span>\n                  {/* Screen-reader announcement for the focused date. */}\n                  <ScreenreaderOnly>{renderDateAnnouncement(date, isCurrentDate)}</ScreenreaderOnly>\n                </GridCell>\n              );\n            })}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}