{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { add } from 'date-fns';\nimport { renderMonthAndYear } from '../../../calendar/utils/intl';\nimport { useInternalI18n } from '../../../i18n/context.js';\nimport LiveRegion from '../../../internal/components/live-region';\nimport { NextMonthButton, PrevMonthButton } from './header-button';\nimport styles from '../../styles.css.js';\nexport default function CalendarHeader({\n  baseDate,\n  locale,\n  onChangeMonth,\n  previousMonthLabel,\n  nextMonthLabel,\n  isSingleGrid,\n  headingIdPrefix\n}) {\n  const i18n = useInternalI18n('calendar');\n  const prevMonthLabel = renderMonthAndYear(locale, add(baseDate, {\n    months: -1\n  }));\n  const currentMonthLabel = renderMonthAndYear(locale, baseDate);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: styles['calendar-header']\n  }, React.createElement(PrevMonthButton, {\n    ariaLabel: i18n('previousMonthAriaLabel', previousMonthLabel),\n    baseDate: baseDate,\n    onChangeMonth: onChangeMonth\n  }), React.createElement(\"h2\", {\n    className: styles['calendar-header-months-wrapper']\n  }, !isSingleGrid && React.createElement(\"span\", {\n    className: styles['calendar-header-month'],\n    id: `${headingIdPrefix}-prevmonth`\n  }, prevMonthLabel), React.createElement(\"span\", {\n    className: styles['calendar-header-month'],\n    id: `${headingIdPrefix}-currentmonth`\n  }, currentMonthLabel)), React.createElement(NextMonthButton, {\n    ariaLabel: i18n('nextMonthAriaLabel', nextMonthLabel),\n    baseDate: baseDate,\n    onChangeMonth: onChangeMonth\n  })), React.createElement(LiveRegion, null, isSingleGrid ? currentMonthLabel : `${prevMonthLabel}, ${currentMonthLabel}`));\n}","map":{"version":3,"names":["React","add","renderMonthAndYear","useInternalI18n","LiveRegion","NextMonthButton","PrevMonthButton","styles","CalendarHeader","baseDate","locale","onChangeMonth","previousMonthLabel","nextMonthLabel","isSingleGrid","headingIdPrefix","i18n","prevMonthLabel","months","currentMonthLabel","createElement","Fragment","className","ariaLabel","id"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/date-range-picker/calendar/header/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { add } from 'date-fns';\n\nimport { renderMonthAndYear } from '../../../calendar/utils/intl';\nimport { useInternalI18n } from '../../../i18n/context.js';\nimport LiveRegion from '../../../internal/components/live-region';\nimport { NextMonthButton, PrevMonthButton } from './header-button';\n\nimport styles from '../../styles.css.js';\n\ninterface CalendarHeaderProps {\n  baseDate: Date;\n  locale: string;\n  onChangeMonth: (date: Date) => void;\n  previousMonthLabel?: string;\n  nextMonthLabel?: string;\n  isSingleGrid: boolean;\n  headingIdPrefix: string;\n}\n\nexport default function CalendarHeader({\n  baseDate,\n  locale,\n  onChangeMonth,\n  previousMonthLabel,\n  nextMonthLabel,\n  isSingleGrid,\n  headingIdPrefix,\n}: CalendarHeaderProps) {\n  const i18n = useInternalI18n('calendar');\n  const prevMonthLabel = renderMonthAndYear(locale, add(baseDate, { months: -1 }));\n  const currentMonthLabel = renderMonthAndYear(locale, baseDate);\n\n  return (\n    <>\n      <div className={styles['calendar-header']}>\n        <PrevMonthButton\n          ariaLabel={i18n('previousMonthAriaLabel', previousMonthLabel)}\n          baseDate={baseDate}\n          onChangeMonth={onChangeMonth}\n        />\n        <h2 className={styles['calendar-header-months-wrapper']}>\n          {!isSingleGrid && (\n            <span className={styles['calendar-header-month']} id={`${headingIdPrefix}-prevmonth`}>\n              {prevMonthLabel}\n            </span>\n          )}\n          <span className={styles['calendar-header-month']} id={`${headingIdPrefix}-currentmonth`}>\n            {currentMonthLabel}\n          </span>\n        </h2>\n        <NextMonthButton\n          ariaLabel={i18n('nextMonthAriaLabel', nextMonthLabel)}\n          baseDate={baseDate}\n          onChangeMonth={onChangeMonth}\n        />\n      </div>\n      <LiveRegion>{isSingleGrid ? currentMonthLabel : `${prevMonthLabel}, ${currentMonthLabel}`}</LiveRegion>\n    </>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,UAAU;AAE9B,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,OAAOC,UAAU,MAAM,0CAA0C;AACjE,SAASC,eAAe,EAAEC,eAAe,QAAQ,iBAAiB;AAElE,OAAOC,MAAM,MAAM,qBAAqB;AAYxC,eAAc,SAAUC,cAAcA,CAAC;EACrCC,QAAQ;EACRC,MAAM;EACNC,aAAa;EACbC,kBAAkB;EAClBC,cAAc;EACdC,YAAY;EACZC;AAAe,CACK;EACpB,MAAMC,IAAI,GAAGb,eAAe,CAAC,UAAU,CAAC;EACxC,MAAMc,cAAc,GAAGf,kBAAkB,CAACQ,MAAM,EAAET,GAAG,CAACQ,QAAQ,EAAE;IAAES,MAAM,EAAE,CAAC;EAAC,CAAE,CAAC,CAAC;EAChF,MAAMC,iBAAiB,GAAGjB,kBAAkB,CAACQ,MAAM,EAAED,QAAQ,CAAC;EAE9D,OACET,KAAA,CAAAoB,aAAA,CAAApB,KAAA,CAAAqB,QAAA,QACErB,KAAA,CAAAoB,aAAA;IAAKE,SAAS,EAAEf,MAAM,CAAC,iBAAiB;EAAC,GACvCP,KAAA,CAAAoB,aAAA,CAACd,eAAe;IACdiB,SAAS,EAAEP,IAAI,CAAC,wBAAwB,EAAEJ,kBAAkB,CAAC;IAC7DH,QAAQ,EAAEA,QAAQ;IAClBE,aAAa,EAAEA;EAAa,EAC5B,EACFX,KAAA,CAAAoB,aAAA;IAAIE,SAAS,EAAEf,MAAM,CAAC,gCAAgC;EAAC,GACpD,CAACO,YAAY,IACZd,KAAA,CAAAoB,aAAA;IAAME,SAAS,EAAEf,MAAM,CAAC,uBAAuB,CAAC;IAAEiB,EAAE,EAAE,GAAGT,eAAe;EAAY,GACjFE,cAAc,CAElB,EACDjB,KAAA,CAAAoB,aAAA;IAAME,SAAS,EAAEf,MAAM,CAAC,uBAAuB,CAAC;IAAEiB,EAAE,EAAE,GAAGT,eAAe;EAAe,GACpFI,iBAAiB,CACb,CACJ,EACLnB,KAAA,CAAAoB,aAAA,CAACf,eAAe;IACdkB,SAAS,EAAEP,IAAI,CAAC,oBAAoB,EAAEH,cAAc,CAAC;IACrDJ,QAAQ,EAAEA,QAAQ;IAClBE,aAAa,EAAEA;EAAa,EAC5B,CACE,EACNX,KAAA,CAAAoB,aAAA,CAAChB,UAAU,QAAEU,YAAY,GAAGK,iBAAiB,GAAG,GAAGF,cAAc,KAAKE,iBAAiB,EAAE,CAAc,CACtG;AAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}