{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport CheckboxIcon from '../internal/components/checkbox-icon';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport styles from './styles.css.js';\nconst InternalCheckbox = React.forwardRef((_a, ref) => {\n  var {\n      controlId,\n      name,\n      checked,\n      disabled,\n      readOnly,\n      ariaRequired,\n      indeterminate,\n      children,\n      description,\n      ariaLabel,\n      onFocus,\n      onBlur,\n      onChange,\n      tabIndex: explicitTabIndex,\n      showOutline,\n      ariaControls,\n      __internalRootRef,\n      __injectAnalyticsComponentMetadata = false\n    } = _a,\n    rest = __rest(_a, [\"controlId\", \"name\", \"checked\", \"disabled\", \"readOnly\", \"ariaRequired\", \"indeterminate\", \"children\", \"description\", \"ariaLabel\", \"onFocus\", \"onBlur\", \"onChange\", \"tabIndex\", \"showOutline\", \"ariaControls\", \"__internalRootRef\", \"__injectAnalyticsComponentMetadata\"]);\n  const {\n    ariaDescribedby,\n    ariaLabelledby\n  } = useFormFieldContext(rest);\n  const baseProps = getBaseProps(rest);\n  const checkboxRef = useRef(null);\n  useForwardFocus(ref, checkboxRef);\n  useEffect(() => {\n    if (checkboxRef.current) {\n      checkboxRef.current.indeterminate = Boolean(indeterminate);\n    }\n  });\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(checkboxRef, {\n    tabIndex: explicitTabIndex\n  });\n  const analyticsMetadata = {};\n  const analyticsComponentMetadata = {\n    name: 'awsui.Checkbox',\n    label: {\n      root: 'self'\n    }\n  };\n  if (__injectAnalyticsComponentMetadata) {\n    analyticsMetadata.component = analyticsComponentMetadata;\n  }\n  if (!disabled && !readOnly) {\n    analyticsMetadata.detail = {\n      selected: `${!checked}`\n    };\n  }\n  return React.createElement(AbstractSwitch, Object.assign({}, baseProps, {\n    className: clsx(styles.root, baseProps.className),\n    controlClassName: styles['checkbox-control'],\n    outlineClassName: styles.outline,\n    controlId: controlId,\n    disabled: disabled,\n    readOnly: readOnly,\n    label: children,\n    description: description,\n    descriptionBottomPadding: true,\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    ariaDescribedby: ariaDescribedby,\n    ariaControls: ariaControls,\n    showOutline: showOutline,\n    nativeControl: nativeControlProps => React.createElement(\"input\", Object.assign({}, nativeControlProps, {\n      ref: checkboxRef,\n      type: \"checkbox\",\n      checked: checked,\n      name: name,\n      \"aria-required\": ariaRequired ? 'true' : undefined,\n      \"aria-disabled\": readOnly && !disabled ? 'true' : undefined,\n      tabIndex: tabIndex,\n      onFocus: () => fireNonCancelableEvent(onFocus),\n      onBlur: () => fireNonCancelableEvent(onBlur),\n      // empty handler to suppress React controllability warning\n      onChange: () => {}\n    })),\n    onClick: () => {\n      var _a;\n      (_a = checkboxRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      fireNonCancelableEvent(onChange,\n      // for deterministic transitions \"indeterminate\" -> \"checked\" -> \"unchecked\"\n      indeterminate ? {\n        checked: true,\n        indeterminate: false\n      } : {\n        checked: !checked,\n        indeterminate: false\n      });\n    },\n    styledControl: React.createElement(CheckboxIcon, {\n      checked: checked,\n      indeterminate: indeterminate,\n      disabled: disabled,\n      readOnly: readOnly\n    }),\n    __internalRootRef: __internalRootRef\n  }, getAnalyticsMetadataAttribute(analyticsMetadata)));\n});\nexport default InternalCheckbox;","map":{"version":3,"names":["React","useEffect","useRef","clsx","getAnalyticsMetadataAttribute","getBaseProps","AbstractSwitch","CheckboxIcon","useFormFieldContext","useSingleTabStopNavigation","fireNonCancelableEvent","useForwardFocus","styles","InternalCheckbox","forwardRef","_a","ref","controlId","name","checked","disabled","readOnly","ariaRequired","indeterminate","children","description","ariaLabel","onFocus","onBlur","onChange","tabIndex","explicitTabIndex","showOutline","ariaControls","__internalRootRef","__injectAnalyticsComponentMetadata","rest","__rest","ariaDescribedby","ariaLabelledby","baseProps","checkboxRef","current","Boolean","analyticsMetadata","analyticsComponentMetadata","label","root","component","detail","selected","createElement","Object","assign","className","controlClassName","outlineClassName","outline","descriptionBottomPadding","nativeControl","nativeControlProps","type","undefined","onClick","focus","styledControl"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/checkbox/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { getBaseProps } from '../internal/base-component';\nimport AbstractSwitch from '../internal/components/abstract-switch';\nimport CheckboxIcon from '../internal/components/checkbox-icon';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport { useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport {\n  GeneratedAnalyticsMetadataCheckboxComponent,\n  GeneratedAnalyticsMetadataCheckboxSelect,\n} from './analytics-metadata/interfaces';\nimport { CheckboxProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface InternalProps extends CheckboxProps, InternalBaseComponentProps {\n  tabIndex?: -1;\n  showOutline?: boolean;\n  __injectAnalyticsComponentMetadata?: boolean;\n}\n\nconst InternalCheckbox = React.forwardRef<CheckboxProps.Ref, InternalProps>(\n  (\n    {\n      controlId,\n      name,\n      checked,\n      disabled,\n      readOnly,\n      ariaRequired,\n      indeterminate,\n      children,\n      description,\n      ariaLabel,\n      onFocus,\n      onBlur,\n      onChange,\n      tabIndex: explicitTabIndex,\n      showOutline,\n      ariaControls,\n      __internalRootRef,\n      __injectAnalyticsComponentMetadata = false,\n      ...rest\n    },\n    ref\n  ) => {\n    const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);\n    const baseProps = getBaseProps(rest);\n    const checkboxRef = useRef<HTMLInputElement>(null);\n    useForwardFocus(ref, checkboxRef);\n    useEffect(() => {\n      if (checkboxRef.current) {\n        checkboxRef.current.indeterminate = Boolean(indeterminate);\n      }\n    });\n\n    const { tabIndex } = useSingleTabStopNavigation(checkboxRef, { tabIndex: explicitTabIndex });\n\n    const analyticsMetadata: GeneratedAnalyticsMetadataFragment = {};\n    const analyticsComponentMetadata: GeneratedAnalyticsMetadataCheckboxComponent = {\n      name: 'awsui.Checkbox',\n      label: { root: 'self' },\n    };\n    if (__injectAnalyticsComponentMetadata) {\n      analyticsMetadata.component = analyticsComponentMetadata;\n    }\n    if (!disabled && !readOnly) {\n      analyticsMetadata.detail = {\n        selected: `${!checked}`,\n      } as Partial<GeneratedAnalyticsMetadataCheckboxSelect['detail']>;\n    }\n\n    return (\n      <AbstractSwitch\n        {...baseProps}\n        className={clsx(styles.root, baseProps.className)}\n        controlClassName={styles['checkbox-control']}\n        outlineClassName={styles.outline}\n        controlId={controlId}\n        disabled={disabled}\n        readOnly={readOnly}\n        label={children}\n        description={description}\n        descriptionBottomPadding={true}\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        ariaDescribedby={ariaDescribedby}\n        ariaControls={ariaControls}\n        showOutline={showOutline}\n        nativeControl={nativeControlProps => (\n          <input\n            {...nativeControlProps}\n            ref={checkboxRef}\n            type=\"checkbox\"\n            checked={checked}\n            name={name}\n            aria-required={ariaRequired ? 'true' : undefined}\n            aria-disabled={readOnly && !disabled ? 'true' : undefined}\n            tabIndex={tabIndex}\n            onFocus={() => fireNonCancelableEvent(onFocus)}\n            onBlur={() => fireNonCancelableEvent(onBlur)}\n            // empty handler to suppress React controllability warning\n            onChange={() => {}}\n          />\n        )}\n        onClick={() => {\n          checkboxRef.current?.focus();\n          fireNonCancelableEvent(\n            onChange,\n            // for deterministic transitions \"indeterminate\" -> \"checked\" -> \"unchecked\"\n            indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }\n          );\n        }}\n        styledControl={\n          <CheckboxIcon checked={checked} indeterminate={indeterminate} disabled={disabled} readOnly={readOnly} />\n        }\n        __internalRootRef={__internalRootRef}\n        {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n      />\n    );\n  }\n);\n\nexport default InternalCheckbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}