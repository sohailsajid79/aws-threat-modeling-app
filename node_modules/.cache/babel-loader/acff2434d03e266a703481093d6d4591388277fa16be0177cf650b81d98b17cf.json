{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalInput from './internal';\nimport styles from './styles.css.js';\nconst Input = React.forwardRef((_a, ref) => {\n  var {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      spellcheck,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      invalid,\n      warning,\n      controlId,\n      clearAriaLabel\n    } = _a,\n    rest = __rest(_a, [\"value\", \"type\", \"step\", \"inputMode\", \"autoComplete\", \"spellcheck\", \"disabled\", \"readOnly\", \"disableBrowserAutocorrect\", \"onKeyDown\", \"onKeyUp\", \"onChange\", \"onBlur\", \"onFocus\", \"ariaRequired\", \"name\", \"placeholder\", \"autoFocus\", \"ariaLabel\", \"ariaLabelledby\", \"ariaDescribedby\", \"invalid\", \"warning\", \"controlId\", \"clearAriaLabel\"]);\n  const baseComponentProps = useBaseComponent('Input', {\n    props: {\n      autoComplete,\n      autoFocus,\n      disableBrowserAutocorrect,\n      inputMode,\n      readOnly,\n      spellcheck,\n      type\n    }\n  });\n  const baseProps = getBaseProps(rest);\n  const inputRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    focus() {\n      var _a;\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus(...arguments);\n    },\n    select() {\n      var _a;\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();\n    }\n  }), [inputRef]);\n  return React.createElement(InternalInput, Object.assign({\n    ref: inputRef\n  }, Object.assign(Object.assign(Object.assign({}, baseProps), baseComponentProps), {\n    autoComplete,\n    ariaLabel,\n    ariaRequired,\n    autoFocus,\n    disabled,\n    disableBrowserAutocorrect,\n    name,\n    onKeyDown,\n    onKeyUp,\n    onChange,\n    onBlur,\n    onFocus,\n    placeholder,\n    readOnly,\n    type,\n    step,\n    inputMode,\n    spellcheck,\n    value,\n    ariaDescribedby,\n    ariaLabelledby,\n    invalid,\n    warning,\n    controlId,\n    clearAriaLabel\n  }), {\n    className: clsx(styles.root, baseProps.className),\n    __inheritFormFieldProps: true\n  }));\n});\napplyDisplayName(Input, 'Input');\nexport default Input;","map":{"version":3,"names":["React","useImperativeHandle","useRef","clsx","getBaseProps","useBaseComponent","applyDisplayName","InternalInput","styles","Input","forwardRef","_a","ref","value","type","step","inputMode","autoComplete","spellcheck","disabled","readOnly","disableBrowserAutocorrect","onKeyDown","onKeyUp","onChange","onBlur","onFocus","ariaRequired","name","placeholder","autoFocus","ariaLabel","ariaLabelledby","ariaDescribedby","invalid","warning","controlId","clearAriaLabel","rest","__rest","baseComponentProps","props","baseProps","inputRef","focus","current","arguments","select","createElement","Object","assign","className","root","__inheritFormFieldProps"],"sources":["/Users/sohailsajid/Desktop/threat-modeling-app/node_modules/src/input/index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { InputProps } from './interfaces';\nimport InternalInput from './internal';\n\nimport styles from './styles.css.js';\n\nexport { InputProps };\n\nconst Input = React.forwardRef(\n  (\n    {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      spellcheck,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      invalid,\n      warning,\n      controlId,\n      clearAriaLabel,\n      ...rest\n    }: InputProps,\n    ref: Ref<InputProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Input', {\n      props: { autoComplete, autoFocus, disableBrowserAutocorrect, inputMode, readOnly, spellcheck, type },\n    });\n    const baseProps = getBaseProps(rest);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args: Parameters<HTMLElement['focus']>) {\n          inputRef.current?.focus(...args);\n        },\n        select() {\n          inputRef.current?.select();\n        },\n      }),\n      [inputRef]\n    );\n\n    return (\n      <InternalInput\n        ref={inputRef}\n        {...{\n          ...baseProps,\n          ...baseComponentProps,\n          autoComplete,\n          ariaLabel,\n          ariaRequired,\n          autoFocus,\n          disabled,\n          disableBrowserAutocorrect,\n          name,\n          onKeyDown,\n          onKeyUp,\n          onChange,\n          onBlur,\n          onFocus,\n          placeholder,\n          readOnly,\n          type,\n          step,\n          inputMode,\n          spellcheck,\n          value,\n          ariaDescribedby,\n          ariaLabelledby,\n          invalid,\n          warning,\n          controlId,\n          clearAriaLabel,\n        }}\n        className={clsx(styles.root, baseProps.className)}\n        __inheritFormFieldProps={true}\n      />\n    );\n  }\n);\n\napplyDisplayName(Input, 'Input');\nexport default Input;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,IAASC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAC/D,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvE,OAAOC,aAAa,MAAM,YAAY;AAEtC,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,MAAMC,KAAK,GAAGT,KAAK,CAACU,UAAU,CAC5B,CACEC,EA2Ba,EACbC,GAAwB,KACtB;MA7BF;MACEC,KAAK;MACLC,IAAI,GAAG,MAAM;MACbC,IAAI;MACJC,SAAS;MACTC,YAAY,GAAG,IAAI;MACnBC,UAAU;MACVC,QAAQ;MACRC,QAAQ;MACRC,yBAAyB;MACzBC,SAAS;MACTC,OAAO;MACPC,QAAQ;MACRC,MAAM;MACNC,OAAO;MACPC,YAAY;MACZC,IAAI;MACJC,WAAW;MACXC,SAAS;MACTC,SAAS;MACTC,cAAc;MACdC,eAAe;MACfC,OAAO;MACPC,OAAO;MACPC,SAAS;MACTC;IAAc,IAAA1B,EAEH;IADR2B,IAAI,GAAAC,MAAA,CAAA5B,EAAA,EA1BT,6UA2BC,CADQ;EAIT,MAAM6B,kBAAkB,GAAGnC,gBAAgB,CAAC,OAAO,EAAE;IACnDoC,KAAK,EAAE;MAAExB,YAAY;MAAEa,SAAS;MAAET,yBAAyB;MAAEL,SAAS;MAAEI,QAAQ;MAAEF,UAAU;MAAEJ;IAAI;GACnG,CAAC;EACF,MAAM4B,SAAS,GAAGtC,YAAY,CAACkC,IAAI,CAAC;EAEpC,MAAMK,QAAQ,GAAGzC,MAAM,CAAmB,IAAI,CAAC;EAE/CD,mBAAmB,CACjBW,GAAG,EACH,OAAO;IACLgC,KAAKA,CAAA,EAA0C;;MAC7C,CAAAjC,EAAA,GAAAgC,QAAQ,CAACE,OAAO,cAAAlC,EAAA,uBAAAA,EAAA,CAAEiC,KAAK,CAAC,GAAAE,SAAO,CAAC;IAClC,CAAC;IACDC,MAAMA,CAAA;;MACJ,CAAApC,EAAA,GAAAgC,QAAQ,CAACE,OAAO,cAAAlC,EAAA,uBAAAA,EAAA,CAAEoC,MAAM,EAAE;IAC5B;GACD,CAAC,EACF,CAACJ,QAAQ,CAAC,CACX;EAED,OACE3C,KAAA,CAAAgD,aAAA,CAACzC,aAAa,EAAA0C,MAAA,CAAAC,MAAA;IACZtC,GAAG,EAAE+B;EAAQ,GAAAM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAERR,SAAS,GACTF,kBAAkB;IACrBvB,YAAY;IACZc,SAAS;IACTJ,YAAY;IACZG,SAAS;IACTX,QAAQ;IACRE,yBAAyB;IACzBO,IAAI;IACJN,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPG,WAAW;IACXT,QAAQ;IACRN,IAAI;IACJC,IAAI;IACJC,SAAS;IACTE,UAAU;IACVL,KAAK;IACLoB,eAAe;IACfD,cAAc;IACdE,OAAO;IACPC,OAAO;IACPC,SAAS;IACTC;EAAc;IAEhBc,SAAS,EAAEhD,IAAI,CAACK,MAAM,CAAC4C,IAAI,EAAEV,SAAS,CAACS,SAAS,CAAC;IACjDE,uBAAuB,EAAE;EAAI,GAC7B;AAEN,CAAC,CACF;AAED/C,gBAAgB,CAACG,KAAK,EAAE,OAAO,CAAC;AAChC,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}